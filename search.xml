<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Welcome to my blog</title>
    <url>/2050/01/01/Welcome/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://p.ipic.vip/nq6703.png" alt="cover"></p>
]]></content>
      <categories>
        <category>Welcome</category>
      </categories>
  </entry>
  <entry>
    <title>ENSO Events</title>
    <url>/2022/05/01/OcnSci/ENSO%20Events/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="pdfobject-container" data-target="https://docs.qq.com/pdf/DSnZhc1hXdlNZY2Fl" data-height="1000px"></div>
]]></content>
      <categories>
        <category>OcnSci</category>
      </categories>
  </entry>
  <entry>
    <title>Basic</title>
    <url>/2022/05/01/OcnSci/Basic/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="SST-amp-SSS-correlation"><a href="#SST-amp-SSS-correlation" class="headerlink" title="SST &amp; SSS correlation"></a>SST &amp; SSS correlation</h2><p>Kido, S., Nonaka, M. &amp; Tanimoto, Y. Sea Surface Temperature–Salinity Covariability and Its Scale‐Dependent Characteristics. <em>Geophys Res Lett</em> <strong>48</strong>, (2021).  </p>
<p><img src="https://p.ipic.vip/3vp4qa.jpg" alt="Screen Shot 2022-04-27 at 16.47.20"></p>
<h2 id="Wind-stress-crul-and-ILD-x2F-MLD"><a href="#Wind-stress-crul-and-ILD-x2F-MLD" class="headerlink" title="Wind stress crul and ILD&#x2F;MLD"></a>Wind stress crul and ILD&#x2F;MLD</h2><p>Negative (positive) wind stress curl leads to surface water convergence (divergence) of upper surface water and deepens (shoals) ILD and MLD.</p>
<p>Besides, enhanced wind stress increases evaporation and induces cooling convection (Qu and Meyers 2005). Negative heat flux enhances mixing in the upper ocean (Lee et al. 2015). In addition to these surface processes, high-salinity subtropical water from below is important for the formation of BLs as well (Foltz and McPhaden 2009).</p>
<h1 id="Salinity"><a href="#Salinity" class="headerlink" title="Salinity"></a>Salinity</h1><p>Water in an estuary has dissolved salt within it. The salinity gradient generally increases from the input source of an estuary, usually a stream or river, to the output source, the sea or ocean. Salinity is measured in gravimetrically as parts per thousand of solids in liquid or ppt.  The salinity of the ocean is generally around 35 ppt (Antonov 2006). Another salinity unit is the practical salinity unit or PSU measurement, which is based on water temperature and conductivity measurements made by sondes and the ocean is also generally around 35 PSU (Antonov 2006). Using ppt or PSU gives similar results for the ocean’s seawater salt content (Antonov 2006).</p>
<p>The fresh water from rivers has salinity levels of 0.5 ppt or less. Within the estuary, salinity levels are referred to as oligohaline (0.5-5.0 ppt), mesohaline (5.0-18.0 ppt), or polyhaline (18.0 to 30.0 ppt) (Montagna et al. 2013). Near the connection with the open sea, estuarine waters may be euhaline, where salinity levels are the same as the ocean at more than 30.0 ppt (Mitsch and Gosselink 1986). An example of this is shown in the illustration below:</p>
<p><img src="https://p.ipic.vip/z1l6r3.jpg" alt="img">Source: United States Environmental Protection Agency</p>
<p>The salinity of an estuary can vary dependent on the amount of freshwater inflows as well as the tidal movement and location within the estuary. Estuaries have a water balance that is either positive, freshwater inputs exceed evaporation; neutral, there is a balance between freshwater inflows and evaporation; or negative, freshwater inflows are less than the amount of evaporation (Montagna et al. 2013).</p>
<p>Seasonally in the U.S., estuaries generally decrease in salinity in the spring months with increased inflows making the system a positive estuarine system. In the summer, estuaries increase in salinity with decreased freshwater inflows and increased evaporation due to higher temperatures causing the system to be classified as a negative estuarine system.</p>
<p>Salinity affects the chemical conditions within an estuary, most notably the amount of dissolved oxygen. Solubility is the amount of oxygen that can dissolve in water, which decreases as salinity increases. Solubility is important because estuarine organisms have salinity ranges they can tolerate before they experience stress (Montagna et al. 2013). Some estuarine species can adapt to changes oxygen levels by practicing avoidance techniques. Fish can swim away to areas with tolerable salinity levels. Other organisms such as mollusks, oysters, and benthic organisms cannot travel large distances. Salinity levels outside of their tolerance ranges cause negative affects including increased stress and decreased reproduction and survival rates (Palmer et al. 2008).</p>
<h1 id="Points"><a href="#Points" class="headerlink" title="Points"></a>Points</h1><ul>
<li><strong>温跃层thermocline</strong>、<strong>盐跃层halocline</strong>以及<strong>密度跃层pycnocline</strong>三者等价。据此可以把海洋分为<strong>表层（也叫混合层）、突变层和深层</strong>三层，且海洋的三层结构非常稳定，不像大气那样易发生对流。此外，三层结构在低纬非常明显，高纬的结构则没有那么明显。可能是因为高纬地区的海洋表层海温与深层海温近似，热带则相差较大。突变层不利于海水的垂直运动。</li>
<li>海洋混合层厚度在夏季晚期最薄，因为夏季的风小，加上太阳辐射强，使得海洋表层温度高，不利于混合，因此混合层薄。反之，冬季晚期混合层最厚。</li>
<li>海洋对大气的影响主要是<strong>潜热</strong>，而大气对海洋的影响主要是<strong>风应力</strong>（Ekman Transport）。海气相互作用最强的地方并不等于蒸发最强的地方。</li>
<li>海洋有低反照率、高比热容，使其能存储更多的能量。加上近海面大气含有丰富水汽，使海表面发射的长波辐射被截留在海表面附近。</li>
<li>为了简化，海洋模式多用混合层模式来替代整个海洋模式。</li>
<li><strong>Ekman Transport</strong> 是发生在海洋表层的海水运动，受风应力和科氏力的作用。北半球，Ekman流偏向风应力的右边。因此热带海水由于赤道信风的Ekman抽吸而存在上升辐散运动，温跃层抬升，底层Sverdrup是向赤道流，构成一个海洋里的经向环流，该经向环流有利于海洋热量的向极输送。</li>
<li><strong>Sverdrup Transport</strong> 发生在海洋深层，相当于补偿流，用于补偿由Ekman输送造成的空缺，是海洋中的准地转流。虽然也有一种成因是说该深层流的产生是因为涡度的变化（温跃层因Ekman流而抬升，根据位涡守恒，其绝对涡度需要增加，但由于深层流本身不会旋转（相对涡度为0），因此它只能通过向极运动来使地转涡度增大）。且也有提到说，Sverdrup的辐散辐合区与Ekman输送导致的温跃层抬升或下降区是错位的。</li>
<li>暖池（温度大于28℃）、冷舌（温度低于24℃）</li>
</ul>
<p>来源：<a href="https://renqlsysu.github.io/2019/07/01/ENSO_dynamics/">https://renqlsysu.github.io/2019/07/01/ENSO_dynamics/</a></p>
]]></content>
      <categories>
        <category>OcnSci</category>
      </categories>
  </entry>
  <entry>
    <title>IOD</title>
    <url>/2022/05/01/OcnSci/IOD/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Characteristics-and-processes-associated-with-a-pIOD"><a href="#Characteristics-and-processes-associated-with-a-pIOD" class="headerlink" title="Characteristics and processes associated with a pIOD"></a>Characteristics and processes associated with a pIOD</h2><p><img src="https://p.ipic.vip/7frj4v.jpg" alt="www.nature.com 8_9_2022, 10_24_19 AM-2 (dragged)"></p>
<p><img src="https://p.ipic.vip/4l19eh.jpg" alt="www.nature.com 8_9_2022, 10_24_19 AM-4 (dragged)"></p>
<p>From: Cai, W. et al. Projected response of the Indian Ocean Dipole to greenhouse warming. Nat Geosci 6, 999–1007 (2013).</p>
]]></content>
      <categories>
        <category>OcnSci</category>
      </categories>
  </entry>
  <entry>
    <title>ENSO Waves</title>
    <url>/2022/05/01/OcnSci/ENSO%20Waves/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="pdfobject-container" data-target="https://docs.qq.com/pdf/DSmN4S2ZOYU1VQklm" data-height="1000px"></div>
]]></content>
      <categories>
        <category>OcnSci</category>
      </categories>
  </entry>
  <entry>
    <title>ENSO Points</title>
    <url>/2022/05/01/OcnSci/ENSO%20Points/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="ENSO的现象学"><a href="#ENSO的现象学" class="headerlink" title="ENSO的现象学"></a>ENSO的现象学</h2><ul>
<li>典型的EINino发展过程中，异常西风信号、异常暖海温都是从西太往东太传播。也表明ENSO爆发前期，西太海温有<strong>异常增暖及温跃层异常增厚</strong>现象，可作为ENSO预报的一个因子。后面的<strong>Discharge-recharge Oscillator</strong>在一定程度上解释了为什么会这样。</li>
<li>Walker环流的上升支容易辨认，但下沉支则不容易辨认。</li>
<li>观测中，ENSO总是在冬季达到盛期，但在耦合模式中，ENSO的峰值可以出现在任何季节。</li>
<li>ENSO时，东太和西太的温跃层厚度变化几乎是东西对称的，但温度异常幅度却是东太大于西太。也就是说相同的温跃层异常在不同的海域造成的SST异常不同。此外，EI Niño与La Niña的振幅也是不对称的。</li>
<li>虽然ENSO期间，最大的海温异常发生在东太，但海气相互作用最活跃区域是中太。因为发生对流的海温阈值是28.5摄氏度，而中太的基本海温大约在26摄氏度，它对海温变化异常敏感。</li>
<li><strong>ENSO Diversity</strong>：多指ENSO的多样性、不对称性，其实每一次的ENSO过程都不一样（以SSTA的时间和空间变化来说）。</li>
<li><strong>ENSO Complexity</strong>：除了ENSO发展的多样性外，还加入了ENSO影响的复杂性，造成的天气、年循环、多尺度变率等，动力预报，季节锁相特征。</li>
<li>现在ENSO的预报仍然存在很多问题。例如2014年，EI Niño的前期信号在14年春季已出现，因此各大机构都预测14年冬季会有EI Niño出现，但最后并未出现。于是大家以为不会再出现，结果2015年年末出现了很强的EI Niño。纷纷打脸，还连续打两次。</li>
</ul>
<h2 id="ENSO机制"><a href="#ENSO机制" class="headerlink" title="ENSO机制"></a>ENSO机制</h2><p><strong>ENSO形成的正反馈——Bjerknes Feedback</strong>：当赤道太平洋有西风异常出现时，会减弱向西太流动的暖海水，于是东太的上升补偿流减弱，使得东太海温升高，减弱东西海温梯度，进一步减弱Walker环流。于是EI Niño发展起来。这里的发展速度取决于海气耦合的强度，例如大气风速的变化对海温异常的敏感性以及海温对风场的敏感性。<br>能够导致西太异常西风的机制有：MJO、<strong>耦合Rossby波</strong>、热带气旋、太平洋径向模、冬季风。<br>但Bjerknes Feedback无法解释为什么EI Niño会衰减，为什么存在EI Niño和La Niña位相的转换？</p>
<p>因此接下去主要介绍了两种导致ENSO发生位相转换的负反馈机制（最根本的是前两个，后两个都是对前两个的补充）：</p>
<ul>
<li><strong>Delayed Oscillator</strong> （1987）：从赤道波动的纬向运动出发，范围局限在南北纬15度之间，且考虑的都是相对于气候态的异常值。</li>
<li><strong>Discharge-recharge Oscillator</strong> （1997，JinFei-fei）：主要通过Sverdrup的经向运动来实现，南北纬范围比Delayed大，且考虑了气候态的量，可以解释超前Nino3指数三个月的暖水体积出现的原因。</li>
<li>Advective-reflective oscillator</li>
<li>Western Pacific oscillator （王春在，1999）</li>
</ul>
<p>赤道海洋波动概念（主要是温跃层界面的上下起伏变化），存在的主要两种波型：</p>
<ul>
<li><strong>Kelvin波</strong>，非频散波，沿着赤道东传或沿海岸线传播。传播速度是Rossby波的三倍，3个月即可穿越整个赤道太平洋。赤道振幅最大，向两边逐渐衰弱，只有纬向风。上升Kelvin波（冷性）的纬向风是东风，下沉Kelvin波（暖性）的纬向风是西风。</li>
<li><strong>Rossby波</strong>，频散波，西传的长波，需要用9个月的时间才能穿过整个赤道太平洋</li>
<li>很难用观测明确地表示Kelvin波的存在，因为波动总是相互叠加的，同时还与依赖于时间的风驱动的洋流相叠加</li>
</ul>
<h3 id="Delayed-Osciallator"><a href="#Delayed-Osciallator" class="headerlink" title="Delayed Osciallator"></a>Delayed Osciallator</h3><p>当赤道中太平洋有<strong>西风异常</strong>时，会因为Ekman Transport使赤道温跃层产生辅合下沉，该异常信号随Kalvin波东传，形成<strong>下沉Kelvin波（暖信号）</strong>。由于赤道辅合，因此在赤道两侧必然有海水的上升运动，该异常信号随Rossby波西传，形成<strong>上升Rossby波（冷信号）</strong>。当西传的上升Rossby波遇到太平洋西边界，会反射成为上升的东传Kelvin波，该波传到东太平洋使ENSO位相发生转换。由于Rossby波波速是Kelvin波的三分之一，因此一般会存在9-12个月的延迟。此外，Kelvin波在太平洋东边界也会反射，但由于反射能量很弱，多数成为沿岸Kelvin波。</p>
<p>其中西传的长Rossby波在太平洋西边界发生反射时，反射成为短Rossby波加Kelvin波或Rossby重力混合波，会返回所有入射波动的质量，但不一定返回所有的能量。此外，虽然太平洋西边界是不连续的，但依然假设海洋性大陆对西传的Rossby波是一个屏障，这个屏障的经向梯度会影响反射。</p>
<p>该理论认为EINino的发生发展过程中包含以下三个过程：</p>
<ol>
<li><p>由于耦合不稳定或东太正反馈循环（如Bjerknes Feedback）导致的局地指数增长</p>
</li>
<li><p>限制增长的非线性过程，例如有限的大气水汽含量限制了对流系统的持续增长、海洋中的平流过程</p>
</li>
<li><p>由于反射的上升Kelvin波带来的延迟信号</p>
<p>随后建立了一个公式来研究延迟信号对ENSO循环周期的影响。</p>
<ul>
<li>当不存在延迟项时，Bjerknes反馈和非线性反馈使海温一直升高，并最后达到平衡，该平衡值由Bjerknes反馈和非线性反馈强度的比值决定。但不会有海温信号的衰弱。也就不会有振荡出现。</li>
<li>加入延迟项后，延迟时间越长，返回的上升Kelvin波信号就越弱，Bjerknes反馈及非线性反馈就会使振幅越大，ENSO周期也越长，且始终大于延迟时间的两倍。</li>
<li>该理论认为上述三个过程使得ENSO是一个自维持振荡系统。</li>
</ul>
</li>
</ol>
<p>该理论存在两个缺陷：</p>
<ol>
<li>没有西太的海气耦合</li>
<li>没有考虑东太Kelvin波的反射</li>
</ol>
<h3 id="Discharge-recharge-Oscillator"><a href="#Discharge-recharge-Oscillator" class="headerlink" title="Discharge-recharge Oscillator"></a>Discharge-recharge Oscillator</h3><p>该理论的提出，需要具有良好的数学功底，其中包含5个公式（主要的是四个），可以把异常、气候态、Sverdrup、风应力都串联起来。该理论清楚地描述了ENSO的慢动力过程，同时也在没有涉及波动的情况下具体体现了延迟振荡。<br>第一个公式，是认为在ENSO时间尺度上，纬向平均的气压梯度力与风应力平衡，主要用于约束东西温跃层厚度对比，但不能决定西太温跃层的绝对厚度，也无法约束太平洋海域内该纬度带的平均温跃层厚度。<br>第二个公式聚焦于赤道西太平均温跃层厚度在调整过程中的变化，因为此时与ENSO相关的赤道风异常主要集中于赤道太平洋西部和中部。<br>第三个公式描述了气候态的上升运动、东太异常温跃层厚度变化以及Ekman pumping等过程对东太海温异常变化的影响。<br>第四个公式描述了整个赤道太平洋纬向季风的风应力以及东太平洋平均风应力与东太异常海温的关系。</p>
<p><strong>充放电理论</strong>分为四个步骤：（这个充放电主要是指赤道太平洋热容量）</p>
<ul>
<li><strong>放电中（厄尔尼诺成熟位相）</strong>：西风异常下，Sverdrup输运向极，暖水向极输送导致赤道暖水减少，达到放电完成状态</li>
<li><strong>放电完成（厄尔尼诺转向拉尼娜）</strong>：整个太平洋的平均温跃层深度都变浅，但东太海温对温跃层厚度的变化更加敏感，即东太海温比西太海温更低，风应力与SST异常不平衡，导致海表面出现东风异常</li>
<li><strong>充电中（拉尼娜成熟位相）</strong>：东风异常通过Bjerknes反馈被加强，东太SST距平负异常也被放大，Sverdrup输运向赤道，暖水向赤道辐合</li>
<li><strong>充电完成（拉尼娜转向厄尔尼诺）</strong>：过多暖水在赤道堆积，导致整个太平洋的平均温跃层深度都变深，东太升温更快，于是同样有风应力与SST距平之间的不平衡，激发海表西风异常</li>
</ul>
<p>2000年，Meinen and McPhaden 从观测出发，验证了该理论。他们利用温跃层深度的距平场做EOF分解，发现第一模态为温跃层深度的东西向倾斜（相当于暖事件和冷事件的成熟位相），第二模态表现为南北向倾斜（也就是充放电完成时的状态），发现第一模态的时间系数滞后于第二模态的时间系数。</p>
<p>区域平均的时间序列表明，赤道纬向风异常与NINO3区SSTA同步变化，但与不同区域暖水的变化关系存在超前滞后的关系。尤其是赤道区域的暖水总量是超前于NINO3区SSTA变化，且有较高的相关系数，也就是说<strong>暖水总量可以作为ENSO的预测指标</strong>。</p>
<p>同时还对ENSO循环中，厄尔尼诺与拉尼娜的不对称的原因进行了讨论。在暖水偏少时，暖水与海表面温度的相关系数只有0.32，而暖水偏多时，两者的相关系数则为1.29。暖水与SST之间的不同强度的相关关系可以部分解释厄尔尼诺和拉尼娜之间的不对称。</p>
<h3 id="Western-Pacific-oscillator"><a href="#Western-Pacific-oscillator" class="headerlink" title="Western Pacific oscillator"></a>Western Pacific oscillator</h3><p>从大气的角度出发，而前两个理论则多从海洋的角度出发解释。认为赤道中东太平洋的海温异常能激发大气的加热中心。</p>
<h2 id="ENSO变率与气候态之间的关系"><a href="#ENSO变率与气候态之间的关系" class="headerlink" title="ENSO变率与气候态之间的关系"></a>ENSO变率与气候态之间的关系</h2><p>Dijkstra and Neelin 1995年时认为，气候态的暖池与冷舌的形成与海盆内的海气相互作用有关。海盆外的强迫产生了纬向变化的海温，而纬向SST梯度激发出的海盆内部风应力又会进一步加剧这种纬向不对称。</p>
<p><strong>海气耦合强度</strong>定义：单位SST东西差异所能激发出的风速。</p>
<p>蔡明老师在2003年的时候利用理想模式做了一个很有意思的实验，来探究下面这个问题：</p>
<blockquote>
<p>当不存在能导致太平洋东西差异的气候态外强迫时，赤道海气耦合动力学本身能否自发地形成ENSO振荡。<br>那么两个最常用的外部强迫造成的不对称性有：原本就存在的弱赤道信风、东太SST与温跃层变化比较敏感。</p>
</blockquote>
<p>设计的理想实验只用东西两个格点来表示太平洋的东部与西部，初始时刻，东西海域没有差异，所有变量包括SST、温跃层厚度、此表层海温都是一致的。然后在初始时刻吹三个月的东风，随后自由积分。<br>发现随着耦合强度的变化，在东风撤掉后，海洋的振荡有不同的表现。当耦合强度较弱时，海洋的震荡随时间衰减。当耦合强度达到0.62时，海洋的振荡形成一个自维持系统。且随耦合强度增 大，振荡周期变短。<br>由此表明，在初始时刻不存在东西海温差异时，强的海气耦合自身就可以产生类似于ENSO的振荡。</p>
<h2 id="EP和CP产生的动力学"><a href="#EP和CP产生的动力学" class="headerlink" title="EP和CP产生的动力学"></a>EP和CP产生的动力学</h2><p>传统做ENSO理论的学者，不喜欢吧ENSO分成很多种类型。</p>
<p>目前关于EP型和CP型EINino产生的理论主要分成两派：</p>
<ol>
<li>Ashok等人2007年提出的<strong>Displacement of the thermocline dynamics</strong>，认为由于全球变暖，赤道太平洋温跃层压缩，使得海水的上升区域由东太移到了太平洋中部，也就是说该理论认为ENSO的基本动力过程没有变，只是作用区域发生了变化。不过认同该理论的人似乎挺少的。</li>
<li>Kug, Jin, and An 等人于2009提出的<strong>Zonal advective feedback (favoring CP type) vs thermocline feedback (favoring EP type)<strong>，该理论主要侧重于海洋内部的热量输送过程，上述两个反馈分别对应着</strong>纬向温度输送</strong>以及<strong>垂直温度输送</strong>。</li>
<li>余进义老师2009年提出的<strong>Subtropical forcing mechanism</strong>，该理论侧重于大气过程，中纬度与热带的相互作用也是目前的研究热点。</li>
</ol>
<p>目前三大洋（太平洋、印度洋、大西洋）之间的interaction也是研究热点。</p>
<h3 id="Zonal-advective-feedback-CP-VS-thermocline-feedback-EP"><a href="#Zonal-advective-feedback-CP-VS-thermocline-feedback-EP" class="headerlink" title="Zonal advective feedback (CP) VS thermocline feedback (EP)"></a>Zonal advective feedback (CP) VS thermocline feedback (EP)</h3><p>主要就是将海温变化分解成纬向输送、径向输送、垂直输送这样9项，以探讨各个过程在海温变化中的作用。</p>
<h3 id="Subtropical-forcing-mechanism"><a href="#Subtropical-forcing-mechanism" class="headerlink" title="Subtropical forcing mechanism"></a>Subtropical forcing mechanism</h3><p>认为CP型EI Niño的产生包含三个过程，前两个过程包含副热带大气强迫和副热带海气耦合过程，也可称为**足迹法 footprinting mechanism **：</p>
<ol>
<li>在加利福尼亚西海岸有暖SSTA产生，使得东北信风减弱</li>
<li>暖SSTA向西南扩展达到赤道太平洋</li>
<li>赤道太平洋海气耦合过程放大了该暖SSTA，形成CP型EI Niño</li>
</ol>
<p>根据该理论，加利福尼亚西海岸的异常暖海温可以作为CP型EI Niño的预报因子。<br>但为什么加利福尼亚西海岸会有异常暖海温出现呢？可能与NPO（North Pacific Oscillation)、AMO(Atlantic Multi-decadal Oscillation)有关。<br>此外，还有说到副热带的海温异常是通过PMM（Pacific Meridional Mode）传到热带的。</p>
<p>又介绍了1990s前后，气候发生了显著变化，例如：</p>
<ul>
<li><p>Linkages between <strong>North Pacific</strong> and <strong>North Atlantic variability</strong> have also intensified since the early 1990s, which is due to <strong>accelerated Arctic warming</strong>.</p>
</li>
<li><p>Interactions between <strong>Tropical Pacific</strong> and <strong>Tropical Atlantic</strong> have intensified since the early 1990s, which is due to the <strong>phase change of the AMO</strong>.</p>
</li>
</ul>
<h2 id="ENSO遥相关"><a href="#ENSO遥相关" class="headerlink" title="ENSO遥相关"></a>ENSO遥相关</h2><p><strong>大圆理论</strong>：描述了热力强迫出的Rossby波在二维平面上的传播特点。1981年，Hoskins等人利用一个5层斜压模式，在对流层的上层施加一个负的涡度异常来表征大气的热力强迫作用。发现，起始阶段扰动涡度先向<strong>东北方向</strong>传播，当扰动传播了一段距离之后开始出现<strong>分岔现象</strong>，其中<strong>波长较长</strong>的波继续向极地方向传播甚至越过极地向半球的另外一边继续前进，而<strong>波长较短</strong>的波则转向赤道方向传播。大量的试验结果表明，即使<strong>改变热力强迫源的位置和大小能够影响扰动涡度的相位和振幅，但是扰动涡度传播的基本型不发生变化</strong>，即波列只会<strong>向北、向东或者向赤道方向</strong>传播，这与使用正压模式得到的结果非常相似。</p>
<p>大地形的作用类似。</p>
<p>在Rossby波的传播过程中，基本气流也起着非常重要的作用。当加热出现在赤道时，若背景气流为西风，则Rossby波可以向中高纬度传播，但当背景气流为东风时，波被困在热带。</p>
<p>Rossby波响应的季节性：</p>
<ul>
<li><p>夏季响应弱，热源处于东风带中，没能激发出波。</p>
</li>
<li><p>冬半球响应强于夏半球，南半球冬季响应弱于北半球冬季，这种响应的不对称是由于南、北半球气候场的不同造成的。</p>
</li>
</ul>
<h2 id="ENSO的模式模拟及其未来变化"><a href="#ENSO的模式模拟及其未来变化" class="headerlink" title="ENSO的模式模拟及其未来变化"></a>ENSO的模式模拟及其未来变化</h2><ul>
<li>最早的ENSO模式——**model of Zebiak and Cane (1987)**是基于浅水模式的，这与赤道波动有关。</li>
<li>目前几乎所有的模式都可以模拟出两类EI Niño，但与真实都不太一致。</li>
<li>当考虑深层海洋时，时间尺度高达上千年。</li>
</ul>
<p>ENSO未来变化中需要解决的三个关键问题：</p>
<ol>
<li>ENSO的强度未来会如何变化？</li>
<li>ENSO变率的大值区的位置是否会发生改变？</li>
<li>全球变暖背景下，背景态发生了变化，那么ENSO的遥相关会受到怎样的影响？</li>
</ol>
<p>上述问题，不同模式的模拟结果都不太一样，例如有模式认为未来ENSO振幅增强，但也有模式认为振幅减弱，存在很大的不确定性。</p>
<p>目前有的结论有：</p>
<ul>
<li><p>在CO2浓度增加的强迫下，大部分模式模拟热带太平洋SST长期变化趋势为El Niño-like型分布。但El Niño事件发生的频率变化则存在较大的不确定性。</p>
</li>
<li><p>CO2增加的情况下，CP型El Niño强度和发生频率均显著增加。</p>
</li>
</ul>
<p>来源：<a href="https://renqlsysu.github.io/2019/07/01/ENSO_dynamics/">https://renqlsysu.github.io/2019/07/01/ENSO_dynamics/</a></p>
]]></content>
      <categories>
        <category>OcnSci</category>
      </categories>
  </entry>
  <entry>
    <title>URL</title>
    <url>/2022/05/01/OcnSci/URL/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="Atmosphere-Ocean-and-Climate-Dynamics"><a href="#Atmosphere-Ocean-and-Climate-Dynamics" class="headerlink" title="Atmosphere, Ocean and Climate Dynamics"></a>Atmosphere, Ocean and Climate Dynamics</h4><p><a href="http://marshallplumb.mit.edu/">http://marshallplumb.mit.edu/</a></p>
<h4 id="Physics-Across-Oceanography-Fluid-Mechanics-and-Waves"><a href="#Physics-Across-Oceanography-Fluid-Mechanics-and-Waves" class="headerlink" title="Physics Across Oceanography: Fluid Mechanics and Waves"></a>Physics Across Oceanography: Fluid Mechanics and Waves</h4><p><a href="https://uw.pressbooks.pub/ocean285/">https://uw.pressbooks.pub/ocean285/</a></p>
]]></content>
      <categories>
        <category>OcnSci</category>
      </categories>
  </entry>
  <entry>
    <title>Conversions and Constants</title>
    <url>/2022/05/01/AtmoSci/Conversions%20and%20Constants/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="pdfobject-container" data-target="https://docs.qq.com/pdf/DSlRQZnNTUFJqRnJQ" data-height="1000px"></div>
]]></content>
      <categories>
        <category>AtmSci</category>
      </categories>
  </entry>
  <entry>
    <title>Data Assimilation</title>
    <url>/2022/05/01/AtmoSci/Data%20Assimilation/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Amos-S-Lawless-Data-Assimilation-Research-Center-University-of-Reading"><a href="#Amos-S-Lawless-Data-Assimilation-Research-Center-University-of-Reading" class="headerlink" title="Amos S. Lawless  Data Assimilation Research Center  University of Reading"></a>Amos S. Lawless  Data Assimilation Research Center  University of Reading</h2><h3 id="Lecture-1-An-introduction-to-data-assimilation"><a href="#Lecture-1-An-introduction-to-data-assimilation" class="headerlink" title="Lecture 1 An introduction to data assimilation"></a>Lecture 1 An introduction to data assimilation</h3><p>来源：<a href="https://youtu.be/TmBEryh2OXY">https://youtu.be/TmBEryh2OXY</a></p>
<h4 id="What-is-data-assimilation"><a href="#What-is-data-assimilation" class="headerlink" title="What is data assimilation?"></a>What is data assimilation?</h4><p>Data assimilation is the process of estimating the state of a dynamical system by combing observational data with a priori estimate of the state (often from a numerical model forecast)</p>
<h4 id="Why-not-just-use-the-observations"><a href="#Why-not-just-use-the-observations" class="headerlink" title="Why not just use the observations?"></a>Why not just use the observations?</h4><ul>
<li>We may only observe part of the state</li>
</ul>
<p><img src="https://p.ipic.vip/3pmao1.png" alt="Screenshot 2023-05-13 at 11.57.02"></p>
<ul>
<li>We may observe a nonlinear function of the state, e.g. satellite radiances</li>
</ul>
<p><img src="https://p.ipic.vip/26z9pi.png" alt="Screenshot 2023-05-13 at 12.06.40"></p>
<p>观测算子：从模式变量到观测变量   （可能非常复杂）</p>
<ul>
<li>We need to allow for uncertainties in the observations (and in the a prior estimate)</li>
</ul>
<p>观测和模式均存在误差</p>
<p><img src="https://p.ipic.vip/9u1lqe.png" alt="Screenshot 2023-05-13 at 19.38.51"></p>
<p>Unbiased: 误差的平均值为0</p>
<p>Uncorrelated: 观测误差和模式误差不相关</p>
<p>两个未知变量，需要两个条件：</p>
<p><img src="https://p.ipic.vip/ywharx.png" alt="Screenshot 2023-05-13 at 19.46.17"></p>
<p><img src="https://p.ipic.vip/hxx9ed.png" alt="Screenshot 2023-05-13 at 19.52.29"></p>
<p><img src="https://p.ipic.vip/1aqg22.png" alt="Screenshot 2023-05-13 at 19.57.25"></p>
<p>当观测和模式的方差相等时，分析场等于二分之一的观测+二分之一的模式</p>
<p>当观测（模式）方差较大时，模式（观测）的权重较大；</p>
<p><img src="https://p.ipic.vip/jt6sah.png" alt="Screenshot 2023-05-13 at 20.02.22"></p>
<p><img src="https://p.ipic.vip/y83h95.png" alt="Screenshot 2023-05-13 at 20.02.47"></p>
<p>p(x|y)  当有观测y时模式x的最佳估算</p>
<p><img src="https://p.ipic.vip/9yedqf.png" alt="Screenshot 2023-05-13 at 20.05.23"></p>
<p><img src="https://p.ipic.vip/mm0p3r.png" alt="Screenshot 2023-05-13 at 20.07.17"></p>
<p><img src="https://p.ipic.vip/uf156f.png" alt="Screenshot 2023-05-13 at 20.09.09"></p>
<p>more weight for the observation because of less uncertainty</p>
<p><img src="https://p.ipic.vip/dsxilq.png" alt="Screenshot 2023-05-13 at 20.10.17"></p>
<p><img src="https://p.ipic.vip/cbru13.png" alt="Screenshot 2023-05-13 at 20.12.23"></p>
<p>无法获取PDF：1. 抽样；2. 统计特征（平均值、模态）</p>
<p><img src="https://p.ipic.vip/ynxr9l.png" alt="Screenshot 2023-05-13 at 20.15.52"></p>
<p>covariance matrix: 1d variance —&gt; multiple dimension</p>
<p><img src="https://p.ipic.vip/oanfuf.png" alt="Screenshot 2023-05-13 at 20.35.00"></p>
<p><img src="https://p.ipic.vip/04ovqy.png" alt="Screenshot 2023-05-13 at 20.36.56"></p>
<p>based on the assumption that H is linear</p>
<p><img src="https://p.ipic.vip/za3fef.png" alt="Screenshot 2023-05-13 at 20.39.50"></p>
<p>变分法</p>
<p><img src="https://p.ipic.vip/oxjudn.png" alt="Screenshot 2023-05-13 at 20.41.24"></p>
<p><img src="https://p.ipic.vip/dhoabh.png" alt="Screenshot 2023-05-13 at 20.42.55"></p>
<p><img src="https://p.ipic.vip/d3a2l8.png" alt="Screenshot 2023-05-13 at 20.43.43"></p>
<p><img src="https://p.ipic.vip/grzuih.png" alt="Screenshot 2023-05-13 at 20.44.57"></p>
<p>Kalman Filter use this ^</p>
<p><img src="https://p.ipic.vip/gjgi8f.png" alt="Screenshot 2023-05-13 at 20.45.32"></p>
<p><img src="https://p.ipic.vip/npmw1g.png" alt="Screenshot 2023-05-13 at 20.46.19"></p>
<h3 id="Lecture-2-Data-Assimilation-variational-data-assimilation-and-the-ensemble-Kalman-filter"><a href="#Lecture-2-Data-Assimilation-variational-data-assimilation-and-the-ensemble-Kalman-filter" class="headerlink" title="Lecture 2 Data Assimilation variational data assimilation and the ensemble Kalman filter"></a>Lecture 2 Data Assimilation variational data assimilation and the ensemble Kalman filter</h3><p>来源：<a href="https://youtu.be/8niWYsM2akg">https://youtu.be/8niWYsM2akg</a></p>
<p><img src="https://p.ipic.vip/04i6l6.png" alt="Screenshot 2023-05-16 at 18.34.32"></p>
<p><img src="https://p.ipic.vip/deuazb.png" alt="Screenshot 2023-05-16 at 18.37.40"></p>
<p><img src="https://p.ipic.vip/gb1o6o.png" alt="Screenshot 2023-05-17 at 14.53.38"></p>
<p><img src="https://p.ipic.vip/pcnrzh.png" alt="Screenshot 2023-05-17 at 14.54.59"></p>
<p><img src="https://p.ipic.vip/z34i08.png" alt="Screenshot 2023-05-17 at 14.58.02"></p>
<p><img src="https://p.ipic.vip/09i4ob.png" alt="Screenshot 2023-05-17 at 14.58.43"></p>
<p>Xi+1 &#x3D; Mi(Xi) means need to run the model within the time window and compare with the observation</p>
<p><img src="https://p.ipic.vip/d4a338.png" alt="Screenshot 2023-05-17 at 15.03.45"></p>
<p>已有很多有效算法来计算</p>
<p>the problem is how to calculate the gradient (with respect to thoundsands of X) in an efficient way</p>
<p><img src="https://p.ipic.vip/btuby7.png" alt="Screenshot 2023-05-17 at 15.07.33"></p>
<p><img src="https://p.ipic.vip/qclzvb.png" alt="Screenshot 2023-05-17 at 15.10.35"></p>
<p>Adjoint model: nonlinear model —&gt; linearlize the model —&gt; take the transpose</p>
<p>allow us to get the gradient at each iteration</p>
<p><img src="https://p.ipic.vip/o0i70u.png" alt="Screenshot 2023-05-17 at 15.21.43"></p>
<p><img src="https://p.ipic.vip/4simig.png" alt="Screenshot 2023-05-17 at 15.22.44"></p>
<p><img src="https://p.ipic.vip/t7hnmb.png" alt="Screenshot 2023-05-17 at 15.24.02"></p>
<p><img src="https://p.ipic.vip/x1s271.png" alt="Screenshot 2023-05-17 at 15.28.37"></p>
<p><img src="https://p.ipic.vip/hyuzo7.png" alt="Screenshot 2023-05-17 at 15.28.51"></p>
<p><img src="https://p.ipic.vip/m1xvxw.png" alt="Screenshot 2023-05-17 at 15.30.44"></p>
<p><img src="https://p.ipic.vip/q5bdet.png" alt="Screenshot 2023-05-17 at 15.31.34"></p>
<p>not evolve with time, but still get some dynamics</p>
<p><img src="https://p.ipic.vip/gq8q0d.png" alt="Screenshot 2023-05-17 at 15.37.51"></p>
<p><img src="https://p.ipic.vip/xw3wge.png" alt="Screenshot 2023-05-17 at 15.41.10"></p>
<p><img src="https://p.ipic.vip/ttjwcy.png" alt="Screenshot 2023-05-17 at 15.41.33"></p>
<p><img src="https://p.ipic.vip/5jf2eq.png" alt="Screenshot 2023-05-17 at 15.43.08"></p>
<p><img src="https://p.ipic.vip/a1srf7.png" alt="Screenshot 2023-05-17 at 15.46.38"></p>
<p>at each time step: calculate the analyses, calculate the uncertainty of the analyses, forcast the the both in  to get the prior and uncertainty for the next step</p>
<p><img src="https://p.ipic.vip/wjpw8p.png" alt="Screenshot 2023-05-17 at 15.48.58"></p>
<p><img src="https://p.ipic.vip/l2as2t.png" alt="Screenshot 2023-05-17 at 15.49.23"></p>
<p>For large model (many variables), it is impractical, even if your model is linear</p>
<p><img src="https://p.ipic.vip/xox4td.png" alt="Screenshot 2023-05-17 at 15.54.01"></p>
<p><img src="https://p.ipic.vip/i2t47s.png" alt="Screenshot 2023-05-17 at 15.54.26"></p>
<p><img src="https://p.ipic.vip/xoki1b.png" alt="Screenshot 2023-05-17 at 15.55.11"></p>
<p><img src="https://p.ipic.vip/zlq1j8.png" alt="Screenshot 2023-05-17 at 15.55.55"></p>
<p><img src="https://p.ipic.vip/49h38e.png" alt="Screenshot 2023-05-17 at 15.56.55"></p>
<p><img src="https://p.ipic.vip/p383ag.png" alt="Screenshot 2023-05-17 at 15.59.18"></p>
<p><img src="https://p.ipic.vip/kskyyc.png" alt="Screenshot 2023-05-17 at 16.00.07"></p>
<p><img src="https://p.ipic.vip/m8s5ml.png" alt="Screenshot 2023-05-17 at 16.00.39"></p>
<p><img src="https://p.ipic.vip/1e6zf2.png" alt="Screenshot 2023-05-17 at 16.02.17"></p>
<p><img src="https://p.ipic.vip/2j5x3x.png" alt="Screenshot 2023-05-17 at 16.04.07"></p>
<p>no trust the obs anymore as the time evolves</p>
<p><img src="https://p.ipic.vip/3lmw0s.png" alt="Screenshot 2023-05-17 at 16.06.41"></p>
<h3 id="Lecture-3-Applications-of-data-assimilation-and-current-challenges"><a href="#Lecture-3-Applications-of-data-assimilation-and-current-challenges" class="headerlink" title="Lecture 3 Applications of data assimilation and current challenges"></a>Lecture 3 Applications of data assimilation and current challenges</h3><h4 id="Applications"><a href="#Applications" class="headerlink" title="Applications"></a>Applications</h4><p><img src="https://p.ipic.vip/ayxpyd.png" alt="Screenshot 2023-05-14 at 16.37.04"></p>
<p>data assimilation make better use of satellite data in the Southern Hemisphere</p>
<p><img src="https://p.ipic.vip/7s8zgm.png" alt="Screenshot 2023-05-14 at 16.39.35"></p>
<p>shaping the increments according to the local dynamics</p>
<p><img src="https://p.ipic.vip/9in8ov.png" alt="Screenshot 2023-05-14 at 16.43.24"></p>
<p><img src="https://p.ipic.vip/vtuw1o.png" alt="Screenshot 2023-05-14 at 16.44.22"></p>
<p>combine the varitational method with the ensemble method can get the flow-dependent varitions at the start of the window</p>
<p><img src="https://p.ipic.vip/wcl82p.png" alt="Screenshot 2023-05-14 at 16.48.00"></p>
<p>increase ensemble member can get rid of noise without localisation</p>
<p>and get true correlation (flow-dependent)   but hard to have enough ensemble numbers in practice !</p>
<p><img src="https://p.ipic.vip/jnf7m0.png" alt="Screenshot 2023-05-14 at 16.51.08"></p>
<p><img src="https://p.ipic.vip/4weus3.png" alt="Screenshot 2023-05-14 at 16.52.05"></p>
<p><img src="https://p.ipic.vip/0r421l.png" alt="Screenshot 2023-05-14 at 16.53.09"></p>
<p><img src="https://p.ipic.vip/gjsqig.png" alt="Screenshot 2023-05-14 at 16.54.03"></p>
<p>the difference between the SST mesurement: ocean model - 1 meter below the surface</p>
<p>Satallite data: skin temperature</p>
<p>Caution: think about the structure </p>
<p><img src="https://p.ipic.vip/99zao0.png" alt="Screenshot 2023-05-14 at 16.58.32"></p>
<p><img src="https://p.ipic.vip/k8ep7x.png" alt="Screenshot 2023-05-14 at 17.00.18"></p>
<p><img src="https://p.ipic.vip/gx87tn.png" alt="Screenshot 2023-05-14 at 17.03.50"></p>
<p><img src="https://p.ipic.vip/wahuxy.png" alt="Screenshot 2023-05-14 at 17.05.54"></p>
<p>improvement due to time-correlated observations</p>
<p>same algorithm at the beginning, but need to think hard about what is the model background and what is the observation, as well as how to better combine the two, by adapting the algorithm.</p>
<p><img src="https://p.ipic.vip/lwhy7v.png" alt="Screenshot 2023-05-14 at 17.13.55"></p>
<p><img src="https://p.ipic.vip/uwyvrc.png" alt="Screenshot 2023-05-14 at 17.16.58"></p>
<p><img src="https://p.ipic.vip/426cjo.png" alt="Screenshot 2023-05-14 at 17.18.02"></p>
<p><img src="https://p.ipic.vip/pjbcam.png" alt="Screenshot 2023-05-14 at 19.21.06"></p>
<p><img src="https://p.ipic.vip/xokva8.png" alt="Screenshot 2023-05-14 at 19.21.37"></p>
<p>more satellite data get around 1970</p>
<p><img src="https://p.ipic.vip/mb8stp.png" alt="Screenshot 2023-05-14 at 19.23.31"></p>
<p><img src="https://p.ipic.vip/lgfod8.png" alt="Screenshot 2023-05-14 at 19.25.42"></p>
<h4 id="Challenges"><a href="#Challenges" class="headerlink" title="Challenges"></a>Challenges</h4><p><img src="https://p.ipic.vip/2ekirg.png" alt="Screenshot 2023-05-14 at 19.27.38"></p>
<p><img src="https://p.ipic.vip/vvtld0.png" alt="Screenshot 2023-05-14 at 19.28.38"></p>
<p><img src="https://p.ipic.vip/w1akbk.png" alt="Screenshot 2023-05-14 at 19.29.40"></p>
<p><img src="https://p.ipic.vip/p0vqgs.png" alt="Screenshot 2023-05-14 at 19.31.33"></p>
<p>highly correlated means non-independent, less information from the observation</p>
<p><img src="https://p.ipic.vip/nz0ruc.png" alt="Screenshot 2023-05-14 at 19.32.13"></p>
<p><img src="https://p.ipic.vip/6lgvb4.png" alt="Screenshot 2023-05-14 at 19.34.03"></p>
<p>to make the window longer in 4DVar</p>
<p><img src="https://p.ipic.vip/uekm1v.png" alt="Screenshot 2023-05-14 at 19.36.26"></p>
<p><img src="https://p.ipic.vip/1mjztd.png" alt="Screenshot 2023-05-14 at 19.38.05"></p>
<p><img src="https://p.ipic.vip/jaurmn.png" alt="Screenshot 2023-05-14 at 19.39.20"></p>
<p>Best algorithm to use dependent on your applications</p>
<p><img src="https://p.ipic.vip/ldgi3f.png" alt="Screenshot 2023-05-14 at 19.43.21"></p>
]]></content>
      <categories>
        <category>AtmSci</category>
      </categories>
  </entry>
  <entry>
    <title>Emergent constraints</title>
    <url>/2022/05/01/AtmoSci/Emergent%20constraints/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>Reducing Uncertainties in Climate Projections with Emergent Constraints: Concepts, Examples and Prospects</strong>     <em>Florent Brient</em>     </p>
<p>Models disagree on a significant number of responses to climate change, such as climate feedback, regional changes, or the strength of equilibrium climate sensitivity. Emergent constraints aim to reduce these uncertainties by finding links between the inter-model spread in an observable predictor and climate projections. In this paper, the concepts underlying this framework are recalled with an emphasis on the statistical inference used for narrowing uncertainties, and a review of emergent constraints found in the last two decades. Potential links between highlighted predictors are explored, especially those targeting uncertainty reductions in climate sensitivity, cloud feedback, and changes of the hydrological cycle. Yet the disagreement across emergent constraints suggests that the spread in climate sensitivity can not be significantly narrowed. This calls for weighting the realism of emergent constraints by quantifying the level of physical understanding explaining the relationship. This would also permit more efficient model evaluation and better targeted model development. In the context of the upcoming CMIP6 model intercomparison a growing number of new predictors and uncertainty reductions is expected, which call for robust statistical inferences that allow cross-validation of more likely estimates.     </p>
<p>Advances in Atmospheric Sciences 2020 <a href="https://dx.doi.org/10.1007/s00376-019-9140-8">https://dx.doi.org/10.1007/s00376-019-9140-8</a></p>
]]></content>
      <categories>
        <category>AtmSci</category>
      </categories>
  </entry>
  <entry>
    <title>Gaussian Distribution</title>
    <url>/2022/05/01/AtmoSci/Gaussian%20Distribution/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="高斯分布"><a href="#高斯分布" class="headerlink" title="高斯分布"></a>高斯分布</h2><p>![Screenshot 2023-05-13 at 20.53.21](&#x2F;Users&#x2F;ruyanc&#x2F;Desktop&#x2F;Screenshot&#x2F;Screenshot 2023-05-13 at 20.53.21.png)</p>
<p>![Screenshot 2023-05-13 at 20.53.29](&#x2F;Users&#x2F;ruyanc&#x2F;Desktop&#x2F;Screenshot&#x2F;Screenshot 2023-05-13 at 20.53.29.png)</p>
<p>![Screenshot 2023-05-13 at 20.53.38](&#x2F;Users&#x2F;ruyanc&#x2F;Desktop&#x2F;Screenshot&#x2F;Screenshot 2023-05-13 at 20.53.38.png)</p>
<h2 id="协方差矩阵"><a href="#协方差矩阵" class="headerlink" title="协方差矩阵"></a>协方差矩阵</h2><p><img src="https://p.ipic.vip/zw4yem.png" alt="Screenshot 2023-05-13 at 20.55.49"></p>
<p><img src="https://p.ipic.vip/mjjgx0.png" alt="Screenshot 2023-05-13 at 20.55.56"></p>
<p><img src="https://p.ipic.vip/qc7meh.png" alt="Screenshot 2023-05-13 at 20.56.29"></p>
<p><img src="https://p.ipic.vip/3k46wg.png" alt="Screenshot 2023-05-13 at 20.56.29"></p>
<p>![Screenshot 2023-05-13 at 20.56.38](&#x2F;Users&#x2F;ruyanc&#x2F;Desktop&#x2F;Screenshot&#x2F;Screenshot 2023-05-13 at 20.56.38.png)</p>
<p>![Screenshot 2023-05-13 at 20.56.49](&#x2F;Users&#x2F;ruyanc&#x2F;Desktop&#x2F;Screenshot&#x2F;Screenshot 2023-05-13 at 20.56.49.png)</p>
<p>![Screenshot 2023-05-13 at 20.56.57](&#x2F;Users&#x2F;ruyanc&#x2F;Desktop&#x2F;Screenshot&#x2F;Screenshot 2023-05-13 at 20.56.57.png)</p>
<p><img src="https://p.ipic.vip/wdyw3e.png" alt="Screenshot 2023-05-13 at 20.57.06"></p>
<p>![Screenshot 2023-05-13 at 20.57.14](&#x2F;Users&#x2F;ruyanc&#x2F;Desktop&#x2F;Screenshot&#x2F;Screenshot 2023-05-13 at 20.57.14.png)</p>
<p>![Screenshot 2023-05-13 at 20.57.22](&#x2F;Users&#x2F;ruyanc&#x2F;Desktop&#x2F;Screenshot&#x2F;Screenshot 2023-05-13 at 20.57.22.png)</p>
<h3 id="相关参考："><a href="#相关参考：" class="headerlink" title="相关参考："></a>相关参考：</h3><p><a href="https://link.zhihu.com/?target=https://janakiev.com/blog/covariance-matrix/">https://link.zhihu.com/?target=https%3A//janakiev.com/blog/covariance-matrix/</a></p>
<p><a href="https://link.zhihu.com/?target=http://fouryears.eu/2016/11/23/what-is-the-covariance-matrix/">https://link.zhihu.com/?target=http%3A//fouryears.eu/2016/11/23/what-is-the-covariance-matrix/</a></p>
]]></content>
      <categories>
        <category>AtmSci</category>
      </categories>
  </entry>
  <entry>
    <title>Lorenz Model</title>
    <url>/2022/05/01/AtmoSci/Lorenz%20Model/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Lorenz-95"><a href="#Lorenz-95" class="headerlink" title="Lorenz 95"></a>Lorenz 95</h2><h3 id="计算公式"><a href="#计算公式" class="headerlink" title="计算公式"></a>计算公式</h3><p><img src="https://p.ipic.vip/5cm02h.png" alt="Screenshot 2024-05-16 at 09.16.58"></p>
<h3 id="求解方法"><a href="#求解方法" class="headerlink" title="求解方法"></a>求解方法</h3><p><img src="https://p.ipic.vip/6eandy.png" alt="Screenshot 2024-05-16 at 09.17.44"></p>
<p><img src="https://p.ipic.vip/fqdw6f.png" alt="Screenshot 2024-05-16 at 09.18.47"></p>
]]></content>
      <categories>
        <category>AtmSci</category>
      </categories>
  </entry>
  <entry>
    <title>URL</title>
    <url>/2022/05/01/AtmoSci/URL/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="Atmosphere-Ocean-and-Climate-Dynamics"><a href="#Atmosphere-Ocean-and-Climate-Dynamics" class="headerlink" title="Atmosphere, Ocean and Climate Dynamics"></a>Atmosphere, Ocean and Climate Dynamics</h4><p><a href="http://marshallplumb.mit.edu/">http://marshallplumb.mit.edu/</a></p>
]]></content>
      <categories>
        <category>AtmSci</category>
      </categories>
  </entry>
  <entry>
    <title>Chen_et_al_2022_JC</title>
    <url>/2022/12/01/Publication/Chen_et_al_2022_JC/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="pdfobject-container" data-target="https://docs.qq.com/pdf/DSkdMeHVWb0dvd2FM" data-height="1000px"></div>
]]></content>
      <categories>
        <category>Publication</category>
      </categories>
  </entry>
  <entry>
    <title>Chen_et_al_2017_JGR</title>
    <url>/2017/07/16/Publication/Chen_et_al_2017_JGR/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="pdfobject-container" data-target="https://docs.qq.com/pdf/DSkd6cXdWcnVmUXVD" data-height="1000px"></div>



]]></content>
      <categories>
        <category>Publication</category>
      </categories>
  </entry>
  <entry>
    <title>Chen_et_al_2020_JC</title>
    <url>/2020/12/01/Publication/Chen_et_al_2020_JC/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="pdfobject-container" data-target="https://docs.qq.com/pdf/DSm1YQVpiU3Z4ZWFY" data-height="1000px"></div>
]]></content>
      <categories>
        <category>Publication</category>
      </categories>
  </entry>
  <entry>
    <title>Chen_et_al_2023_ERC</title>
    <url>/2023/05/01/Publication/Chen_et_al_2023_ERC/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="pdfobject-container" data-target="https://docs.qq.com/pdf/DSkt0RHhJY0lHQUVI" data-height="1000px"></div>
]]></content>
      <categories>
        <category>Publication</category>
      </categories>
  </entry>
  <entry>
    <title>Huang_et_al_2016_PLOS</title>
    <url>/2016/06/30/Publication/Huang_et_al_2016_PLOS/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="pdfobject-container" data-target="https://docs.qq.com/pdf/DSmZhdHN0YXpNQVdV" data-height="1000px"></div>

]]></content>
      <categories>
        <category>Publication</category>
      </categories>
  </entry>
  <entry>
    <title>Weather</title>
    <url>/2022/05/01/AtmoSci/Weather/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="skew-T"><a href="#skew-T" class="headerlink" title="skew-T"></a>skew-T</h4><p><a href="https://www.e-education.psu.edu/meteo300/node/638">https://www.e-education.psu.edu/meteo300/node/638</a></p>
<h4 id="CAPE"><a href="#CAPE" class="headerlink" title="CAPE"></a>CAPE</h4><p>可以打个比方去理解CAPE值。就好像地震一样，CAPE值预报了“地震”的级数，而抬升指数预报了发生“地震”的可能性。如果你知道明天“地震”的级别很高，而且知道发生“地震”的可能性也很高，你一定知道明天不要飞，就怕啥也不知道就飞出去了。</p>
<h4 id="Lift-Index"><a href="#Lift-Index" class="headerlink" title="Lift Index"></a>Lift Index</h4><p>The <strong>lifted index</strong> (<strong>LI</strong>) is the <a href="https://en.wikipedia.org/wiki/Temperature">temperature</a> difference between the environment Te(p) and an <a href="https://en.wikipedia.org/wiki/Air_parcel">air parcel</a> lifted <a href="https://en.wikipedia.org/wiki/Adiabatic_process">adiabatically</a> Tp(p) at a given pressure height in the <a href="https://en.wikipedia.org/wiki/Troposphere">troposphere</a> (lowest layer where most weather occurs) of the <a href="https://en.wikipedia.org/wiki/Earth's_atmosphere">atmosphere</a>, usually 500 <a href="https://en.wikipedia.org/wiki/Pascal_(unit)">hPa</a> (<a href="https://en.wikipedia.org/wiki/Bar_(unit)">mb</a>). The temperature is measured in Celsius. When the value is positive, the atmosphere (at the respective height) is stable and when the value is negative, the atmosphere is <a href="https://en.wikipedia.org/wiki/Atmospheric_instability">unstable</a>.</p>
<p>LI can be computed using computer algorithms but can also be determined graphically. To do this, generally, the <a href="https://en.wikipedia.org/wiki/Air_parcel">parcel</a> is lifted from the portion of the <a href="https://en.wikipedia.org/wiki/Planetary_boundary_layer">planetary boundary layer</a> (PBL) that lies below the morning <a href="https://en.wikipedia.org/wiki/Inversion_(meteorology)">inversion</a>. The air here should be about 60 to 65% <a href="https://en.wikipedia.org/wiki/Relative_humidity">RH</a>, which is then lifted along the dry adiabat (see also <a href="https://en.wikipedia.org/wiki/Adiabatic_process">adiabatic process</a>) to the <a href="https://en.wikipedia.org/wiki/Lifted_condensation_level">lifting condensation level (LCL)</a>, which is the intersection of that curve with the average <a href="https://en.wikipedia.org/wiki/Mixing_ratio">mixing ratio</a> in the boundary layer. Once the LCL is found, the parcel is lifted along the moist adiabat to 500 mb. It is then that one finds LI &#x3D; Te(p) - Tp(p).</p>
<p>LI is generally scaled as follows:</p>
<ul>
<li><p>LI 6 or Greater, Very Stable Conditions</p>
</li>
<li><p>LI Between 1 and 6 : Stable Conditions, Thunderstorms Not Likely</p>
</li>
<li><p>LI Between 0 and -2 : Slightly Unstable, Thunderstorms Possible, With Lifting Mechanism (i.e., cold front, daytime heating, …)</p>
</li>
<li><p>LI Between -2 and -6 : Unstable, Thunderstorms Likely, Some Severe With Lifting Mechanism</p>
</li>
<li><p>LI Less Than -6: Very Unstable, Severe Thunderstorms Likely With Lifting Mechanism</p>
</li>
</ul>
<h3 id="台风近海快速加强"><a href="#台风近海快速加强" class="headerlink" title="台风近海快速加强"></a>台风近海快速加强</h3><p>资料显示，近海快速加强的台风均满足既有较强的高层出流、垂直切变又不太大的大气环流配置条件，但是，如何来判定它是否符合上述配置条件是主要难点。因此，对快速加强台风个例进行研究，是提升判识能力的有效途径。此外，加强对数值模式的检验和提高对模式产品的解释应用能力，也是提高预报准确率的重要途径之一。</p>
<h4 id="CPEC-amp-OPEC"><a href="#CPEC-amp-OPEC" class="headerlink" title="CPEC&amp;OPEC"></a>CPEC&amp;OPEC</h4><p><a href="http://ir.igsnrr.ac.cn/handle/311030/2807">http://ir.igsnrr.ac.cn/handle/311030/2807</a></p>
<h3 id="海表面热通量"><a href="#海表面热通量" class="headerlink" title="海表面热通量"></a>海表面热通量</h3><p><a href="https://max.book118.com/html/2017/0118/84886975.shtm">https://max.book118.com/html/2017/0118/84886975.shtm</a></p>
<h4 id="自由对流高度和抬升凝结高度"><a href="#自由对流高度和抬升凝结高度" class="headerlink" title="自由对流高度和抬升凝结高度"></a>自由对流高度和抬升凝结高度</h4><p>LFC是从LCL沿着湿绝热线上升，与层结曲线的第一个交点，有时候二者没有交点，所以LFC不一定每次都能得到。LFC表示超过这个高度后，空气块受到向上的正浮力，已经不需要外力就可以自由上升了。</p>
<p>CCL是由地面气压P0和露点Td0之交点沿着等饱和比湿线上升，与温度廓线之交点。CCL可以看作是热力对流产生的积云的云底高度，它是热力作用所导致的凝结面。</p>
<p>具体由下图可以看出，二者的差距主要取决于从LCL往上的湿绝热线和等饱和比湿线之间的间隔。</p>
<img src="https://p.ipic.vip/pj7ktc.jpg" data-caption="" data-size="normal" data-rawwidth="808" data-rawheight="572" data-default-watermark-src="https://pic3.zhimg.com/50/v2-3a3101b75bcc1a27977c26a5850568d6_720w.jpg?source=1940ef5c" class="origin_image zh-lightbox-thumb" width="808" data-original="https://pic3.zhimg.com/v2-0e72b437be2d543eb969e212351bf935_r.jpg?source=1940ef5c"/>]]></content>
      <categories>
        <category>AtmSci</category>
      </categories>
  </entry>
  <entry>
    <title>Chi_et_al_2023_JGR</title>
    <url>/2023/03/01/Publication/Chi_et_al_2023_JGR/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="pdfobject-container" data-target="https://docs.qq.com/pdf/DSnN6ZXVDZlBMVm1B" data-height="1000px"></div>
]]></content>
      <categories>
        <category>Publication</category>
      </categories>
  </entry>
  <entry>
    <title>Huang_et_al_2017a_JGR</title>
    <url>/2017/02/16/Publication/Huang_et_al_2017a_JGR/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="pdfobject-container" data-target="https://docs.qq.com/pdf/DSkNzQW5OZmFpT0ZZ" data-height="1000px"></div>

]]></content>
      <categories>
        <category>Publication</category>
      </categories>
  </entry>
  <entry>
    <title>Huang_et_al_2017b_JGR</title>
    <url>/2017/09/16/Publication/Huang_et_al_2017b_JGR/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="pdfobject-container" data-target="https://docs.qq.com/pdf/DSmlFSHBaT1dYbG9m" data-height="1000px"></div>

]]></content>
      <categories>
        <category>Publication</category>
      </categories>
  </entry>
  <entry>
    <title>Yang_et_al_2018_CD</title>
    <url>/2018/07/01/Publication/Yang_et_al_2018_CD/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="pdfobject-container" data-target="https://docs.qq.com/pdf/DSlp4c3VCenRrTGFp" data-height="1000px"></div>

]]></content>
      <categories>
        <category>Publication</category>
      </categories>
  </entry>
  <entry>
    <title>Ekman pumping</title>
    <url>/2022/05/01/OcnSci/Ekman%20Pumping/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Ekman-pumping"><a href="#Ekman-pumping" class="headerlink" title="Ekman pumping"></a>Ekman pumping</h2><p>If there is convergence or divergence of <a href="https://uw.pressbooks.pub/ocean285/chapter/the-ekman-layer/">Ekman transport</a>, then there will be upwelling or downwelling at the base of the Ekman layer.</p>
<p><img src="https://p.ipic.vip/87rt8d.jpg" alt="Screen Shot 2022-07-23 at 18.06.47"></p>
<p>The vertical velocity at the base of the Ekman layer is often referred to as <strong>Ekman pumping</strong>. It can occur near boundaries, where an along-shore component of the wind stress creates a coastal divergence (or convergence) in the Ekman layer. It can occur at the equator, where the direction of the Ekman transport due to wind blowing along the equator changes sign. Finally, it can occur in the ocean interior because of gradients in wind stress.</p>
<p>We start by dividing the Ekman transport by the thickness of the Ekman layer to find the vertically-averaged velocity. For example for the <em>x</em>-component of Ekman transport</p>
<p><img src="https://p.ipic.vip/v8qbms.jpg" alt="Screen Shot 2022-07-23 at 18.04.42"></p>
<p>Next, form the horizontal divergence of the vertically-averaged velocity components in the <em>x</em>– and <em>y</em>– directions</p>
<p><img src="https://p.ipic.vip/01b4a5.jpg" alt="Screen Shot 2022-07-23 at 18.04.47"></p>
<p>where we have used the definition of the <a href="https://uw.pressbooks.pub/ocean285/chapter/the-curl/">curl operator</a>.  Now, equate the horizontal divergence to the vertical convergence</p>
<p><img src="https://p.ipic.vip/wztowd.jpg" alt="Screen Shot 2022-07-23 at 18.04.52"></p>
<p>Since there is no vertical velocity at the sea surface, the left side becomes the vertical velocity at the base of the Ekman layer, divided by the Ekman layer thickness.</p>
<p><img src="https://p.ipic.vip/c4c8yh.jpg" alt="Screen Shot 2022-07-23 at 18.05.40"></p>
<p><em>Note:</em></p>
<p>Sometimes you will see only downward (negative) velocity at the base of the Ekman layer referred to as Ekman pumping, with positive velocity referred to as <em>Ekman suction</em>.</p>
<h3 id="Media-Attributions"><a href="#Media-Attributions" class="headerlink" title="Media Attributions"></a>Media Attributions</h3><ul>
<li>EkmanPumpingSchematic © Susan Hautala is licensed under a <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/">CC BY-NC-SA (Attribution NonCommercial ShareAlike)</a> license</li>
</ul>
<hr>
<p>copyright: <a href="https://uw.pressbooks.pub/ocean285/chapter/ekman-pumping/">https://uw.pressbooks.pub/ocean285/chapter/ekman-pumping/</a></p>
]]></content>
      <categories>
        <category>OcnSci</category>
      </categories>
  </entry>
  <entry>
    <title>AI for OcnSci</title>
    <url>/2023/01/01/ReadCube/AI%20for%20OcnSci/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="AI-for-ENSO-Forcasting"><a href="#AI-for-ENSO-Forcasting" class="headerlink" title="AI for ENSO Forcasting"></a>AI for ENSO Forcasting</h2><h4 id="HUANG-T-W-and-P-amp-HUANG-P-Superiority-of-a-Convolutional-Neural-Network-Model-over-Dynamical-Models-in-Predicting-Central-Pacific-ENSO-ADVANCES-IN-ATMOSPHERIC-SCIENCES-doi-10-1007-x2F-s00376-023-3001-1"><a href="#HUANG-T-W-and-P-amp-HUANG-P-Superiority-of-a-Convolutional-Neural-Network-Model-over-Dynamical-Models-in-Predicting-Central-Pacific-ENSO-ADVANCES-IN-ATMOSPHERIC-SCIENCES-doi-10-1007-x2F-s00376-023-3001-1" class="headerlink" title="HUANG, T. W. and P. &amp; HUANG, P. Superiority of a Convolutional Neural Network Model over Dynamical Models in Predicting Central Pacific ENSO. ADVANCES IN ATMOSPHERIC SCIENCES doi:10.1007&#x2F;s00376-023-3001-1.  "></a><span style="color:red">HUANG, T. W. and P. &amp; HUANG, P. Superiority of a Convolutional Neural Network Model over Dynamical Models in Predicting Central Pacific ENSO. <em>ADVANCES IN ATMOSPHERIC SCIENCES</em> doi:10.1007&#x2F;s00376-023-3001-1.  </span></h4><ul>
<li>The study develops a convolutional neural network (CNN) model to predict sea surface temperature anomalies (SSTAs) in the tropical Pacific.</li>
<li>The CNN model is trained using historical simulations from 39 CMIP6 climate models.</li>
<li>The CNN model shows higher skill than dynamical models in predicting SSTAs in the equatorial western-central Pacific, especially for central Pacific (CP) El Nino events.</li>
<li>The CNN model captures small-scale precursors like the Pacific Meridional Mode that trigger CP El Nino 7 months in advance.</li>
<li>Dynamical models are better at predicting SSTAs in the eastern Pacific, where ocean dynamics dominates variability.</li>
<li>A fusion model combining the CNN and dynamical models achieves higher overall prediction skill for both CP and eastern Pacific ENSO events.</li>
<li>The integrated gradients method provides interpretability, revealing key small-scale precursors the CNN model uses for predicting CP events.</li>
<li>The study demonstrates the potential of combining deep learning and dynamical models to improve ENSO prediction, especially for CP events. The CNN model’s skill in identifying CP events from precursors could address a key limitation of current prediction systems.</li>
</ul>
<p><span style="color:green">（重要参考图：Figure XX）</span></p>
<h4 id="Wang-H-Hu-S-amp-Li-X-An-Interpretable-Deep-Learning-ENSO-Forecasting-Model-Ocean-Land-Atmos-Res-2-2023"><a href="#Wang-H-Hu-S-amp-Li-X-An-Interpretable-Deep-Learning-ENSO-Forecasting-Model-Ocean-Land-Atmos-Res-2-2023" class="headerlink" title="Wang, H., Hu, S. &amp; Li, X. An Interpretable Deep Learning ENSO Forecasting Model. Ocean-Land-Atmos. Res. 2, (2023)."></a><span style="color:red">Wang, H., Hu, S. &amp; Li, X. An Interpretable Deep Learning ENSO Forecasting Model. <em>Ocean-Land-Atmos. Res.</em> <strong>2</strong>, (2023).</span></h4><p>Here is a summary of the key points from the PDF:</p>
<ul>
<li><p>The study develops a deep learning model called STIEF to forecast the El Nino-Southern Oscillation (ENSO) using global ocean heat signatures.</p>
</li>
<li><p>The model uses 12 months of sea surface temperature (SST) and ocean heat content (OHC) anomaly maps as input. </p>
</li>
<li><p>Transfer learning is applied to overcome limited observational data, first training on CMIP simulations then fine-tuning on observations.</p>
</li>
<li><p>The model achieves an effective forecast length of 22 months, better than dynamical models, with minimal spring predictability barrier influence.</p>
</li>
<li><p>Diagnostics show ocean basin interactions and tropics-extratropics play a key role in ENSO development, confirmed by sensitivity experiments.  </p>
</li>
<li><p>The model performance remains strong using SST alone, useful for operational forecasts lacking global subsurface data.</p>
</li>
<li><p>The study demonstrates a promising deep learning approach to extend ENSO predictability using the full spatiotemporal evolution of ocean heat signatures.</p>
</li>
</ul>
<p><span style="color:green">（重要参考图：Figure XX）</span></p>
]]></content>
      <categories>
        <category>ReadCube</category>
      </categories>
  </entry>
  <entry>
    <title>Costal C-Cycle</title>
    <url>/2023/01/01/ReadCube/Costal%20C-Cycle/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Theory"><a href="#Theory" class="headerlink" title="Theory"></a>Theory</h2><h4 id="Dai-M-et-al-Why-are-some-marginal-seas-sources-of-atmospheric-CO2-Geophys-Res-Lett-40-2154–2158-2013"><a href="#Dai-M-et-al-Why-are-some-marginal-seas-sources-of-atmospheric-CO2-Geophys-Res-Lett-40-2154–2158-2013" class="headerlink" title="Dai, M. et al. Why are some marginal seas sources of atmospheric CO2? Geophys. Res. Lett. 40, 2154–2158 (2013)."></a><span style="color:red">Dai, M. <em>et al.</em> Why are some marginal seas sources of atmospheric CO2? <em>Geophys. Res. Lett.</em> <strong>40</strong>, 2154–2158 (2013).</span></h4><p>近岸海洋以丰富的营养物质和较高的初级生产力为特征，对全球碳循环有着重要贡献，占到了全球总的海气CO2通量的21%，且在全球尺度上通常被视为二氧化碳的汇。但具体来看不同海区仍然存在差别，即一些沿海系统是大气CO2的源，而另一些则是大气CO2的汇。通过考虑一个独特的物理-生物地球化学设定，海洋主导边缘（Ocean-dominated Margins; OceMar），近岸海洋碳循环的机制得到了更准确的描述。与前人海洋主导边缘（River-dominated Ocean Margins）的设定相比，OceMar更好地描述了与开阔大洋的动力联系，从而包含了来自非本地的碳通量。例如，在中国南海和加勒比海区域，外海输送的营养盐和溶解无机碳（dissolved inorganic carbon; DIC）的贡献就十分重要。  <span style="color:green">（重要参考图：Figure 1 and Figure 4）</span></p>
<h4 id="Bauer-J-E-et-al-The-changing-carbon-cycle-of-the-coastal-ocean-Nature-504-61–70-2013"><a href="#Bauer-J-E-et-al-The-changing-carbon-cycle-of-the-coastal-ocean-Nature-504-61–70-2013" class="headerlink" title="Bauer, J. E. et al. The changing carbon cycle of the coastal ocean. Nature 504, 61–70 (2013)."></a><span style="color:red">Bauer, J. E. <em>et al.</em> The changing carbon cycle of the coastal ocean. <em>Nature</em> <strong>504</strong>, 61–70 (2013).</span></h4><p>气候因素显著调控了河流向近岸海洋的碳输运。</p>
<p>除了年平均的气温和降水外，现有研究表明例如热带风暴产生的极端降水等水文事件对于河流碳输运也十分重要。例如，单次热带风暴就可以造成年平均DOC输运的40% 【18】。考虑到在气候变化背景下，强风暴事件有较大的可能性会更加频繁，因此必然对于河流溶解有机碳（DOC）和（颗粒有机碳）POC向近岸海洋的输运产生影响。</p>
<p>河流碳通量的估算具有较高的可信度（+- 50% 具有95%的置信水平），河口CO2通量的估算具有中等水平的可信度（+- 100% 具有95%的置信水平），有机碳在湿地和河口的掩埋具有最低的可信度（&gt; 100% 具有95%的置信水平）。</p>
<p><strong>近岸碳循环模拟：</strong></p>
<p>目前最先进的地球系统模式对于河流的模拟的空间分辨率在0.5°，在此分辨率下，大约有500条河流，占到80%大洋有机碳输运可以被解析。然而狭窄的沿岸系统仍然需要更高的分辨率来模拟，例如采用0.25-0.5分辨率对于河口和潮滩湿地来说仍然过于粗糙。</p>
<p><strong>人类活动影响：</strong></p>
<ol>
<li>人类对土地利用的影响，例如农业活动使得从陆地而来的沉积物和颗粒有机碳增加；与河口有关的人类活动，如土地利用的变化、堤坝的建造、废水的排放、湿地的减少、河流的疏浚，越来越成为影响河口碳源、碳循环和碳收支的重要因素。</li>
<li>人类对河流排放、营养物质输入和气候变暖等过程的影响也导致了大陆架有机和无机碳循环的变化。</li>
</ol>
<p>两种机制可以使得大陆架从CO2的源转变为CO2的汇：</p>
<ol>
<li>主流观点认为，随着工业时代的推移，大陆架净生态系统生产力（NEP）从净异养条件逐渐转变为净自养条件。这是由于来自陆地的人为营养物质输入增加刺激了陆架初级生产，从而增强了对大气CO2的生物吸收【69】。</li>
<li>大陆架净生态系统生产力无需发生显著变化，可由大气中CO2水平的上升程度远高于大陆架水域来解释【2】。</li>
</ol>
<p> <span style="color:green">（重要参考图：Figure 1, Figure 2, Figure 3 and Figure 4）</span></p>
<h4 id="Regnier-P-et-al-Anthropogenic-perturbation-of-the-carbon-fluxes-from-land-to-ocean-Nat-Geosci-6-597–607-2013"><a href="#Regnier-P-et-al-Anthropogenic-perturbation-of-the-carbon-fluxes-from-land-to-ocean-Nat-Geosci-6-597–607-2013" class="headerlink" title="Regnier, P. et al. Anthropogenic perturbation of the carbon fluxes from land to ocean. Nat. Geosci. 6, 597–607 (2013)."></a><span style="color:red">Regnier, P. <em>et al.</em> Anthropogenic perturbation of the carbon fluxes from land to ocean. <em>Nat. Geosci.</em> <strong>6</strong>, 597–607 (2013).</span></h4><p> <span style="color:green">（重要参考图：Figure 1）</span></p>
<p>自前工业化时代以来，人类活动可能使内陆水域的碳通量增加了1.0 Pg C yr -1。上游河流的大部分额外碳输入要么以CO2（ ≈ 0.4 Pg C yr-1）的形式排放回大气，要么在淡水体、河口和沿海水域的连续体上被封存在沉积物中（ ≈ 0.5 Pg C yl-1），只留下约0.1 Pg C t yr-1的扰动碳输入到公海。</p>
<p>在大多数全球陆地生态系统模式中，没有描述从土壤到淡水的侧向碳通量，而是假设陆地生态系统和大气之间的碳循环一维闭合。</p>
<p>全球海洋生物地球化学模式使用来自陆地的碳（或营养物质）的给定侧向输入。目前，它们的粗分辨率并不能很好地解析近岸区域，而且它们对生态系统和生物地球化学过程的刻画简单，并采用了人为调试校正，无法充分代表陆地碳和营养物质输入增加对沿海海洋影响的复杂性。</p>
<p>加深土壤、水体、海床中有机碳和无机碳的源、运输路径、滞留和消除机制的理解，对于在大尺度的地球系统模式中参数化C循环及其对外强迫的响应是十分关键的。</p>
<h4 id="Ward-N-D-et-al-Where-Carbon-Goes-When-Water-Flows-Carbon-Cycling-across-the-Aquatic-Continuum-Front-Mar-Sci-4-7-2017"><a href="#Ward-N-D-et-al-Where-Carbon-Goes-When-Water-Flows-Carbon-Cycling-across-the-Aquatic-Continuum-Front-Mar-Sci-4-7-2017" class="headerlink" title="Ward, N. D. et al. Where Carbon Goes When Water Flows: Carbon Cycling across the Aquatic Continuum. Front. Mar. Sci. 4, 7 (2017)."></a><span style="color:red">Ward, N. D. <em>et al.</em> Where Carbon Goes When Water Flows: Carbon Cycling across the Aquatic Continuum. <em>Front. Mar. Sci.</em> <strong>4</strong>, 7 (2017).</span></h4><p> <span style="color:green">（重要参考图：Figure 1 and Figure 4）</span></p>
<p>河口提供了一整套生态系统服务，如营养物&#x2F;污染物循环、沉积物和碳储存、风暴和洪水事件的缓冲以及渔业生产（Canuel et al., 2012）。</p>
<p>河口仅占地球海洋覆盖面积的0.3%，而沿海大陆架和开阔海洋分别占7.2%和92.5%（Woodwell et al., 1973; Walsh, 1988; Duarte et al., 2005; Bouillon et al., 2008）。然而，河口向大气排放的CO2强度约为0.25 Pg C yr−1，大致相当于大陆架吸收的CO2量，且与开阔大洋吸收的CO2量（～1.5 Pg C yr−1）具有近似的数量级（Borges et al., 2005; Cai et al., 2006; Chen and Borges, 2009; Takahashi et al., 2009）。</p>
<p>限制我们准确量化内陆水域、河口和近岸海洋全球CO2排放量的最大因素是pCO2实际直接测量的覆盖范围很小，以及难以限定气体传输速度（Regnier et al., 2013）。</p>
<p>基于对生态系统如何运作的概念和定量理解发展数值模式，对于预测陆地到海洋的连续体耦合生态系统对气候和土地利用变化等外强迫因素的响应是十分必要的 (e.g., Heffernan et al., 2014; Lauerwald et al., 2015)。</p>
<h4 id="Cao-Z-et-al-Diagnosis-of-CO2-dynamics-and-fluxes-in-global-coastal-oceans-Natl-Sci-Rev-7-786–797-2019"><a href="#Cao-Z-et-al-Diagnosis-of-CO2-dynamics-and-fluxes-in-global-coastal-oceans-Natl-Sci-Rev-7-786–797-2019" class="headerlink" title="Cao, Z. et al. Diagnosis of CO2 dynamics and fluxes in global coastal oceans. Natl. Sci. Rev. 7, 786–797 (2019)."></a><span style="color:red">Cao, Z. <em>et al.</em> Diagnosis of CO2 dynamics and fluxes in global coastal oceans. <em>Natl. Sci. Rev.</em> <strong>7</strong>, 786–797 (2019).</span></h4><p>全球近岸海洋的表面pCO2的纬向分布不完全受温度控制，其季节内的变化特征显著受到非热力因素的调控，如水团混合和净初级生产力。</p>
<p>海洋主导和河流主导的沿岸海区，碳和营养盐的主要来源不同，分别为开阔海洋和陆地。</p>
<p>连接了开阔大洋和陆地的近岸海域，提供了重要的生态系统功能，特别是作为大气CO2的天然汇，占全球海洋碳吸收的约20%【1,2】。</p>
<p>为了描述水团混合和净初级生产的作用，我们使用了一个半分析框架（见“方法”部分）对沿海碳循环进行概念化，该框架耦合了物理、生物地球化学、DIC和营养盐【16】。通过解析DIC和营养物质的来源，以及有机碳生成过程中形成的相对消耗，来确定沿海系统是大气CO2的“源”（即，通过向大气中排放CO2来去除过量的DIC）还是“汇”（即，经由大气CO2输入来供应DIC的不足）。</p>
<p>中国南海：源</p>
<p>阿拉伯海：亚洲季风影响下存在很强的季节变化，除春季外为弱的CO2源</p>
<p>珠江口：汇</p>
<p>表现为CO2汇时多为河流主导型的边缘海，而海洋主导型的边缘海可能表现为CO2的源，也可能表现为CO2的汇，例如中国南海为源区，而俄勒冈-加利福尼亚沿岸为汇区。</p>
<p>未来将上述概念模型引入到模式中是十分重要的。</p>
<p> <span style="color:green">（重要参考图：Figure 2 and Figure 3）</span></p>
<h4 id="Dai-M-et-al-Carbon-Fluxes-in-the-Coastal-Ocean-Synthesis-Boundary-Processes-and-Future-Trends-Annu-Rev-Earth-Planet-Sci-50-593–626-2022"><a href="#Dai-M-et-al-Carbon-Fluxes-in-the-Coastal-Ocean-Synthesis-Boundary-Processes-and-Future-Trends-Annu-Rev-Earth-Planet-Sci-50-593–626-2022" class="headerlink" title="Dai, M. et al. Carbon Fluxes in the Coastal Ocean: Synthesis, Boundary Processes, and Future Trends. Annu. Rev. Earth Planet. Sci. 50, 593–626 (2022)."></a><span style="color:red">Dai, M. <em>et al.</em> Carbon Fluxes in the Coastal Ocean: Synthesis, Boundary Processes, and Future Trends. <em>Annu. Rev. Earth Planet. Sci.</em> <strong>50</strong>, 593–626 (2022).</span></h4><p>全球近岸海洋的CO2通量大约为−0.25±0.05 Pg C year−1，其中极地和亚极地区域贡献了约90%的CO2去除作用。</p>
<p>CO2通量随纬度和季节的变化说明温度以及水团混合和净初级生产力都起到调控作用，沿岸海洋的碳循环特征较开阔大洋具有其特殊性。</p>
<p>近岸海洋具有较高的初级生产力，且是有机物和碳酸钙长期埋藏的地方，因此对于全球碳收支具有重要贡献(Gattuso et al. 1998, Mackenzie et al. 2005)。</p>
<p>在全球碳收支中，近岸海洋作为大气CO2的碳的源或汇的问题得到广泛探讨（e.g., Borges et al. 2005, Cai &amp; Dai 2004, Cai et al. 2006, Chen &amp; Borges 2009, Dai et al. 2013, Laruelle et al. 2014, Roobaert et al. 2019, Thomas et al. 2004）</p>
<p>近岸海洋具有很大的区域差异性，使得分类和定量计算不同海域的通量存在很大困难（e.g., Cai et al. 2020, Guo et al. 2015, Li et al. 2020b）。此外，对其时间变化特征的认知更加不足，近岸海洋CO2通量的年际变率和长期变化趋势仍然所致甚少（e.g., Laruelle et al. 2018）。</p>
<p><strong>人类活动影响：</strong></p>
<p>在工业革命前，近岸海洋被认为很可能是大气CO2的源（e.g., Aricò et al. 2021, Bauer et al. 2013, Mackenzie et al. 2004）。然而，最近开展的对于全球近岸海洋的数值模拟试验结果表明，在工业革命前近岸海洋可能是大气CO2的一个弱的汇 （Bourgeois et al. 2016, Lacroix et al. 2021a）。</p>
<p>在全球范围内对近岸海域进行模拟仍然十分困难，这一是由于可用于模式评估的观测资料较少，二是因为不同海域的区域差异性（Hofmann et al. 2011, Holt et al. 2009）。到目前为止，只有区域模式可以对特定区域的具有时空变化特征的生物地球化学过程进行模拟。</p>
<p>基于概念盒模型的分析表明，全球大陆沿岸地区在工业革命前为大气CO2的源（0.1-0.3 Pg C year-1）。Bauer等（2013）的计算结果表明，在过去的一百年间，由于大气中CO2含量的增加，环流的变化，以及河流中营养物质的增多，近岸海洋转变为了CO2的汇（-0.1 to -0.4Pg C year-1）。估算得到的人类强迫引起的CO2源汇变化强度在-0.2 to -0.7Pg C year-1。但全球海洋生物化学模式（GOBM）计算得到的人为强迫强度在-0.12 to -0.7Pg C year-1，弱于盒模型的结果。二者的差异可能来源于：1. 盒模型不能解析不同海区的环流空间非均一性；2. 全球模式不包括河口、海岸盐沼、红树林等作为重要碳源的水生系统的解析。</p>
<p>不同沿岸海区的CO2通量长期变化区域存在差异，说明除了大气CO2含量的增加外，物理和生化过程对特定沿岸海区具有重要调控作用。</p>
<p>人为活动产生的有机碳沉积和向开阔大洋的输运大约分别在 0.15 Pg C year-1（Regnier et al. 2013b） 和 0.4 Pg C year-1 （Bauer et al. 2013）。</p>
<p>人类强迫引起的海洋碳通量变化仍然存在较大的不确定性，这是由于对于同时变化的海-陆-气耦合系统的变化规律认知不足所致。</p>
<p><strong>未来研究方向：</strong></p>
<ol>
<li><p>继续和加强对于海洋碳循环的观测；</p>
</li>
<li><p>发展与陆地-海洋连续体耦合的区域模式和有效解析海岸带物理过程的全球海岸模式，是有效的提升区域和全球预测水平的重要方式；</p>
</li>
<li><p>标定工业革命前的基线水平是评估人类活动影响的重要基础。</p>
</li>
</ol>
<p><span style="color:green">（重要参考图：Figure 1, Figure 2 and Figure 6）</span></p>
]]></content>
      <categories>
        <category>ReadCube</category>
      </categories>
  </entry>
  <entry>
    <title>Journal of Climate</title>
    <url>/2022/04/01/ReadCube/Journal%20of%20Climate/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="O’Brien-J-P-amp-Deser-C-Quantifying-and-Understanding-Forced-Changes-to-Unforced-Modes-of-Atmospheric-Circulation-Variability-over-the-North-Pacific-in-a-Coupled-Model-Large-Ensemble-J-Climate-1–49-2022-doi-10-1175-x2F-jcli-d-22-0101-1"><a href="#O’Brien-J-P-amp-Deser-C-Quantifying-and-Understanding-Forced-Changes-to-Unforced-Modes-of-Atmospheric-Circulation-Variability-over-the-North-Pacific-in-a-Coupled-Model-Large-Ensemble-J-Climate-1–49-2022-doi-10-1175-x2F-jcli-d-22-0101-1" class="headerlink" title="O’Brien, J. P. &amp; Deser, C. Quantifying and Understanding Forced Changes to Unforced Modes of Atmospheric Circulation Variability over the North Pacific in a Coupled Model Large Ensemble. J Climate 1–49 (2022) doi:10.1175&#x2F;jcli-d-22-0101.1."></a><span style="color:red">O’Brien, J. P. &amp; Deser, C. Quantifying and Understanding Forced Changes to Unforced Modes of Atmospheric Circulation Variability over the North Pacific in a Coupled Model Large Ensemble. J Climate 1–49 (2022) doi:10.1175&#x2F;jcli-d-22-0101.1.</span></h2><p><img src="https://p.ipic.vip/2i7ed3.jpg" alt="Screen Shot 2022-09-06 at 17.55.08"></p>
<ul>
<li><p><span style="color:green">internal variability modes 在全球变暖下振幅将增强，且既有受热带强迫的部分，也有自身动力的部分</span></p>
</li>
<li><p><span style="color:green">Method: snapshot EOF</span></p>
</li>
<li><p><span style="color:green">ENSO与NAO的遥相关加强，未来欧洲可能受到ENSO事件的显著影响；ENSO对北美降水的影响也将增强</span></p>
</li>
</ul>
<h2 id="Vecchi-G-A-amp-Soden-B-J-Global-Warming-and-the-Weakening-of-the-Tropical-Circulation-J-Climate-20-4316–4340-2007"><a href="#Vecchi-G-A-amp-Soden-B-J-Global-Warming-and-the-Weakening-of-the-Tropical-Circulation-J-Climate-20-4316–4340-2007" class="headerlink" title="Vecchi, G. A. &amp; Soden, B. J. Global Warming and the Weakening of the Tropical Circulation. J Climate 20, 4316–4340 (2007)."></a><span style="color:red">Vecchi, G. A. &amp; Soden, B. J. Global Warming and the Weakening of the Tropical Circulation. J Climate 20, 4316–4340 (2007).</span></h2><p><img src="https://p.ipic.vip/ya4gdl.jpg" alt="Screen Shot 2022-09-05 at 15.54.17"></p>
<ul>
<li><span style="color:green">thermodynamic scaling arguments of Held and Soden: 环流在全球变暖下将减弱. </span></li>
<li><span style="color:green">环流减弱在纬向环流上更加明显：强的上升运动减少，弱的上升运动增加 </span></li>
<li><span style="color:green">太平洋的增暖模态为El Niño-like：但成因机制和El Niño有所不同，在mixed layer model 和 full ocean dynamics coupled climate models 中均有表现 </span></li>
</ul>
<h2 id="Xie-S-P-et-al-Global-Warming-Pattern-Formation-Sea-Surface-Temperature-and-Rainfall-J-Climate-23-966–986-2010"><a href="#Xie-S-P-et-al-Global-Warming-Pattern-Formation-Sea-Surface-Temperature-and-Rainfall-J-Climate-23-966–986-2010" class="headerlink" title="Xie, S.-P. et al. Global Warming Pattern Formation: Sea Surface Temperature and Rainfall*. J Climate 23, 966–986 (2010)."></a><span style="color:red">Xie, S.-P. et al. Global Warming Pattern Formation: Sea Surface Temperature and Rainfall*. J Climate 23, 966–986 (2010).</span></h2><p><img src="https://p.ipic.vip/lu3ulv.jpg" alt="Screen Shot 2022-09-05 at 15.44.21"></p>
<ul>
<li><span style="color:green">赤道印度洋：东风异常、温跃层变浅、东部增暖减弱. </span></li>
<li><span style="color:green">Method: Physical background for SST pattern formation. </span></li>
</ul>
]]></content>
      <categories>
        <category>ReadCube</category>
      </categories>
  </entry>
  <entry>
    <title>AI for AtmoSci</title>
    <url>/2023/01/01/ReadCube/AI%20for%20AtmoSci/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="AI-for-Weather-Prediction"><a href="#AI-for-Weather-Prediction" class="headerlink" title="AI for Weather Prediction"></a>AI for Weather Prediction</h2><h4 id="Zhang-Y-et-al-Skilful-nowcasting-of-extreme-precipitation-with-NowcastNet-Nature-1–7-2023-doi-10-1038-x2F-s41586-023-06184-4"><a href="#Zhang-Y-et-al-Skilful-nowcasting-of-extreme-precipitation-with-NowcastNet-Nature-1–7-2023-doi-10-1038-x2F-s41586-023-06184-4" class="headerlink" title="Zhang, Y. et al. Skilful nowcasting of extreme precipitation with NowcastNet. Nature 1–7 (2023) doi:10.1038&#x2F;s41586-023-06184-4."></a><span style="color:red">Zhang, Y. <em>et al.</em> Skilful nowcasting of extreme precipitation with NowcastNet. <em>Nature</em> 1–7 (2023) doi:10.1038&#x2F;s41586-023-06184-4.</span></h4><p>This paper presents NowcastNet, a new model for precipitation nowcasting that combines physical evolution schemes with conditional deep learning. The key points are:</p>
<ul>
<li><p>Nowcasting refers to very short-term weather forecasting, from the present up to 6 hours ahead, at high spatial and temporal resolution. It is important for predicting extreme weather events like heavy rainfall. </p>
</li>
<li><p>Existing physics-based numerical weather prediction models struggle to capture small-scale convective processes. Deep learning models like generative model of radar (DGMR) can generate realistic precipitation patterns but may produce unnatural motion and intensity. </p>
</li>
<li><p>NowcastNet combines an advection-based evolution network that obeys physical conservation laws, with a conditional generative network that adds convective details. The two components are fused using a novel spatially adaptive normalization technique.</p>
</li>
<li><p>NowcastNet was evaluated on radar data from the US and China. In a blinded test, expert meteorologists ranked NowcastNet as the best model in 71% of cases. Quantitative metrics also showed improved performance compared to baselines.</p>
</li>
<li><p>NowcastNet produced more accurate precipitation nowcasts up to 3 hours ahead, especially for extreme events with heavy rainfall, which are difficult to predict with other methods.</p>
</li>
</ul>
<p>In summary, NowcastNet advances precipitation nowcasting by integrating physical and deep learning approaches in an end-to-end differentiable framework optimized for forecast skill. The unified model outperforms previous methods on challenging real-world weather events.</p>
]]></content>
      <categories>
        <category>ReadCube</category>
      </categories>
  </entry>
  <entry>
    <title>Letters</title>
    <url>/2022/08/01/ReadCube/Letters/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Hsu-C-DeMott-C-A-Branson-M-D-Eyre-J-R-amp-Zeng-X-Ocean-Surface-Flux-Algorithm-Effects-on-Tropical-Indo‐Pacific-Intraseasonal-Precipitation-Geophys-Res-Lett-49-e2021GL096968-2022"><a href="#Hsu-C-DeMott-C-A-Branson-M-D-Eyre-J-R-amp-Zeng-X-Ocean-Surface-Flux-Algorithm-Effects-on-Tropical-Indo‐Pacific-Intraseasonal-Precipitation-Geophys-Res-Lett-49-e2021GL096968-2022" class="headerlink" title="Hsu, C., DeMott, C. A., Branson, M. D., Eyre, J. R. &amp; Zeng, X. Ocean Surface Flux Algorithm Effects on Tropical Indo‐Pacific Intraseasonal Precipitation. Geophys Res Lett 49, e2021GL096968 (2022)."></a><span style="color:red">Hsu, C., DeMott, C. A., Branson, M. D., Eyre, J. R. &amp; Zeng, X. Ocean Surface Flux Algorithm Effects on Tropical Indo‐Pacific Intraseasonal Precipitation. Geophys Res Lett 49, e2021GL096968 (2022).</span></h2><p><img src="https://p.ipic.vip/z4nnj0.png" alt="Screenshot 2022-12-30 at 10.08.59"></p>
<h2 id="Zhang-L-et-al-Pacific-Warming-Pattern-Diversity-Modulated-by-Indo‐Pacific-Sea-Surface-Temperature-Gradient-Geophys-Res-Lett-48-2021"><a href="#Zhang-L-et-al-Pacific-Warming-Pattern-Diversity-Modulated-by-Indo‐Pacific-Sea-Surface-Temperature-Gradient-Geophys-Res-Lett-48-2021" class="headerlink" title="Zhang, L. et al. Pacific Warming Pattern Diversity Modulated by Indo‐Pacific Sea Surface Temperature Gradient. Geophys Res Lett 48, (2021)."></a><span style="color:red">Zhang, L. et al. Pacific Warming Pattern Diversity Modulated by Indo‐Pacific Sea Surface Temperature Gradient. Geophys Res Lett 48, (2021).</span></h2><p><img src="https://p.ipic.vip/wqlqif.png" alt="Screenshot 2022-12-30 at 10.10.11"></p>
]]></content>
      <categories>
        <category>ReadCube</category>
      </categories>
  </entry>
  <entry>
    <title>Nature Climate Change</title>
    <url>/2022/06/01/ReadCube/Nature%20Climate%20Change/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Li-J-Roughan-M-amp-Kerry-C-Drivers-of-ocean-warming-in-the-western-boundary-currents-of-the-Southern-Hemisphere-Nat-Clim-Change-12-901–909-2022"><a href="#Li-J-Roughan-M-amp-Kerry-C-Drivers-of-ocean-warming-in-the-western-boundary-currents-of-the-Southern-Hemisphere-Nat-Clim-Change-12-901–909-2022" class="headerlink" title="Li, J., Roughan, M. &amp; Kerry, C. Drivers of ocean warming in the western boundary currents of the Southern Hemisphere. Nat Clim Change 12, 901–909 (2022)."></a><span style="color:red">Li, J., Roughan, M. &amp; Kerry, C. Drivers of ocean warming in the western boundary currents of the Southern Hemisphere. Nat Clim Change 12, 901–909 (2022).</span></h2><p><img src="https://p.ipic.vip/nr94o1.jpg" alt="Screen Shot 2022-10-13 at 09.50.57"></p>
<ul>
<li><span style="color:green">南半球西边界流向极地扩展但强度没有变化，将更多的热量传输到延伸体区域</span>。</li>
</ul>
<h2 id="Beech-N-et-al-Long-term-evolution-of-ocean-eddy-activity-in-a-warming-world-Nat-Clim-Change-12-910–917-2022"><a href="#Beech-N-et-al-Long-term-evolution-of-ocean-eddy-activity-in-a-warming-world-Nat-Clim-Change-12-910–917-2022" class="headerlink" title="Beech, N. et al. Long-term evolution of ocean eddy activity in a warming world. Nat Clim Change 12, 910–917 (2022)."></a><span style="color:red">Beech, N. et al. Long-term evolution of ocean eddy activity in a warming world. Nat Clim Change 12, 910–917 (2022).</span></h2><p><img src="https://p.ipic.vip/xqbr8x.jpg" alt="Screen Shot 2022-10-13 at 12.10.21"></p>
<ul>
<li><span style="color:green">在人类活动影响下，涡动能在大多数涡旋活跃的区域有向极地扩展的趋势，强度除Gulf Stream外均有增强。机制与AMO减弱，Agulhas leakage增强，以及南半球西风增强有关。</span></li>
</ul>
<h2 id="Chung-E-S-et-al-Reconciling-opposing-Walker-circulation-trends-in-observations-and-model-projections-Nat-Clim-Change-9-405–412-2019"><a href="#Chung-E-S-et-al-Reconciling-opposing-Walker-circulation-trends-in-observations-and-model-projections-Nat-Clim-Change-9-405–412-2019" class="headerlink" title="Chung, E.-S. et al. Reconciling opposing Walker circulation trends in observations and model projections. Nat Clim Change 9, 405–412 (2019). "></a><span style="color:red">Chung, E.-S. <em>et al.</em> Reconciling opposing Walker circulation trends in observations and model projections. <em>Nat Clim Change</em> <strong>9</strong>, 405–412 (2019). </span></h2><p><img src="https://p.ipic.vip/8yukxg.jpg" alt="Screen Shot 2022-10-13 at 12.11.23"></p>
<ul>
<li><span style="color:green">历史观测中PWC在增强，但模式中在减弱：internal variability 在历史时期变率中的重要性。</span></li>
</ul>
]]></content>
      <categories>
        <category>ReadCube</category>
      </categories>
  </entry>
  <entry>
    <title>Pictures</title>
    <url>/2022/07/01/ReadCube/Pictures/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="ENSO-related"><a href="#ENSO-related" class="headerlink" title="ENSO related"></a>ENSO related</h1><ul>
<li>Lin, J. &amp; Qian, T. A New Picture of the Global Impacts of El Nino-Southern Oscillation. <em>Sci Rep-uk</em> <strong>9</strong>, 17543 (2019).</li>
</ul>
<p><img src="https://p.ipic.vip/wwnp4r.jpg" alt="41598_2019_54090_Fig4_HTML"></p>
<p>The new schematic of global impacts of ENSO during its whole lifecycle. Red shadings represent significant temperature anomalies, while blue clouds denote significant precipitation anomalies. Arrows denote the time lag of maximum anomalies with respect to Nino3.4 SST anomaly. Phase clock is shown under the schematic. The interval of background topography contours is 1000 m.</p>
<h1 id="Paleoclimatology"><a href="#Paleoclimatology" class="headerlink" title="Paleoclimatology"></a>Paleoclimatology</h1><ul>
<li>Zhu, F. <em>et al.</em> A re-appraisal of the ENSO response to volcanism with paleoclimate data assimilation. <em>Nat Commun</em> <strong>13</strong>, 747 (2022).</li>
</ul>
<p><img src="https://p.ipic.vip/fiv6x4.png" alt="Fig. 2"></p>
<p><strong>a</strong> The 22 largest eruption events, defined as a volcanic stratospheric sulfur injection (VSSI) greater than 6 according to eVolv2k version 3<a href="https://www.nature.com/articles/s41467-022-28210-1#ref-CR45">45</a> and Toohey et al.<a href="https://www.nature.com/articles/s41467-022-28210-1#ref-CR46">46</a>. The 13 events sampled by the Palmyra coral record<a href="https://www.nature.com/articles/s41467-022-28210-1#ref-CR27">27</a>,<a href="https://www.nature.com/articles/s41467-022-28210-1#ref-CR28">28</a> are colored in black, while other events are colored in gray. <strong>b</strong>–<strong>d</strong> Niño 3.4 reconstructions over the 1100–2000 CE period estimated with the Last Millennium Reanalysis (LMR) framework<a href="https://www.nature.com/articles/s41467-022-28210-1#ref-CR31">31</a>,<a href="https://www.nature.com/articles/s41467-022-28210-1#ref-CR32">32</a>. For each reconstruction, dark shading denotes the interquartile range, while light shading denotes the central 95% region (2.5% to 97.5% quantiles).</p>
<ul>
<li>Lu, Z., Liu, Z., Zhu, J. &amp; Cobb, K. M. A Review of Paleo El Niño-Southern Oscillation. Atmosphere-basel 9, 130 (2018).</li>
</ul>
<p><img src="https://p.ipic.vip/80zcvc.png" alt="Screenshot 2023-03-16 at 16.20.35"></p>
<p><img src="https://p.ipic.vip/czjijs.png" alt="Screenshot 2023-03-16 at 16.21.04"></p>
]]></content>
      <categories>
        <category>ReadCube</category>
      </categories>
  </entry>
  <entry>
    <title>Multi-year ENSO</title>
    <url>/2023/01/01/ReadCube/Multi-year%20ENSO/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="DiNezio-P-N-amp-Deser-C-Nonlinear-Controls-on-the-Persistence-of-La-Nina-J-Clim-27-7335–7355-2014"><a href="#DiNezio-P-N-amp-Deser-C-Nonlinear-Controls-on-the-Persistence-of-La-Nina-J-Clim-27-7335–7355-2014" class="headerlink" title="DiNezio, P. N. &amp; Deser, C. Nonlinear Controls on the Persistence of La Niña*. J. Clim. 27, 7335–7355 (2014).    "></a><span style="color:red">DiNezio, P. N. &amp; Deser, C. Nonlinear Controls on the Persistence of La Niña*. <em>J. Clim.</em> <strong>27</strong>, 7335–7355 (2014).    </span></h4><p>观测到的拉尼娜现象中有很大一部分（35%-50%）持续两年或更长时间，而绝大多数厄尔尼诺现象持续一年。在这里，作者分析了CCSM4中导致拉尼娜现象持续多年的非线性过程。CCSM4耦合模式真实地模拟了拉尼娜和厄尔尼诺事件的不对称持续时间。作者建立了ENSO的非线性延迟振荡模型NDO，以探索控制拉尼娜持续时间的机制。NDO包括来自CCSM4热量收支相关的非线性和季节性反馈，使其能够模拟与CCSM4定量一致的关键ENSO特。</p>
<p>NDO的敏感性实验表明，延迟温跃层反馈中的非线性是控制拉尼娜事件持续时间的唯一过程。作者的研究结果表明，随着拉尼娜事件的增强，延迟的温跃层响应并没有按比例增加。这种非线性源于两个过程：1）风对海面温度异常的响应；2）温跃层深度异常影响混合层底部温度的能力。因此，强拉尼娜现象需要温跃层保持更深的时间超过1年，才能使SST恢复到中性。海洋再分析数据显示了这种温跃层非线性的证据，表明这一过程自然界中可能同样发挥作用。</p>
<h4 id="Luo-J-J-Liu-G-Hendon-H-Alves-O-amp-Yamagata-T-Inter-basin-sources-for-two-year-predictability-of-the-multi-year-La-Nina-event-in-2010–2012-Sci-Rep-uk-7-2276-2017"><a href="#Luo-J-J-Liu-G-Hendon-H-Alves-O-amp-Yamagata-T-Inter-basin-sources-for-two-year-predictability-of-the-multi-year-La-Nina-event-in-2010–2012-Sci-Rep-uk-7-2276-2017" class="headerlink" title="Luo, J.-J., Liu, G., Hendon, H., Alves, O. &amp; Yamagata, T. Inter-basin sources for two-year predictability of the multi-year La Niña event in 2010–2012. Sci Rep-uk 7, 2276 (2017).      "></a><span style="color:red">Luo, J.-J., Liu, G., Hendon, H., Alves, O. &amp; Yamagata, T. Inter-basin sources for two-year predictability of the multi-year La Niña event in 2010–2012. <em>Sci Rep-uk</em> <strong>7</strong>, 2276 (2017).      </span></h4><p>多年的拉尼娜现象往往会在全球土地上引发持续的凉爽潮湿气候，改变并在某些情况下减轻区域气候变暖的影响。最近的一次事件从2010年年中持续到2012年初，在世界许多陆地地区，特别是澳大利亚，带来了强烈的降水。这导致全球平均海平面显著下降，尽管背景呈上升趋势。尽管由于海洋-大气相互作用减弱，2002-2014年厄尔尼诺-南方涛动的可预测性有所下降，但一些耦合模型出人意料地预测了这一拉尼娜事件将持续两年。然而，多年拉尼娜现象具有高度可预测性的根本机制仍不清楚。基于气候模型的实验证明了对拉尼娜现象的两年预测是成功的，这支持了大西洋和印度洋温暖的海面温度（SST）异常会加剧赤道太平洋中部的东风，并在很大程度上有助于2010-2012年拉尼娜现象发生和两年可预测性的假设。研究结果强调了大西洋-印度洋海温增加对多年拉尼娜现象在全球变暖下的可预测性的重要性。</p>
<h4 id="Wu-X-Okumura-Y-M-amp-DiNezio-P-N-What-Controls-the-Duration-of-El-Nino-and-La-Nina-Events-What-Controls-the-Duration-of-El-Nino-and-La-Nina-Events-J-Climate-32-5941–5965-2019"><a href="#Wu-X-Okumura-Y-M-amp-DiNezio-P-N-What-Controls-the-Duration-of-El-Nino-and-La-Nina-Events-What-Controls-the-Duration-of-El-Nino-and-La-Nina-Events-J-Climate-32-5941–5965-2019" class="headerlink" title="Wu, X., Okumura, Y. M. &amp; DiNezio, P. N. What Controls the Duration of El Niño and La Niña Events? What Controls the Duration of El Niño and La Niña Events? J Climate 32, 5941–5965 (2019).  "></a><span style="color:red">Wu, X., Okumura, Y. M. &amp; DiNezio, P. N. What Controls the Duration of El Niño and La Niña Events? What Controls the Duration of El Niño and La Niña Events? <em>J Climate</em> <strong>32</strong>, 5941–5965 (2019).  </span></h4><p>厄尔尼诺和拉尼娜现象的时间演变因事件而异。为了了解控制厄尔尼诺和拉尼娜事件持续时间的动力学过程，分析了一组观测数据和CESM1的长期模拟试验。观测和模型分析都表明，厄尔尼诺现象的持续时间受到事件开始时间影响。早期发展的厄尔尼诺事件往往在成熟期后迅速结束，因为海洋负反馈过程以及热带大西洋和印度洋对热带太平洋变暖的快速调整均相应提前。另一方面，拉尼娜事件的持续时间受到上一年度暖事件振幅的强烈影响。由于赤道海洋热量含量的大量释放以及热带大西洋和印度洋对热带太平洋降温的延迟调整，拉尼娜事件之前的强暖事件往往会持续到第二年。对于厄尔尼诺和拉尼娜现象，跨海盆SST的调整减少了热带太平洋与其他海盆之间的异常SST梯度，并削弱了赤道太平洋西部的表面风异常，从而加速了事件的终止。ENSO动力学之外的其他因素，如热带大西洋和印度洋的耦合变化以及北太平洋的大气变化，也有助于造成事件持续时间的多样性。</p>
<p><img src="https://p.ipic.vip/grmmay.png" alt="Screenshot 2023-07-10 at 16.31.16"></p>
<p><img src="https://p.ipic.vip/jxgo5u.png" alt="Screenshot 2023-07-10 at 16.31.54"></p>
<h4 id="Park-J-et-al-Mid‐latitude-leading-double‐dip-La-Nina-Int-J-Climatol-41-E1353–E1370-2021"><a href="#Park-J-et-al-Mid‐latitude-leading-double‐dip-La-Nina-Int-J-Climatol-41-E1353–E1370-2021" class="headerlink" title="Park, J. et al. Mid‐latitude leading double‐dip La Niña. Int J Climatol 41, E1353–E1370 (2021).        "></a><span style="color:red">Park, J. <em>et al.</em> Mid‐latitude leading double‐dip La Niña. <em>Int J Climatol</em> <strong>41</strong>, E1353–E1370 (2021).        </span></h4><p>了解厄尔尼诺和拉尼娜事件之间的演变不对称性具有挑战性。与厄尔尼诺不同，大多数拉尼娜事件的特点是二次探底降温（又称多年拉尼娜）。在此，我们通过分析观测和气候模型数据集，研究了单年和多年拉尼娜事件的差异。单年拉尼娜事件往往在热带地区从中太平洋型厄尔尼诺（Niño 4&gt;Niño 3）发展而来，且发展得得很窄，而多年拉尼娜事件则往往起源于东太平洋型厄尔尼诺，并通过太平洋经向模式与中纬度地区有很好的联系，这导致了离赤道低层大气反气旋环流在经向上更宽的响应。由于反气旋环流通过Sverdrup输送控制着赤道上层海洋热量的补给量，对于一年的拉尼娜现象，由于反气旋循环较窄而产生的有效海洋补给会导致向厄尔尼诺现象的快速转变或拉尼娜现象的快速终止。相比之下，对于多年的拉尼娜现象，较弱的再充电导致表面冷却持续存在，导致次年再次出现拉尼娜现象。</p>
<p><img src="https://p.ipic.vip/79jvjf.png" alt="Screenshot 2023-07-10 at 15.40.29"></p>
<h4 id="Sanchez-S-C-amp-Karnauskas-K-B-Diversity-in-the-Persistence-of-El-Nino-Events-Over-the-Last-Millennium-Geophys-Res-Lett-48-2021"><a href="#Sanchez-S-C-amp-Karnauskas-K-B-Diversity-in-the-Persistence-of-El-Nino-Events-Over-the-Last-Millennium-Geophys-Res-Lett-48-2021" class="headerlink" title="Sanchez, S. C. &amp; Karnauskas, K. B. Diversity in the Persistence of El Niño Events Over the Last Millennium. Geophys Res Lett 48, (2021).          "></a><span style="color:red">Sanchez, S. C. &amp; Karnauskas, K. B. Diversity in the Persistence of El Niño Events Over the Last Millennium. <em>Geophys Res Lett</em> <strong>48</strong>, (2021).          </span></h4><p>ENSO是一种具有深远影响的气候内部变率。在这里，我们考虑了ENSO的一个重要方面：厄尔尼诺事件持续时间的多样性。我们在仪器观测、一套上千年的全球气候模型模拟和古气候研究中研究了多年厄尔尼诺事件的发生。我们在所有考虑的数据来源中都发现了多年厄尔尼诺事件的证据，尽管这些事件在各个数据集之间和频率变化很大。尽管在相对较短的卫星观测年代很少发生，但在观测和大多数模式中，多年厄尔尼诺事件通常与最温暖的厄尔尼诺事件有关。此外，我们还表明，多年厄尔尼诺事件加剧了相关水文气候异常的持续性，这可能会加剧对热带太平洋及其外部区域脆弱经济和生态系统的影响。</p>
<p>The PMIP3 Past1000 experiments are a unique ensemble of experiments, each simulation was forced with the expected constraints arising from changes in volcanic, solar, land use change,orbital, and greenhouse gas forcing over the years 850–1850 (CMIP5&#x2F;PMIP3 Past1000 experiments, Bracon-not et al., 2012). </p>
<p>The Line Island coralarchives are the only long coral archives sourced directly from the central equatorial Pacific spanning the last millennium.</p>
<p>While coral archives allow us to extend analysis beyond the instrumental era, we acknowledge three caveatsin this approach: (a) coral archives record climate variability from a single location, rather than the areaaveraged region (e.g., the Niño 3.4 index), and as such, the archives may be subject to local variability (b) the coral archives record variations in skeletal δ18O, a variable directly influenced by SST, but not identical,and (c) we impose a more rigorous threshold to the coral archives in identifying multi-year ENSO activity. As such, we do not expect the coral δ 18O index to be identical to instrumental Niño 3.4 variability. It is nonetheless a robust and indispensable perspective on past ENSO variability。</p>
<p><img src="https://p.ipic.vip/2vvfce.png" alt="Screenshot 2023-07-10 at 20.41.30"></p>
<p>In 5 of the 11 models considered, &gt;75% of the largest2% of total events are multi-year events. In both instrumental observations and paleoclimate archives, thevast majority of the largest 2% of events were multi-year phenomena. It is therefore possible that a physicalmechanism unique to formation of double events encourages the amplified growth of such events.</p>
<h4 id="Kim-J-W-amp-Yu-J-Y-Single-and-multi-year-ENSO-events-controlled-by-pantropical-climate-interactions-Npj-Clim-Atmospheric-Sci-5-88-2022"><a href="#Kim-J-W-amp-Yu-J-Y-Single-and-multi-year-ENSO-events-controlled-by-pantropical-climate-interactions-Npj-Clim-Atmospheric-Sci-5-88-2022" class="headerlink" title="Kim, J.-W. &amp; Yu, J.-Y. Single- and multi-year ENSO events controlled by pantropical climate interactions. Npj Clim Atmospheric Sci 5, 88 (2022).        "></a><span style="color:red">Kim, J.-W. &amp; Yu, J.-Y. Single- and multi-year ENSO events controlled by pantropical climate interactions. <em>Npj Clim Atmospheric Sci</em> <strong>5</strong>, 88 (2022).        </span></h4><p>为了更好地理解观测到的ENSO事件的不同时间演变，本研究在长达2200年的CESM1中考察了类似事件。结果表明，海盆间或海盆内相互作用（统称为泛热带气候相互作用）的选择性激活控制着ENSO的演化模式。当ENSO优先激活与热带印度洋和&#x2F;或大西洋的海盆间相互作用时，它将负反馈引入ENSO，导致单年演变。当ENSO优先激活与副热带北太平洋的海盆间相互作用时，它会引起正反馈，产生多年演变。确定了三个关键因素（发展季节强度、发生前的太平洋条件和最大海温异常位置）及其阈值，这三个因素决定了海盆间或海盆内的相互作用是否被激活，以及一个事件是否会成为单一或多年事件。通过加入泛热带气候相互作用的调控作用，为预测ENSO的演变模式提供了一种方法。</p>
<p><img src="https://p.ipic.vip/piqf40.png" alt="Screenshot 2023-07-10 at 15.59.48"></p>
<h4 id="Ding-R-et-al-Multi-year-El-Nino-events-tied-to-the-North-Pacific-Oscillation-Nat-Commun-13-3871-2022"><a href="#Ding-R-et-al-Multi-year-El-Nino-events-tied-to-the-North-Pacific-Oscillation-Nat-Commun-13-3871-2022" class="headerlink" title="Ding, R. et al. Multi-year El Niño events tied to the North Pacific Oscillation. Nat Commun 13, 3871 (2022).       "></a><span style="color:red">Ding, R. <em>et al.</em> Multi-year El Niño events tied to the North Pacific Oscillation. <em>Nat Commun</em> <strong>13</strong>, 3871 (2022).       </span></h4><p>多年厄尔尼诺事件在全球范围内引发严重和持续的洪水和干旱，具有重大的社会经济影响，但其长期持续的原因仍不完全清楚。在这里，我们提出了热带和温带之间的双向反馈机制，认为与北太平洋涛动（NPO）相关的温带大气变化是多年厄尔尼诺事件的关键来源。北方冬季的NPO可能会在随后的冬季引发中太平洋厄尔尼诺现象，这会激发大气与温带的遥相关，从而重新激发NPO的可变性，然后在接下来的冬季再次引发另一次厄尔尼诺事件，最终导致持续的类厄尔尼诺状态。模式实验中，在大气环流中同化了NPO强迫，再现了观测到的NPO强迫与多年厄尔尼诺事件之间的联系。CMIP5和CMIP6的模式未来预测表明，未来NPO变率可能增强，从而可以预测多年厄尔尼诺事件将更加频繁。我们得出的结论是，正确考虑NPO对厄尔尼诺事件演变的影响可能会改善多年厄尔尼诺的预测。</p>
<p><img src="https://p.ipic.vip/mp2nmw.png" alt="Screenshot 2023-07-10 at 16.29.09"></p>
<p><img src="https://p.ipic.vip/74emki.png" alt="Screenshot 2023-07-10 at 16.28.41"></p>
]]></content>
      <categories>
        <category>ReadCube</category>
      </categories>
  </entry>
  <entry>
    <title>Nature Geoscience</title>
    <url>/2022/06/01/ReadCube/Nature%20Geoscience/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Hu-K-Huang-G-Huang-P-Kosaka-Y-amp-Xie-S-P-Intensification-of-El-Nino-induced-atmospheric-anomalies-under-greenhouse-warming-Nat-Geosci-14-377–382-2021"><a href="#Hu-K-Huang-G-Huang-P-Kosaka-Y-amp-Xie-S-P-Intensification-of-El-Nino-induced-atmospheric-anomalies-under-greenhouse-warming-Nat-Geosci-14-377–382-2021" class="headerlink" title="Hu, K., Huang, G., Huang, P., Kosaka, Y. &amp; Xie, S.-P. Intensification of El Niño-induced atmospheric anomalies under greenhouse warming. Nat Geosci 14, 377–382 (2021). "></a><span style="color:red">Hu, K., Huang, G., Huang, P., Kosaka, Y. &amp; Xie, S.-P. Intensification of El Niño-induced atmospheric anomalies under greenhouse warming. <em>Nat Geosci</em> <strong>14</strong>, 377–382 (2021). </span></h2><p><img src="https://p.ipic.vip/zi370v.jpg" alt="Screen Shot 2022-10-14 at 15.28.44"></p>
<ul>
<li><span style="color:green">全球变暖下，受Clausis-Clapeyron关系的制约，大气的持水性增加，使得即使ENSO振幅不变的情况下产生的对流层上层温度、位势高度、热带湿度、副热带急流、热带太平洋降水的异常响应将更显著。</span></li>
</ul>
<h2 id="Cai-W-et-al-Projected-response-of-the-Indian-Ocean-Dipole-to-greenhouse-warming-Nat-Geosci-6-999–1007-2013"><a href="#Cai-W-et-al-Projected-response-of-the-Indian-Ocean-Dipole-to-greenhouse-warming-Nat-Geosci-6-999–1007-2013" class="headerlink" title="Cai, W. et al. Projected response of the Indian Ocean Dipole to greenhouse warming. Nat Geosci 6, 999–1007 (2013)."></a><span style="color:red">Cai, W. <em>et al.</em> Projected response of the Indian Ocean Dipole to greenhouse warming. <em>Nat Geosci</em> <strong>6</strong>, 999–1007 (2013).</span></h2><p><img src="https://p.ipic.vip/ntmvcp.jpg" alt="Screen Shot 2022-09-05 at 15.22.16"></p>
<ul>
<li><span style="color:green">IO平均态的变化类似于IO的正位相：WIO增暖快于EIO，赤道温跃层变浅。</span></li>
</ul>
]]></content>
      <categories>
        <category>ReadCube</category>
      </categories>
  </entry>
  <entry>
    <title>Nature</title>
    <url>/2022/06/01/ReadCube/Nature/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Sallee-J-B-et-al-Summertime-increases-in-upper-ocean-stratification-and-mixed-layer-depth-Nature-591-592–598-2021"><a href="#Sallee-J-B-et-al-Summertime-increases-in-upper-ocean-stratification-and-mixed-layer-depth-Nature-591-592–598-2021" class="headerlink" title=" Sallée, J.-B. et al. Summertime increases in upper-ocean stratification and mixed-layer depth. Nature 591, 592–598 (2021).  "></a><span style="color:red"> Sallée, J.-B. <em>et al.</em> Summertime increases in upper-ocean stratification and mixed-layer depth. <em>Nature</em> <strong>591</strong>, 592–598 (2021).  </span></h2><p><img src="https://p.ipic.vip/xlg40j.png" alt="Screenshot 2022-12-30 at 10.12.12"></p>
<ul>
<li><p><span style="color:green">1970至2018年，海洋混合成加深，且在夏季更为明显。</span></p>
</li>
<li><p><span style="color:green">一方面海洋的稳定度在加深（表面增暖，高纬海表淡化），另一方面本文发现夏季混合层加深，考虑与upper-ocean turbulence的增强有关。</span></p>
</li>
</ul>
<h2 id="Vecchi-G-A-et-al-Weakening-of-tropical-Pacific-atmospheric-circulation-due-to-anthropogenic-forcing-Nature-441-73–76-2006"><a href="#Vecchi-G-A-et-al-Weakening-of-tropical-Pacific-atmospheric-circulation-due-to-anthropogenic-forcing-Nature-441-73–76-2006" class="headerlink" title="Vecchi, G. A. et al. Weakening of tropical Pacific atmospheric circulation due to anthropogenic forcing. Nature 441, 73–76 (2006)."></a><span style="color:red">Vecchi, G. A. et al. Weakening of tropical Pacific atmospheric circulation due to anthropogenic forcing. Nature 441, 73–76 (2006).</span></h2><p><img src="https://p.ipic.vip/s5uu30.png" alt="Screenshot 2022-12-30 at 10.11.26"></p>
]]></content>
      <categories>
        <category>ReadCube</category>
      </categories>
  </entry>
  <entry>
    <title>Reviews</title>
    <url>/2022/07/01/ReadCube/Reviews/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Tang-T-Luo-J-J-Peng-K-Qi-L-amp-Tang-S-Over-projected-pacific-warming-and-extreme-El-nino-frequency-due-to-CMIP5-common-biases-Natl-Sci-Rev-8-nwab056-2021"><a href="#Tang-T-Luo-J-J-Peng-K-Qi-L-amp-Tang-S-Over-projected-pacific-warming-and-extreme-El-nino-frequency-due-to-CMIP5-common-biases-Natl-Sci-Rev-8-nwab056-2021" class="headerlink" title="Tang, T., Luo, J.-J., Peng, K., Qi, L. &amp; Tang, S. Over-projected pacific warming and extreme El niño frequency due to CMIP5 common biases. Natl Sci Rev 8, nwab056- (2021). "></a><span style="color:red">Tang, T., Luo, J.-J., Peng, K., Qi, L. &amp; Tang, S. Over-projected pacific warming and extreme El niño frequency due to CMIP5 common biases. <em>Natl Sci Rev</em> <strong>8</strong>, nwab056- (2021). </span></h2><p><img src="https://p.ipic.vip/ygx8va.jpg" alt="Screen Shot 2022-10-12 at 14.53.52"></p>
<ul>
<li><span style="color:green">当消除了模式偏差的影响后，模式预测的未来海温变化呈现La Niña 而非El Niño 型</span>.</li>
</ul>
<h2 id="Wang-C-A-review-of-ENSO-theories-Natl-Sci-Rev-5-813–825-2018"><a href="#Wang-C-A-review-of-ENSO-theories-Natl-Sci-Rev-5-813–825-2018" class="headerlink" title="Wang, C. A review of ENSO theories. Natl Sci Rev 5, 813–825 (2018)."></a><span style="color:red">Wang, C. A review of ENSO theories. Natl Sci Rev 5, 813–825 (2018).</span></h2><p><img src="https://p.ipic.vip/92sogr.jpg" alt="Screen Shot 2022-09-06 at 11.47.15"></p>
<h2 id="Deser-C-Alexander-M-A-Xie-S-P-amp-Phillips-A-S-Sea-Surface-Temperature-Variability-Patterns-and-Mechanisms-Annu-Rev-Mar-Sci-2-115–143-2010"><a href="#Deser-C-Alexander-M-A-Xie-S-P-amp-Phillips-A-S-Sea-Surface-Temperature-Variability-Patterns-and-Mechanisms-Annu-Rev-Mar-Sci-2-115–143-2010" class="headerlink" title="Deser, C., Alexander, M. A., Xie, S.-P. &amp; Phillips, A. S. Sea Surface Temperature Variability: Patterns and Mechanisms. Annu Rev Mar Sci 2, 115–143 (2010)."></a><span style="color:red">Deser, C., Alexander, M. A., Xie, S.-P. &amp; Phillips, A. S. Sea Surface Temperature Variability: Patterns and Mechanisms. Annu Rev Mar Sci 2, 115–143 (2010).</span></h2><p><img src="https://p.ipic.vip/zgjaqo.jpg" alt="Screen Shot 2022-09-06 at 11.43.15"></p>
]]></content>
      <categories>
        <category>ReadCube</category>
      </categories>
  </entry>
  <entry>
    <title>2023 News</title>
    <url>/2023/12/01/Recharge/2023%20News/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="2023-12"><a href="#2023-12" class="headerlink" title="2023-12"></a>2023-12</h2><h4 id="2023-12-29-重磅最新整理！地学类-SCI-期刊-1-区及影响因子！"><a href="#2023-12-29-重磅最新整理！地学类-SCI-期刊-1-区及影响因子！" class="headerlink" title="2023-12-29 重磅最新整理！地学类 SCI 期刊 1 区及影响因子！"></a>2023-12-29 <a href="https://mp.weixin.qq.com/s/Qx6_91x_pwMhQDG0zREVqA">重磅最新整理！地学类 SCI 期刊 1 区及影响因子！</a></h4><h4 id="2023-12-28-GRL-利用深度学习预测中国南部夏季极端降水"><a href="#2023-12-28-GRL-利用深度学习预测中国南部夏季极端降水" class="headerlink" title="2023-12-28 GRL | 利用深度学习预测中国南部夏季极端降水"></a>2023-12-28 <a href="https://mp.weixin.qq.com/s/MZD_oh3qhcKR54NBU2XSQw">GRL | 利用深度学习预测中国南部夏季极端降水</a></h4><h4 id="2023-12-27-数据获取-下载-CMORPH-降雨数据"><a href="#2023-12-27-数据获取-下载-CMORPH-降雨数据" class="headerlink" title="2023-12-27 数据获取 | 下载 CMORPH 降雨数据"></a>2023-12-27 <a href="https://mp.weixin.qq.com/s/47cIDVs1WRobKMYTM_njqw">数据获取 | 下载 CMORPH 降雨数据</a></h4><h4 id="2023-12-27-NeuralGCM：大活来了，AI-天气预报进入下半场？"><a href="#2023-12-27-NeuralGCM：大活来了，AI-天气预报进入下半场？" class="headerlink" title="2023-12-27 NeuralGCM：大活来了，AI 天气预报进入下半场？"></a>2023-12-27 <a href="https://mp.weixin.qq.com/s/wgJHpQ0Ww_IjoTPcuoDrbQ">NeuralGCM：大活来了，AI 天气预报进入下半场？</a></h4><h4 id="2023-12-27-GRL-基于可解释神经网络的北大西洋海温多年代变率预测及机理解析"><a href="#2023-12-27-GRL-基于可解释神经网络的北大西洋海温多年代变率预测及机理解析" class="headerlink" title="2023-12-27 GRL | 基于可解释神经网络的北大西洋海温多年代变率预测及机理解析"></a>2023-12-27 <a href="https://mp.weixin.qq.com/s/utwtGkSEp7NJHXeaqCjYXQ">GRL | 基于可解释神经网络的北大西洋海温多年代变率预测及机理解析</a></h4><h4 id="2023-12-26-JAMES-利用神经网络模拟南极冰川融化对海平面影响"><a href="#2023-12-26-JAMES-利用神经网络模拟南极冰川融化对海平面影响" class="headerlink" title="2023-12-26 JAMES | 利用神经网络模拟南极冰川融化对海平面影响"></a>2023-12-26 <a href="https://mp.weixin.qq.com/s/ow-pkWODKXrV7I2gSJgCUg">JAMES | 利用神经网络模拟南极冰川融化对海平面影响</a></h4><h4 id="2023-12-22-Nature-子刊-ChatClimate-以气候科学为基础的对话式人工智能"><a href="#2023-12-22-Nature-子刊-ChatClimate-以气候科学为基础的对话式人工智能" class="headerlink" title="2023-12-22 Nature 子刊 | ChatClimate: 以气候科学为基础的对话式人工智能"></a>2023-12-22 <a href="https://mp.weixin.qq.com/s/zYNjw0NGY5s0PSVuTpaZXQ">Nature 子刊 | ChatClimate: 以气候科学为基础的对话式人工智能</a></h4><h4 id="2023-12-21-研究揭示了海洋天气与全球气候之间的联系"><a href="#2023-12-21-研究揭示了海洋天气与全球气候之间的联系" class="headerlink" title="2023-12-21 研究揭示了海洋天气与全球气候之间的联系"></a>2023-12-21 <a href="https://mp.weixin.qq.com/s/pigse3BAJapaMyzzV5rKPA">研究揭示了海洋天气与全球气候之间的联系</a></h4><h4 id="2023-12-21-Nature-子刊-基于机器学习快速预测：零碳情景下的气候变化"><a href="#2023-12-21-Nature-子刊-基于机器学习快速预测：零碳情景下的气候变化" class="headerlink" title="2023-12-21 Nature 子刊 | 基于机器学习快速预测：零碳情景下的气候变化"></a>2023-12-21 <a href="https://mp.weixin.qq.com/s/AQFmNN1WmYsfji056eUA1g">Nature 子刊 | 基于机器学习快速预测：零碳情景下的气候变化</a></h4><h4 id="2023-12-20-npj-利用机器学习从短期模拟预测气候变化的长期全球模式"><a href="#2023-12-20-npj-利用机器学习从短期模拟预测气候变化的长期全球模式" class="headerlink" title="2023-12-20 npj | 利用机器学习从短期模拟预测气候变化的长期全球模式"></a>2023-12-20 <a href="https://mp.weixin.qq.com/s/jYY4Fy0aSrI1pHYkHAJsag">npj | 利用机器学习从短期模拟预测气候变化的长期全球模式</a></h4><h4 id="2023-12-18-NeuralGCM：大活来了，AI-天气预报进入下半场？"><a href="#2023-12-18-NeuralGCM：大活来了，AI-天气预报进入下半场？" class="headerlink" title="2023-12-18 NeuralGCM：大活来了，AI 天气预报进入下半场？"></a>2023-12-18 <a href="https://mp.weixin.qq.com/s/Lyqd-7cRsouWEeTOrCtwEw">NeuralGCM：大活来了，AI 天气预报进入下半场？</a></h4><h4 id="2023-12-16-基于人工智能的高分辨率降水图"><a href="#2023-12-16-基于人工智能的高分辨率降水图" class="headerlink" title="2023-12-16 基于人工智能的高分辨率降水图"></a>2023-12-16 <a href="https://mp.weixin.qq.com/s/esiyWdFigssSbpxeThwd5w">基于人工智能的高分辨率降水图</a></h4><h4 id="2023-12-13-与气候变暖相关的北大西洋大气水汽输送贡献的预估变化"><a href="#2023-12-13-与气候变暖相关的北大西洋大气水汽输送贡献的预估变化" class="headerlink" title="2023-12-13 与气候变暖相关的北大西洋大气水汽输送贡献的预估变化"></a>2023-12-13 <a href="https://mp.weixin.qq.com/s/MPgSYgirw0i_4QeTDJq3iw">与气候变暖相关的北大西洋大气水汽输送贡献的预估变化</a></h4><h4 id="2023-12-12-GRL-利用神经网络优化季节性至年代际气候预测"><a href="#2023-12-12-GRL-利用神经网络优化季节性至年代际气候预测" class="headerlink" title="2023-12-12 GRL | 利用神经网络优化季节性至年代际气候预测"></a>2023-12-12 <a href="https://mp.weixin.qq.com/s/Hi0eXuIQuTJ0ZJ971jbP0g">GRL | 利用神经网络优化季节性至年代际气候预测</a></h4><h4 id="2023-12-12-JGR-Atmospheres-利用机器学习改善数值天气预报的短期降水预报能力"><a href="#2023-12-12-JGR-Atmospheres-利用机器学习改善数值天气预报的短期降水预报能力" class="headerlink" title="2023-12-12 JGR Atmospheres: 利用机器学习改善数值天气预报的短期降水预报能力"></a>2023-12-12 <a href="https://mp.weixin.qq.com/s/LQ5r1KuwhDSLn24TyFb6Zg">JGR Atmospheres: 利用机器学习改善数值天气预报的短期降水预报能力</a></h4><h4 id="2023-12-02-数字孪生可以帮助城市在面临高温风险时做出积极的响应措施"><a href="#2023-12-02-数字孪生可以帮助城市在面临高温风险时做出积极的响应措施" class="headerlink" title="2023-12-02 数字孪生可以帮助城市在面临高温风险时做出积极的响应措施"></a>2023-12-02 <a href="https://mp.weixin.qq.com/s/XsAXOIhypFyhfKOJYC_aeA">数字孪生可以帮助城市在面临高温风险时做出积极的响应措施</a></h4><h4 id="2023-12-02-基于深度学习的区域气候模型仿真器-一种新型混合降尺度方法的概念和首次评估"><a href="#2023-12-02-基于深度学习的区域气候模型仿真器-一种新型混合降尺度方法的概念和首次评估" class="headerlink" title="2023-12-02 基于深度学习的区域气候模型仿真器 | 一种新型混合降尺度方法的概念和首次评估"></a>2023-12-02 <a href="https://mp.weixin.qq.com/s/HxTmRzZshiiy1Ps9QwvUeA">基于深度学习的区域气候模型仿真器 | 一种新型混合降尺度方法的概念和首次评估</a></h4><h2 id="2023-11"><a href="#2023-11" class="headerlink" title="2023-11"></a>2023-11</h2><h4 id="2023-11-30-JAMES-深度学习区域气候模型仿真器：两种降尺度训练框架的比较"><a href="#2023-11-30-JAMES-深度学习区域气候模型仿真器：两种降尺度训练框架的比较" class="headerlink" title="2023-11-30 JAMES | 深度学习区域气候模型仿真器：两种降尺度训练框架的比较"></a>2023-11-30 <a href="https://mp.weixin.qq.com/s/osMceX_4KJwuxWgcGN4BLw">JAMES | 深度学习区域气候模型仿真器：两种降尺度训练框架的比较</a></h4><h4 id="2023-11-23-中国科学院李新：用“数字孪生地球”技术应对全球气候挑战"><a href="#2023-11-23-中国科学院李新：用“数字孪生地球”技术应对全球气候挑战" class="headerlink" title="2023-11-23 中国科学院李新：用“数字孪生地球”技术应对全球气候挑战"></a>2023-11-23 <a href="http://m.caijing.com.cn/api/show?contentid=4973211">中国科学院李新：用“数字孪生地球”技术应对全球气候挑战</a></h4><h4 id="2023-11-21-学习经验分享-曙光昆山超算-Pangu-气象模型运行教程"><a href="#2023-11-21-学习经验分享-曙光昆山超算-Pangu-气象模型运行教程" class="headerlink" title="2023-11-21 学习经验分享-曙光昆山超算 Pangu 气象模型运行教程"></a>2023-11-21 <a href="https://mp.weixin.qq.com/s/QXKd4OEmKW26M7Kk-YtYWQ">学习经验分享-曙光昆山超算 Pangu 气象模型运行教程</a></h4><h4 id="2023-11-17-12-月起施行！浙江新修订条例，涉及科技成果转化、人才保障等"><a href="#2023-11-17-12-月起施行！浙江新修订条例，涉及科技成果转化、人才保障等" class="headerlink" title="2023-11-17 12 月起施行！浙江新修订条例，涉及科技成果转化、人才保障等"></a>2023-11-17 <a href="https://mp.weixin.qq.com/s/BTrpLriAxK6vEBT-3MB-oQ">12 月起施行！浙江新修订条例，涉及科技成果转化、人才保障等</a></h4><h4 id="2023-11-13-未来海洋学院导师张绍晴教授团队在高效高精度海浪数值模拟研究取得新进展"><a href="#2023-11-13-未来海洋学院导师张绍晴教授团队在高效高精度海浪数值模拟研究取得新进展" class="headerlink" title="2023-11-13 未来海洋学院导师张绍晴教授团队在高效高精度海浪数值模拟研究取得新进展"></a>2023-11-13 <a href="https://mp.weixin.qq.com/s/sKyZgU1M7TVLJHHFEBXL0w">未来海洋学院导师张绍晴教授团队在高效高精度海浪数值模拟研究取得新进展</a></h4><h4 id="2023-11-10-如何预测特大洪水：使用出自水文相似地区的国际数据"><a href="#2023-11-10-如何预测特大洪水：使用出自水文相似地区的国际数据" class="headerlink" title="2023-11-10 如何预测特大洪水：使用出自水文相似地区的国际数据"></a>2023-11-10 <a href="https://mp.weixin.qq.com/s/qm8igVK2tDlNfAGL1UsPLQ">如何预测特大洪水：使用出自水文相似地区的国际数据</a></h4><h4 id="2023-11-10-机器学习-vs-数值天气预报，AI-如何改变现有的天气预报模式"><a href="#2023-11-10-机器学习-vs-数值天气预报，AI-如何改变现有的天气预报模式" class="headerlink" title="2023-11-10 机器学习 vs. 数值天气预报，AI 如何改变现有的天气预报模式"></a>2023-11-10 <a href="https://mp.weixin.qq.com/s/Z2s6DC4TvMD3ry8MHfXG3A">机器学习 vs. 数值天气预报，AI 如何改变现有的天气预报模式</a></h4><h4 id="2023-11-10-《焦点访谈》关注海洋数字孪生！南方海洋科学与工程广东省实验室（珠海）和腾讯联合打造全球首个海洋数字孪生引擎-DTO-Engine！"><a href="#2023-11-10-《焦点访谈》关注海洋数字孪生！南方海洋科学与工程广东省实验室（珠海）和腾讯联合打造全球首个海洋数字孪生引擎-DTO-Engine！" class="headerlink" title="2023-11-10 《焦点访谈》关注海洋数字孪生！南方海洋科学与工程广东省实验室（珠海）和腾讯联合打造全球首个海洋数字孪生引擎 DTO Engine！"></a>2023-11-10 <a href="https://mp.weixin.qq.com/s/Ec55MeT4oRmMuqtvqy5edg">《焦点访谈》关注海洋数字孪生！南方海洋科学与工程广东省实验室（珠海）和腾讯联合打造全球首个海洋数字孪生引擎 DTO Engine！</a></h4><h4 id="2023-11-09-正式颁奖！2022-年度海洋科学技术奖（特等奖、一等奖、二等奖）-x2F-2022-年度海洋优秀科技图书-第十一届海洋强国战略论坛在三亚开幕"><a href="#2023-11-09-正式颁奖！2022-年度海洋科学技术奖（特等奖、一等奖、二等奖）-x2F-2022-年度海洋优秀科技图书-第十一届海洋强国战略论坛在三亚开幕" class="headerlink" title="2023-11-09 正式颁奖！2022 年度海洋科学技术奖（特等奖、一等奖、二等奖）&#x2F;2022 年度海洋优秀科技图书 | 第十一届海洋强国战略论坛在三亚开幕"></a>2023-11-09 <a href="https://mp.weixin.qq.com/s/Lh63hP3PEMAds0j7L0LPaw">正式颁奖！2022 年度海洋科学技术奖（特等奖、一等奖、二等奖）&#x2F;2022 年度海洋优秀科技图书 | 第十一届海洋强国战略论坛在三亚开幕</a></h4><h4 id="2023-11-09-气候变化情景下的全球滑坡灾害人口风险评估"><a href="#2023-11-09-气候变化情景下的全球滑坡灾害人口风险评估" class="headerlink" title="2023-11-09 气候变化情景下的全球滑坡灾害人口风险评估"></a>2023-11-09 <a href="https://mp.weixin.qq.com/s/0u5n3bbHPwisnr5-bH6tfw">气候变化情景下的全球滑坡灾害人口风险评估</a></h4><h4 id="2023-11-09-买工程保险送气象服务？台州探索新模式实现三方共赢！"><a href="#2023-11-09-买工程保险送气象服务？台州探索新模式实现三方共赢！" class="headerlink" title="2023-11-09 买工程保险送气象服务？台州探索新模式实现三方共赢！"></a>2023-11-09 <a href="https://mp.weixin.qq.com/s/1SzLWwMB6_XAfJfxVUddJQ">买工程保险送气象服务？台州探索新模式实现三方共赢！</a></h4><h4 id="2023-11-08-用过-GPT-4-Turbo-以后，我们再也回不去了"><a href="#2023-11-08-用过-GPT-4-Turbo-以后，我们再也回不去了" class="headerlink" title="2023-11-08 用过 GPT-4 Turbo 以后，我们再也回不去了"></a>2023-11-08 <a href="https://mp.weixin.qq.com/s/1oGfwQFhCsiFKOqPDS6GcQ">用过 GPT-4 Turbo 以后，我们再也回不去了</a></h4><h4 id="2023-11-08-《气象科研项目谱系资源配置-2030-规划》印发实施"><a href="#2023-11-08-《气象科研项目谱系资源配置-2030-规划》印发实施" class="headerlink" title="2023-11-08 《气象科研项目谱系资源配置 2030 规划》印发实施"></a>2023-11-08 <a href="https://mp.weixin.qq.com/s/IgTmedkJgjMXkTrzwvY84A">《气象科研项目谱系资源配置 2030 规划》印发实施</a></h4><h4 id="2023-11-08-提前-24h-准确预测，谷歌团队发布新的天气预测模型-MetNet-3"><a href="#2023-11-08-提前-24h-准确预测，谷歌团队发布新的天气预测模型-MetNet-3" class="headerlink" title="2023-11-08 提前 24h 准确预测，谷歌团队发布新的天气预测模型 MetNet-3"></a>2023-11-08 <a href="https://mp.weixin.qq.com/s/Jl5NS56aGvo-FnEqueHHTw">提前 24h 准确预测，谷歌团队发布新的天气预测模型 MetNet-3</a></h4><h4 id="2023-11-05-清华大学地学系卢麾课题组发文预估中国主要城市群未来洪水风险"><a href="#2023-11-05-清华大学地学系卢麾课题组发文预估中国主要城市群未来洪水风险" class="headerlink" title="2023-11-05 清华大学地学系卢麾课题组发文预估中国主要城市群未来洪水风险"></a>2023-11-05 <a href="https://mp.weixin.qq.com/s/xn_RV5Ta1oJsNpVgxaBixw">清华大学地学系卢麾课题组发文预估中国主要城市群未来洪水风险</a></h4><h4 id="2023-11-04-WRF-大气模式与台风经验模型在超强台风“山竹”过程重构中的比较分析"><a href="#2023-11-04-WRF-大气模式与台风经验模型在超强台风“山竹”过程重构中的比较分析" class="headerlink" title="2023-11-04 WRF 大气模式与台风经验模型在超强台风“山竹”过程重构中的比较分析"></a>2023-11-04 <a href="https://mp.weixin.qq.com/s/BiPayL73bAyzYxIBq0803g">WRF 大气模式与台风经验模型在超强台风“山竹”过程重构中的比较分析</a></h4><h4 id="2023-11-01-4-个交互式天气地图可视化网站"><a href="#2023-11-01-4-个交互式天气地图可视化网站" class="headerlink" title="2023-11-01 4 个交互式天气地图可视化网站"></a>2023-11-01 <a href="https://mp.weixin.qq.com/s/3xMg15q0ZNC7PSefa_DvmA">4 个交互式天气地图可视化网站</a></h4><h2 id="2023-10"><a href="#2023-10" class="headerlink" title="2023-10"></a>2023-10</h2><h4 id="2023-10-31-珠港澳海洋风险监测预警研究中心正式揭牌成立！"><a href="#2023-10-31-珠港澳海洋风险监测预警研究中心正式揭牌成立！" class="headerlink" title="2023-10-31 珠港澳海洋风险监测预警研究中心正式揭牌成立！"></a>2023-10-31 <a href="https://mp.weixin.qq.com/s/sV1owIhT5MUzqGicwQqa2w">珠港澳海洋风险监测预警研究中心正式揭牌成立！</a></h4><h4 id="2023-10-30-全球水深地形高程数据集-ETOPO-2022"><a href="#2023-10-30-全球水深地形高程数据集-ETOPO-2022" class="headerlink" title="2023-10-30 全球水深地形高程数据集 ETOPO 2022"></a>2023-10-30 <a href="https://mp.weixin.qq.com/s/LSkNQuWsGoolqJCCOyVvyQ">全球水深地形高程数据集 ETOPO 2022</a></h4><h4 id="2023-10-31-FourCastNet：使用自适应傅里叶神经算子的全球数据驱动高分辨率预测模型"><a href="#2023-10-31-FourCastNet：使用自适应傅里叶神经算子的全球数据驱动高分辨率预测模型" class="headerlink" title="2023-10-31 FourCastNet：使用自适应傅里叶神经算子的全球数据驱动高分辨率预测模型"></a>2023-10-31 <a href="https://mp.weixin.qq.com/s/1-9Hj6KIOZjFb8OYWWwSaw">FourCastNet：使用自适应傅里叶神经算子的全球数据驱动高分辨率预测模型</a></h4><h4 id="2023-10-28-OceanGPT：海洋科学领域的大型语言模型"><a href="#2023-10-28-OceanGPT：海洋科学领域的大型语言模型" class="headerlink" title="2023-10-28 OceanGPT：海洋科学领域的大型语言模型"></a>2023-10-28 <a href="https://mp.weixin.qq.com/s/6rkR5LW6M0RYsdJZTZ6MmA">OceanGPT：海洋科学领域的大型语言模型</a></h4><h4 id="2023-10-26-地质统计方法实现：从克里金，到随机过程，到深层网络"><a href="#2023-10-26-地质统计方法实现：从克里金，到随机过程，到深层网络" class="headerlink" title="2023-10-26 地质统计方法实现：从克里金，到随机过程，到深层网络"></a>2023-10-26 <a href="https://mp.weixin.qq.com/s/ijMY6ha4gWx9XvGcBf3Okg">地质统计方法实现：从克里金，到随机过程，到深层网络</a></h4><h4 id="2023-10-25-加强量子计算与气象深度融合应用"><a href="#2023-10-25-加强量子计算与气象深度融合应用" class="headerlink" title="2023-10-25 加强量子计算与气象深度融合应用"></a>2023-10-25 <a href="https://mp.weixin.qq.com/s/Y1mr_eizeOExxRu3Og_Yvw">加强量子计算与气象深度融合应用</a></h4><h4 id="2023-10-25-我国海上风电保险发展困境及对策建议"><a href="#2023-10-25-我国海上风电保险发展困境及对策建议" class="headerlink" title="2023-10-25 我国海上风电保险发展困境及对策建议"></a>2023-10-25 <a href="https://mp.weixin.qq.com/s/VdFCppH8Xn8TkKiFRRTEaQ">我国海上风电保险发展困境及对策建议</a></h4><h4 id="2023-10-24-会议集萃-｜-南京市城市极端暴雨洪涝灾害风险评估与应对"><a href="#2023-10-24-会议集萃-｜-南京市城市极端暴雨洪涝灾害风险评估与应对" class="headerlink" title="2023-10-24 会议集萃 ｜ 南京市城市极端暴雨洪涝灾害风险评估与应对"></a>2023-10-24 <a href="https://mp.weixin.qq.com/s/N1NHi8MnTubzeOqCvYC1YA">会议集萃 ｜ 南京市城市极端暴雨洪涝灾害风险评估与应对</a></h4><h4 id="2023-10-24-华为盘古气象大模型只适用于欧洲-EC-的数据-新的研究告诉你答案"><a href="#2023-10-24-华为盘古气象大模型只适用于欧洲-EC-的数据-新的研究告诉你答案" class="headerlink" title="2023-10-24 华为盘古气象大模型只适用于欧洲 EC 的数据? 新的研究告诉你答案"></a>2023-10-24 <a href="https://mp.weixin.qq.com/s/8OacBGmw9l1fOOjbGVrhVg">华为盘古气象大模型只适用于欧洲 EC 的数据? 新的研究告诉你答案</a></h4><h4 id="2023-10-20-风暴潮、海浪灾害！舟山在行动！"><a href="#2023-10-20-风暴潮、海浪灾害！舟山在行动！" class="headerlink" title="2023-10-20 风暴潮、海浪灾害！舟山在行动！"></a>2023-10-20 <a href="https://mp.weixin.qq.com/s/s3WyZmnV5-kMDt6XJWW8oA">风暴潮、海浪灾害！舟山在行动！</a></h4><h4 id="2023-10-18-基于深度学习模型的-1-公里分辨率的近地面风速和温度的区域降尺度"><a href="#2023-10-18-基于深度学习模型的-1-公里分辨率的近地面风速和温度的区域降尺度" class="headerlink" title="2023-10-18 基于深度学习模型的 1 公里分辨率的近地面风速和温度的区域降尺度"></a>2023-10-18 <a href="https://mp.weixin.qq.com/s/03PllpbCBt7yOQq-jvOI7g">基于深度学习模型的 1 公里分辨率的近地面风速和温度的区域降尺度</a></h4><h4 id="2023-10-15-吴立新院士等：未来我国海洋科学发展需力克的重大科学问题与技术瓶颈"><a href="#2023-10-15-吴立新院士等：未来我国海洋科学发展需力克的重大科学问题与技术瓶颈" class="headerlink" title="2023-10-15 吴立新院士等：未来我国海洋科学发展需力克的重大科学问题与技术瓶颈"></a>2023-10-15 <a href="https://mp.weixin.qq.com/s/Bv9Hz2sXcl_p-FTo2lec-g">吴立新院士等：未来我国海洋科学发展需力克的重大科学问题与技术瓶颈</a></h4><h4 id="2023-10-14-华为盘古气象大模型要抢气象局饭碗？看看专家怎么说"><a href="#2023-10-14-华为盘古气象大模型要抢气象局饭碗？看看专家怎么说" class="headerlink" title="2023-10-14 华为盘古气象大模型要抢气象局饭碗？看看专家怎么说"></a>2023-10-14 <a href="https://mp.weixin.qq.com/s/RvrH6yzrEhx9hEVCFLFEZQ">华为盘古气象大模型要抢气象局饭碗？看看专家怎么说</a></h4><h4 id="2023-10-13-《风能》对话瑞科科技宋军：风能资源测量与评估需更精细化"><a href="#2023-10-13-《风能》对话瑞科科技宋军：风能资源测量与评估需更精细化" class="headerlink" title="2023-10-13 《风能》对话瑞科科技宋军：风能资源测量与评估需更精细化"></a>2023-10-13 <a href="https://mp.weixin.qq.com/s/OHNiK2BVAN6zqlkbMZHSNg">《风能》对话瑞科科技宋军：风能资源测量与评估需更精细化</a></h4><h4 id="2023-10-11-风速预报准确率对风能经济损失的影响及相关对策建议"><a href="#2023-10-11-风速预报准确率对风能经济损失的影响及相关对策建议" class="headerlink" title="2023-10-11 风速预报准确率对风能经济损失的影响及相关对策建议"></a>2023-10-11 <a href="https://mp.weixin.qq.com/s/HsOfiyZZyzyiGK2ctiBkfg">风速预报准确率对风能经济损失的影响及相关对策建议</a></h4><h4 id="2023-10-10-对话世界经济论坛大中华区主席陈黎明"><a href="#2023-10-10-对话世界经济论坛大中华区主席陈黎明" class="headerlink" title="2023-10-10 对话世界经济论坛大中华区主席陈黎明"></a>2023-10-10 <a href="https://mp.weixin.qq.com/s/vrgZ3ukRbShOlmBitmwtnQ">对话世界经济论坛大中华区主席陈黎明</a></h4><h4 id="2023-10-07-不可忽视的重拳—美国NOAA人工智能战略"><a href="#2023-10-07-不可忽视的重拳—美国NOAA人工智能战略" class="headerlink" title="2023-10-07 不可忽视的重拳—美国NOAA人工智能战略"></a>2023-10-07 <a href="https://mp.weixin.qq.com/s/LFsTjYz_wzkhy66larGPAw">不可忽视的重拳—美国NOAA人工智能战略</a></h4><h2 id="2023-09"><a href="#2023-09" class="headerlink" title="2023-09"></a>2023-09</h2><h4 id="2023-09-28-在亚运会气象保障中发挥”大作用“的”浙江1公里模式“，如何练成"><a href="#2023-09-28-在亚运会气象保障中发挥”大作用“的”浙江1公里模式“，如何练成" class="headerlink" title="2023-09-28 在亚运会气象保障中发挥”大作用“的”浙江1公里模式“，如何练成"></a>2023-09-28 <a href="https://mp.weixin.qq.com/s/DSer3VmgXI7zaz14d3Sl3Q">在亚运会气象保障中发挥”大作用“的”浙江1公里模式“，如何练成</a></h4><h4 id="2023-09-28-张良培等：遥感大模型：进展与前瞻"><a href="#2023-09-28-张良培等：遥感大模型：进展与前瞻" class="headerlink" title="2023-09-28 张良培等：遥感大模型：进展与前瞻"></a>2023-09-28 <a href="https://mp.weixin.qq.com/s/6jKDu6s3UEZ4lz3XtSIhsw">张良培等：遥感大模型：进展与前瞻</a></h4><h4 id="2023-09-28-“风·眼”1-2版本正式发布"><a href="#2023-09-28-“风·眼”1-2版本正式发布" class="headerlink" title="2023-09-28 “风·眼”1.2版本正式发布"></a>2023-09-28 <a href="https://mp.weixin.qq.com/s/H3yPhm122JKw7KO6LVCIuA">“风·眼”1.2版本正式发布</a></h4><h4 id="2023-09-28-李双林，张仲石等：数值天气预报的未来是人工智能与数学物理模型的融合"><a href="#2023-09-28-李双林，张仲石等：数值天气预报的未来是人工智能与数学物理模型的融合" class="headerlink" title="2023-09-28 李双林，张仲石等：数值天气预报的未来是人工智能与数学物理模型的融合?"></a>2023-09-28 <a href="https://mp.weixin.qq.com/s/OIj4nOwg4YoDpzogcB1euw">李双林，张仲石等：数值天气预报的未来是人工智能与数学物理模型的融合?</a></h4><h4 id="2023-09-27-NOAA发布新飓风预报模式助力大西洋飓风季精准预报"><a href="#2023-09-27-NOAA发布新飓风预报模式助力大西洋飓风季精准预报" class="headerlink" title="2023-09-27 NOAA发布新飓风预报模式助力大西洋飓风季精准预报"></a>2023-09-27 <a href="https://mp.weixin.qq.com/s/VYppe9yl4G88MbDrcPfNag">NOAA发布新飓风预报模式助力大西洋飓风季精准预报</a></h4><h4 id="2023-09-26-大气海洋资料同化科普篇"><a href="#2023-09-26-大气海洋资料同化科普篇" class="headerlink" title="2023-09-26 大气海洋资料同化科普篇"></a>2023-09-26 <a href="https://mp.weixin.qq.com/s/Xf_nOaQyenarlnj3cJp9bA">大气海洋资料同化科普篇</a></h4><h4 id="2023-09-28-卫星遥感的局限性和能力边界？"><a href="#2023-09-28-卫星遥感的局限性和能力边界？" class="headerlink" title="2023-09-28 卫星遥感的局限性和能力边界？"></a>2023-09-28 <a href="https://mp.weixin.qq.com/s/Ih7sewkTc4GtQdagPQkX1A">卫星遥感的局限性和能力边界？</a></h4><h4 id="2023-09-20-不同气候情景下-WRF-x2F-Chem-对区域气候和空气质量的模拟"><a href="#2023-09-20-不同气候情景下-WRF-x2F-Chem-对区域气候和空气质量的模拟" class="headerlink" title="2023-09-20 不同气候情景下 WRF&#x2F;Chem 对区域气候和空气质量的模拟"></a>2023-09-20 <a href="https://mp.weixin.qq.com/s/WDnlMIe93T2PpXgzcWSwtA">不同气候情景下 WRF&#x2F;Chem 对区域气候和空气质量的模拟</a></h4><h4 id="2023-09-08-法国打造地球“数字孪生体”"><a href="#2023-09-08-法国打造地球“数字孪生体”" class="headerlink" title="2023-09-08 法国打造地球“数字孪生体”"></a>2023-09-08 <a href="https://mp.weixin.qq.com/s/hLTO11QZYSfh0OlkzrefTw">法国打造地球“数字孪生体”</a></h4><h4 id="2023-09-04-盘古气象模型预测台风苏拉与台风海葵"><a href="#2023-09-04-盘古气象模型预测台风苏拉与台风海葵" class="headerlink" title="2023-09-04 盘古气象模型预测台风苏拉与台风海葵"></a>2023-09-04 <a href="https://mp.weixin.qq.com/s/baZ7pchC3L45TpT31h5ZgQ">盘古气象模型预测台风苏拉与台风海葵</a></h4><h4 id="2023-09-03-2024年国家自然基金申请重点关注：115项优先发展领域、19个学科重点支持方向"><a href="#2023-09-03-2024年国家自然基金申请重点关注：115项优先发展领域、19个学科重点支持方向" class="headerlink" title="2023-09-03 2024年国家自然基金申请重点关注：115项优先发展领域、19个学科重点支持方向"></a>2023-09-03 <a href="https://mp.weixin.qq.com/s/Ng0i18ixC5JsjcTxk8ENmQ">2024年国家自然基金申请重点关注：115项优先发展领域、19个学科重点支持方向</a></h4><h2 id="2023-08"><a href="#2023-08" class="headerlink" title="2023-08"></a>2023-08</h2><h4 id="2023-08-30-《基于数字孪生的城市防灾减灾研究》学术报告视频"><a href="#2023-08-30-《基于数字孪生的城市防灾减灾研究》学术报告视频" class="headerlink" title="2023-08-30 《基于数字孪生的城市防灾减灾研究》学术报告视频"></a>2023-08-30 <a href="https://mp.weixin.qq.com/s/zJXftEo9LrjElIR2optSKg">《基于数字孪生的城市防灾减灾研究》学术报告视频</a></h4><h4 id="2023-08-25-崔鹏等：如何科学防控与预警巨灾风险？"><a href="#2023-08-25-崔鹏等：如何科学防控与预警巨灾风险？" class="headerlink" title="2023-08-25 崔鹏等：如何科学防控与预警巨灾风险？"></a>2023-08-25 <a href="https://mp.weixin.qq.com/s/6ZyTVxTdYvBbJbZ3UvHPPQ">崔鹏等：如何科学防控与预警巨灾风险？</a></h4><h4 id="2023-08-24-清华大学龙明盛：人工智能工程化软件研发"><a href="#2023-08-24-清华大学龙明盛：人工智能工程化软件研发" class="headerlink" title="2023-08-24 清华大学龙明盛：人工智能工程化软件研发"></a>2023-08-24 <a href="https://mp.weixin.qq.com/s/OYBfwBD0PvmFmKRwDMYRnw">清华大学龙明盛：人工智能工程化软件研发</a></h4><h4 id="2023-08-21-NOAA-部署海空无人观测系统以提高飓风预报精度"><a href="#2023-08-21-NOAA-部署海空无人观测系统以提高飓风预报精度" class="headerlink" title="2023-08-21 NOAA 部署海空无人观测系统以提高飓风预报精度"></a>2023-08-21 <a href="https://mp.weixin.qq.com/s/2ZbwqSelT2JTvsq5YONH6A">NOAA 部署海空无人观测系统以提高飓风预报精度</a></h4><h4 id="2023-08-18-《深圳市加快推进气象高质量发展的若干措施》正式出台-深圳将积极培育发展气象科技产业"><a href="#2023-08-18-《深圳市加快推进气象高质量发展的若干措施》正式出台-深圳将积极培育发展气象科技产业" class="headerlink" title="2023-08-18 《深圳市加快推进气象高质量发展的若干措施》正式出台 深圳将积极培育发展气象科技产业"></a>2023-08-18 <a href="https://www.sznews.com/news/content/mb/2023-08/18/content_30410604.htm">《深圳市加快推进气象高质量发展的若干措施》正式出台 深圳将积极培育发展气象科技产业</a></h4><h4 id="2023-08-03-拥抱新兴技术-助力气象高质量发展-中国气象局研讨推进人工智能气象预报大模型建设"><a href="#2023-08-03-拥抱新兴技术-助力气象高质量发展-中国气象局研讨推进人工智能气象预报大模型建设" class="headerlink" title="2023-08-03 拥抱新兴技术 助力气象高质量发展 中国气象局研讨推进人工智能气象预报大模型建设"></a>2023-08-03 <a href="https://mp.weixin.qq.com/s/HtMC697HrQ6gY1qy0yEckQ">拥抱新兴技术 助力气象高质量发展 中国气象局研讨推进人工智能气象预报大模型建设</a></h4><h4 id="2023-08-01-绿色转型的数字孪生地球"><a href="#2023-08-01-绿色转型的数字孪生地球" class="headerlink" title="2023-08-01 绿色转型的数字孪生地球"></a>2023-08-01 <a href="https://mp.weixin.qq.com/s/1EQXZdM7IU8f082S_eE6Hw">绿色转型的数字孪生地球</a></h4><h2 id="2023-07"><a href="#2023-07" class="headerlink" title="2023-07"></a>2023-07</h2><h4 id="2023-07-28-《人工智能气象应用工作方案（2023—2030-年）》印发"><a href="#2023-07-28-《人工智能气象应用工作方案（2023—2030-年）》印发" class="headerlink" title="2023-07-28 《人工智能气象应用工作方案（2023—2030 年）》印发"></a>2023-07-28 <a href="https://www.cma.gov.cn/2011xwzx/2011xqxxw/2011xqxyw/202307/t20230728_5677975.html">《人工智能气象应用工作方案（2023—2030 年）》印发</a></h4><h4 id="2023-07-27-AI-气象大模型比较"><a href="#2023-07-27-AI-气象大模型比较" class="headerlink" title="2023-07-27 AI 气象大模型比较"></a>2023-07-27 <a href="https://mp.weixin.qq.com/s/iE54Lu7UcP52Uo34m4RO0A">AI 气象大模型比较</a></h4><h4 id="2023-07-27-针对江苏省气温和降水的高分辨率降尺度模拟及预估"><a href="#2023-07-27-针对江苏省气温和降水的高分辨率降尺度模拟及预估" class="headerlink" title="2023-07-27 针对江苏省气温和降水的高分辨率降尺度模拟及预估"></a>2023-07-27 <a href="https://mp.weixin.qq.com/s/lvO1LnsXlb4VaWqlPkSRwQ">针对江苏省气温和降水的高分辨率降尺度模拟及预估</a></h4><h4 id="2023-07-24-实测盘古气象模型在真实观测场中的预报效果如何"><a href="#2023-07-24-实测盘古气象模型在真实观测场中的预报效果如何" class="headerlink" title="2023-07-24 实测盘古气象模型在真实观测场中的预报效果如何"></a>2023-07-24 <a href="https://mp.weixin.qq.com/s/cGbAm4StoCbYybZ3AQgiFw">实测盘古气象模型在真实观测场中的预报效果如何</a></h4><h4 id="2023-07-24-npj-Climate-and-Atmospheric-Science-2022-ECMWF-ESA-研讨会报告：地球系统观测和预测机器学习的现状、进展和机遇"><a href="#2023-07-24-npj-Climate-and-Atmospheric-Science-2022-ECMWF-ESA-研讨会报告：地球系统观测和预测机器学习的现状、进展和机遇" class="headerlink" title="2023-07-24 npj Climate and Atmospheric Science | 2022 ECMWF-ESA 研讨会报告：地球系统观测和预测机器学习的现状、进展和机遇"></a>2023-07-24 <a href="https://mp.weixin.qq.com/s/UEqTS-aQ2p-xnNiCzNKH6Q">npj Climate and Atmospheric Science | 2022 ECMWF-ESA 研讨会报告：地球系统观测和预测机器学习的现状、进展和机遇</a></h4><h4 id="2023-07-12-清华-amp-中国气象局大模型登-Nature：解决世界级难题，「鬼天气」预报时效首次达-3-小时"><a href="#2023-07-12-清华-amp-中国气象局大模型登-Nature：解决世界级难题，「鬼天气」预报时效首次达-3-小时" class="headerlink" title="2023-07-12 清华&amp;中国气象局大模型登 Nature：解决世界级难题，「鬼天气」预报时效首次达 3 小时"></a>2023-07-12 <a href="https://mp.weixin.qq.com/s/RMByvG1TTaVo5KMrxedqmA">清华&amp;中国气象局大模型登 Nature：解决世界级难题，「鬼天气」预报时效首次达 3 小时</a></h4><h4 id="2023-07-11-Nature主刊Pangu-Weather主观解读"><a href="#2023-07-11-Nature主刊Pangu-Weather主观解读" class="headerlink" title="2023-07-11 Nature主刊Pangu-Weather主观解读"></a>2023-07-11 <a href="https://mp.weixin.qq.com/s/BA4dmVDv0THIontz0DNA2A">Nature主刊Pangu-Weather主观解读</a></h4><h4 id="2023-07-07-上海AI实验室联合多家机构发布全球首个城市级NeRF实景三维大模型“书生·天际”"><a href="#2023-07-07-上海AI实验室联合多家机构发布全球首个城市级NeRF实景三维大模型“书生·天际”" class="headerlink" title="2023-07-07 上海AI实验室联合多家机构发布全球首个城市级NeRF实景三维大模型“书生·天际”"></a>2023-07-07 <a href="https://mp.weixin.qq.com/s/BcXIfmc9N1iljbS_BFoQnA">上海AI实验室联合多家机构发布全球首个城市级NeRF实景三维大模型“书生·天际”</a></h4><h4 id="2023-07-03-深度学习用于次季节时间尺度的全球概率预测的后处理"><a href="#2023-07-03-深度学习用于次季节时间尺度的全球概率预测的后处理" class="headerlink" title="2023-07-03 深度学习用于次季节时间尺度的全球概率预测的后处理"></a>2023-07-03 <a href="https://mp.weixin.qq.com/s/W5w_P7q0uf7bYdZbaDl75A">深度学习用于次季节时间尺度的全球概率预测的后处理</a></h4><h2 id="2023-06"><a href="#2023-06" class="headerlink" title="2023-06"></a>2023-06</h2><h4 id="2023-06-28-水文气象人工智能预报的可解释性"><a href="#2023-06-28-水文气象人工智能预报的可解释性" class="headerlink" title="2023-06-28 水文气象人工智能预报的可解释性"></a>2023-06-28 <a href="https://mp.weixin.qq.com/s/zGZRjOdsh9M8MJTDjAyjIw">水文气象人工智能预报的可解释性</a></h4><h4 id="2023-06-28-机器学习-x2F-深度学习方法在气象领域应用探索研究"><a href="#2023-06-28-机器学习-x2F-深度学习方法在气象领域应用探索研究" class="headerlink" title="2023-06-28 机器学习&#x2F;深度学习方法在气象领域应用探索研究"></a>2023-06-28 <a href="https://mp.weixin.qq.com/s/z-V3vwned2YNvN74kxKqgg">机器学习&#x2F;深度学习方法在气象领域应用探索研究</a></h4><h4 id="2023-06-26-ClimSim：一个开放的大规模数据集，用于训练混合多尺度气候模拟器中的高分辨率物理仿真器"><a href="#2023-06-26-ClimSim：一个开放的大规模数据集，用于训练混合多尺度气候模拟器中的高分辨率物理仿真器" class="headerlink" title="2023-06-26 ClimSim：一个开放的大规模数据集，用于训练混合多尺度气候模拟器中的高分辨率物理仿真器"></a>2023-06-26 <a href="https://mp.weixin.qq.com/s/Hmp0CjRYsPyttHOzA8yE6g">ClimSim：一个开放的大规模数据集，用于训练混合多尺度气候模拟器中的高分辨率物理仿真器</a></h4><h4 id="2023-06-25-复旦大学发布15天天气预报大模型—伏羲"><a href="#2023-06-25-复旦大学发布15天天气预报大模型—伏羲" class="headerlink" title="2023-06-25 复旦大学发布15天天气预报大模型—伏羲"></a>2023-06-25 <a href="https://mp.weixin.qq.com/s/6mr_2aUK2eU3RYCyWpa7lg">复旦大学发布15天天气预报大模型—伏羲</a></h4><h4 id="2023-06-21-机器学习在天气预报中的崛起"><a href="#2023-06-21-机器学习在天气预报中的崛起" class="headerlink" title="2023-06-21 机器学习在天气预报中的崛起"></a>2023-06-21 <a href="https://www.ecmwf.int/en/about/media-centre/science-blog/2023/rise-machine-learning-weather-forecasting">机器学习在天气预报中的崛起</a></h4><h4 id="2023-06-16-清华大学王建民、龙明盛团队提出全球自动气象站预报大模型"><a href="#2023-06-16-清华大学王建民、龙明盛团队提出全球自动气象站预报大模型" class="headerlink" title="2023-06-16 清华大学王建民、龙明盛团队提出全球自动气象站预报大模型"></a>2023-06-16 <a href="https://mp.weixin.qq.com/s/TO0Pj_v8TmEXgx3IFCO8nw">清华大学王建民、龙明盛团队提出全球自动气象站预报大模型</a></h4><h4 id="2023-06-12-在AI气象预报大模型领域有所布局的A股上市公司一览"><a href="#2023-06-12-在AI气象预报大模型领域有所布局的A股上市公司一览" class="headerlink" title="2023-06-12 在AI气象预报大模型领域有所布局的A股上市公司一览"></a>2023-06-12 <a href="https://mp.weixin.qq.com/s/C29F3v-Rp3g0r8MPGEeZrA">在AI气象预报大模型领域有所布局的A股上市公司一览</a></h4><h4 id="2023-06-09-人工智能应对气候影响：在洪水风险中的应用"><a href="#2023-06-09-人工智能应对气候影响：在洪水风险中的应用" class="headerlink" title="2023-06-09  人工智能应对气候影响：在洪水风险中的应用"></a>2023-06-09  <a href="https://mp.weixin.qq.com/s/v75-rMglh6G7FZvJu5FFvQ">人工智能应对气候影响：在洪水风险中的应用</a></h4><h2 id="2023-05"><a href="#2023-05" class="headerlink" title="2023-05"></a>2023-05</h2><h4 id="2023-05-23-广州塔智能化管理平台入选全国优秀案例"><a href="#2023-05-23-广州塔智能化管理平台入选全国优秀案例" class="headerlink" title="2023-05-23 广州塔智能化管理平台入选全国优秀案例"></a>2023-05-23 <a href="https://app.gztv.com/plusshare/#/articleDetail?id=1380220500295680">广州塔智能化管理平台入选全国优秀案例</a></h4><h2 id="2023-03"><a href="#2023-03" class="headerlink" title="2023-03"></a>2023-03</h2><h4 id="2023-03-04-基于深度学习的各种天气预报模型研究"><a href="#2023-03-04-基于深度学习的各种天气预报模型研究" class="headerlink" title="2023-03-04 基于深度学习的各种天气预报模型研究"></a>2023-03-04 <a href="https://mp.weixin.qq.com/s/nqIBS8Bija8Hzj9cFM59bQ">基于深度学习的各种天气预报模型研究</a></h4>]]></content>
      <categories>
        <category>Recharge</category>
      </categories>
  </entry>
  <entry>
    <title>2024 News</title>
    <url>/2024/12/01/Recharge/2024%20News/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="2024-07"><a href="#2024-07" class="headerlink" title="2024-07"></a>2024-07</h2><h4 id="2024-07-26-综述：深度学习在极端天气预测中的应用"><a href="#2024-07-26-综述：深度学习在极端天气预测中的应用" class="headerlink" title="2024-07-26  综述：深度学习在极端天气预测中的应用"></a>2024-07-26  <a href="https://mp.weixin.qq.com/s/ZQfeATaF3yx_BE4eVj9eig">综述：深度学习在极端天气预测中的应用</a></h4><h4 id="2024-07-25-郜永祺纪念专刊-基于-WRF-三层嵌套动力降尺度的三峡库区春季连阴雨未来预估"><a href="#2024-07-25-郜永祺纪念专刊-基于-WRF-三层嵌套动力降尺度的三峡库区春季连阴雨未来预估" class="headerlink" title="2024-07-25 郜永祺纪念专刊 | 基于 WRF 三层嵌套动力降尺度的三峡库区春季连阴雨未来预估"></a>2024-07-25 <a href="https://mp.weixin.qq.com/s/95xoMu34Kc4bC52SnOwv8g">郜永祺纪念专刊 | 基于 WRF 三层嵌套动力降尺度的三峡库区春季连阴雨未来预估</a></h4><h4 id="2024-07-19-警告！ECMWF-ERA5-数据-2024-年-9-月就不能下载了吗？请更新！"><a href="#2024-07-19-警告！ECMWF-ERA5-数据-2024-年-9-月就不能下载了吗？请更新！" class="headerlink" title="2024-07-19 警告！ECMWF ERA5 数据 2024 年 9 月就不能下载了吗？请更新！"></a>2024-07-19 <a href="https://mp.weixin.qq.com/s/tAlLAdP0WqyfOJhYrKMFqA">警告！ECMWF ERA5 数据 2024 年 9 月就不能下载了吗？请更新！</a></h4><h4 id="2024-07-19-气候金融"><a href="#2024-07-19-气候金融" class="headerlink" title="2024-07-19 气候金融"></a>2024-07-19 <a href="https://mp.weixin.qq.com/s/gYy1XthJiSyCisWiOCWUQw">气候金融</a></h4><h4 id="2024-07-13-斯坦福大学发布流体力学的首个开源大模型-BlastNet！流体力学科学计算即将迎来新变革"><a href="#2024-07-13-斯坦福大学发布流体力学的首个开源大模型-BlastNet！流体力学科学计算即将迎来新变革" class="headerlink" title="2024-07-13 斯坦福大学发布流体力学的首个开源大模型 BlastNet！流体力学科学计算即将迎来新变革"></a>2024-07-13 <a href="https://mp.weixin.qq.com/s/cNeH-bZ9QZB-uI-wMh8YQg">斯坦福大学发布流体力学的首个开源大模型 BlastNet！流体力学科学计算即将迎来新变革</a></h4><h4 id="2024-07-08-我国海雾监测预报业务现状及未来展望"><a href="#2024-07-08-我国海雾监测预报业务现状及未来展望" class="headerlink" title="2024-07-08 我国海雾监测预报业务现状及未来展望"></a>2024-07-08 <a href="https://mp.weixin.qq.com/s/I6URlfjJW3-yZ4dl3MeQng">我国海雾监测预报业务现状及未来展望</a></h4><h4 id="2024-07-04-金融气象研究进展"><a href="#2024-07-04-金融气象研究进展" class="headerlink" title="2024-07-04 金融气象研究进展"></a>2024-07-04 <a href="https://mp.weixin.qq.com/s/qLs6Ii9rdLyoyBLfJo5KAw">金融气象研究进展</a></h4><h4 id="2024-07-03-Easyclimate-一行代码实现气候学的快速分析"><a href="#2024-07-03-Easyclimate-一行代码实现气候学的快速分析" class="headerlink" title="2024-07-03 Easyclimate: 一行代码实现气候学的快速分析"></a>2024-07-03 <a href="https://mp.weixin.qq.com/s/S9mkrDuPhFEhTu4EMY9cgg">Easyclimate: 一行代码实现气候学的快速分析</a></h4><h2 id="2024-06"><a href="#2024-06" class="headerlink" title="2024-06"></a>2024-06</h2><h4 id="2024-06-28-面向低空经济发展的气象服务"><a href="#2024-06-28-面向低空经济发展的气象服务" class="headerlink" title="2024-06-28 面向低空经济发展的气象服务"></a>2024-06-28 <a href="https://mp.weixin.qq.com/s/p-8zSt-aS9yi9OiypUsxQw">面向低空经济发展的气象服务</a></h4><h4 id="2024-06-27-谁掌握了天气预测，谁就掌握了未来能源动态"><a href="#2024-06-27-谁掌握了天气预测，谁就掌握了未来能源动态" class="headerlink" title="2024-06-27 谁掌握了天气预测，谁就掌握了未来能源动态"></a>2024-06-27 <a href="https://mp.weixin.qq.com/s/job6OkPTF8PqB55UvflwQg">谁掌握了天气预测，谁就掌握了未来能源动态</a></h4><h4 id="2024-06-25-从-NOAA-2023-财年绩效考核结果看美国联邦气象业务和服务的发展态势"><a href="#2024-06-25-从-NOAA-2023-财年绩效考核结果看美国联邦气象业务和服务的发展态势" class="headerlink" title="2024-06-25 从 NOAA 2023 财年绩效考核结果看美国联邦气象业务和服务的发展态势"></a>2024-06-25 <a href="https://mp.weixin.qq.com/s/fqni0FLhrWk9eXoUAjPX_g">从 NOAA 2023 财年绩效考核结果看美国联邦气象业务和服务的发展态势</a></h4><h4 id="2024-06-24-时代变革-618，气象等数据买卖有合法合规渠道了！"><a href="#2024-06-24-时代变革-618，气象等数据买卖有合法合规渠道了！" class="headerlink" title="2024-06-24 时代变革 618，气象等数据买卖有合法合规渠道了！"></a>2024-06-24 <a href="https://mp.weixin.qq.com/s/t3wdfdZAS5FF_7KxOwaJ6g">时代变革 618，气象等数据买卖有合法合规渠道了！</a></h4><h4 id="2024-06-24-《自然》：人工智能如何改善气象预测？"><a href="#2024-06-24-《自然》：人工智能如何改善气象预测？" class="headerlink" title="2024-06-24 《自然》：人工智能如何改善气象预测？"></a>2024-06-24 <a href="https://mp.weixin.qq.com/s/wY0yWkyXAmXFZHwhR2hwiw">《自然》：人工智能如何改善气象预测？</a></h4><h4 id="2024-06-24-华为云盘古气象大模型再升级，挑战公里级区域预报"><a href="#2024-06-24-华为云盘古气象大模型再升级，挑战公里级区域预报" class="headerlink" title="2024-06-24 华为云盘古气象大模型再升级，挑战公里级区域预报"></a>2024-06-24 <a href="https://mp.weixin.qq.com/s/NBlAoY8xXZRq73Wy4XsDeA">华为云盘古气象大模型再升级，挑战公里级区域预报</a></h4><h4 id="2024-06-19-谷歌、ECMWF-在-JAMES-发布-WeatherBench-2：下一代数据驱动型全球天气模型的基准"><a href="#2024-06-19-谷歌、ECMWF-在-JAMES-发布-WeatherBench-2：下一代数据驱动型全球天气模型的基准" class="headerlink" title="2024-06-19 谷歌、ECMWF 在 JAMES 发布 WeatherBench 2：下一代数据驱动型全球天气模型的基准"></a>2024-06-19 <a href="https://mp.weixin.qq.com/s/ywQRbXRa3K_ng-edDVqsxw">谷歌、ECMWF 在 JAMES 发布 WeatherBench 2：下一代数据驱动型全球天气模型的基准</a></h4><h4 id="2024-06-19-专业气象服务的“专”字体现在哪里？"><a href="#2024-06-19-专业气象服务的“专”字体现在哪里？" class="headerlink" title="2024-06-19 专业气象服务的“专”字体现在哪里？"></a>2024-06-19 <a href="https://mp.weixin.qq.com/s/Mr383b-ItBsdPBjfESeukQ">专业气象服务的“专”字体现在哪里？</a></h4><h4 id="2024-06-17-数字孪生技术概述"><a href="#2024-06-17-数字孪生技术概述" class="headerlink" title="2024-06-17 数字孪生技术概述"></a>2024-06-17 <a href="https://mp.weixin.qq.com/s/XVFK55QZ6n_8ptMRAv4Cmw">数字孪生技术概述</a></h4><h4 id="2024-06-17-“数据要素-×”典型案例之十六-跨部门气象数据共享-助力地质灾害分级预警体系建设"><a href="#2024-06-17-“数据要素-×”典型案例之十六-跨部门气象数据共享-助力地质灾害分级预警体系建设" class="headerlink" title="2024-06-17 “数据要素 ×”典型案例之十六 | 跨部门气象数据共享 助力地质灾害分级预警体系建设"></a>2024-06-17 <a href="https://mp.weixin.qq.com/s/nNWb6rstwPNTAueOIF9Vmg">“数据要素 ×”典型案例之十六 | 跨部门气象数据共享 助力地质灾害分级预警体系建设</a></h4><h4 id="2024-06-16-气候变暖，气象学成华尔街新宠！"><a href="#2024-06-16-气候变暖，气象学成华尔街新宠！" class="headerlink" title="2024-06-16 气候变暖，气象学成华尔街新宠！"></a>2024-06-16 <a href="https://mp.weixin.qq.com/s/Kq_NcL51B1j5_b7xWLucGQ">气候变暖，气象学成华尔街新宠！</a></h4><h4 id="2024-06-14-数值天气预报业务系统建设介绍（2023-版）"><a href="#2024-06-14-数值天气预报业务系统建设介绍（2023-版）" class="headerlink" title="2024-06-14 数值天气预报业务系统建设介绍（2023 版）"></a>2024-06-14 <a href="https://mp.weixin.qq.com/s/MbryD7iK5g7-dbSTnoySjg">数值天气预报业务系统建设介绍（2023 版）</a></h4><h4 id="2024-06-14-首批《海洋数据开放共享目录》和“海洋云”平台正式发布"><a href="#2024-06-14-首批《海洋数据开放共享目录》和“海洋云”平台正式发布" class="headerlink" title="2024-06-14 首批《海洋数据开放共享目录》和“海洋云”平台正式发布"></a>2024-06-14 <a href="https://mp.weixin.qq.com/s/vi8gciVHUbJwE7ERaizY1Q">首批《海洋数据开放共享目录》和“海洋云”平台正式发布</a></h4><h4 id="2024-06-12-同济大学国家海底科学观测网舟山岸基站开工建设"><a href="#2024-06-12-同济大学国家海底科学观测网舟山岸基站开工建设" class="headerlink" title="2024-06-12 同济大学国家海底科学观测网舟山岸基站开工建设"></a>2024-06-12 <a href="https://mp.weixin.qq.com/s/_YML1y0UrLn8m3MCBnMDNQ">同济大学国家海底科学观测网舟山岸基站开工建设</a></h4><h4 id="2024-06-12-DestinE：地球的数字孪生诞生"><a href="#2024-06-12-DestinE：地球的数字孪生诞生" class="headerlink" title="2024-06-12 DestinE：地球的数字孪生诞生"></a>2024-06-12 <a href="https://mp.weixin.qq.com/s/hNF7BCSIV8iW_oBC7-sV5A">DestinE：地球的数字孪生诞生</a></h4><h4 id="2024-06-11-比气象局更准确的天气预报！？"><a href="#2024-06-11-比气象局更准确的天气预报！？" class="headerlink" title="2024-06-11 比气象局更准确的天气预报！？"></a>2024-06-11 <a href="https://mp.weixin.qq.com/s/50SfiEFp9gVBfA80Qj6E5w">比气象局更准确的天气预报！？</a></h4><h4 id="2024-06-11-全国海洋观测站和浮标资料现在已经共享"><a href="#2024-06-11-全国海洋观测站和浮标资料现在已经共享" class="headerlink" title="2024-06-11 全国海洋观测站和浮标资料现在已经共享"></a>2024-06-11 <a href="https://mp.weixin.qq.com/s/il0bTIKQkXfKSOzzUfBtIw">全国海洋观测站和浮标资料现在已经共享</a></h4><h4 id="2024-06-17-英伟达-Earth-2-撕开了国内数字孪生的遮羞布"><a href="#2024-06-17-英伟达-Earth-2-撕开了国内数字孪生的遮羞布" class="headerlink" title="2024-06-17 英伟达 Earth-2 撕开了国内数字孪生的遮羞布"></a>2024-06-17 <a href="https://mp.weixin.qq.com/s/xKuP-I9uGqvg8_YAeVB2uA">英伟达 Earth-2 撕开了国内数字孪生的遮羞布</a></h4><h4 id="2024-06-08-戴永久院士团队：区域地球系统模式研究进展"><a href="#2024-06-08-戴永久院士团队：区域地球系统模式研究进展" class="headerlink" title="2024-06-08 戴永久院士团队：区域地球系统模式研究进展"></a>2024-06-08 <a href="https://mp.weixin.qq.com/s/5g7al5NlhMc0vSJdUZjzhg">戴永久院士团队：区域地球系统模式研究进展</a></h4><h4 id="2024-06-04-气象大模型伏羲-2-0-发布，智能气象创新生态联盟成立！"><a href="#2024-06-04-气象大模型伏羲-2-0-发布，智能气象创新生态联盟成立！" class="headerlink" title="2024-06-04 气象大模型伏羲 2.0 发布，智能气象创新生态联盟成立！"></a>2024-06-04 <a href="https://mp.weixin.qq.com/s/cpAXuCGK6o5E3Kvf0MoUww">气象大模型伏羲 2.0 发布，智能气象创新生态联盟成立！</a></h4><h4 id="2024-06-05-微软发布首个大气-AI-基础模型-Aurora"><a href="#2024-06-05-微软发布首个大气-AI-基础模型-Aurora" class="headerlink" title="2024-06-05 微软发布首个大气 AI 基础模型 Aurora"></a>2024-06-05 <a href="https://mp.weixin.qq.com/s/ZUcRRbvew_NNN6JqMYWewA">微软发布首个大气 AI 基础模型 Aurora</a></h4><h4 id="2024-06-05-复制-Omniverse，难了"><a href="#2024-06-05-复制-Omniverse，难了" class="headerlink" title="2024-06-05 复制 Omniverse，难了"></a>2024-06-05 <a href="https://mp.weixin.qq.com/s/NZmHIEdegzfMrkjZMT8W5Q">复制 Omniverse，难了</a></h4><h4 id="2024-06-03-基于气候生态产品价值实现的气象服务模式与发展思考"><a href="#2024-06-03-基于气候生态产品价值实现的气象服务模式与发展思考" class="headerlink" title="2024-06-03 基于气候生态产品价值实现的气象服务模式与发展思考"></a>2024-06-03 <a href="https://mp.weixin.qq.com/s/TMFmbPijILBLFzsUshghMQ">基于气候生态产品价值实现的气象服务模式与发展思考</a></h4><h4 id="2024-06-03-英伟达“Earth-2”亮相，2-公里精确预测天气信息"><a href="#2024-06-03-英伟达“Earth-2”亮相，2-公里精确预测天气信息" class="headerlink" title="2024-06-03 英伟达“Earth-2”亮相，2 公里精确预测天气信息"></a>2024-06-03 <a href="https://mp.weixin.qq.com/s/hj_DLz-l3pIl7R4Gwv1UvQ">英伟达“Earth-2”亮相，2 公里精确预测天气信息</a></h4><h2 id="2024-05"><a href="#2024-05" class="headerlink" title="2024-05"></a>2024-05</h2><h4 id="2024-05-29-微软推出-Aurora-大气预测模型，刷新全球天气预测测试记录"><a href="#2024-05-29-微软推出-Aurora-大气预测模型，刷新全球天气预测测试记录" class="headerlink" title="2024-05-29 微软推出 Aurora 大气预测模型，刷新全球天气预测测试记录"></a>2024-05-29 <a href="https://mp.weixin.qq.com/s/y7lz4k-xw_osudgDqurj5Q">微软推出 Aurora 大气预测模型，刷新全球天气预测测试记录</a></h4><h4 id="2024-05-27-中国气象局发布气象预报大模型示范计划！"><a href="#2024-05-27-中国气象局发布气象预报大模型示范计划！" class="headerlink" title="2024-05-27 中国气象局发布气象预报大模型示范计划！"></a>2024-05-27 <a href="https://mp.weixin.qq.com/s/egH_ZVtDAkjJLmGd-jCNBQ">中国气象局发布气象预报大模型示范计划！</a></h4><h4 id="2024-05-25-重磅！气象部门高价值气象数据产品及共享成果"><a href="#2024-05-25-重磅！气象部门高价值气象数据产品及共享成果" class="headerlink" title="2024-05-25 重磅！气象部门高价值气象数据产品及共享成果"></a>2024-05-25 <a href="https://mp.weixin.qq.com/s/tf5jB80HL3PrxXUi3rHEZQ">重磅！气象部门高价值气象数据产品及共享成果</a></h4><h4 id="2024-05-24-中国气象局首次发布人工智能气象大模型训练专题数据目录"><a href="#2024-05-24-中国气象局首次发布人工智能气象大模型训练专题数据目录" class="headerlink" title="2024-05-24 中国气象局首次发布人工智能气象大模型训练专题数据目录"></a>2024-05-24 <a href="https://mp.weixin.qq.com/s/_qz_BEZuKa14cqgne8e1bQ">中国气象局首次发布人工智能气象大模型训练专题数据目录</a></h4><h4 id="2024-05-23-1-公里分辨率-6-分钟快速更新！“微澜测天”气象-AI-重磅推出"><a href="#2024-05-23-1-公里分辨率-6-分钟快速更新！“微澜测天”气象-AI-重磅推出" class="headerlink" title="2024-05-23 1 公里分辨率 6 分钟快速更新！“微澜测天”气象 AI 重磅推出"></a>2024-05-23 <a href="https://mp.weixin.qq.com/s/qQdc9k8Xzxi1tKOQ--2PwA">1 公里分辨率 6 分钟快速更新！“微澜测天”气象 AI 重磅推出</a></h4><h4 id="2024-05-23-国家地球系统科学数据中心发布长江经济带典型区域分季度-1km-地表冷岛强度数据（2000-2010-2020-年）"><a href="#2024-05-23-国家地球系统科学数据中心发布长江经济带典型区域分季度-1km-地表冷岛强度数据（2000-2010-2020-年）" class="headerlink" title="2024-05-23 国家地球系统科学数据中心发布长江经济带典型区域分季度 1km 地表冷岛强度数据（2000,2010,2020 年）"></a>2024-05-23 <a href="https://mp.weixin.qq.com/s/p-6q5XrJW_lcnNU7wnVheA">国家地球系统科学数据中心发布长江经济带典型区域分季度 1km 地表冷岛强度数据（2000,2010,2020 年）</a></h4><h4 id="2024-05-23-传感器技术在海洋环境监测中的应用与发展探析"><a href="#2024-05-23-传感器技术在海洋环境监测中的应用与发展探析" class="headerlink" title="2024-05-23 传感器技术在海洋环境监测中的应用与发展探析"></a>2024-05-23 <a href="https://mp.weixin.qq.com/s/Ed9PP9nmXNnmQgiGo-Fbnw">传感器技术在海洋环境监测中的应用与发展探析</a></h4><h4 id="2024-05-21-空天地海一体化海洋监测体系研究"><a href="#2024-05-21-空天地海一体化海洋监测体系研究" class="headerlink" title="2024-05-21 空天地海一体化海洋监测体系研究"></a>2024-05-21 <a href="https://mp.weixin.qq.com/s/xe-1mGX0bggCGOIGVv-KpQ">空天地海一体化海洋监测体系研究</a></h4><h4 id="2024-05-20-联播-我国推进城市全域数字化转型"><a href="#2024-05-20-联播-我国推进城市全域数字化转型" class="headerlink" title="2024-05-20 联播 | 我国推进城市全域数字化转型"></a>2024-05-20 <a href="https://mp.weixin.qq.com/s/Njinrh_I-QbUe4K_FAu7-Q">联播 | 我国推进城市全域数字化转型</a></h4><h4 id="2024-05-16-一图读懂丨气象数据获取指南"><a href="#2024-05-16-一图读懂丨气象数据获取指南" class="headerlink" title="2024-05-16 一图读懂丨气象数据获取指南"></a>2024-05-16 <a href="https://mp.weixin.qq.com/s/KQJbfCuoCNOBRXo39ZCvbQ">一图读懂丨气象数据获取指南</a></h4><h4 id="2024-05-15-高性能跨平台的神经网络使能大气资料同化系统"><a href="#2024-05-15-高性能跨平台的神经网络使能大气资料同化系统" class="headerlink" title="2024-05-15 高性能跨平台的神经网络使能大气资料同化系统"></a>2024-05-15 <a href="https://mp.weixin.qq.com/s/3U1JMdNFuSRyykZK8MLWqA">高性能跨平台的神经网络使能大气资料同化系统</a></h4><h4 id="2024-05-15-广州突发强龙卷！席卷全国的强对流天气为何如此严重？"><a href="#2024-05-15-广州突发强龙卷！席卷全国的强对流天气为何如此严重？" class="headerlink" title="2024-05-15 广州突发强龙卷！席卷全国的强对流天气为何如此严重？"></a>2024-05-15 <a href="https://mp.weixin.qq.com/s/oNP8FKQaQX-bCHf3wfB7Eg">广州突发强龙卷！席卷全国的强对流天气为何如此严重？</a></h4><h4 id="2024-05-15-PNAS-加州理工学院研究人员利用人工智能革新季风雨量预测"><a href="#2024-05-15-PNAS-加州理工学院研究人员利用人工智能革新季风雨量预测" class="headerlink" title="2024-05-15 PNAS | 加州理工学院研究人员利用人工智能革新季风雨量预测"></a>2024-05-15 <a href="https://mp.weixin.qq.com/s/FOcCnrhqUdX9U7bgSd7fYQ">PNAS | 加州理工学院研究人员利用人工智能革新季风雨量预测</a></h4><h4 id="2024-05-14-当今二氧化碳的增长速度比过去五万年里快了十倍"><a href="#2024-05-14-当今二氧化碳的增长速度比过去五万年里快了十倍" class="headerlink" title="2024-05-14 当今二氧化碳的增长速度比过去五万年里快了十倍"></a>2024-05-14 <a href="https://mp.weixin.qq.com/s/mOjIMy489tXfJAfJCaJV4w">当今二氧化碳的增长速度比过去五万年里快了十倍</a></h4><h4 id="2024-05-14-超高时空分辨率的低延迟实时气温数据集"><a href="#2024-05-14-超高时空分辨率的低延迟实时气温数据集" class="headerlink" title="2024-05-14 超高时空分辨率的低延迟实时气温数据集"></a>2024-05-14 <a href="https://mp.weixin.qq.com/s/G3mXQpobyzUh_0iUSu4muw">超高时空分辨率的低延迟实时气温数据集</a></h4><h4 id="2024-05-14-数字气象为保障中小机场平稳运行增添底气丨数据要素-×-气象服务典型案例"><a href="#2024-05-14-数字气象为保障中小机场平稳运行增添底气丨数据要素-×-气象服务典型案例" class="headerlink" title="2024-05-14 数字气象为保障中小机场平稳运行增添底气丨数据要素 × 气象服务典型案例"></a>2024-05-14 <a href="https://mp.weixin.qq.com/s/yM0QADkB98UvfmjiQd6lhg">数字气象为保障中小机场平稳运行增添底气丨数据要素 × 气象服务典型案例</a></h4><h4 id="2024-05-13-这项数据，舟山已超-95-！"><a href="#2024-05-13-这项数据，舟山已超-95-！" class="headerlink" title="2024-05-13 这项数据，舟山已超 95%！"></a>2024-05-13 <a href="https://mp.weixin.qq.com/s/XLCty9TVcNyYfIAytqqXIw">这项数据，舟山已超 95%！</a></h4><h4 id="2024-05-11-宁波：一流强港建设中跳动的气象数据"><a href="#2024-05-11-宁波：一流强港建设中跳动的气象数据" class="headerlink" title="2024-05-11 宁波：一流强港建设中跳动的气象数据"></a>2024-05-11 <a href="https://mp.weixin.qq.com/s/mORsozMvnl8im-c7NDuFkw">宁波：一流强港建设中跳动的气象数据</a></h4><h4 id="2024-05-11-ERA6-要来了！超级强大！"><a href="#2024-05-11-ERA6-要来了！超级强大！" class="headerlink" title="2024-05-11 ERA6 要来了！超级强大！"></a>2024-05-11 <a href="https://mp.weixin.qq.com/s/4v3EedHlLEe2sgjyG42iTg">ERA6 要来了！超级强大！</a></h4><h4 id="2024-05-09-省人民政府办公厅关于印发《湖北省突破性发展商业航天行动计划（2024—2028-年）》的通知"><a href="#2024-05-09-省人民政府办公厅关于印发《湖北省突破性发展商业航天行动计划（2024—2028-年）》的通知" class="headerlink" title="2024-05-09 省人民政府办公厅关于印发《湖北省突破性发展商业航天行动计划（2024—2028 年）》的通知"></a>2024-05-09 <a href="https://mp.weixin.qq.com/s/XfmMBn6KIJCFPU6N7xqzbg">省人民政府办公厅关于印发《湖北省突破性发展商业航天行动计划（2024—2028 年）》的通知</a></h4><h4 id="2024-05-04-GeoMapApp：用于地球表面数据可视化和分析的地球科学研究免费软件"><a href="#2024-05-04-GeoMapApp：用于地球表面数据可视化和分析的地球科学研究免费软件" class="headerlink" title="2024-05-04 GeoMapApp：用于地球表面数据可视化和分析的地球科学研究免费软件"></a>2024-05-04 <a href="https://mp.weixin.qq.com/s/SzymhND7YuHwjeX1Dbu0KQ">GeoMapApp：用于地球表面数据可视化和分析的地球科学研究免费软件</a></h4><h2 id="2024-04"><a href="#2024-04" class="headerlink" title="2024-04"></a>2024-04</h2><h4 id="2024-04-26-谢元富博士：“数据驱动”能否替代“传统”数值预报？"><a href="#2024-04-26-谢元富博士：“数据驱动”能否替代“传统”数值预报？" class="headerlink" title="2024-04-26 谢元富博士：“数据驱动”能否替代“传统”数值预报？"></a>2024-04-26 <a href="https://mp.weixin.qq.com/s/gKUY_kDzBKoBX7Q5cjbsQQ">谢元富博士：“数据驱动”能否替代“传统”数值预报？</a></h4><h4 id="2024-04-25-Open-Sora-全面开源升级：支持-16s-视频生成和-720p-分辨率"><a href="#2024-04-25-Open-Sora-全面开源升级：支持-16s-视频生成和-720p-分辨率" class="headerlink" title="2024-04-25 Open-Sora 全面开源升级：支持 16s 视频生成和 720p 分辨率"></a>2024-04-25 <a href="https://mp.weixin.qq.com/s/Z88inagkuFn8svLu788TVQ">Open-Sora 全面开源升级：支持 16s 视频生成和 720p 分辨率</a></h4><h4 id="2024-04-25-气候变化和极端天气的影响重创亚洲"><a href="#2024-04-25-气候变化和极端天气的影响重创亚洲" class="headerlink" title="2024-04-25 气候变化和极端天气的影响重创亚洲"></a>2024-04-25 <a href="https://mp.weixin.qq.com/s/Q50WcV7Ot8UA8iIU1mWAMA">气候变化和极端天气的影响重创亚洲</a></h4><h4 id="2024-04-25-地球系统数值模拟装置：全球之约！"><a href="#2024-04-25-地球系统数值模拟装置：全球之约！" class="headerlink" title="2024-04-25 地球系统数值模拟装置：全球之约！"></a>2024-04-25 <a href="https://mp.weixin.qq.com/s/eLwZ6Pt31wl-wfHcQos7Mg">地球系统数值模拟装置：全球之约！</a></h4><h4 id="2024-04-24-未来-26-年，全球收入或因极端天气减少-19-！多座城市设立“首席高温官”"><a href="#2024-04-24-未来-26-年，全球收入或因极端天气减少-19-！多座城市设立“首席高温官”" class="headerlink" title="2024-04-24 未来 26 年，全球收入或因极端天气减少 19%！多座城市设立“首席高温官”"></a>2024-04-24 <a href="https://mp.weixin.qq.com/s/x1W02qksvell-2RgxffetQ">未来 26 年，全球收入或因极端天气减少 19%！多座城市设立“首席高温官”</a></h4><h4 id="2024-04-24-人工智能深度融合应用当人工智能用于数值预报，会带来哪些改变？"><a href="#2024-04-24-人工智能深度融合应用当人工智能用于数值预报，会带来哪些改变？" class="headerlink" title="2024-04-24 人工智能深度融合应用当人工智能用于数值预报，会带来哪些改变？"></a>2024-04-24 <a href="https://mp.weixin.qq.com/s/aD6K47CahloDeQs0ZoHMtw">人工智能深度融合应用当人工智能用于数值预报，会带来哪些改变？</a></h4><h4 id="2024-04-18-从同化到“端到端”（一）：FengWu-系列"><a href="#2024-04-18-从同化到“端到端”（一）：FengWu-系列" class="headerlink" title="2024-04-18 从同化到“端到端”（一）：FengWu 系列"></a>2024-04-18 <a href="https://mp.weixin.qq.com/s/qG9gkPbfsBMpFymzMNSk8A">从同化到“端到端”（一）：FengWu 系列</a></h4><h4 id="2024-04-18-气象和大气科学新生长点——美国气象学会-2024-年年会带来的启示"><a href="#2024-04-18-气象和大气科学新生长点——美国气象学会-2024-年年会带来的启示" class="headerlink" title="2024-04-18 气象和大气科学新生长点——美国气象学会 2024 年年会带来的启示"></a>2024-04-18 <a href="https://mp.weixin.qq.com/s/_NvOY8R0DHlmKoMLrvvxiw">气象和大气科学新生长点——美国气象学会 2024 年年会带来的启示</a></h4><h4 id="2024-04-12-为何台风“烟花”的减弱未能被准确预报？"><a href="#2024-04-12-为何台风“烟花”的减弱未能被准确预报？" class="headerlink" title="2024-04-12 为何台风“烟花”的减弱未能被准确预报？"></a>2024-04-12 <a href="https://mp.weixin.qq.com/s/hXLaVUaalTB1WXX_uljKPg">为何台风“烟花”的减弱未能被准确预报？</a></h4><h4 id="2024-04-10-海洋防灾减灾科普知识"><a href="#2024-04-10-海洋防灾减灾科普知识" class="headerlink" title="2024-04-10 海洋防灾减灾科普知识"></a>2024-04-10 <a href="https://mp.weixin.qq.com/s/ToU46axzMgMjJPukWgKbNQ">海洋防灾减灾科普知识</a></h4><h4 id="2024-04-10-人工智能如何助力气候研究与应用？中国科研团队获得重要进展"><a href="#2024-04-10-人工智能如何助力气候研究与应用？中国科研团队获得重要进展" class="headerlink" title="2024-04-10 人工智能如何助力气候研究与应用？中国科研团队获得重要进展"></a>2024-04-10 <a href="https://mp.weixin.qq.com/s/xzm5aMeamS4QKdBNeY04XA">人工智能如何助力气候研究与应用？中国科研团队获得重要进展</a></h4><h4 id="2024-04-10-公示：2023-年中国十大海洋科技进展评选结果"><a href="#2024-04-10-公示：2023-年中国十大海洋科技进展评选结果" class="headerlink" title="2024-04-10 公示：2023 年中国十大海洋科技进展评选结果"></a>2024-04-10 <a href="https://mp.weixin.qq.com/s/5mkvCNcdDD3gSJkcLcfTmw">公示：2023 年中国十大海洋科技进展评选结果</a></h4><h4 id="2024-04-03-Nature-3-种-AI-气候建模方法，机器学习和物理模型的「双向奔赴」"><a href="#2024-04-03-Nature-3-种-AI-气候建模方法，机器学习和物理模型的「双向奔赴」" class="headerlink" title="2024-04-03  Nature | 3 种 AI 气候建模方法，机器学习和物理模型的「双向奔赴」"></a>2024-04-03 <a href="https://mp.weixin.qq.com/s/Lt5FCHMewjsWEfPfjdFTVA"> Nature | 3 种 AI 气候建模方法，机器学习和物理模型的「双向奔赴」</a></h4><h4 id="2024-04-02-人工智能技术在气象中的应用现状和未来发展思考"><a href="#2024-04-02-人工智能技术在气象中的应用现状和未来发展思考" class="headerlink" title="2024-04-02 人工智能技术在气象中的应用现状和未来发展思考"></a>2024-04-02 <a href="https://mp.weixin.qq.com/s/hTYJqGOK5myToVJJnisdvg">人工智能技术在气象中的应用现状和未来发展思考</a></h4><h4 id="2024-04-01-利用深度学习预报美国东北部日降水分布"><a href="#2024-04-01-利用深度学习预报美国东北部日降水分布" class="headerlink" title="2024-04-01 利用深度学习预报美国东北部日降水分布"></a>2024-04-01 <a href="https://mp.weixin.qq.com/s/-dKskBj9_uJNhT5z4yn8hg">利用深度学习预报美国东北部日降水分布</a></h4><h2 id="2024-03"><a href="#2024-03" class="headerlink" title="2024-03"></a>2024-03</h2><h4 id="2024-03-30-舟山打造“数字海洋”核心品牌-核心产业增加连续五年增速超-10"><a href="#2024-03-30-舟山打造“数字海洋”核心品牌-核心产业增加连续五年增速超-10" class="headerlink" title="2024-03-30 舟山打造“数字海洋”核心品牌 核心产业增加连续五年增速超 10%"></a>2024-03-30 <a href="https://mp.weixin.qq.com/s/iiwQNJtEU51oRWRWpCHajQ">舟山打造“数字海洋”核心品牌 核心产业增加连续五年增速超 10%</a></h4><h4 id="2024-03-28-许小峰-全球变暖导致近年来致极端事件频发和气候系统失衡"><a href="#2024-03-28-许小峰-全球变暖导致近年来致极端事件频发和气候系统失衡" class="headerlink" title="2024-03-28 许小峰 | 全球变暖导致近年来致极端事件频发和气候系统失衡"></a>2024-03-28 <a href="https://mp.weixin.qq.com/s/8yzD7DsKi3gydAw3THMwoQ">许小峰 | 全球变暖导致近年来致极端事件频发和气候系统失衡</a></h4><h4 id="2024-03-26-去年气象信息为公众挽回损失达-5600-亿元"><a href="#2024-03-26-去年气象信息为公众挽回损失达-5600-亿元" class="headerlink" title="2024-03-26 去年气象信息为公众挽回损失达 5600 亿元"></a>2024-03-26 <a href="https://mp.weixin.qq.com/s/JW_na6I5kmMQJYEwtOXI_g">去年气象信息为公众挽回损失达 5600 亿元</a></h4><h4 id="2024-03-26-在人工智能时代构建可学习气候模式的新视角"><a href="#2024-03-26-在人工智能时代构建可学习气候模式的新视角" class="headerlink" title="2024-03-26 在人工智能时代构建可学习气候模式的新视角"></a>2024-03-26 <a href="https://mp.weixin.qq.com/s/c4i1Koew5GxQdwADV8-lSQ">在人工智能时代构建可学习气候模式的新视角</a></h4><h4 id="2024-03-24-数字孪生地球：我国发布下一代大气数值模式，基础算法完全自主"><a href="#2024-03-24-数字孪生地球：我国发布下一代大气数值模式，基础算法完全自主" class="headerlink" title="2024-03-24 数字孪生地球：我国发布下一代大气数值模式，基础算法完全自主"></a>2024-03-24 <a href="https://mp.weixin.qq.com/s/94Zkl5lk5jeYIHWI5kxJHg">数字孪生地球：我国发布下一代大气数值模式，基础算法完全自主</a></h4><h4 id="2024-03-23-数字孪生地球：我国发布下一代大气数值模式，基础算法完全自主"><a href="#2024-03-23-数字孪生地球：我国发布下一代大气数值模式，基础算法完全自主" class="headerlink" title="2024-03-23 数字孪生地球：我国发布下一代大气数值模式，基础算法完全自主"></a>2024-03-23 <a href="https://mp.weixin.qq.com/s/lDqiusMGF-xHUE-KgTNmqw">数字孪生地球：我国发布下一代大气数值模式，基础算法完全自主</a></h4><h4 id="2024-03-22-新突破！首款国产全球模式气象一体机在江苏昆山发布"><a href="#2024-03-22-新突破！首款国产全球模式气象一体机在江苏昆山发布" class="headerlink" title="2024-03-22 新突破！首款国产全球模式气象一体机在江苏昆山发布"></a>2024-03-22 <a href="https://mp.weixin.qq.com/s/M-f37XAfeiR-JHBkRrPB0Q">新突破！首款国产全球模式气象一体机在江苏昆山发布</a></h4><h4 id="2024-03-20-王东晓等：2023-年海洋气象研究热点"><a href="#2024-03-20-王东晓等：2023-年海洋气象研究热点" class="headerlink" title="2024-03-20 王东晓等：2023 年海洋气象研究热点"></a>2024-03-20 <a href="https://mp.weixin.qq.com/s/gPxye5h3VdUnCZVqNapH1w">王东晓等：2023 年海洋气象研究热点</a></h4><h4 id="2024-03-19-低空经济：气象科技赋能的新质生产力"><a href="#2024-03-19-低空经济：气象科技赋能的新质生产力" class="headerlink" title="2024-03-19 低空经济：气象科技赋能的新质生产力"></a>2024-03-19 <a href="https://mp.weixin.qq.com/s/i5YpQgNxJu6nrTVXlNJ1Cw">低空经济：气象科技赋能的新质生产力</a></h4><h4 id="2024-03-18-学术会议一览表-2024-年-气象-x2F-大气科学及相关领域"><a href="#2024-03-18-学术会议一览表-2024-年-气象-x2F-大气科学及相关领域" class="headerlink" title="2024-03-18 学术会议一览表 |2024 年 | 气象&#x2F;大气科学及相关领域"></a>2024-03-18 <a href="https://mp.weixin.qq.com/s/BS9kcr87agDTBVe2ffJJdg">学术会议一览表 |2024 年 | 气象&#x2F;大气科学及相关领域</a></h4><h4 id="2024-03-15-微尺度模式-｜-实现-10-米级分辨率-赋能精细化气象服务"><a href="#2024-03-15-微尺度模式-｜-实现-10-米级分辨率-赋能精细化气象服务" class="headerlink" title="2024-03-15 微尺度模式 ｜ 实现 10 米级分辨率 赋能精细化气象服务"></a>2024-03-15 <a href="https://mp.weixin.qq.com/s/eDr7Ci34bVFqbKoHsDIb6Q">微尺度模式 ｜ 实现 10 米级分辨率 赋能精细化气象服务</a></h4><h4 id="2024-03-15-天气-气候-2024-年度国家自然科学基金区域创新发展联合基金项目指南"><a href="#2024-03-15-天气-气候-2024-年度国家自然科学基金区域创新发展联合基金项目指南" class="headerlink" title="2024-03-15 天气 + 气候 | 2024 年度国家自然科学基金区域创新发展联合基金项目指南"></a>2024-03-15 <a href="https://mp.weixin.qq.com/s/TbHelUFqOj3fHgvSjd5U8Q">天气 + 气候 | 2024 年度国家自然科学基金区域创新发展联合基金项目指南</a></h4><h4 id="2024-03-13-“全球天气—气候精细化预测数据集”获数据知识产权登记证书"><a href="#2024-03-13-“全球天气—气候精细化预测数据集”获数据知识产权登记证书" class="headerlink" title="2024-03-13 “全球天气—气候精细化预测数据集”获数据知识产权登记证书"></a>2024-03-13 <a href="https://mp.weixin.qq.com/s/BNu64ZH0xDqLJrNcU3DOtg">“全球天气—气候精细化预测数据集”获数据知识产权登记证书</a></h4><h4 id="2024-03-12-损失函数汇总"><a href="#2024-03-12-损失函数汇总" class="headerlink" title="2024-03-12 损失函数汇总"></a>2024-03-12 <a href="https://mp.weixin.qq.com/s/s-oBooNg2F5G4GP83ZyzJg">损失函数汇总</a></h4><h4 id="2024-03-11-将海洋能源转化为海洋算力！把数据存进海底——探访全球首个商用海底数据中心"><a href="#2024-03-11-将海洋能源转化为海洋算力！把数据存进海底——探访全球首个商用海底数据中心" class="headerlink" title="2024-03-11 将海洋能源转化为海洋算力！把数据存进海底——探访全球首个商用海底数据中心"></a>2024-03-11 <a href="https://mp.weixin.qq.com/s/RJjDO-bdjSc1vrLV15mJSg">将海洋能源转化为海洋算力！把数据存进海底——探访全球首个商用海底数据中心</a></h4><h4 id="2024-03-07-专刊推荐-地球大数据赋能智能减灾"><a href="#2024-03-07-专刊推荐-地球大数据赋能智能减灾" class="headerlink" title="2024-03-07 专刊推荐 | 地球大数据赋能智能减灾"></a>2024-03-07 <a href="https://mp.weixin.qq.com/s/BSm31fA0U4PwFcoKoapsBQ">专刊推荐 | 地球大数据赋能智能减灾</a></h4><h4 id="2024-03-06-Science-Advances-融合物理知识的“气候不变”机器学习，提高气候预测能力"><a href="#2024-03-06-Science-Advances-融合物理知识的“气候不变”机器学习，提高气候预测能力" class="headerlink" title="2024-03-06 Science Advances | 融合物理知识的“气候不变”机器学习，提高气候预测能力"></a>2024-03-06 <a href="https://mp.weixin.qq.com/s/HtNSPOFFJnfzUTQ5ooCciw">Science Advances | 融合物理知识的“气候不变”机器学习，提高气候预测能力</a></h4><h4 id="2024-03-06-AGU-新书：在大尺度模型中考虑小尺度过程"><a href="#2024-03-06-AGU-新书：在大尺度模型中考虑小尺度过程" class="headerlink" title="2024-03-06 AGU 新书：在大尺度模型中考虑小尺度过程"></a>2024-03-06 <a href="https://mp.weixin.qq.com/s/1MYBh7HusyFUWWcy-EDpRg">AGU 新书：在大尺度模型中考虑小尺度过程</a></h4><h4 id="2024-03-04-郭华东院士-地球大数据缘起和进展"><a href="#2024-03-04-郭华东院士-地球大数据缘起和进展" class="headerlink" title="2024-03-04 郭华东院士 | 地球大数据缘起和进展"></a>2024-03-04 <a href="https://mp.weixin.qq.com/s/6acA49K546sQPsFAVP1yWA">郭华东院士 | 地球大数据缘起和进展</a></h4><h4 id="2024-03-03-数据获取-基于-openmeteo-下载最新-EC-aifs-预报数据"><a href="#2024-03-03-数据获取-基于-openmeteo-下载最新-EC-aifs-预报数据" class="headerlink" title="2024-03-03 数据获取 | 基于 openmeteo 下载最新 EC aifs 预报数据"></a>2024-03-03 <a href="https://mp.weixin.qq.com/s/AkRwtGKthmFJ6z5WKKOOMA">数据获取 | 基于 openmeteo 下载最新 EC aifs 预报数据</a></h4><h4 id="2024-03-02-AI-气象预报进入-10-公里级时代，上海-AI-实验室联合国家级气象机构发布风乌-GHR"><a href="#2024-03-02-AI-气象预报进入-10-公里级时代，上海-AI-实验室联合国家级气象机构发布风乌-GHR" class="headerlink" title="2024-03-02 AI 气象预报进入 10 公里级时代，上海 AI 实验室联合国家级气象机构发布风乌 GHR"></a>2024-03-02 <a href="https://mp.weixin.qq.com/s/0J-9O7OejrQDYvsl8c658Q">AI 气象预报进入 10 公里级时代，上海 AI 实验室联合国家级气象机构发布风乌 GHR</a></h4><h4 id="2024-03-01-气象新闻速览-广东建成南方海洋牧场气象服务中心"><a href="#2024-03-01-气象新闻速览-广东建成南方海洋牧场气象服务中心" class="headerlink" title="2024-03-01 气象新闻速览 | 广东建成南方海洋牧场气象服务中心"></a>2024-03-01 <a href="https://mp.weixin.qq.com/s/6xoLksEDV7VvAnqK0wSjZA">气象新闻速览 | 广东建成南方海洋牧场气象服务中心</a></h4><h4 id="2024-03-01-自然资源部海洋一所在海浪波高智能降尺度模型方面取得新进展！"><a href="#2024-03-01-自然资源部海洋一所在海浪波高智能降尺度模型方面取得新进展！" class="headerlink" title="2024-03-01 自然资源部海洋一所在海浪波高智能降尺度模型方面取得新进展！"></a>2024-03-01 <a href="https://mp.weixin.qq.com/s/zo5i1KpoiCLr_7_kst6RHA">自然资源部海洋一所在海浪波高智能降尺度模型方面取得新进展！</a></h4><h2 id="2024-02"><a href="#2024-02" class="headerlink" title="2024-02"></a>2024-02</h2><h4 id="2024-02-28-气象学中正在发生的人工智能革命"><a href="#2024-02-28-气象学中正在发生的人工智能革命" class="headerlink" title="2024-02-28 气象学中正在发生的人工智能革命"></a>2024-02-28 <a href="https://mp.weixin.qq.com/s/WKCCC-sXehP1JmVNo1ZfUA">气象学中正在发生的人工智能革命</a></h4><h4 id="2024-02-27-“金融-气象”可以做什么？"><a href="#2024-02-27-“金融-气象”可以做什么？" class="headerlink" title="2024-02-27 “金融 + 气象”可以做什么？"></a>2024-02-27 <a href="https://mp.weixin.qq.com/s/VCOJwa89U1xAo5YCuaoogA">“金融 + 气象”可以做什么？</a></h4><h4 id="2024-02-27-论文推荐-CMA-数值模式对台风“杜苏芮”-2305-的预报性能分析"><a href="#2024-02-27-论文推荐-CMA-数值模式对台风“杜苏芮”-2305-的预报性能分析" class="headerlink" title="2024-02-27 论文推荐 | CMA 数值模式对台风“杜苏芮”(2305)的预报性能分析"></a>2024-02-27 <a href="https://mp.weixin.qq.com/s/6KwibWpYlWHvApphS0hz7A">论文推荐 | CMA 数值模式对台风“杜苏芮”(2305)的预报性能分析</a></h4><h4 id="2024-02-25-基于大气所铁塔照片的能见度识别"><a href="#2024-02-25-基于大气所铁塔照片的能见度识别" class="headerlink" title="2024-02-25 基于大气所铁塔照片的能见度识别"></a>2024-02-25 <a href="https://mp.weixin.qq.com/s/je_aq1PeT0QasqCoAQf1OA">基于大气所铁塔照片的能见度识别</a></h4><h4 id="2024-02-25-ECMWF-IFS-预报升级到-0-25°-分辨率"><a href="#2024-02-25-ECMWF-IFS-预报升级到-0-25°-分辨率" class="headerlink" title="2024-02-25 ECMWF IFS 预报升级到 0.25° 分辨率"></a>2024-02-25 <a href="https://mp.weixin.qq.com/s/akPy7UEiuWqC2BCUxdXpxw">ECMWF IFS 预报升级到 0.25° 分辨率</a></h4><h4 id="2024-02-23-研究让使用人工智能预测未来气候的算法变得更“可靠”"><a href="#2024-02-23-研究让使用人工智能预测未来气候的算法变得更“可靠”" class="headerlink" title="2024-02-23 研究让使用人工智能预测未来气候的算法变得更“可靠”"></a>2024-02-23 <a href="https://mp.weixin.qq.com/s/xohG5clrrL0nMLTEGyYJsw">研究让使用人工智能预测未来气候的算法变得更“可靠”</a></h4><h4 id="2024-02-23-最新报告！2023-年海洋主要气候变化指标均创新高"><a href="#2024-02-23-最新报告！2023-年海洋主要气候变化指标均创新高" class="headerlink" title="2024-02-23 最新报告！2023 年海洋主要气候变化指标均创新高"></a>2024-02-23 <a href="https://mp.weixin.qq.com/s/sNG4FSJCoxsAj2jLdD8McQ">最新报告！2023 年海洋主要气候变化指标均创新高</a></h4><h4 id="2024-02-19-《地球的未来》-研究使用神经网络从温度的自然变异性中区分气候信号"><a href="#2024-02-19-《地球的未来》-研究使用神经网络从温度的自然变异性中区分气候信号" class="headerlink" title="2024-02-19 《地球的未来》| 研究使用神经网络从温度的自然变异性中区分气候信号"></a>2024-02-19 <a href="https://mp.weixin.qq.com/s/QzZdOuatW2nVW8vbrvXx8A">《地球的未来》| 研究使用神经网络从温度的自然变异性中区分气候信号</a></h4><h4 id="2024-02-16-南京大学张彦旭教授课题组在利用机器学习方法结合流体力学模型和城市形态学数据预测超高精度空气质量研究方面取得新进展"><a href="#2024-02-16-南京大学张彦旭教授课题组在利用机器学习方法结合流体力学模型和城市形态学数据预测超高精度空气质量研究方面取得新进展" class="headerlink" title="2024-02-16 南京大学张彦旭教授课题组在利用机器学习方法结合流体力学模型和城市形态学数据预测超高精度空气质量研究方面取得新进展"></a>2024-02-16 <a href="https://mp.weixin.qq.com/s/2DzzQethceyYw_y2ChbxhA">南京大学张彦旭教授课题组在利用机器学习方法结合流体力学模型和城市形态学数据预测超高精度空气质量研究方面取得新进展</a></h4><h4 id="2024-02-16-河南首次实现在超算平台部署国产自主可控区域高分辨率数值预报模式"><a href="#2024-02-16-河南首次实现在超算平台部署国产自主可控区域高分辨率数值预报模式" class="headerlink" title="2024-02-16 河南首次实现在超算平台部署国产自主可控区域高分辨率数值预报模式"></a>2024-02-16 <a href="https://mp.weixin.qq.com/s/OEoqS2B28NXRedC_XQ9flw">河南首次实现在超算平台部署国产自主可控区域高分辨率数值预报模式</a></h4><h4 id="2024-02-12-Nature-最新！受台风威胁的人数在急剧增长"><a href="#2024-02-12-Nature-最新！受台风威胁的人数在急剧增长" class="headerlink" title="2024-02-12 Nature 最新！受台风威胁的人数在急剧增长"></a>2024-02-12 <a href="https://mp.weixin.qq.com/s/il74vvvx5VX9AW4z6oy1VQ">Nature 最新！受台风威胁的人数在急剧增长</a></h4><h4 id="2024-02-12-关于现有预报气象大模型的能力上限思考"><a href="#2024-02-12-关于现有预报气象大模型的能力上限思考" class="headerlink" title="2024-02-12 关于现有预报气象大模型的能力上限思考"></a>2024-02-12 <a href="https://mp.weixin.qq.com/s/iTxJtccFc4VFtw9FHkAAlw">关于现有预报气象大模型的能力上限思考</a></h4><h4 id="2024-02-10-首席-AI-教育者-Sebastian-Raschka-博士推荐的-2023-年最具影响力的-10-篇-AI-论文"><a href="#2024-02-10-首席-AI-教育者-Sebastian-Raschka-博士推荐的-2023-年最具影响力的-10-篇-AI-论文" class="headerlink" title="2024-02-10 首席 AI 教育者 Sebastian Raschka 博士推荐的 2023 年最具影响力的 10 篇 AI 论文"></a>2024-02-10 <a href="https://mp.weixin.qq.com/s/DH42RwaFvYO8zZy9u3bJqQ">首席 AI 教育者 Sebastian Raschka 博士推荐的 2023 年最具影响力的 10 篇 AI 论文</a></h4><h4 id="2024-02-08-国防科技大学牵头研制全球高分辨率海洋预报大模型“羲和”，预报准确率达到世界先进数值预报业务系统水平"><a href="#2024-02-08-国防科技大学牵头研制全球高分辨率海洋预报大模型“羲和”，预报准确率达到世界先进数值预报业务系统水平" class="headerlink" title="2024-02-08 国防科技大学牵头研制全球高分辨率海洋预报大模型“羲和”，预报准确率达到世界先进数值预报业务系统水平"></a>2024-02-08 <a href="https://mp.weixin.qq.com/s/PQXRDW-VSTtf8SrUXlcGCA">国防科技大学牵头研制全球高分辨率海洋预报大模型“羲和”，预报准确率达到世界先进数值预报业务系统水平</a></h4><h4 id="2024-02-27-数据分析-Prepbufr-格式数据介绍、解码及可视化"><a href="#2024-02-27-数据分析-Prepbufr-格式数据介绍、解码及可视化" class="headerlink" title="2024-02-27 数据分析 | Prepbufr 格式数据介绍、解码及可视化"></a>2024-02-27 <a href="https://mp.weixin.qq.com/s/tJ4bv_hF2nazRDTC13Crgw">数据分析 | Prepbufr 格式数据介绍、解码及可视化</a></h4><h4 id="2024-02-05-人工智能在气候预测领域应用初探（一）"><a href="#2024-02-05-人工智能在气候预测领域应用初探（一）" class="headerlink" title="2024-02-05 人工智能在气候预测领域应用初探（一）"></a>2024-02-05 <a href="https://mp.weixin.qq.com/s/xHvLfr_WUeo3kHLZ5g_Ztw">人工智能在气候预测领域应用初探（一）</a></h4><h4 id="2024-02-05-利用降尺度网格气候数据提升气象指数保险的抗风险保障能力"><a href="#2024-02-05-利用降尺度网格气候数据提升气象指数保险的抗风险保障能力" class="headerlink" title="2024-02-05 利用降尺度网格气候数据提升气象指数保险的抗风险保障能力"></a>2024-02-05 <a href="https://mp.weixin.qq.com/s/1wOvLJ54V8fZYSkVsU5b8g">利用降尺度网格气候数据提升气象指数保险的抗风险保障能力</a></h4><h4 id="2024-02-02-河口海岸数字孪生建设与挑战"><a href="#2024-02-02-河口海岸数字孪生建设与挑战" class="headerlink" title="2024-02-02 河口海岸数字孪生建设与挑战"></a>2024-02-02 <a href="https://mp.weixin.qq.com/s/O9g09Eoj3jaMSni6Rmq74w">河口海岸数字孪生建设与挑战</a></h4><h4 id="2024-02-01-无缝隙地球系统理念下世界气象中心发展趋势浅析"><a href="#2024-02-01-无缝隙地球系统理念下世界气象中心发展趋势浅析" class="headerlink" title="2024-02-01 无缝隙地球系统理念下世界气象中心发展趋势浅析"></a>2024-02-01 <a href="https://mp.weixin.qq.com/s/WO2v8Z0knb_2xMoLKF9zRA">无缝隙地球系统理念下世界气象中心发展趋势浅析</a></h4><h4 id="2024-02-01-中国高分辨率高质量近地表空气污染物数据集更新至-2022-年，空间分辨率均提高到-1-公里"><a href="#2024-02-01-中国高分辨率高质量近地表空气污染物数据集更新至-2022-年，空间分辨率均提高到-1-公里" class="headerlink" title="2024-02-01 中国高分辨率高质量近地表空气污染物数据集更新至 2022 年，空间分辨率均提高到 1 公里"></a>2024-02-01 <a href="https://mp.weixin.qq.com/s/2V_OPPZ7Nh019Zod3jKFYg">中国高分辨率高质量近地表空气污染物数据集更新至 2022 年，空间分辨率均提高到 1 公里</a></h4><h2 id="2024-01"><a href="#2024-01" class="headerlink" title="2024-01"></a>2024-01</h2><h4 id="2024-01-31-无缝隙地球系统理念下世界气象中心发展趋势浅析"><a href="#2024-01-31-无缝隙地球系统理念下世界气象中心发展趋势浅析" class="headerlink" title="2024-01-31 无缝隙地球系统理念下世界气象中心发展趋势浅析"></a>2024-01-31 <a href="https://mp.weixin.qq.com/s/u2M_m_zBch9wKbAFR9CRyw">无缝隙地球系统理念下世界气象中心发展趋势浅析</a></h4><h4 id="2024-01-30-郭华东院士：地球大数据缘起和进展"><a href="#2024-01-30-郭华东院士：地球大数据缘起和进展" class="headerlink" title="2024-01-30 郭华东院士：地球大数据缘起和进展"></a>2024-01-30 <a href="https://mp.weixin.qq.com/s/00XCMZmmT_RZW-SygIYa6g">郭华东院士：地球大数据缘起和进展</a></h4><h4 id="2024-01-27-海洋传感器分类特点及其发展应用"><a href="#2024-01-27-海洋传感器分类特点及其发展应用" class="headerlink" title="2024-01-27 海洋传感器分类特点及其发展应用"></a>2024-01-27 <a href="https://mp.weixin.qq.com/s/nz-hF4sH1100-Wew9ZQi-Q">海洋传感器分类特点及其发展应用</a></h4><h4 id="2024-01-26-天气雷达基数据处理"><a href="#2024-01-26-天气雷达基数据处理" class="headerlink" title="2024-01-26 天气雷达基数据处理"></a>2024-01-26 <a href="https://mp.weixin.qq.com/s/eCqxwwbWRG_Fop0RRvt2zg">天气雷达基数据处理</a></h4><h4 id="2024-01-26-物理耦合图神经网络提升降水预报技巧"><a href="#2024-01-26-物理耦合图神经网络提升降水预报技巧" class="headerlink" title="2024-01-26 物理耦合图神经网络提升降水预报技巧"></a>2024-01-26 <a href="https://mp.weixin.qq.com/s/QwukyXg8Ds3hWzYh_v_46A">物理耦合图神经网络提升降水预报技巧</a></h4><h4 id="2024-01-26-机器学习必须了解的-7-种交叉验证方法"><a href="#2024-01-26-机器学习必须了解的-7-种交叉验证方法" class="headerlink" title="2024-01-26 机器学习必须了解的 7 种交叉验证方法"></a>2024-01-26 <a href="https://mp.weixin.qq.com/s/u1Q1_ck31ePnN2zgKqNiyQ">机器学习必须了解的 7 种交叉验证方法</a></h4><h4 id="2024-01-26-10-米级分辨率微尺度模式赋能精细化气象服务"><a href="#2024-01-26-10-米级分辨率微尺度模式赋能精细化气象服务" class="headerlink" title="2024-01-26 10 米级分辨率微尺度模式赋能精细化气象服务"></a>2024-01-26 <a href="https://mp.weixin.qq.com/s/97zH17KbgNP9xPNc0IhHwg">10 米级分辨率微尺度模式赋能精细化气象服务</a></h4><h4 id="2024-01-26-GRL-年最大地表风速对全球变暖的响应"><a href="#2024-01-26-GRL-年最大地表风速对全球变暖的响应" class="headerlink" title="2024-01-26 GRL: 年最大地表风速对全球变暖的响应"></a>2024-01-26 <a href="https://mp.weixin.qq.com/s/N-L2Gt5pm9uEc3W_PrbhvQ">GRL: 年最大地表风速对全球变暖的响应</a></h4><h4 id="2024-01-25-ECMWF-重磅推出新集合预报模型-AIFS"><a href="#2024-01-25-ECMWF-重磅推出新集合预报模型-AIFS" class="headerlink" title="2024-01-25 ECMWF 重磅推出新集合预报模型 AIFS"></a>2024-01-25 <a href="https://mp.weixin.qq.com/s/XLqrw3M9teADOfjosukCIQ">ECMWF 重磅推出新集合预报模型 AIFS</a></h4><h4 id="2024-01-25-国家气象信息中心师春香课题组，深度统计降尺度方向文章合集"><a href="#2024-01-25-国家气象信息中心师春香课题组，深度统计降尺度方向文章合集" class="headerlink" title="2024-01-25 国家气象信息中心师春香课题组，深度统计降尺度方向文章合集"></a>2024-01-25 <a href="https://mp.weixin.qq.com/s/mfPXk-MxFvxrGJxT0g6N8w">国家气象信息中心师春香课题组，深度统计降尺度方向文章合集</a></h4><h4 id="2024-01-24-“粤港澳大湾区台风风暴潮数值预报系统研制”项目年会顺利召开"><a href="#2024-01-24-“粤港澳大湾区台风风暴潮数值预报系统研制”项目年会顺利召开" class="headerlink" title="2024-01-24 “粤港澳大湾区台风风暴潮数值预报系统研制”项目年会顺利召开"></a>2024-01-24 <a href="https://mp.weixin.qq.com/s/wJkgpRy4YobdXEezH-P4kw">“粤港澳大湾区台风风暴潮数值预报系统研制”项目年会顺利召开</a></h4><h4 id="2024-01-24-发展气象经济需要有值得消费的东西"><a href="#2024-01-24-发展气象经济需要有值得消费的东西" class="headerlink" title="2024-01-24 发展气象经济需要有值得消费的东西"></a>2024-01-24 <a href="https://mp.weixin.qq.com/s/Ld-T6rtNl6n-BVERBNxhkQ">发展气象经济需要有值得消费的东西</a></h4><h4 id="2024-01-24-聊一聊机器学习在-WRF-模型上的应用"><a href="#2024-01-24-聊一聊机器学习在-WRF-模型上的应用" class="headerlink" title="2024-01-24 聊一聊机器学习在 WRF 模型上的应用"></a>2024-01-24 <a href="https://mp.weixin.qq.com/s/a2fyGpGCUKC1mrzxBHJyUQ">聊一聊机器学习在 WRF 模型上的应用</a></h4><h4 id="2024-01-24-罕见！WRF-计算-LWC-与-IWC-及可视化"><a href="#2024-01-24-罕见！WRF-计算-LWC-与-IWC-及可视化" class="headerlink" title="2024-01-24 罕见！WRF 计算 LWC 与 IWC 及可视化"></a>2024-01-24 <a href="https://mp.weixin.qq.com/s/8MyFQi9zD-zYo2iXS9803Q">罕见！WRF 计算 LWC 与 IWC 及可视化</a></h4><h4 id="2024-01-19-中国气象局全球同化预报系统（CMA-GFS）V4-0-正式业务运行"><a href="#2024-01-19-中国气象局全球同化预报系统（CMA-GFS）V4-0-正式业务运行" class="headerlink" title="2024-01-19 中国气象局全球同化预报系统（CMA-GFS）V4.0 正式业务运行"></a>2024-01-19 <a href="https://mp.weixin.qq.com/s/q7HFTHogAf4ICVMqoDhKxw">中国气象局全球同化预报系统（CMA-GFS）V4.0 正式业务运行</a></h4><h4 id="2024-01-16-EarthNets-一个用于评估深度学习模型的地球观测数据平台"><a href="#2024-01-16-EarthNets-一个用于评估深度学习模型的地球观测数据平台" class="headerlink" title="2024-01-16 EarthNets:一个用于评估深度学习模型的地球观测数据平台"></a>2024-01-16 <a href="https://mp.weixin.qq.com/s/zMHZypwyQ6W_5H0Jus4XGA">EarthNets:一个用于评估深度学习模型的地球观测数据平台</a></h4><h4 id="2024-01-14-渤海-1-小时-x2F-5-公里海雾多源数据融合产品-V1-0-通过中国气象局业务准入评审"><a href="#2024-01-14-渤海-1-小时-x2F-5-公里海雾多源数据融合产品-V1-0-通过中国气象局业务准入评审" class="headerlink" title="2024-01-14 渤海 1 小时&#x2F;5 公里海雾多源数据融合产品 V1.0 通过中国气象局业务准入评审"></a>2024-01-14 <a href="https://mp.weixin.qq.com/s/tnox0DOETUaCqlYTzcsrcw">渤海 1 小时&#x2F;5 公里海雾多源数据融合产品 V1.0 通过中国气象局业务准入评审</a></h4><h4 id="2024-01-14-探索未来气候预测的新纪元：NeuralGCM-的革命性突破"><a href="#2024-01-14-探索未来气候预测的新纪元：NeuralGCM-的革命性突破" class="headerlink" title="2024-01-14 探索未来气候预测的新纪元：NeuralGCM 的革命性突破"></a>2024-01-14 <a href="https://mp.weixin.qq.com/s/s-h-cCEI3GDDJsov924IBQ">探索未来气候预测的新纪元：NeuralGCM 的革命性突破</a></h4><h4 id="2024-01-09-Nature-子刊-人工智能揭示极端降水对气候变化的敏感性及其空间差异"><a href="#2024-01-09-Nature-子刊-人工智能揭示极端降水对气候变化的敏感性及其空间差异" class="headerlink" title="2024-01-09 Nature 子刊 | 人工智能揭示极端降水对气候变化的敏感性及其空间差异"></a>2024-01-09 <a href="https://mp.weixin.qq.com/s/WMuh99xPbQA4lr-GvuhCuw">Nature 子刊 | 人工智能揭示极端降水对气候变化的敏感性及其空间差异</a></h4><h4 id="2024-01-09-微关注-｜-丁一汇：全球变暖已进入气候变化新常态"><a href="#2024-01-09-微关注-｜-丁一汇：全球变暖已进入气候变化新常态" class="headerlink" title="2024-01-09 微关注 ｜ 丁一汇：全球变暖已进入气候变化新常态"></a>2024-01-09 <a href="https://mp.weixin.qq.com/s/vYHfyHB2eTlpfdkCIZP9Ww">微关注 ｜ 丁一汇：全球变暖已进入气候变化新常态</a></h4><h4 id="2024-01-03-新方法！利用视频超分技术实现降水场时空降尺度"><a href="#2024-01-03-新方法！利用视频超分技术实现降水场时空降尺度" class="headerlink" title="2024-01-03 新方法！利用视频超分技术实现降水场时空降尺度"></a>2024-01-03 <a href="https://mp.weixin.qq.com/s/_Lug8hBSD3PHfaZ4dUpxVA">新方法！利用视频超分技术实现降水场时空降尺度</a></h4>]]></content>
      <categories>
        <category>Recharge</category>
      </categories>
  </entry>
  <entry>
    <title>Atmospheric Dynamics</title>
    <url>/2022/05/01/Recharge/Atmospheric%20Dynamics/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Chapter05-Part01-Norwegian-Cyclone-Model"><a href="#Chapter05-Part01-Norwegian-Cyclone-Model" class="headerlink" title="Chapter05 Part01 Norwegian Cyclone Model"></a>Chapter05 Part01 Norwegian Cyclone Model</h3><p><img src="https://p.ipic.vip/sxete5.jpg" alt="Screenshot 2022-11-07 at 21.12.40"></p>
<p><img src="https://p.ipic.vip/3bh999.jpg" alt="Screenshot 2022-11-07 at 21.13.43"></p>
<p><img src="https://p.ipic.vip/qpas7v.jpg" alt="Screenshot 2022-11-07 at 21.15.23"></p>
<p><img src="https://p.ipic.vip/sx85g3.jpg" alt="Screenshot 2022-11-07 at 21.16.45"></p>
<p><img src="https://p.ipic.vip/77ksao.jpg" alt="Screenshot 2022-11-07 at 21.17.42"></p>
<p><img src="https://p.ipic.vip/6z5q6v.jpg" alt="Screenshot 2022-11-07 at 21.18.02"></p>
<p><img src="https://p.ipic.vip/9pghos.jpg" alt="Screenshot 2022-11-07 at 21.19.33"></p>
<p><img src="https://p.ipic.vip/99tmfv.jpg" alt="Screenshot 2022-11-07 at 21.20.13"></p>
<p><img src="https://p.ipic.vip/aqx0h1.jpg" alt="Screenshot 2022-11-07 at 21.20.57"></p>
<p><img src="https://p.ipic.vip/34x71r.jpg" alt="Screenshot 2022-11-07 at 21.21.56"></p>
<p><img src="https://p.ipic.vip/rc5n06.jpg" alt="Screenshot 2022-11-07 at 21.22.24"></p>
<p><img src="https://p.ipic.vip/3f4y5m.jpg" alt="Screenshot 2022-11-07 at 21.23.30"></p>
<p><img src="https://p.ipic.vip/ozhkn2.jpg" alt="Screenshot 2022-11-07 at 21.24.54"></p>
<h3 id="Chapter05-Part02-Equations-Of-QG-Theory"><a href="#Chapter05-Part02-Equations-Of-QG-Theory" class="headerlink" title="Chapter05 Part02 Equations Of QG Theory"></a>Chapter05 Part02 Equations Of QG Theory</h3><p><img src="https://p.ipic.vip/tj4uwg.jpg" alt="Screenshot 2022-11-07 at 22.06.24"></p>
<h3 id="Chapter05-Part06-Baroclinic-Instability"><a href="#Chapter05-Part06-Baroclinic-Instability" class="headerlink" title="Chapter05 Part06 Baroclinic Instability"></a>Chapter05 Part06 Baroclinic Instability</h3><p><img src="https://p.ipic.vip/azds5h.jpg" alt="Screenshot 2022-11-07 at 21.00.47"></p>
<p><img src="https://p.ipic.vip/skypvz.jpg" alt="Screenshot 2022-11-07 at 21.03.13"></p>
<p><img src="https://p.ipic.vip/zex4a3.jpg" alt="Screenshot 2022-11-07 at 21.03.25"></p>
<p><img src="https://p.ipic.vip/a90aga.jpg" alt="Screenshot 2022-11-07 at 21.04.20"></p>
<p><img src="https://p.ipic.vip/lnr1cz.jpg" alt="Screenshot 2022-11-07 at 21.05.30"></p>
<p><img src="https://p.ipic.vip/x1eqn5.jpg" alt="Screenshot 2022-11-07 at 21.07.19"></p>
]]></content>
      <categories>
        <category>Recharge</category>
      </categories>
  </entry>
  <entry>
    <title>Climate Dynamics</title>
    <url>/2022/05/01/Recharge/Climate%20Dynamics/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Lecture-07-The-Oceans"><a href="#Lecture-07-The-Oceans" class="headerlink" title="Lecture 07 The Oceans"></a>Lecture 07 The Oceans</h3><p><img src="https://p.ipic.vip/5pcxz6.jpg" alt="Screenshot 2022-11-07 at 17.38.38"></p>
<p><img src="https://p.ipic.vip/4117rd.jpg" alt="Screenshot 2022-11-07 at 17.39.07"></p>
<p><img src="https://p.ipic.vip/cfk36t.jpg" alt="Screenshot 2022-11-07 at 17.39.40"></p>
<p><img src="https://p.ipic.vip/7yit71.jpg" alt="Screenshot 2022-11-07 at 19.36.53"></p>
<p> <img src="https://p.ipic.vip/an7roz.jpg" alt="Screenshot 2022-11-07 at 19.48.24"></p>
<p><img src="https://p.ipic.vip/larl7g.jpg" alt="Screenshot 2022-11-07 at 19.49.41"></p>
<p><img src="https://p.ipic.vip/8euaw2.jpg" alt="Screenshot 2022-11-07 at 19.50.49"></p>
<p><img src="https://p.ipic.vip/sxivhr.jpg" alt="Screenshot 2022-11-07 at 19.51.51"></p>
<p><img src="https://p.ipic.vip/go1e10.jpg" alt="Screenshot 2022-11-07 at 19.53.32"></p>
<p><img src="https://p.ipic.vip/le7qt0.jpg" alt="Screenshot 2022-11-07 at 19.56.06"></p>
<p><img src="https://p.ipic.vip/1pqf49.jpg" alt="Screenshot 2022-11-07 at 19.56.49"></p>
<p><img src="https://p.ipic.vip/c7bgh0.jpg" alt="Screenshot 2022-11-07 at 19.57.19"></p>
<p><img src="https://p.ipic.vip/u1r6oh.jpg" alt="Screenshot 2022-11-07 at 19.59.14"></p>
<p><img src="https://p.ipic.vip/2jzree.jpg" alt="Screenshot 2022-11-07 at 20.01.04"></p>
<p><img src="https://p.ipic.vip/4rdaej.jpg" alt="Screenshot 2022-11-07 at 20.02.54"></p>
<p><img src="https://p.ipic.vip/slofnp.jpg" alt="Screenshot 2022-11-07 at 20.03.15"></p>
<p><img src="https://p.ipic.vip/2esfax.jpg" alt="Screenshot 2022-11-07 at 20.03.34"></p>
<p><img src="https://p.ipic.vip/8us629.jpg" alt="Screenshot 2022-11-07 at 20.07.07"></p>
<p><img src="https://p.ipic.vip/t7ptih.jpg" alt="Screenshot 2022-11-07 at 20.11.58"></p>
<p><img src="https://p.ipic.vip/3sd088.jpg" alt="Screenshot 2022-11-07 at 20.13.56"></p>
<p><img src="https://p.ipic.vip/5eivaw.jpg" alt="Screenshot 2022-11-07 at 20.15.19"></p>
<p><img src="https://p.ipic.vip/ph9ao7.jpg" alt="Screenshot 2022-11-07 at 20.18.09"></p>
<p><img src="https://p.ipic.vip/h6hkm9.jpg" alt="Screenshot 2022-11-07 at 20.19.41"></p>
<p><img src="https://p.ipic.vip/4c4c57.jpg" alt="Screenshot 2022-11-07 at 20.22.02"></p>
<p><img src="https://p.ipic.vip/4b1w9h.jpg" alt="Screenshot 2022-11-07 at 20.24.37"></p>
<p><img src="https://p.ipic.vip/as1z7s.jpg" alt="Screenshot 2022-11-07 at 20.27.18"></p>
<p><img src="https://p.ipic.vip/g6j4wi.jpg" alt="Screenshot 2022-11-07 at 20.29.08"></p>
<p><img src="https://p.ipic.vip/00hxjk.jpg" alt="Screenshot 2022-11-07 at 20.29.58"></p>
<p><img src="https://p.ipic.vip/6413qw.jpg" alt="Screenshot 2022-11-07 at 20.33.39"></p>
<p><img src="https://p.ipic.vip/r3a4ja.jpg" alt="Screenshot 2022-11-07 at 20.38.14"></p>
<p><img src="https://p.ipic.vip/whx76h.jpg" alt="Screenshot 2022-11-07 at 20.38.38"></p>
<p><img src="https://p.ipic.vip/c51a4s.jpg" alt="Screenshot 2022-11-07 at 20.45.34"></p>
<p><img src="https://p.ipic.vip/bxemm2.jpg" alt="Screenshot 2022-11-07 at 20.45.53"></p>
<p><img src="https://p.ipic.vip/9idgxr.jpg" alt="Screenshot 2022-11-07 at 20.48.00"></p>
<p><img src="https://p.ipic.vip/3i9dox.jpg" alt="Screenshot 2022-11-07 at 20.50.13"></p>
<p><img src="https://p.ipic.vip/n21lwn.jpg" alt="Screenshot 2022-11-07 at 20.50.52"></p>
<p><img src="https://p.ipic.vip/ao70dq.jpg" alt="Screenshot 2022-11-07 at 20.51.49"></p>
<p><img src="https://p.ipic.vip/nrmr60.jpg" alt="Screenshot 2022-11-07 at 20.52.23"></p>
<p><img src="https://p.ipic.vip/r66bef.jpg" alt="Screenshot 2022-11-07 at 20.52.50"></p>
<p><img src="https://p.ipic.vip/ymihub.jpg" alt="Screenshot 2022-11-07 at 20.53.21"></p>
<p><img src="https://p.ipic.vip/vi6jle.jpg" alt="Screenshot 2022-11-07 at 20.54.05"></p>
<p><img src="https://p.ipic.vip/qd8hoy.jpg" alt="Screenshot 2022-11-07 at 20.54.39"></p>
<h3 id="Lecture-08-Ocean-Dynamics"><a href="#Lecture-08-Ocean-Dynamics" class="headerlink" title="Lecture 08 Ocean Dynamics"></a>Lecture 08 Ocean Dynamics</h3><p><img src="https://p.ipic.vip/5fylwc.jpg" alt="Screenshot 2022-11-08 at 18.11.34"></p>
<p><img src="https://p.ipic.vip/aay13n.jpg" alt="Screenshot 2022-11-08 at 18.10.59"></p>
<p><img src="https://p.ipic.vip/4x8xb9.jpg" alt="Screenshot 2022-11-08 at 18.11.27"></p>
<p><img src="https://p.ipic.vip/sqstai.jpg" alt="Screenshot 2022-11-08 at 18.12.23"></p>
<p><img src="https://p.ipic.vip/k1086z.jpg" alt="Screenshot 2022-11-08 at 18.13.31"></p>
<p><img src="https://p.ipic.vip/lhxn64.jpg" alt="Screenshot 2022-11-08 at 18.14.04"></p>
<p><img src="https://p.ipic.vip/4vqrk2.jpg" alt="Screenshot 2022-11-08 at 18.14.43"></p>
<p><img src="https://p.ipic.vip/0bdgdy.jpg" alt="Screenshot 2022-11-08 at 18.17.12"></p>
<p><img src="https://p.ipic.vip/wo2qaf.jpg" alt="Screenshot 2022-11-08 at 18.21.12"></p>
<p><img src="https://p.ipic.vip/7m1u91.jpg" alt="Screenshot 2022-11-08 at 18.22.28"></p>
<p><img src="https://p.ipic.vip/jzj9bd.jpg" alt="Screenshot 2022-11-08 at 18.25.52"></p>
<p><img src="https://p.ipic.vip/5bzdqk.jpg" alt="Screenshot 2022-11-08 at 18.27.57"></p>
<p><img src="https://p.ipic.vip/jmwbav.jpg" alt="Screenshot 2022-11-08 at 18.29.44"></p>
<p><img src="https://p.ipic.vip/s1pzzb.jpg" alt="Screenshot 2022-11-08 at 20.35.03"></p>
<p><img src="https://p.ipic.vip/dmlp1g.jpg" alt="Screenshot 2022-11-08 at 20.35.31"></p>
<p><img src="https://p.ipic.vip/rg3l7d.jpg" alt="Screenshot 2022-11-08 at 20.36.05"></p>
<p><img src="https://p.ipic.vip/1lziso.jpg" alt="Screenshot 2022-11-08 at 20.39.13"></p>
<p><img src="https://p.ipic.vip/y27d1s.jpg" alt="Screenshot 2022-11-08 at 20.43.26"></p>
<p><img src="https://p.ipic.vip/twojvz.jpg" alt="Screenshot 2022-11-08 at 20.44.12"></p>
<p><img src="https://p.ipic.vip/teekwn.jpg" alt="Screenshot 2022-11-08 at 20.45.17"></p>
<p><img src="https://p.ipic.vip/ctk9f0.jpg" alt="Screenshot 2022-11-08 at 20.46.32"></p>
<p><img src="https://p.ipic.vip/0a454i.jpg" alt="Screenshot 2022-11-08 at 20.47.09"></p>
<p><img src="https://p.ipic.vip/2fut29.jpg" alt="Screenshot 2022-11-08 at 20.48.21"></p>
<p><img src="https://p.ipic.vip/sifj9m.jpg" alt="Screenshot 2022-11-08 at 20.48.21"></p>
<p><img src="https://p.ipic.vip/a96lc3.jpg" alt="Screenshot 2022-11-08 at 20.50.41"></p>
<p><img src="https://p.ipic.vip/uct128.jpg" alt="Screenshot 2022-11-08 at 20.51.38"></p>
<p><img src="https://p.ipic.vip/03wz58.jpg" alt="Screenshot 2022-11-08 at 20.52.16"></p>
<p><img src="https://p.ipic.vip/0q09nx.jpg" alt="Screenshot 2022-11-08 at 20.53.20"></p>
<p><img src="https://p.ipic.vip/lc8arq.jpg" alt="Screenshot 2022-11-08 at 20.53.30"></p>
<p><img src="https://p.ipic.vip/70be7y.jpg" alt="Screenshot 2022-11-08 at 20.53.55"></p>
<p><img src="https://p.ipic.vip/mcc4gq.jpg" alt="Screenshot 2022-11-08 at 20.55.19"></p>
<p><img src="https://p.ipic.vip/1rgwb1.jpg" alt="Screenshot 2022-11-08 at 20.56.24"></p>
<p><img src="https://p.ipic.vip/m528d8.jpg" alt="Screenshot 2022-11-08 at 20.58.27"></p>
<p><img src="https://p.ipic.vip/16a5ig.jpg" alt="Screenshot 2022-11-08 at 20.58.56"></p>
<p><img src="https://p.ipic.vip/2hfhus.jpg" alt="Screenshot 2022-11-08 at 20.59.43"></p>
<p><img src="https://p.ipic.vip/nsj9xd.jpg" alt="Screenshot 2022-11-08 at 21.01.09"></p>
<p><img src="https://p.ipic.vip/wwhvg3.jpg" alt="Screenshot 2022-11-08 at 21.02.29"></p>
<p><img src="https://p.ipic.vip/vc4r3i.jpg" alt="Screenshot 2022-11-08 at 21.02.58"></p>
<p><img src="https://p.ipic.vip/gi8dyy.jpg" alt="Screenshot 2022-11-08 at 21.10.48"></p>
<p><img src="https://p.ipic.vip/i0unwj.jpg" alt="Screenshot 2022-11-08 at 21.13.40"></p>
<p><img src="https://p.ipic.vip/jkvzbn.jpg" alt="Screenshot 2022-11-08 at 21.16.43"></p>
<p><img src="https://p.ipic.vip/ou3bcg.jpg" alt="Screenshot 2022-11-08 at 21.18.31"></p>
<p><img src="https://p.ipic.vip/db6hv7.jpg" alt="Screenshot 2022-11-08 at 21.19.03"></p>
<p><img src="https://p.ipic.vip/1d9anw.jpg" alt="Screenshot 2022-11-08 at 21.21.04"></p>
<p><img src="https://p.ipic.vip/yul9cr.jpg" alt="Screenshot 2022-11-08 at 21.22.12"></p>
<p><img src="https://p.ipic.vip/8ogj9k.jpg" alt="Screenshot 2022-11-08 at 21.25.06"></p>
<p><img src="https://p.ipic.vip/73usk0.jpg" alt="Screenshot 2022-11-08 at 21.25.29"></p>
<p><img src="https://p.ipic.vip/7f8ytd.jpg" alt="Screenshot 2022-11-08 at 21.25.54"></p>
<p><img src="https://p.ipic.vip/tq1d2a.jpg" alt="Screenshot 2022-11-08 at 21.26.29"></p>
<h3 id="Lecture-09a-The-Wind-Driven-Circulation-Part-1"><a href="#Lecture-09a-The-Wind-Driven-Circulation-Part-1" class="headerlink" title="Lecture 09a The Wind Driven Circulation (Part 1)"></a>Lecture 09a The Wind Driven Circulation (Part 1)</h3><p><img src="https://p.ipic.vip/4edkev.jpg" alt="Screenshot 2022-11-08 at 23.30.29"></p>
<p><img src="https://p.ipic.vip/ti5py6.jpg" alt="Screenshot 2022-11-08 at 21.33.12"></p>
<p><img src="https://p.ipic.vip/kauzgc.jpg" alt="Screenshot 2022-11-08 at 21.33.44"></p>
<p><img src="https://p.ipic.vip/1ejn1b.jpg" alt="Screenshot 2022-11-08 at 21.33.55"></p>
<p><img src="https://p.ipic.vip/z73yrd.jpg" alt="Screenshot 2022-11-08 at 21.34.07"></p>
<p><img src="https://p.ipic.vip/argky7.jpg" alt="Screenshot 2022-11-08 at 21.37.13"></p>
<p><img src="https://p.ipic.vip/zbmamt.jpg" alt="Screenshot 2022-11-08 at 21.37.46"></p>
<p><img src="https://p.ipic.vip/5t2s23.jpg" alt="Screenshot 2022-11-08 at 21.43.19"></p>
<p><img src="https://p.ipic.vip/bmoccq.jpg" alt="Screenshot 2022-11-08 at 21.45.23"></p>
<p><img src="https://p.ipic.vip/hyrthk.jpg" alt="Screenshot 2022-11-08 at 21.45.52"></p>
<p><img src="https://p.ipic.vip/0ztho1.jpg" alt="Screenshot 2022-11-08 at 21.46.17"></p>
<p><img src="https://p.ipic.vip/koewyd.jpg" alt="Screenshot 2022-11-08 at 21.46.56"></p>
<p><img src="https://p.ipic.vip/wif77b.jpg" alt="Screenshot 2022-11-08 at 21.47.22"></p>
<p><img src="https://p.ipic.vip/qwvsvt.jpg" alt="Screenshot 2022-11-08 at 21.52.31"></p>
<p><img src="https://p.ipic.vip/l8jg87.jpg" alt="Screenshot 2022-11-08 at 21.53.09"></p>
<p><img src="https://p.ipic.vip/zn8qcx.jpg" alt="Screenshot 2022-11-08 at 21.54.16"></p>
<p><img src="https://p.ipic.vip/cbfxfv.jpg" alt="Screenshot 2022-11-08 at 21.55.49"></p>
<p><img src="https://p.ipic.vip/8mkm56.jpg" alt="Screenshot 2022-11-08 at 22.01.04"></p>
<p><img src="https://p.ipic.vip/6dirgt.jpg" alt="Screenshot 2022-11-08 at 22.01.15"></p>
<p><img src="https://p.ipic.vip/6bpzgc.jpg" alt="Screenshot 2022-11-08 at 22.02.27"></p>
<p><img src="https://p.ipic.vip/n8h3d5.jpg" alt="Screenshot 2022-11-08 at 22.02.54"></p>
<p><img src="https://p.ipic.vip/g40g3a.jpg" alt="Screenshot 2022-11-08 at 22.03.56"></p>
<p><img src="https://p.ipic.vip/apwe1a.jpg" alt="Screenshot 2022-11-08 at 22.05.22"></p>
<p><img src="https://p.ipic.vip/loht57.jpg" alt="Screenshot 2022-11-08 at 22.06.02"></p>
<p><img src="https://p.ipic.vip/yl2uei.jpg" alt="Screenshot 2022-11-08 at 22.06.35"></p>
<p><img src="https://p.ipic.vip/sn4ki7.jpg" alt="Screenshot 2022-11-08 at 22.10.17"></p>
<p><img src="https://p.ipic.vip/a3awjz.jpg" alt="Screenshot 2022-11-08 at 22.11.06"></p>
<p><img src="https://p.ipic.vip/xu1m9j.jpg" alt="Screenshot 2022-11-08 at 22.11.30"></p>
<p><img src="https://p.ipic.vip/lk6zzy.jpg" alt="Screenshot 2022-11-08 at 22.13.07"></p>
<p><img src="https://p.ipic.vip/3r6yn9.jpg" alt="Screenshot 2022-11-08 at 22.15.40"></p>
<p><img src="https://p.ipic.vip/ikpz8h.jpg" alt="Screenshot 2022-11-08 at 22.17.24"></p>
<p><img src="https://p.ipic.vip/xgvdk1.jpg" alt="Screenshot 2022-11-08 at 22.18.12"></p>
<p><img src="https://p.ipic.vip/mywj9o.jpg" alt="Screenshot 2022-11-08 at 22.20.19"></p>
<p><img src="https://p.ipic.vip/qagju6.jpg" alt="Screenshot 2022-11-08 at 22.22.12"></p>
<p><img src="https://p.ipic.vip/axl1xm.jpg" alt="Screenshot 2022-11-08 at 22.23.16"></p>
<p><img src="https://p.ipic.vip/86rsp2.jpg" alt="Screenshot 2022-11-08 at 22.24.52"></p>
<h3 id="Lecture-09b-The-Wind-Driven-Circulation-Part-2"><a href="#Lecture-09b-The-Wind-Driven-Circulation-Part-2" class="headerlink" title="Lecture 09b The Wind Driven Circulation (Part 2)"></a>Lecture 09b The Wind Driven Circulation (Part 2)</h3><p><img src="https://p.ipic.vip/7lpfkq.jpg" alt="Screenshot 2022-11-08 at 22.34.34"></p>
<p><img src="https://p.ipic.vip/hj3lkm.jpg" alt="Screenshot 2022-11-08 at 22.35.32"></p>
<p><img src="https://p.ipic.vip/e5a1bc.jpg" alt="Screenshot 2022-11-08 at 22.35.54"></p>
<p><img src="https://p.ipic.vip/mzr2d2.jpg" alt="Screenshot 2022-11-08 at 22.37.21"></p>
<p><img src="https://p.ipic.vip/k87ol5.jpg" alt="Screenshot 2022-11-08 at 22.40.16"></p>
<p><img src="https://p.ipic.vip/of71l2.jpg" alt="Screenshot 2022-11-08 at 22.40.45"></p>
<p><img src="https://p.ipic.vip/6p70r5.jpg" alt="Screenshot 2022-11-08 at 22.42.59"></p>
<p><img src="https://p.ipic.vip/y5af0o.jpg" alt="Screenshot 2022-11-08 at 22.43.56"></p>
<p><img src="https://p.ipic.vip/7qdgyh.jpg" alt="Screenshot 2022-11-08 at 22.46.59"></p>
<p><img src="https://p.ipic.vip/rdq7re.jpg" alt="Screenshot 2022-11-08 at 22.47.50"></p>
<p><img src="https://p.ipic.vip/ddujbr.jpg" alt="Screenshot 2022-11-08 at 22.48.50"></p>
<p><img src="https://p.ipic.vip/sr7onx.jpg" alt="Screenshot 2022-11-08 at 22.54.46"></p>
<p><img src="https://p.ipic.vip/p6hbzs.jpg" alt="Screenshot 2022-11-08 at 22.55.35"></p>
<p><img src="https://p.ipic.vip/xcg59o.jpg" alt="Screenshot 2022-11-08 at 23.00.03"></p>
<p><img src="https://p.ipic.vip/s7k4cb.jpg" alt="Screenshot 2022-11-08 at 23.07.04"></p>
<p><img src="https://p.ipic.vip/sdmmzn.jpg" alt="Screenshot 2022-11-08 at 23.07.04"></p>
<p><img src="https://p.ipic.vip/l4pdo6.jpg" alt="Screenshot 2022-11-08 at 23.10.29"></p>
<p><img src="https://p.ipic.vip/a6g2k8.jpg" alt="Screenshot 2022-11-08 at 23.11.57"></p>
<p><img src="https://p.ipic.vip/2mygsj.jpg" alt="Screenshot 2022-11-08 at 23.13.19"></p>
<p><img src="https://p.ipic.vip/lwma3n.jpg" alt="Screenshot 2022-11-08 at 23.14.41"></p>
<p><img src="https://p.ipic.vip/aal7f8.jpg" alt="Screenshot 2022-11-08 at 23.15.37"></p>
<p><img src="https://p.ipic.vip/j5zrpl.jpg" alt="Screenshot 2022-11-08 at 23.15.53"></p>
<p><img src="https://p.ipic.vip/ps6bbv.jpg" alt="Screenshot 2022-11-08 at 23.16.11"></p>
<p><img src="https://p.ipic.vip/6lez8l.jpg" alt="Screenshot 2022-11-08 at 23.17.01"></p>
<p><img src="https://p.ipic.vip/4imc4b.jpg" alt="Screenshot 2022-11-08 at 23.19.00"></p>
<p><img src="https://p.ipic.vip/nhulv0.jpg" alt="Screenshot 2022-11-08 at 23.19.50"></p>
<p><img src="https://p.ipic.vip/js9wve.jpg" alt="Screenshot 2022-11-08 at 23.20.48"></p>
<p><img src="https://p.ipic.vip/ybcju4.jpg" alt="Screenshot 2022-11-08 at 23.20.48"></p>
<h3 id="Lecture-10-The-Thermohaline-Circulation"><a href="#Lecture-10-The-Thermohaline-Circulation" class="headerlink" title="Lecture 10 The Thermohaline Circulation"></a>Lecture 10 The Thermohaline Circulation</h3><p><img src="https://p.ipic.vip/aabmiw.jpg" alt="Screenshot 2022-11-09 at 23.29.06"></p>
<p><img src="https://p.ipic.vip/5me53v.jpg" alt="Screenshot 2022-11-09 at 23.31.42"></p>
<p><img src="https://p.ipic.vip/dm25rh.jpg" alt="Screenshot 2022-11-09 at 23.32.07"></p>
<p><img src="https://p.ipic.vip/d57588.jpg" alt="Screenshot 2022-11-09 at 23.32.43"></p>
<p><img src="https://p.ipic.vip/wcnjoy.jpg" alt="Screenshot 2022-11-09 at 23.34.51"></p>
<p><img src="https://p.ipic.vip/reyqa8.jpg" alt="Screenshot 2022-11-09 at 23.35.51"></p>
<p><img src="https://p.ipic.vip/kk8t37.jpg" alt="Screenshot 2022-11-09 at 23.37.14"></p>
<p><img src="https://p.ipic.vip/dim8uc.jpg" alt="Screenshot 2022-11-09 at 23.37.56"></p>
<p><img src="https://p.ipic.vip/ibaf9g.jpg" alt="Screenshot 2022-11-09 at 23.39.00"></p>
<p><img src="https://p.ipic.vip/nz92kx.jpg" alt="Screenshot 2022-11-09 at 23.39.55"></p>
<p><img src="https://p.ipic.vip/kmas9j.jpg" alt="Screenshot 2022-11-09 at 23.40.35"></p>
<p><img src="https://p.ipic.vip/jj95fa.jpg" alt="Screenshot 2022-11-09 at 23.41.26"></p>
<p><img src="https://p.ipic.vip/4klkxi.jpg" alt="Screenshot 2022-11-09 at 23.42.48"></p>
<p><img src="https://p.ipic.vip/2qyagr.jpg" alt="Screenshot 2022-11-09 at 23.43.56"></p>
<p><img src="https://p.ipic.vip/y4zboq.jpg" alt="Screenshot 2022-11-09 at 23.44.38"></p>
<p><img src="https://p.ipic.vip/5krijc.jpg" alt="Screenshot 2022-11-09 at 23.45.32"></p>
<p><img src="https://p.ipic.vip/6b8nzi.jpg" alt="Screenshot 2022-11-09 at 23.48.17"></p>
<p><img src="https://p.ipic.vip/y5qvgt.jpg" alt="Screenshot 2022-11-09 at 23.48.40"></p>
<p><img src="https://p.ipic.vip/ce0cv0.jpg" alt="Screenshot 2022-11-09 at 23.49.38"></p>
<p><img src="https://p.ipic.vip/pu4srq.jpg" alt="Screenshot 2022-11-09 at 23.51.08"></p>
<p><img src="https://p.ipic.vip/ndfii8.jpg" alt="Screenshot 2022-11-09 at 23.51.53"></p>
<p> <img src="https://p.ipic.vip/la0mlj.jpg" alt="Screenshot 2022-11-10 at 00.17.11"></p>
<p><img src="https://p.ipic.vip/2f1a8a.jpg" alt="Screenshot 2022-11-10 at 00.18.32"></p>
<p><img src="https://p.ipic.vip/et5wwe.jpg" alt="Screenshot 2022-11-10 at 00.19.17"></p>
<p><img src="https://p.ipic.vip/pzvfuv.jpg" alt="Screenshot 2022-11-10 at 00.20.48"></p>
<p><img src="https://p.ipic.vip/4nnw3j.jpg" alt="Screenshot 2022-11-10 at 00.21.25"></p>
<p><img src="https://p.ipic.vip/bifn75.jpg" alt="Screenshot 2022-11-10 at 00.22.06"></p>
<p><img src="https://p.ipic.vip/kqflen.jpg" alt="Screenshot 2022-11-10 at 00.25.17"></p>
<p><img src="https://p.ipic.vip/4y8tsd.jpg" alt="Screenshot 2022-11-10 at 00.27.46"></p>
<p><img src="https://p.ipic.vip/lvp20c.jpg" alt="Screenshot 2022-11-10 at 00.29.24"></p>
<p><img src="https://p.ipic.vip/z55ki5.jpg" alt="Screenshot 2022-11-10 at 00.30.02"></p>
<h3 id="Lecture-11b-El-Nino-Southern-Oscillation"><a href="#Lecture-11b-El-Nino-Southern-Oscillation" class="headerlink" title="Lecture 11b El Niño Southern Oscillation"></a>Lecture 11b El Niño Southern Oscillation</h3><p><img src="https://p.ipic.vip/sv9t4y.jpg" alt="Screenshot 2022-11-07 at 17.36.44"></p>
<p><img src="https://p.ipic.vip/y2xz6c.jpg" alt="Screenshot 2022-11-07 at 16.58.04"></p>
<p><img src="https://p.ipic.vip/4xwt47.jpg" alt="Screenshot 2022-11-07 at 17.14.32"></p>
<p><img src="https://p.ipic.vip/1o8owp.jpg" alt="Screenshot 2022-11-07 at 16.59.59"></p>
<p><img src="https://p.ipic.vip/m2x6jl.jpg" alt="Screenshot 2022-11-07 at 17.01.37"></p>
<p><img src="https://p.ipic.vip/jhl37w.jpg" alt="Screenshot 2022-11-07 at 17.03.31"></p>
<p><img src="https://p.ipic.vip/cxit54.jpg" alt="Screenshot 2022-11-07 at 17.04.59"></p>
<p><img src="https://p.ipic.vip/q3vodw.jpg" alt="Screenshot 2022-11-07 at 17.05.33"></p>
<p><img src="https://p.ipic.vip/6aaxn1.jpg" alt="Screenshot 2022-11-07 at 17.06.06"></p>
<p><img src="https://p.ipic.vip/jjx42v.jpg" alt="Screenshot 2022-11-07 at 17.06.39"></p>
<p><img src="https://p.ipic.vip/j77hk6.jpg" alt="Screenshot 2022-11-07 at 17.07.49"></p>
<p><img src="https://p.ipic.vip/lkanyw.jpg" alt="Screenshot 2022-11-07 at 17.09.01"></p>
<p><img src="https://p.ipic.vip/rdfplh.jpg" alt="Screenshot 2022-11-07 at 17.09.48"></p>
<p><img src="https://p.ipic.vip/qwsx1j.jpg" alt="Screenshot 2022-11-07 at 17.10.24"></p>
<p><img src="https://p.ipic.vip/z49eqo.jpg" alt="Screenshot 2022-11-07 at 17.10.51"></p>
<p><img src="https://p.ipic.vip/4s5exa.jpg" alt="Screenshot 2022-11-07 at 17.13.06"></p>
<p><img src="https://p.ipic.vip/dyazm6.jpg" alt="Screenshot 2022-11-07 at 17.14.08"></p>
<p><img src="https://p.ipic.vip/252ks0.jpg" alt="Screenshot 2022-11-07 at 17.15.56"></p>
<p><img src="https://p.ipic.vip/r1mugc.jpg" alt="Screenshot 2022-11-07 at 17.17.19"></p>
<p><img src="https://p.ipic.vip/hpysvn.jpg" alt="Screenshot 2022-11-07 at 17.18.29"></p>
<p>![Screenshot 2022-11-07 at 17.20.38](&#x2F;Users&#x2F;ruyanc&#x2F;Desktop&#x2F;Screenshot 2022-11-07 at 17.20.38.png)</p>
<p><img src="https://p.ipic.vip/6l9oag.jpg" alt="Screenshot 2022-11-07 at 17.23.20"></p>
<p> <img src="https://p.ipic.vip/zfh6pl.jpg" alt="Screenshot 2022-11-07 at 17.24.23"></p>
<p><img src="https://p.ipic.vip/clsg95.jpg" alt="Screenshot 2022-11-07 at 17.25.39"></p>
<p><img src="https://p.ipic.vip/kx5wnh.jpg" alt="Screenshot 2022-11-07 at 17.26.21"></p>
<p><img src="https://p.ipic.vip/m249tg.jpg" alt="Screenshot 2022-11-07 at 17.27.11"></p>
<p><img src="https://p.ipic.vip/cegjyl.jpg" alt="Screenshot 2022-11-07 at 17.27.33"></p>
<p><img src="https://p.ipic.vip/sqx3o8.jpg" alt="Screenshot 2022-11-07 at 17.29.41"></p>
<p><img src="https://p.ipic.vip/8gasy5.jpg" alt="Screenshot 2022-11-07 at 17.30.30"></p>
<p>  <img src="https://p.ipic.vip/kdstc5.jpg" alt="Screenshot 2022-11-07 at 17.31.52"></p>
<p><img src="https://p.ipic.vip/9tp11j.jpg" alt="Screenshot 2022-11-07 at 17.32.04"></p>
<p><img src="https://p.ipic.vip/diurkf.jpg" alt="Screenshot 2022-11-07 at 17.32.33"></p>
<p><img src="https://p.ipic.vip/7pc2ws.jpg" alt="Screenshot 2022-11-07 at 17.33.04"></p>
<p><img src="https://p.ipic.vip/kk1mxj.jpg" alt="Screenshot 2022-11-07 at 17.34.14"></p>
]]></content>
      <categories>
        <category>Recharge</category>
      </categories>
  </entry>
  <entry>
    <title>ChatGPT</title>
    <url>/2023/05/01/Recharge/ChatGPT/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="到底它为什么叫做-ChatGPT-呢？"><a href="#到底它为什么叫做-ChatGPT-呢？" class="headerlink" title="到底它为什么叫做 ChatGPT 呢？"></a>到底它为什么叫做 ChatGPT 呢？</h2><p>先说 GPT：Generative Pre-Training Transformer</p>
<h3 id="Generative-生成式"><a href="#Generative-生成式" class="headerlink" title="Generative 生成式"></a>Generative 生成式</h3><p>虽然我们已经习惯了话唠的机器人絮絮叨叨的说个不停，但这只是众多的人工智能模型的一种方式。比如还有识别类的（Congnition）：人脸识别，车牌识别这些，还有语音识别，文字识别各种识别任务。（在提到模型的时候，也常常被叫做判别模型，discriminative）。Generative 这个大的种类里面有几个小分支，DALLE 的画图的用的是对抗网络方式 GAN （这个晚些可以分析），现在最火的Stable Diffusion， MidJourney 走向了另外一个分支，叫做 Difusion，而 ChatGPT 又是一个分支，就是转换器 Transformer。</p>
<p>而 Transformer Generative 的语言模型的核心，通俗的说就是「顺口溜」。</p>
<p>当看了足够多的文本以后，发现有一些语言模式是反复出现的。它之所以可以准确的填补「锄禾日当__ 」的空格，不是因为它在自己的大脑子里面重构了一副农民劳动的场景，仅仅是不过脑子，顺口溜出来的。</p>
<p>你问它： 3457 * 43216 &#x3D; ，它回答 149575912 （这是错的。正确结果是 149397712）。之所以结果的 2 是对的，仅仅因为它读了太多的文字资料以后，隐约感觉到</p>
<p>7 结尾的文字，乘号，6 结尾的文字，和 2 结尾的文字比较「押韵」</p>
<p>从语感上比较像一首诗，所以它就学会了这样的文字，而不是学会了计算。</p>
<p>生成式模型努力解决的问题，就是给定一些字，预测如果是人类会写什么字。</p>
<p>在 BERT 那个年代，为了训练，大家常常把一句话中随机几个单词遮起来，让计算机用现有的模型预测那几个单词，如果预测准了，就继续加强，如果预测错了，就调整模型，直到上百万上亿次训练之后越来越准。只不过 ChatGPT 的 Generative 的部分，不仅仅把文字，还把上下文、intention（意图）也放进去做训练和预测。</p>
<h3 id="Pre-Training-预训练"><a href="#Pre-Training-预训练" class="headerlink" title="Pre-Training 预训练"></a>Pre-Training 预训练</h3><p>以前很多的人工智能模型都是为了一个目标训练的。比如给我 1000 张猫的照片，我就很容易的可以训练出来一个模型，判断一个图片是有猫还是没有猫。这些都是专用的模型。</p>
<p>而 Pre-Training 模型不是为了特定的目标训练，而是预先训练一个通用的模型。如果我有特定的需求，我可以在这个基础上进行第二次训练，基于原来已经预训练的模型，进行微调（Fine- Tuning）。</p>
<p>这事儿就像家里请了个阿姨，她已经被劳务公司预训练了整理家务的知识，在此之前已经被小学老师预训练了中文对话，到了我家里面我只要稍微 fine tune 一些我家里特定的要求就好了，而不需要给我一个「空白」的人，让我从教汉语开始把她彻底教一遍才能让她干活。</p>
<p>ChatGPT 的预训练就是给了我们所有人（尤其是创业者，程序员）一个预先训练好的模型。这个模型里面语言是强项，它提供的内容无论多么的胡说八道，至少我们必须承认它的行文通畅程度无可挑剔。这就是他 pre-training 的部分，而回答的内容部分，正是我们需要 fine tuning 的。我们不能买了个 Apache 服务器回来，不灌内容，就说他输出的内容不够呀。</p>
<h3 id="Transformer-转换器"><a href="#Transformer-转换器" class="headerlink" title="Transformer 转换器"></a>Transformer 转换器</h3><p>变电器就是一种 transformer：220伏电进，12伏出。</p>
<p>语言的转换器就是把语言的序列作为输入，然后用一个叫做编码器 encoder 的东西变成数字的表现（比如 GPT 就用 1536 个浮点数（也叫 1536 维向量）表示任何的单词，或者句子，段落，篇章等），然后经过转化，变成一串新的序列，最后再用 decoder 把它输出。这个转换器，是这个自然语言处理的核心。</p>
<p>比如如果给 ChatGPT 输入「Apple」这个词，它给你返回</p>
<p>[ 0.0077999732, -0.02301609, -0.007416143, -0.027813964, -0.0045648348, 0.012954261,…..0.021905724, -0.012022103, -0.013550568, -0.01565478, 0.006107009]</p>
<p>这 1536 个浮点数字来表示 Apple（其中一个或着多个维度的组合表达了「甜」的含义，另外一堆表达了「圆」的含义，还有一大堆共同表达了「红」等等属性组合，至于具体哪些表达了这些，不得而知）</p>
<p>然后这堆数字，再交给 decoder，并且限定中文的话，它会解码成为「苹果」，限定西班牙语的话，它会解码成「manzana」，限定为 emoji 的话，就输出「 」。总之，通过编码，转换，解码，它就完成了从 Apple 到目标输出语言的转化。</p>
<p>ChatGPT 所做的事情远远多于翻译。但核心上，它就是把一个语言序列，转换为了另外一堆语言序列，这个任务完成得如此的好，以至于让人产生了它有思想的错觉。</p>
<h3 id="GPT-生成式预训练转化器"><a href="#GPT-生成式预训练转化器" class="headerlink" title="GPT 生成式预训练转化器"></a>GPT 生成式预训练转化器</h3><p>把上面三段话加在一起，GPT 就是</p>
<p>一个预先训练好的，用生成的方式，把输入文字转化成输出文字的翻译</p>
<p>除了这个以外的各种能力和各种定义，大多数是这个翻译官的应用场景而不是它本身。</p>
<h3 id="ChatGPT-是啥？"><a href="#ChatGPT-是啥？" class="headerlink" title="ChatGPT 是啥？"></a>ChatGPT 是啥？</h3><p>刚才解释了 GPT，那 ChatGPT 呢？</p>
<p>OpenAI 用这个名字描述他们正在做的这个模型，历史的版本包括 GPT-1， GPT-2（这个模型是开源的），GPT-3（这个就是传说中 175B 参数的大模型）。而这些都是生成式的，也就是给的 prompt（提示词），它负责补全（completion）。但是这个东西用于聊天不是很好用，因为本来就不是为聊天这个场景准备的。</p>
<p>所以在 GPT-3 基础上发展出了下一代模型 InstructGPT，专注于让这个模型可以听懂指令。在上面继续发展出了 ChatGPT，就是对于对话场景，比如多轮对话，还有一些安全边界设定等，进行了加强。但这个模型是基于 GPT-3 上面的，可以说严格意义是 GPT-3 模型上面的一个微调（Fine Tuning）的产物。</p>
<p>希望这样梳理可以帮助大家了解这个奇怪的名字背后的思考。从这个角度来说，这是少有的几个准确的描述了它是什么的一个名字（和 <a href="https://link.zhihu.com/?target=http://mp.weixin.qq.com/s?__biz=MjM5NzI0Mjg0MA==&mid=2652374640&idx=1&sn=b082857d819af15a31ab724b4e81eba1&chksm=bd3054c78a47ddd139907ae07b4d4412a6097935c83db4ef6739053e116929351034ac9a3f71&scene=21%23wechat_redirect">Web3 这个名字</a>产生鲜明对比）</p>
<p>欢迎转发给对 ChatGPT 感兴趣的朋友。欢迎专业人士指正（我其实不懂自然语言处理里面的细节）</p>
<p>原文链接：<a href="https://link.zhihu.com/?target=https://mp.weixin.qq.com/s/vXoYeA7w6l_WiKmDHogdTA">https://mp.weixin.qq.com/s/vXoYeA7w6l_WiKmDHogdTA</a></p>
<h2 id="十分钟理解Transformer"><a href="#十分钟理解Transformer" class="headerlink" title="十分钟理解Transformer"></a>十分钟理解Transformer</h2><p>Transformer是一个利用注意力机制来提高模型训练速度的模型。关于注意力机制可以参看<a href="https://zhuanlan.zhihu.com/p/52119092">这篇文章</a>，trasnformer可以说是完全基于自注意力机制的一个深度学习模型，因为它适用于并行化计算，和它本身模型的复杂程度导致它在精度和性能上都要高于之前流行的RNN循环神经网络。</p>
<p>那什么是transformer呢？</p>
<p>你可以简单理解为它是一个黑盒子，当我们在做文本翻译任务是，我输入进去一个中文，经过这个黑盒子之后，输出来翻译过后的英文。</p>
<p><img src="https://p.ipic.vip/5krj1g.jpg" alt="img"></p>
<p>那么在这个黑盒子里面都有什么呢？</p>
<p>里面主要有两部分组成：Encoder 和 Decoder</p>
<p><img src="https://p.ipic.vip/tafz7s.jpg" alt="img"></p>
<p>当我输入一个文本的时候，该文本数据会先经过一个叫Encoders的模块，对该文本进行编码，然后将编码后的数据再传入一个叫Decoders的模块进行解码，解码后就得到了翻译后的文本，对应的我们称Encoders为编码器，Decoders为解码器。</p>
<p>那么编码器和解码器里边又都是些什么呢？</p>
<p>细心的同学可能已经发现了，上图中的Decoders后边加了个s，那就代表有多个编码器了呗，没错，这个编码模块里边，有很多小的编码器，一般情况下，Encoders里边有6个小编码器，同样的，Decoders里边有6个小解码器。</p>
<p><img src="https://p.ipic.vip/68upl5.jpg" alt="img"></p>
<p>我们看到，在编码部分，每一个的小编码器的输入是前一个小编码器的输出，而每一个小解码器的输入不光是它的前一个解码器的输出，还包括了整个编码部分的输出。</p>
<p>那么你可能又该问了，那每一个小编码器里边又是什么呢？</p>
<p>我们放大一个encoder，发现里边的结构是一个自注意力机制加上一个前馈神经网络。</p>
<p><img src="https://p.ipic.vip/9jnftj.jpg" alt="img"></p>
<p>我们先来看下self-attention是什么样子的。</p>
<p>我们通过几个步骤来解释：</p>
<p>1、首先，self-attention的输入就是词向量，即整个模型的最初的输入是词向量的形式。那自注意力机制呢，顾名思义就是自己和自己计算一遍注意力，即对每一个输入的词向量，我们需要构建self-attention的输入。在这里，transformer首先将词向量乘上三个矩阵，得到三个新的向量，之所以乘上三个矩阵参数而不是直接用原本的词向量是因为这样增加更多的参数，提高模型效果。对于输入X1(机器)，乘上三个矩阵后分别得到Q1,K1,V1，同样的，对于输入X2(学习)，也乘上三个不同的矩阵得到Q2,K2,V2。</p>
<p><img src="https://p.ipic.vip/mvxfjn.jpg" alt="img"></p>
<p>2、那接下来就要计算注意力得分了，这个得分是通过计算Q与各个单词的K向量的点积得到的。我们以X1为例，分别将Q1和K1、K2进行点积运算，假设分别得到得分112和96。</p>
<p><img src="https://p.ipic.vip/rd4we3.jpg" alt="img"></p>
<p>3、将得分分别除以一个特定数值8（K向量的维度的平方根，通常K向量的维度是64）这能让梯度更加稳定，则得到结果如下：</p>
<p><img src="https://p.ipic.vip/uzb5hf.jpg" alt="img"></p>
<p>4、将上述结果进行softmax运算得到，softmax主要将分数标准化，使他们都是正数并且加起来等于1。</p>
<p><img src="https://p.ipic.vip/qkevjy.jpg" alt="img"></p>
<p>5、将V向量乘上softmax的结果，这个思想主要是为了保持我们想要关注的单词的值不变，而掩盖掉那些不相关的单词（例如将他们乘上很小的数字）</p>
<p><img src="https://p.ipic.vip/67j7tn.jpg" alt="img"></p>
<p>6、将带权重的各个V向量加起来，至此，产生在这个位置上（第一个单词）的self-attention层的输出，其余位置的self-attention输出也是同样的计算方式。</p>
<p><img src="https://p.ipic.vip/j48za4.jpg" alt="img"></p>
<p>将上述的过程总结为一个公式就可以用下图表示：</p>
<p><img src="https://p.ipic.vip/8o1ykl.jpg" alt="img"></p>
<p>self-attention层到这里就结束了吗？</p>
<p>还没有，论文为了进一步细化自注意力机制层，增加了“多头注意力机制”的概念，这从两个方面提高了自注意力层的性能。</p>
<p>第一个方面，他扩展了模型关注不同位置的能力，这对翻译一下句子特别有用，因为我们想知道“it”是指代的哪个单词。</p>
<p><img src="https://p.ipic.vip/3r94aw.jpg" alt="img"></p>
<p>第二个方面，他给了自注意力层多个“表示子空间”。对于多头自注意力机制，我们不止有一组Q&#x2F;K&#x2F;V权重矩阵，而是有多组（论文中使用8组），所以每个编码器&#x2F;解码器使用8个“头”（可以理解为8个互不干扰自的注意力机制运算），每一组的Q&#x2F;K&#x2F;V都不相同。然后，得到8个不同的权重矩阵Z，每个权重矩阵被用来将输入向量投射到不同的表示子空间。</p>
<p>经过多头注意力机制后，就会得到多个权重矩阵Z，我们将多个Z进行拼接就得到了self-attention层的输出：</p>
<p><img src="https://p.ipic.vip/9ijalx.jpg" alt="img"></p>
<p>上述我们经过了self-attention层，我们得到了self-attention的输出，self-attention的输出即是前馈神经网络层的输入，然后前馈神经网络的输入只需要一个矩阵就可以了，不需要八个矩阵，所以我们需要把这8个矩阵压缩成一个，我们怎么做呢？只需要把这些矩阵拼接起来然后用一个额外的权重矩阵与之相乘即可。</p>
<p><img src="https://p.ipic.vip/aupyy1.jpg" alt="img"></p>
<p>最终的Z就作为前馈神经网络的输入。</p>
<p>接下来就进入了小编码器里边的前馈神经网模块了，关于前馈神经网络，网上已经有很多资料，在这里就不做过多讲解了，只需要知道，前馈神经网络的输入是self-attention的输出，即上图的Z,是一个矩阵，矩阵的维度是（序列长度×D词向量），之后前馈神经网络的输出也是同样的维度。</p>
<p>以上就是一个小编码器的内部构造了，一个大的编码部分就是将这个过程重复了6次，最终得到整个编码部分的输出。</p>
<p>然后再transformer中使用了6个encoder，为了解决梯度消失的问题，在Encoders和Decoder中都是用了残差神经网络的结构，即每一个前馈神经网络的输入不光包含上述self-attention的输出Z，还包含最原始的输入。</p>
<p>上述说到的encoder是对输入（机器学习）进行编码，使用的是自注意力机制+前馈神经网络的结构，同样的，在decoder中使用的也是同样的结构。也是首先对输出（machine learning）计算自注意力得分，不同的地方在于，进行过自注意力机制后，将self-attention的输出再与Decoders模块的输出计算一遍注意力机制得分，之后，再进入前馈神经网络模块。</p>
<p><img src="https://p.ipic.vip/iubqoo.jpg" alt="img"></p>
<p>以上，就讲完了Transformer编码和解码两大模块，那么我们回归最初的问题，将“机器学习”翻译成“machine learing”，解码器输出本来是一个浮点型的向量，怎么转化成“machine learing”这两个词呢？</p>
<p>是个工作是最后的线性层接上一个softmax，其中线性层是一个简单的全连接神经网络，它将解码器产生的向量投影到一个更高维度的向量（logits）上，假设我们模型的词汇表是10000个词，那么logits就有10000个维度，每个维度对应一个惟一的词的得分。之后的softmax层将这些分数转换为概率。选择概率最大的维度，并对应地生成与之关联的单词作为此时间步的输出就是最终的输出啦！！</p>
<p>假设词汇表维度是6，那么输出最大概率词汇的过程如下：</p>
<p><img src="https://p.ipic.vip/5mg0yv.jpg" alt="img"></p>
<p>以上就是Transformer的框架了，但是还有最后一个问题，我们都是到RNN中的每个输入是时序的，是又先后顺序的，但是Transformer整个框架下来并没有考虑顺序信息，这就需要提到另一个概念了：“位置编码”。</p>
<p>Transformer中确实没有考虑顺序信息，那怎么办呢，我们可以在输入中做手脚，把输入变得有位置信息不就行了，那怎么把词向量输入变成携带位置信息的输入呢？</p>
<p>我们可以给每个词向量加上一个有顺序特征的向量，发现sin和cos函数能够很好的表达这种特征，所以通常位置向量用以下公式来表示：</p>
<p><img src="https://p.ipic.vip/3f9zy7.jpg" alt="img"></p>
<p><img src="https://p.ipic.vip/jdllva.jpg" alt="img"></p>
<p>最后祭出这张经典的图，最初看这张图的时候可能难以理解，希望大家在深入理解Transformer后再看这张图能够有更深刻的认识。</p>
<p><img src="https://p.ipic.vip/a3jezp.jpg" alt="img"></p>
<p><img src="https://p.ipic.vip/3q3mf7.jpg" alt="img"></p>
<p><img src="https://p.ipic.vip/uw1h5v.jpg" alt="img"></p>
<p>Transformer就介绍到这里了，后来的很多经典的模型比如BERT、GPT-2都是基于Transformer的思想。我们有机会再详细介绍这两个刷新很多记录的经典模型。</p>
<p><strong>引用：</strong></p>
<p><a href="https://link.zhihu.com/?target=https://arxiv.org/abs/1706.03762">https://arxiv.org/abs/1706.03762</a> 原论文</p>
<p><a href="https://link.zhihu.com/?target=https://ai.googleblog.com/2017/08/transformer-novel-neural-network.html">https://ai.googleblog.com/2017/08/transformer-novel-neural-network.html</a></p>
<p><a href="https://link.zhihu.com/?target=http://jalammar.github.io/illustrated-transformer/">http://jalammar.github.io/illustrated-transformer/</a></p>
<p>编辑于 2023-02-13 15:51・IP 属地广东</p>
]]></content>
      <categories>
        <category>Recharge</category>
      </categories>
  </entry>
  <entry>
    <title>Data Assimilation</title>
    <url>/2023/05/01/Recharge/Data%20Assimilation/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><span style="color:green"><strong>Need the access to YouTube</strong></span></p>
<h2 id="Data-Assimilation-The-secret-to-better-weather-forecasts"><a href="#Data-Assimilation-The-secret-to-better-weather-forecasts" class="headerlink" title="Data Assimilation: The secret to better weather forecasts"></a>Data Assimilation: The secret to better weather forecasts</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/YPAWYjPf_Pk" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>





<h2 id="Nathan-Kutz-Data-Assimilation-Lecture"><a href="#Nathan-Kutz-Data-Assimilation-Lecture" class="headerlink" title="Nathan Kutz: Data Assimilation Lecture"></a>Nathan Kutz: Data Assimilation Lecture</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/Pn3ffYPtzyE" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

<iframe width="560" height="315" src="https://www.youtube.com/embed/5pSvYVhShoo" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

<iframe width="560" height="315" src="https://www.youtube.com/embed/izsAf9dD_WE" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>





<h2 id="Amos-S-Lawless-An-introduction-to-data-assimilation"><a href="#Amos-S-Lawless-An-introduction-to-data-assimilation" class="headerlink" title="Amos S. Lawless: An introduction to data assimilation"></a>Amos S. Lawless: An introduction to data assimilation</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/TmBEryh2OXY" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

<iframe width="560" height="315" src="https://www.youtube.com/embed/8niWYsM2akg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

<iframe width="560" height="315" src="https://www.youtube.com/embed/P4eQBB44sfo" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>





<h2 id="Adam-Kellerman-Data-Assimilation"><a href="#Adam-Kellerman-Data-Assimilation" class="headerlink" title="Adam Kellerman: Data Assimilation"></a>Adam Kellerman: Data Assimilation</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/wN9GCv08IyE" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>]]></content>
      <categories>
        <category>Recharge</category>
      </categories>
  </entry>
  <entry>
    <title>BOOK Deep Learning From Scratch</title>
    <url>/2023/05/01/Recharge/Deep%20Learning%20From%20Scratch/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://p.ipic.vip/3k2x5a.jpg" alt="0_001"></p>
<p><img src="https://p.ipic.vip/spslo2.jpg" alt="0_002"></p>
<p><img src="https://p.ipic.vip/pydm2x.jpg" alt="0_003"></p>
<p><img src="https://p.ipic.vip/7jq6dz.jpg" alt="0_004"></p>
<p><img src="https://p.ipic.vip/3px5c1.jpg" alt="0_005"></p>
<p><img src="https://p.ipic.vip/zagyeg.jpg" alt="0_006"></p>
<p><img src="https://p.ipic.vip/39lq23.jpg" alt="0_007"></p>
<p><img src="https://p.ipic.vip/ux0nyv.jpg" alt="0_008"></p>
<p><img src="https://p.ipic.vip/7noaz3.jpg" alt="0_009"></p>
<p><img src="https://p.ipic.vip/ltcp2c.jpg" alt="0_010"></p>
<p><img src="https://p.ipic.vip/iemffg.jpg" alt="0_011"></p>
<p><img src="https://p.ipic.vip/2zruoj.jpg" alt="0_012"></p>
<p><img src="https://p.ipic.vip/9s9edw.jpg" alt="0_013"></p>
<p><img src="https://p.ipic.vip/8qr6gc.jpg" alt="0_014"></p>
<p><img src="https://p.ipic.vip/h4hix9.jpg" alt="0_015"></p>
<p><img src="https://p.ipic.vip/req5jn.jpg" alt="0_016"></p>
<p><img src="https://p.ipic.vip/di5j2o.jpg" alt="0_017"></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="https://p.ipic.vip/8g85cf.jpg" alt="0_018"></p>
<p><img src="https://p.ipic.vip/egifcc.jpg" alt="0_019"></p>
<p><img src="https://p.ipic.vip/2dvgoz.jpg" alt="0_020"></p>
<p><img src="https://p.ipic.vip/0n4zx8.jpg" alt="0_021"></p>
<p><img src="https://p.ipic.vip/b8q49k.jpg" alt="0_022"></p>
<p><img src="https://p.ipic.vip/oqismk.jpg" alt="0_023"></p>
<p><img src="https://p.ipic.vip/1nigud.jpg" alt="0_024"></p>
<h2 id="第1章"><a href="#第1章" class="headerlink" title="第1章"></a>第1章</h2><p><img src="https://p.ipic.vip/0gu6v5.jpg" alt="0_026"></p>
<p><img src="https://p.ipic.vip/o9pksm.jpg" alt="0_027"></p>
<p><img src="https://p.ipic.vip/k6thcl.jpg" alt="0_028"></p>
<p><img src="https://p.ipic.vip/03n8ct.jpg" alt="0_029"></p>
<p><img src="https://p.ipic.vip/4j80k8.jpg" alt="0_030"></p>
<p><img src="https://p.ipic.vip/77qq7t.jpg" alt="0_031"></p>
<p><img src="https://p.ipic.vip/ajpyvo.jpg" alt="0_032"></p>
<p><img src="https://p.ipic.vip/qldg2k.jpg" alt="0_033"></p>
<p><img src="https://p.ipic.vip/5kwncf.jpg" alt="0_034"></p>
<p><img src="https://p.ipic.vip/xz7s05.jpg" alt="0_035"></p>
<p><img src="https://p.ipic.vip/cpfroh.jpg" alt="0_036"></p>
<p><img src="https://p.ipic.vip/z0ers7.jpg" alt="0_037"></p>
<p><img src="https://p.ipic.vip/ppief1.jpg" alt="0_038"></p>
<p><img src="https://p.ipic.vip/d963eu.jpg" alt="0_039"></p>
<p><img src="https://p.ipic.vip/if38op.jpg" alt="0_040"></p>
<p><img src="https://p.ipic.vip/8r8opk.jpg" alt="0_041"></p>
<p><img src="https://p.ipic.vip/a1xpk7.jpg" alt="0_042"></p>
<p><img src="https://p.ipic.vip/1iz4d2.jpg" alt="0_043"></p>
<p><img src="https://p.ipic.vip/ivocs1.jpg" alt="0_044"></p>
<p><img src="https://p.ipic.vip/sd71nt.jpg" alt="0_045"></p>
<h2 id="第2章"><a href="#第2章" class="headerlink" title="第2章"></a>第2章</h2><p><img src="https://p.ipic.vip/nopooa.jpg" alt="0_046"></p>
<p><img src="https://p.ipic.vip/x1yq2b.jpg" alt="0_047"></p>
<p><img src="https://p.ipic.vip/3ncyq9.jpg" alt="0_048"></p>
<p><img src="https://p.ipic.vip/ucwy4t.jpg" alt="0_049"></p>
<p><img src="https://p.ipic.vip/87pol2.jpg" alt="0_050"></p>
<p><img src="https://p.ipic.vip/r4xmi9.jpg" alt="0_051"></p>
<p><img src="https://p.ipic.vip/zs448t.jpg" alt="0_052"></p>
<p><img src="https://p.ipic.vip/ph1vnw.jpg" alt="0_053"></p>
<p><img src="https://p.ipic.vip/ds9aj2.jpg" alt="0_054"></p>
<p><img src="https://p.ipic.vip/uebhmt.jpg" alt="0_055"></p>
<p><img src="https://p.ipic.vip/y8gfbo.jpg" alt="0_056"></p>
<p><img src="https://p.ipic.vip/cwbth5.jpg" alt="0_057"></p>
<p><img src="https://p.ipic.vip/uaplg7.jpg" alt="0_058"></p>
<p><img src="https://p.ipic.vip/k4297k.jpg" alt="0_059"></p>
<p><img src="https://p.ipic.vip/6acb0e.jpg" alt="0_060"></p>
<p><img src="https://p.ipic.vip/q221w7.jpg" alt="0_061"></p>
<h2 id="第3章"><a href="#第3章" class="headerlink" title="第3章"></a>第3章</h2><p><img src="https://p.ipic.vip/xv5hyu.jpg" alt="0_062"></p>
<p><img src="https://p.ipic.vip/mxrr25.jpg" alt="0_063"></p>
<p><img src="https://p.ipic.vip/th10c4.jpg" alt="0_064"></p>
<p><img src="https://p.ipic.vip/6pdqru.jpg" alt="0_065"></p>
<p><img src="https://p.ipic.vip/2wyum5.jpg" alt="0_066"></p>
<p><img src="https://p.ipic.vip/0xh3dh.jpg" alt="0_067"></p>
<p><img src="https://p.ipic.vip/xflnvy.jpg" alt="0_068"></p>
<p><img src="https://p.ipic.vip/mmqi13.jpg" alt="0_069"></p>
<p><img src="https://p.ipic.vip/br79dv.jpg" alt="0_070"></p>
<p><img src="https://p.ipic.vip/xng2di.jpg" alt="0_071"></p>
<p><img src="https://p.ipic.vip/lh93gp.jpg" alt="0_072"></p>
<p><img src="https://p.ipic.vip/zfvu85.jpg" alt="0_073"></p>
<p><img src="https://p.ipic.vip/03h1hl.jpg" alt="0_074"></p>
<p><img src="https://p.ipic.vip/widzzz.jpg" alt="0_075"></p>
<p><img src="https://p.ipic.vip/qaz0v5.jpg" alt="0_076"></p>
<p><img src="https://p.ipic.vip/43s833.jpg" alt="0_077"></p>
<p><img src="https://p.ipic.vip/yhe277.jpg" alt="0_078"></p>
<p><img src="https://p.ipic.vip/3370to.jpg" alt="0_079"></p>
<p><img src="https://p.ipic.vip/1198yu.jpg" alt="0_080"></p>
<p><img src="https://p.ipic.vip/phxwtv.jpg" alt="0_081"></p>
<p><img src="https://p.ipic.vip/ww1doe.jpg" alt="0_082"></p>
<p><img src="https://p.ipic.vip/tz5ki8.jpg" alt="0_083"></p>
<p><img src="https://p.ipic.vip/6g17u8.jpg" alt="0_084"></p>
<p><img src="https://p.ipic.vip/3m0vfh.jpg" alt="0_085"></p>
<p><img src="https://p.ipic.vip/ebsvbj.jpg" alt="0_086"></p>
<p><img src="https://p.ipic.vip/b99ygj.jpg" alt="0_087"></p>
<p><img src="https://p.ipic.vip/dc2pe2.jpg" alt="0_088"></p>
<p><img src="https://p.ipic.vip/5zen0t.jpg" alt="0_089"></p>
<p><img src="https://p.ipic.vip/ukfmuu.jpg" alt="0_090"></p>
<p><img src="https://p.ipic.vip/d97uf3.jpg" alt="0_091"></p>
<p><img src="https://p.ipic.vip/if2qby.jpg" alt="0_092"></p>
<p><img src="https://p.ipic.vip/8kfltz.jpg" alt="0_093"></p>
<p><img src="https://p.ipic.vip/pdsixa.jpg" alt="0_094"></p>
<p><img src="https://p.ipic.vip/j37cwd.jpg" alt="0_095"></p>
<p><img src="https://p.ipic.vip/3r6t50.jpg" alt="0_096"></p>
<p><img src="https://p.ipic.vip/bur3ii.jpg" alt="0_097"></p>
<p><img src="https://p.ipic.vip/bb4nz2.jpg" alt="0_098"></p>
<p><img src="https://p.ipic.vip/46b21u.jpg" alt="0_099"></p>
<p><img src="https://p.ipic.vip/6bd3eb.jpg" alt="0_100"></p>
<p><img src="https://p.ipic.vip/uizv92.jpg" alt="0_101"></p>
<p><img src="https://p.ipic.vip/v658fc.jpg" alt="0_102"></p>
<p><img src="https://p.ipic.vip/xuu1ax.jpg" alt="0_103"></p>
<p><img src="https://p.ipic.vip/d70r0i.jpg" alt="0_104"></p>
<h2 id="第4章"><a href="#第4章" class="headerlink" title="第4章"></a>第4章</h2><p><img src="https://p.ipic.vip/u9plo9.jpg" alt="0_106"></p>
<p><img src="https://p.ipic.vip/i96qzm.jpg" alt="0_107"></p>
<p><img src="https://p.ipic.vip/6pnvp5.jpg" alt="0_108"></p>
<p><img src="https://p.ipic.vip/2vdngl.jpg" alt="0_109"></p>
<p><img src="https://p.ipic.vip/ndb75v.jpg" alt="0_110"></p>
<p><img src="https://p.ipic.vip/xfnj1x.jpg" alt="0_111"></p>
<p><img src="https://p.ipic.vip/mp33rs.jpg" alt="0_112"></p>
<p><img src="https://p.ipic.vip/5pm0gz.jpg" alt="0_113"></p>
<p><img src="https://p.ipic.vip/yv8c2b.jpg" alt="0_114"></p>
<p><img src="https://p.ipic.vip/ytfykm.jpg" alt="0_115"></p>
<p><img src="https://p.ipic.vip/p5n141.jpg" alt="0_116"></p>
<p><img src="https://p.ipic.vip/4kg5yz.jpg" alt="0_117"></p>
<p><img src="https://p.ipic.vip/y0a8hi.jpg" alt="0_118"></p>
<p><img src="https://p.ipic.vip/u11gvk.jpg" alt="0_119"></p>
<p><img src="https://p.ipic.vip/deh3lu.jpg" alt="0_120"></p>
<p><img src="https://p.ipic.vip/v6krzi.jpg" alt="0_121"></p>
<p><img src="https://p.ipic.vip/ghnzzk.jpg" alt="0_122"></p>
<p><img src="https://p.ipic.vip/inuicf.jpg" alt="0_123"></p>
<p><img src="https://p.ipic.vip/hbwczu.jpg" alt="0_124"></p>
<p><img src="https://p.ipic.vip/otduee.jpg" alt="0_125"></p>
<p><img src="https://p.ipic.vip/r731d4.jpg" alt="0_126"></p>
<p><img src="https://p.ipic.vip/paosxr.jpg" alt="0_127"></p>
<p><img src="https://p.ipic.vip/j9faqi.jpg" alt="0_128"></p>
<p><img src="https://p.ipic.vip/zwgkja.jpg" alt="0_129"></p>
<p><img src="https://p.ipic.vip/c7aa6j.jpg" alt="0_130"></p>
<p><img src="https://p.ipic.vip/mftxye.jpg" alt="0_131"></p>
<p><img src="https://p.ipic.vip/2j5ydz.jpg" alt="0_132"></p>
<p><img src="https://p.ipic.vip/7lk9c1.jpg" alt="0_133"></p>
<p><img src="https://p.ipic.vip/9d2pbu.jpg" alt="0_134"></p>
<p><img src="https://p.ipic.vip/q11skd.jpg" alt="0_135"></p>
<p><img src="https://p.ipic.vip/golnny.jpg" alt="0_136"></p>
<p><img src="https://p.ipic.vip/7mqccf.jpg" alt="0_137"></p>
<p><img src="https://p.ipic.vip/my6kiv.jpg" alt="0_138"></p>
<p><img src="https://p.ipic.vip/siq48k.jpg" alt="0_139"></p>
<p><img src="https://p.ipic.vip/1y07sc.jpg" alt="0_140"></p>
<p><img src="https://p.ipic.vip/1fx8fn.jpg" alt="0_141"></p>
<p><img src="https://p.ipic.vip/t8aeyy.jpg" alt="0_142"></p>
<p><img src="https://p.ipic.vip/lc5gfl.jpg" alt="0_143"></p>
<p><img src="https://p.ipic.vip/ttup3d.jpg" alt="0_144"></p>
<h2 id="第5章"><a href="#第5章" class="headerlink" title="第5章"></a>第5章</h2><p><img src="https://p.ipic.vip/xsz92m.jpg" alt="0_146"></p>
<p><img src="https://p.ipic.vip/wmedya.jpg" alt="0_147"></p>
<p><img src="https://p.ipic.vip/lsje58.jpg" alt="0_148"></p>
<p><img src="https://p.ipic.vip/q6ltvc.jpg" alt="0_149"></p>
<p><img src="https://p.ipic.vip/hi2b1k.jpg" alt="0_150"></p>
<p><img src="https://p.ipic.vip/0cc2ck.jpg" alt="0_151"></p>
<p><img src="https://p.ipic.vip/nchni4.jpg" alt="0_152"></p>
<p><img src="https://p.ipic.vip/tqsw86.jpg" alt="0_153"></p>
<p><img src="https://p.ipic.vip/q9neyy.jpg" alt="0_154"></p>
<p><img src="https://p.ipic.vip/4qtwtl.jpg" alt="0_155"></p>
<p><img src="https://p.ipic.vip/lj75hs.jpg" alt="0_156"></p>
<p><img src="https://p.ipic.vip/53osvn.jpg" alt="0_157"></p>
<p><img src="https://p.ipic.vip/cu6cdp.jpg" alt="0_158"></p>
<p><img src="https://p.ipic.vip/q43gqd.jpg" alt="0_159"></p>
<p><img src="https://p.ipic.vip/s39fcc.jpg" alt="0_160"></p>
<p><img src="https://p.ipic.vip/i7lko7.jpg" alt="0_161"></p>
<p><img src="https://p.ipic.vip/szr7pc.jpg" alt="0_162"></p>
<p><img src="https://p.ipic.vip/1fsolm.jpg" alt="0_163"></p>
<p><img src="https://p.ipic.vip/5l8evf.jpg" alt="0_164"></p>
<p><img src="https://p.ipic.vip/3jzg3y.jpg" alt="0_165"></p>
<p><img src="https://p.ipic.vip/jrm4tg.jpg" alt="0_166"></p>
<p><img src="https://p.ipic.vip/r0g2dn.jpg" alt="0_167"></p>
<p><img src="https://p.ipic.vip/igx4i3.jpg" alt="0_168"></p>
<p><img src="https://p.ipic.vip/6n19uh.jpg" alt="0_169"></p>
<p><img src="https://p.ipic.vip/x6d9du.jpg" alt="0_170"></p>
<p><img src="https://p.ipic.vip/9eftlo.jpg" alt="0_171"></p>
<p><img src="https://p.ipic.vip/cixm4d.jpg" alt="0_172"></p>
<p><img src="https://p.ipic.vip/nweh68.jpg" alt="0_173"></p>
<p><img src="https://p.ipic.vip/50hf98.jpg" alt="0_174"></p>
<p><img src="https://p.ipic.vip/cakjl4.jpg" alt="0_175"></p>
<p><img src="https://p.ipic.vip/nw9pga.jpg" alt="0_176"></p>
<p><img src="https://p.ipic.vip/dj52qb.jpg" alt="0_177"></p>
<p><img src="https://p.ipic.vip/muuxdn.jpg" alt="0_178"></p>
<p><img src="https://p.ipic.vip/ovff7h.jpg" alt="0_179"></p>
<p><img src="https://p.ipic.vip/0lbeuf.jpg" alt="0_180"></p>
<p><img src="https://p.ipic.vip/6jovpe.jpg" alt="0_181"></p>
<p><img src="https://p.ipic.vip/srszuf.jpg" alt="0_182"></p>
<p><img src="https://p.ipic.vip/2tzgxp.jpg" alt="0_183"></p>
<p><img src="https://p.ipic.vip/beu4di.jpg" alt="0_184"></p>
<p><img src="https://p.ipic.vip/6b62d7.jpg" alt="0_185"></p>
<p><img src="https://p.ipic.vip/43bihx.jpg" alt="0_186"></p>
<h2 id="第6章"><a href="#第6章" class="headerlink" title="第6章"></a>第6章</h2><p><img src="https://p.ipic.vip/p3nnq9.jpg" alt="0_188"></p>
<p><img src="https://p.ipic.vip/lsv1c6.jpg" alt="0_189"></p>
<p><img src="https://p.ipic.vip/39t1yt.jpg" alt="0_190"></p>
<p><img src="https://p.ipic.vip/x2ac2m.jpg" alt="0_191"></p>
<p><img src="https://p.ipic.vip/8aou84.jpg" alt="0_192"></p>
<p><img src="https://p.ipic.vip/1onl4o.jpg" alt="0_193"></p>
<p><img src="https://p.ipic.vip/bipqrf.jpg" alt="0_194"></p>
<p><img src="https://p.ipic.vip/cc8dos.jpg" alt="0_195"></p>
<p><img src="https://p.ipic.vip/envhqw.jpg" alt="0_196"></p>
<p><img src="https://p.ipic.vip/b3vhsy.jpg" alt="0_197"></p>
<p><img src="https://p.ipic.vip/3azo61.jpg" alt="0_198"></p>
<p><img src="https://p.ipic.vip/yzlzen.jpg" alt="0_199"></p>
<p><img src="https://p.ipic.vip/h9rp2g.jpg" alt="0_200"></p>
<p><img src="https://p.ipic.vip/0g7faj.jpg" alt="0_201"></p>
<p><img src="https://p.ipic.vip/w1vuun.jpg" alt="0_202"></p>
<p><img src="https://p.ipic.vip/vn0tum.jpg" alt="0_203"></p>
<p><img src="https://p.ipic.vip/ua7uj8.jpg" alt="0_204"></p>
<p><img src="https://p.ipic.vip/6djaiv.jpg" alt="0_205"></p>
<p><img src="https://p.ipic.vip/iwjdr7.jpg" alt="0_206"></p>
<p><img src="https://p.ipic.vip/au6v9c.jpg" alt="0_207"></p>
<p><img src="https://p.ipic.vip/mwsf3q.jpg" alt="0_208"></p>
<p><img src="https://p.ipic.vip/tfhbf6.jpg" alt="0_209"></p>
<p><img src="https://p.ipic.vip/34504k.jpg" alt="0_210"></p>
<p><img src="https://p.ipic.vip/4k9g60.jpg" alt="0_211"></p>
<p><img src="https://p.ipic.vip/ssr8rn.jpg" alt="0_212"></p>
<p><img src="https://p.ipic.vip/8853pm.jpg" alt="0_213"></p>
<p><img src="https://p.ipic.vip/qbotos.jpg" alt="0_214"></p>
<p><img src="https://p.ipic.vip/yrmvz6.jpg" alt="0_215"></p>
<p><img src="https://p.ipic.vip/gyjemq.jpg" alt="0_216"></p>
<p><img src="https://p.ipic.vip/t70oqh.jpg" alt="0_217"></p>
<p><img src="https://p.ipic.vip/35s8k2.jpg" alt="0_218"></p>
<p><img src="https://p.ipic.vip/diqkll.jpg" alt="0_219"></p>
<p><img src="https://p.ipic.vip/uhkgk8.jpg" alt="0_220"></p>
<p><img src="https://p.ipic.vip/87sdoq.jpg" alt="0_221"></p>
<p><img src="https://p.ipic.vip/i4cl77.jpg" alt="0_222"></p>
<p><img src="https://p.ipic.vip/2fonb3.jpg" alt="0_223"></p>
<p><img src="https://p.ipic.vip/yruush.jpg" alt="0_224"></p>
<p><img src="https://p.ipic.vip/suhy8m.jpg" alt="0_225"></p>
<h2 id="第7章"><a href="#第7章" class="headerlink" title="第7章"></a>第7章</h2><p><img src="https://p.ipic.vip/k32bs7.jpg" alt="0_226"></p>
<p><img src="https://p.ipic.vip/qpk6qk.jpg" alt="0_227"></p>
<p><img src="https://p.ipic.vip/aonaad.jpg" alt="0_228"></p>
<p><img src="https://p.ipic.vip/1w7fxk.jpg" alt="0_229"></p>
<p><img src="https://p.ipic.vip/i5fukd.jpg" alt="0_230"></p>
<p><img src="https://p.ipic.vip/lfe61n.jpg" alt="0_231"></p>
<p><img src="https://p.ipic.vip/kal2p2.jpg" alt="0_232"></p>
<p><img src="https://p.ipic.vip/xmle17.jpg" alt="0_233"></p>
<p><img src="https://p.ipic.vip/tr5q2u.jpg" alt="0_234"></p>
<p><img src="https://p.ipic.vip/soyqie.jpg" alt="0_235"></p>
<p><img src="https://p.ipic.vip/orzq48.jpg" alt="0_236"></p>
<p><img src="https://p.ipic.vip/mybfu0.jpg" alt="0_237"></p>
<p><img src="https://p.ipic.vip/vrfyl7.jpg" alt="0_238"></p>
<p><img src="https://p.ipic.vip/p0nyoi.jpg" alt="0_239"></p>
<p><img src="https://p.ipic.vip/urmy9t.jpg" alt="0_240"></p>
<p><img src="https://p.ipic.vip/xhbv0c.jpg" alt="0_241"></p>
<p><img src="https://p.ipic.vip/vcxw1h.jpg" alt="0_242"></p>
<p><img src="https://p.ipic.vip/iah1v2.jpg" alt="0_243"></p>
<p><img src="https://p.ipic.vip/ij2xnf.jpg" alt="0_244"></p>
<p><img src="https://p.ipic.vip/ulzlii.jpg" alt="0_245"></p>
<p><img src="https://p.ipic.vip/w72m7v.jpg" alt="0_246"></p>
<p><img src="https://p.ipic.vip/lariu2.jpg" alt="0_247"></p>
<p><img src="https://p.ipic.vip/znkrg1.jpg" alt="0_248"></p>
<p><img src="https://p.ipic.vip/ifclt5.jpg" alt="0_249"></p>
<p><img src="https://p.ipic.vip/hq4kb6.jpg" alt="0_250"></p>
<p><img src="https://p.ipic.vip/diinic.jpg" alt="0_251"></p>
<p><img src="https://p.ipic.vip/rjn6lg.jpg" alt="0_252"></p>
<p><img src="https://p.ipic.vip/lk1as3.jpg" alt="0_253"></p>
<p><img src="https://p.ipic.vip/3m17r6.jpg" alt="0_254"></p>
<p><img src="https://p.ipic.vip/8wz5rb.jpg" alt="0_255"></p>
<p><img src="https://p.ipic.vip/ait6bk.jpg" alt="0_256"></p>
<p><img src="https://p.ipic.vip/a6lwc4.jpg" alt="0_257"></p>
<p><img src="https://p.ipic.vip/suoxdw.jpg" alt="0_258"></p>
<h2 id="第8章"><a href="#第8章" class="headerlink" title="第8章"></a>第8章</h2><p><img src="https://p.ipic.vip/2309mv.jpg" alt="0_260"></p>
<p><img src="https://p.ipic.vip/qe0is5.jpg" alt="0_261"></p>
<p><img src="https://p.ipic.vip/6sqiyi.jpg" alt="0_262"></p>
<p><img src="https://p.ipic.vip/ifg7s4.jpg" alt="0_263"></p>
<p><img src="https://p.ipic.vip/l7i2qy.jpg" alt="0_264"></p>
<p><img src="https://p.ipic.vip/2d4ifc.jpg" alt="0_265"></p>
<p><img src="https://p.ipic.vip/pn81f0.jpg" alt="0_266"></p>
<p><img src="https://p.ipic.vip/1oi8pu.jpg" alt="0_267"></p>
<p><img src="https://p.ipic.vip/dwurwj.jpg" alt="0_268"></p>
<p><img src="https://p.ipic.vip/g4g83m.jpg" alt="0_269"></p>
<p><img src="https://p.ipic.vip/4bwvus.jpg" alt="0_270"></p>
<p><img src="https://p.ipic.vip/9ekk1o.jpg" alt="0_271"></p>
<p><img src="https://p.ipic.vip/stvy69.jpg" alt="0_272"></p>
<p><img src="https://p.ipic.vip/cjcr5j.jpg" alt="0_273"></p>
<p><img src="https://p.ipic.vip/qmowbi.jpg" alt="0_274"></p>
<p><img src="https://p.ipic.vip/t8170n.jpg" alt="0_275"></p>
<p><img src="https://p.ipic.vip/5czsno.jpg" alt="0_276"></p>
<p><img src="https://p.ipic.vip/qfatzu.jpg" alt="0_277"></p>
<p><img src="https://p.ipic.vip/69mzd8.jpg" alt="0_278"></p>
<p><img src="https://p.ipic.vip/xto0ir.jpg" alt="0_279"></p>
<p><img src="https://p.ipic.vip/6q2qej.jpg" alt="0_280"></p>
<p><img src="https://p.ipic.vip/4i57vq.jpg" alt="0_281"></p>
<p><img src="https://p.ipic.vip/h2neel.jpg" alt="0_282"></p>
<p><img src="https://p.ipic.vip/g7d48u.jpg" alt="0_283"></p>
<p><img src="https://p.ipic.vip/3zvi99.jpg" alt="0_284"></p>
<p><img src="https://p.ipic.vip/6brsgu.jpg" alt="0_285"></p>
<p><img src="https://p.ipic.vip/0hlom3.jpg" alt="0_286"></p>
<p><img src="https://p.ipic.vip/b8hln3.jpg" alt="0_287"></p>
<p><img src="https://p.ipic.vip/rkk4ox.jpg" alt="0_288"></p>
<p><img src="https://p.ipic.vip/co4agc.jpg" alt="0_289"></p>
<p><img src="https://p.ipic.vip/8uovzb.jpg" alt="0_290"></p>
<h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><p><img src="https://p.ipic.vip/oz5x4q.jpg" alt="0_292"></p>
<p><img src="https://p.ipic.vip/wkbcyt.jpg" alt="0_293"></p>
<p><img src="https://p.ipic.vip/ip34a1.jpg" alt="0_294"></p>
<p><img src="https://p.ipic.vip/cc7h6k.jpg" alt="0_295"></p>
<p><img src="https://p.ipic.vip/apviv7.jpg" alt="0_296"></p>
<p><img src="https://p.ipic.vip/8mjlyy.jpg" alt="0_297"></p>
<p><img src="https://p.ipic.vip/8sb9hl.jpg" alt="0_298"></p>
<p><img src="https://p.ipic.vip/jr2539.jpg" alt="0_299"></p>
<p><img src="https://p.ipic.vip/7aelsr.jpg" alt="0_300"></p>
<p><img src="https://p.ipic.vip/llvper.jpg" alt="0_301"></p>
<p><img src="https://p.ipic.vip/drd4bw.jpg" alt="0_302"></p>
<p><img src="https://p.ipic.vip/98v1hd.jpg" alt="0_303"></p>
<p><img src="https://p.ipic.vip/yaqpg4.jpg" alt="0_304"></p>
<p><img src="https://p.ipic.vip/15iwe3.jpg" alt="0_305"></p>
<p><img src="https://p.ipic.vip/1we84v.jpg" alt="0_306"></p>
<p><img src="https://p.ipic.vip/xtnw1x.jpg" alt="0_307"></p>
<p><img src="https://p.ipic.vip/ohnaiy.jpg" alt="0_308"></p>
<p><img src="https://p.ipic.vip/co440z.jpg" alt="0_309"></p>
<p><img src="https://p.ipic.vip/6qnjan.jpg" alt="0_310"></p>
<p><img src="https://p.ipic.vip/m3sxkk.jpg" alt="0_311"></p>
<p><img src="https://p.ipic.vip/hhdbns.jpg" alt="0_312"></p>
<p><img src="https://p.ipic.vip/g7gpu4.jpg" alt="0_313"></p>
<p><img src="https://p.ipic.vip/yvrizl.jpg" alt="0_314"></p>
]]></content>
      <categories>
        <category>Recharge</category>
      </categories>
  </entry>
  <entry>
    <title>Beyes Rule</title>
    <url>/2023/05/01/Recharge/Beyes%20Rule/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="什么是贝叶斯定理？"><a href="#什么是贝叶斯定理？" class="headerlink" title="什么是贝叶斯定理？"></a>什么是贝叶斯定理？</h2><p>来源：<a href="https://zhuanlan.zhihu.com/p/350190166">https://zhuanlan.zhihu.com/p/350190166</a></p>
<p>在信息和条件有限的情况下，基于过去的数据，通过动态调整的方法，帮助我们一步步预测出事件发生的接近真实的概率。</p>
<p>其根本思想是【后验概率 &#x3D; 先验概率 * 调整因子】，其中【先验概率】就是在信息不完整情况下做出的主观概率预测；【调整因子】则是在信息收集不断完善的过程中对先验概率的调整；【后验概率】则是经过调整后最终作出的概率预测。</p>
<p><img src="https://p.ipic.vip/uid7ek.jpg" alt="img"></p>
<h2 id="举个例子"><a href="#举个例子" class="headerlink" title="举个例子"></a>举个例子</h2><p>有两个桶，1号桶里有40个球，其中30个白球，10个黑球；2号桶里也有40个球，其中20个白球，20个黑球。</p>
<p><strong>先假设几个事件：</strong></p>
<blockquote>
<p>A事件：抓取1个球，球来自1号桶。<br>B事件：抓取的是白球。<br>C事件：抓取1个球，球来自2号桶。</p>
</blockquote>
<h2 id="条件概率-x2F-全概率-x2F-逆概率"><a href="#条件概率-x2F-全概率-x2F-逆概率" class="headerlink" title="条件概率&#x2F;全概率&#x2F;逆概率"></a><strong>条件概率&#x2F;全概率&#x2F;逆概率</strong></h2><p>***条件概率：***从1号桶中抽取白球的概率P(B|A)&#x3D;30&#x2F;(30+10)&#x3D;75%；从2号桶中抽取白球的概率P(B|C)&#x3D;20&#x2F;(20+20)&#x3D;50%，这些都是条件概率。</p>
<p><em><strong>全概率：</strong></em>抽取一个球，为白球的概率，这个概率叫全概率，是1号桶中抽取白球和2号桶中抽取白球两个事件的概率之和，即 P(B)&#x3D;P(B|A)P(A)+P(B|C)P(C)&#x3D;75% * <strong>50% + 50% *</strong> 50%&#x3D; 62.5%。</p>
<p>***逆概率&#x2F;贝叶斯定理：***抓取了一个球是白球，那么这个白球来自1号桶的概率P(A|B)是多少，这就是典型的贝叶斯定理解决的问题。</p>
<h2 id="贝叶斯公式"><a href="#贝叶斯公式" class="headerlink" title="贝叶斯公式"></a>贝叶斯公式</h2><p>P(A|B）如何求呢？这就用到贝叶斯公式了。</p>
<p><img src="https://p.ipic.vip/9dkcwp.jpg" alt="img"></p>
<h2 id="如何使用贝叶斯定理？"><a href="#如何使用贝叶斯定理？" class="headerlink" title="如何使用贝叶斯定理？"></a>如何使用贝叶斯定理？</h2><ol>
<li>先求P(A），即抓取一个球，球来自A桶的概率，这叫做【先验概率】，也就是在没有约束条件（约束条件为抽取的是白球）下事件A发生的概率，这个很好计算为50%。</li>
<li>再求P(B|A)&#x2F;P(B)，这叫做【可能性函数】或【调整函数】，也就是在已知条件下抓取的是白球的情况下，对P(A）进行调整的因子。根据上文计算的P(B|A）&#x3D; 75%，P(B)&#x3D; 62.5%，得出调整因子为75%&#x2F;62.5%&#x3D;1.2。</li>
<li>最后求P(A|B），也被叫做【后验概率】&#x3D; 【先验概率】 * 【调整函数】&#x3D; P(A） *** (P(B|A)&#x2F;P(B)) &#x3D; 50% * 1.2 &#x3D; 60% 。**</li>
</ol>
<p>也就是说，抽取一个球，在信息不完整的情况下，这个球来自1号桶的概率为50%；在我们知道这个球是白球的条件下，那么这个球来自1号桶的可能性提高了20%（调整因子为1.2），则最终抽取的是白球且来自1号桶的概率将提升到60%。</p>
<p><strong>具体过程见下图：</strong></p>
<p><img src="https://p.ipic.vip/38cal0.jpg" alt="img"></p>
]]></content>
      <categories>
        <category>Recharge</category>
      </categories>
  </entry>
  <entry>
    <title>For Early Career Scientists</title>
    <url>/2023/05/01/Recharge/For%20Early%20Career%20Scientists/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="How-to-Review-an-Academic-Journal-Article"><a href="#How-to-Review-an-Academic-Journal-Article" class="headerlink" title="How to Review an Academic Journal Article"></a>How to Review an Academic Journal Article</h2><p>Michael Tavel Clarke and Faye Halpern recommend an approach that allows those weighing in to act more like mentors than gatekeepers.</p>
<p><strong>By</strong> <a href="https://www.insidehighered.com/author/michael-tavel-clarke">Michael Tavel Clarke </a>and <a href="https://www.insidehighered.com/node/6761">Faye Halpern</a></p>
<p>In the dozen years we have co-edited <a href="https://journalhosting.ucalgary.ca/index.php/ariel">the journal</a> <em><a href="https://www.press.jhu.edu/journals/ariel-review-international-english-literature">ARIEL: A Review of International English Literature</a></em>, we have read many external reports supplied by colleagues in our discipline. We have also written peer reviews for other journals ourselves. Throughout those experiences, we have been struck by a peculiar challenge presented by the reader report: the challenge of audience.</p>
<p>Peer reviews are commissioned and read by editors, but they are also sent to the author of the piece being reviewed. Because journal editors are the ones who request reader reports, it’s natural to assume they are the primary audience for your review. However, we would like to propose that you think of the author as your primary audience and write your report accordingly.</p>
<p>Why do we recommend this approach? It allows journals to act more like mentors than gatekeepers. If a reviewer imagines they are writing for the journal editor, they compose according to what they imagine the journal editor needs: a judgment about the quality of the article, including an answer to the big question of whether they should publish it or not. If the journal editor is your audience, it might be a virtue if your report is brief (journal editors are busy) or written in conceptual shorthand (you are, after all, writing to an expert in the field). Nor is it a problem if you choose to write caustically (you can all share the joke of what this author thought was publishable).</p>
<p>At the same time, however, these qualities make a report not very useful or possibly even hurtful to the author of the submission. If, in contrast, the reviewer thinks they are writing primarily for the author, they will likely spend more time explaining what they see as the article’s strengths and weaknesses, shaping their explanations to what they think the author can absorb. It’s also much harder—although, of course, not impossible—to be dismissive.</p>
<p>Including the positive, shaping your suggestions to meet the writer where they are, adopting an encouraging tone—this all probably sounds familiar. A second reason we advocate that a reviewer write primarily to the author is because it enables the reviewer to take advantage of something they know a lot about: how to comment on students’ work. Everything you already know as a teacher about how to write helpful comments to students about their papers is relevant to the work you perform as a reviewer of journal articles. If you are recommending the journal reject an article—comparable to assigning a bad grade—it’s important to be encouraging, to identify strengths of the work as well as limitations, to give advice about how to improve the work and to think of an article as a work in progress. As with student papers, it’s also important to avoid overwhelming the author with recommendations.</p>
<p>Yet there’s one habit of mind we can slip into when giving feedback that isn’t always helpful to the author of the article you’re reviewing, who is after all a colleague and not a student: the sense that you know more than the author. You might be an expert in the field and well published yourself, but that knowledge of the discipline and how to write about it can turn into a liability if it encourages a patronizing tone. It can also be a problem if it makes you reject an article that productively and insightfully challenges your field’s paradigms or values.</p>
<p>For example, the article might focus on material that hasn’t been conventionally analyzed, or it might analyze familiar material in new ways. Rejecting this kind of article is one way that reviewers unwittingly disadvantage younger voices and minoritized authors who want to question the way things have always been done. Not every article that challenges a discipline is doing it well, but some of them are—and those kinds of challenging articles can have a huge impact by taking the field in new and productive directions. In other words, we think it’s important for reviewers to approach articles with the attitude that authors can teach <em>them</em> something, rather than the other way around.</p>
<h3 id="General-Suggestions"><a href="#General-Suggestions" class="headerlink" title="General Suggestions"></a>General Suggestions</h3><p>We recommend that you offer the author suggestions for improvement, whether you think that person can revise and resubmit or that the article has too far to go to be publishable at this time. Unless an article is nearly ready for publication, aim for a length of one to two single-spaced pages. A shorter report won’t offer the detail that an author is likely to find valuable in revising either for the present journal or another one. For the editor, a short report will also be unhelpful in reaching and conveying the decision about why an article was rejected or how the author needs to revise to get the article published.</p>
<p>That said, too long a report might indicate that a reviewer has lost sight of the big picture. In addition, the common advice to limit your suggestions to two or three larger conceptual or structural issues when providing feedback to students applies here, too: the author of an article likely can’t address more than that without writing an entirely new article. However, do point out things like factual errors and other smaller, nongrammatical problems you see.</p>
<p>You might be wondering whether our advice to offer the authors suggestions for improvement might be confusing for authors (and editors) whose articles you are recommending the editors reject. We assure you that rarely happens. We recommend including your final recommendation in your report, but even if you don’t, both author and editor can infer from the kind of recommendations you’re providing how far it is from being publishable at this time. A suggestion to integrate the work of one relevant scholar is very different from a suggestion that an author choose a scholarly conversation to engage with. If you’re still worried, many journals offer separate locations for indicating your final decision and writing comments that are for the editor’s eyes only.</p>
<p>This worry—that authors might be too encouraged—reveals how journals have traditionally functioned as gatekeepers. Certainly, one of the functions of a journal is to provide strong scholarship that will move a field forward. But to return to a point we made above, like many other journal editors, we want our journal to have another function: to serve as a site for the mentoring and nurturing of scholars, especially beginning or minoritized ones. Scholars will not submit just one article to one journal in their career; they will continue, if all goes well, to produce scholarship and develop as writers and thinkers. Similarly, the article you feel should be rejected will likely, if its author receives the right kind of feedback, be revised and sent to another journal—or if abandoned, the author will use your advice to shape their next article. We are all evolving writers, but our evolution can slow or even stop if we receive feedback that is caustic or points out only how we failed. The best feedback suggests a path forward as a writer and scholar.</p>
<h3 id="A-Reader-Report-Template"><a href="#A-Reader-Report-Template" class="headerlink" title="A Reader Report Template"></a>A Reader Report Template</h3><p>While we don’t think it’s the only way to write a report, we’d like to describe here some ways to give specific feedback in yours. Start with a one-paragraph summary of the essay’s argument, its contribution or potential contribution to scholarly discussions on the topic(s) and its other strengths. That achieves several things. It shows to the author that you understand what they’re saying, have read the essay carefully and recognize the contribution the author is making or hoping to make. If, in the author’s view, that paragraph does not do a good job summarizing the argument, it should indicate to them that they haven’t been as clear as they hoped. Such an opening establishes your authority and ethos to both the author and editor: it shows that you have read the article carefully, know the field and are generous as well as rigorous.</p>
<p>Alternatively, you might start with your overall recommendation (publish, decline the article or require revisions) and the main reasons behind it. Like the thesis in a student essay, the recommendation and main reasons serve to introduce and organize the details explained in the rest of the report.</p>
<p>If the article is not a straight acceptance, spend the body of the report on two or three higher-level recommendations, as well as any smaller suggestions you have. If you feel the author needs to integrate particular scholarship, it’s very helpful to name the titles you want them to consult.</p>
<p>Do not copyedit the article—among other problems, it will eat up a tremendous amount of your time. Rather, use your report to help the author clarify the stakes of the argument, strengthen the recognition and treatment of other relevant scholarship on the topic, and improve the support for the essay’s claims, the article’s structure and the ideas and concepts they (could) develop or apply.</p>
<p>The only reason to suggest line edits is if you see errors or gaffes you think a copy editor might not notice. To both author and journal editor, an excessive focus on minutiae suggests the reviewer has lost sight of the forest for the trees. Line edits come later in the process—after the article has been accepted but before it has been published.</p>
<p>If you opened your report with a summary of the essay, you might end the report with a recap of your recommendations for revision, although that’s not essential. Authors are likely to read reports several times, so restatement is probably unnecessary. The same is true for editors. Instead, you might close the report with your overall recommendation: accept, reject or revise and resubmit.</p>
<p>If instead you opened your report with your overall recommendation and the main reasons for it, no conclusion is necessary, although you might end on an encouraging note: what you learned from the essay, the importance of the topic and your eagerness to see the essay, a revised version or future work in print.</p>
<h3 id="A-Note-to-Authors"><a href="#A-Note-to-Authors" class="headerlink" title="A Note to Authors"></a>A Note to Authors</h3><p>Heeding our own advice to write with authors primarily in mind, we’d like to end by suggesting to authors that thinking about reader reports in the way we have described might provide some emotional buffering against unkind reports. That unkind review might still contain useful advice about how to revise your essay, and we recommend taking that advice seriously, but you should also know that the writer of the report was likely thinking primarily about the editor when writing that review and not the author.</p>
<p>At many journals, including ours, such a report will raise red flags for the editor and might constitute the rare case when we do not send it to the author. We hope that this article will help prevent such reports in the first place.</p>
<p><em>Michael Tavel Clarke is associate professor of English at the University of Calgary in Canada, where he specializes in U.S. literature and culture since the Civil War. He is the author of</em>  These Days of Large Things: The Culture of Size in America, 1865–1930 <em>(Michigan University</em> <em>Press, 2007) and co-editor of</em> Scale in Literature and Culture <em>(Palgrave Macmillan, 2017). He co-edits</em> ARIEL: A Review of International English Literature <em>with Faye Halpern. Faye Halpern is associate professor of English at the University of Calgary. As well as co-editing</em> ARIEL <em>with Michael Tavel Clarke, she co-edits the book series</em> The Theory and Practice of Narrative <em>from The Ohio State University Press.</em></p>
<h2 id="Curriculum-Vitae-for-Science-Position"><a href="#Curriculum-Vitae-for-Science-Position" class="headerlink" title="Curriculum Vitae for Science Position"></a>Curriculum Vitae for Science Position</h2><p><img src="https://p.ipic.vip/270sdi.png" alt="CV Template"></p>
<h2 id="投稿信件模板"><a href="#投稿信件模板" class="headerlink" title="投稿信件模板"></a>投稿信件模板</h2><p>来源：<a href="https://zhuanlan.zhihu.com/p/384932562">https://zhuanlan.zhihu.com/p/384932562</a></p>
<h3 id="初次投稿"><a href="#初次投稿" class="headerlink" title="初次投稿"></a>初次投稿</h3><p>Dear Editors:</p>
<p>We would like to submit the enclosed manu entitled “Paper Title”, which we wish to be considered for publication in“Journal Name”. No conflict of interest exits in the submission of this manu, and manu is approved by all authors for publication. I would like to declare on behalf of my co-authors that the work described was original research that has not been published previously, and not under consideration for publication elsewhere, in whole or in part. All the authors listed have approved the manu that is enclosed.</p>
<p>In this work, we evaluated ……(简要介绍一下论文的创新性). I hope this paper is suitable for“Journal Name”.</p>
<p>The following is a list of possible reviewers for your consideration:</p>
<ol>
<li>Name A E-mail: ××××@××××</li>
<li>Name B E-mail: ××××@××××</li>
</ol>
<p>We deeply appreciate your consideration of our manu, and we look forward to receiving comments from the reviewers. If you have any queries, please don’t hesitate to contact me at the address below.</p>
<p>Thank you and best regards.</p>
<p>Yours sincerely,</p>
<p>××××××</p>
<p>Corresponding author:</p>
<p>Name: ×××</p>
<p>E-mail: ××××@××××</p>
<h3 id="催稿信"><a href="#催稿信" class="headerlink" title="催稿信"></a>催稿信</h3><p>Dear Prof. ×××:</p>
<p>Sorry for disturbing you. I am not sure if it is the right time to contact you to inquire about the status of my submitted manu titled “Paper Title”. (ID:文章稿号), although the status of“With Editor”has been lasting for more than two months, since submitted to journal three months ago. I am just wondering that my manu has been sent to reviewers or not?</p>
<p>I would be greatly appreciated if you could spend some of your time check the status for us. I am very pleased to hear from you on the reviewer’s comments.</p>
<p>Thank you very much for your consideration.</p>
<p>Best regards!</p>
<p>Yours sincerely,</p>
<p>××××××</p>
<p>Corresponding author:</p>
<p>Name: ×××</p>
<p>E-mail: ××××@××××</p>
<h3 id="修改稿"><a href="#修改稿" class="headerlink" title="修改稿"></a>修改稿</h3><p>Dear Dr&#x2F; Prof..（写上负责你文章编辑的姓名，显得尊重，因为第一次的投稿不知道具体负责的编辑，只能用通用的Editors）:</p>
<p>On behalf of my co-authors, we thank you very much for giving us an opportunity to revise our manu, we appreciate editor and reviewers very much for their positive and constructive comments and suggestions on our manu entitled “Paper Title”. (ID:文章稿号).</p>
<p>We have studied reviewer’s comments carefully and have made revision which marked in red in the paper. We have tried our best to revise our manu according to the comments. Attached please find the revised version, which we would like to submit for your kind consideration.</p>
<p>We would like to express our great appreciation to you and reviewers for comments on our paper. Looking forward to hearing from you.</p>
<p>Thank you and best regards.</p>
<p>Yours sincerely,</p>
<p>××××××</p>
<p>Corresponding author:</p>
<p>Name: ×××</p>
<p>E-mail: ××××@××××</p>
<h3 id="修改稿回答审稿人的意见"><a href="#修改稿回答审稿人的意见" class="headerlink" title="修改稿回答审稿人的意见"></a>修改稿回答审稿人的意见</h3><p>Dear Editors and Reviewers:</p>
<p>Thank you for your letter and for the reviewers’comments concerning our manu entitled“Paper Title”(ID:文章稿号). Those comments are all valuable and very helpful for revising and improving our paper, as well as the important guiding significance to our researches. We have studied comments carefully and have made correction which we hope meet with approval. Revised portion are marked in red in the paper. The main corrections in the paper and the responds to the reviewer’s comments are as flowing:</p>
<p>Responds to the reviewer’s comments:</p>
<p>Reviewer #1:</p>
<ol>
<li>Response to comment: (……简要列出意见……)</li>
</ol>
<p>Response: ××××××</p>
<ol start="2">
<li>Response to comment: (……简要列出意见……)</li>
</ol>
<p>Response: ××××××</p>
<p>。。。。。。</p>
<p>逐条意见回答，切忌一定不能有遗漏</p>
<p>针对不同的问题有下列几个礼貌术语可适当用用：</p>
<p>We are very sorry for our negligence of ………</p>
<p>We are very sorry for our incorrect writing ………</p>
<p>It is really true as Reviewer suggested that……</p>
<p>We have made correction according to the Reviewer’s comments.</p>
<p>We have re-written this part according to the Reviewer’s suggestion</p>
<p>As Reviewer suggested that……</p>
<p>Considering the Reviewer’s suggestion, we have……</p>
<p>最后特意感谢一下这个审稿人的意见：</p>
<p>Special thanks to you for your good comments.</p>
<p>Reviewer #2:</p>
<p>同上述</p>
<p>Reviewer #3:</p>
<p>××××××</p>
<p>Other changes:</p>
<ol>
<li>Line 60-61, the statements of “……”were corrected as“…………”</li>
<li>Line 107, “……”was added</li>
<li>Line 129, “……”was deleted</li>
</ol>
<p>××××××</p>
<p>We tried our best to improve the manu and made some changes in the manu. These changes will not influence the content and framework of the paper. And here we did not list the changes but marked in red in revised paper.</p>
<p>We appreciate for Editors&#x2F;Reviewers’warm work earnestly, and hope that the correction will meet with approval.</p>
<p>Once again, thank you very much for your comments and suggestions.</p>
<h3 id="致谢信模板"><a href="#致谢信模板" class="headerlink" title="致谢信模板"></a>致谢信模板</h3><p>文章接收后可以考虑感谢一下负责你文章的编辑或主编（根据需要）</p>
<p>Dear Prof. ××××××:</p>
<p>Thanks very much for your kind work and consideration on publication of our paper. On behalf of my co-authors, we would like to express our great appreciation to editor and reviewers.</p>
<p>Thank you and best regards.</p>
<p>Yours sincerely,</p>
<p>××××××</p>
<p>Corresponding author:</p>
<p>Name: ×××</p>
<p>E-mail: ××××@××××</p>
<h3 id="询问校稿的信件"><a href="#询问校稿的信件" class="headerlink" title="询问校稿的信件"></a>询问校稿的信件</h3><p>如果文章接收后长时间没有收到校稿通知，可写信询问一下编辑：</p>
<p>Dear ×××:</p>
<p>Sorry for disturbing you. I am not sure if it is the right time to contact you to inquire about the status of our accepted manu titled “Paper Title”(ID:文章稿号), since the copyright agreement for publication has been sent to you two months ago. I am just wondering that how long I can receive the proof of our manu from you?</p>
<p>I would be greatly appreciated if you could spend some of your time for a reply. I am very pleased to hear from you.</p>
<p>Thank you very much for your consideration.</p>
<p>Yours sincerely,</p>
<p>××××××</p>
<p>Corresponding author:</p>
<p>Name: ×××</p>
<p>E-mail: ××××@××××</p>
<h3 id="文章校稿信件"><a href="#文章校稿信件" class="headerlink" title="文章校稿信件"></a>文章校稿信件</h3><p>Dear Mr. ×××:</p>
<p>Thanks very much for your kind letter about the proof of our paper titled “Paper Title”(ID:文章稿号) for publication in“Journal Name”. We have finished the proof reading and checking carefully, and some corrections about the proof and the answers to the queries are provided below.</p>
<p>Corrections:</p>
<ol>
<li>In ****** should be **** (Page <em><strong>, Right column, line</strong></em>)</li>
<li>In **** the “*<strong><strong>”should be“</strong></strong>”(Page <strong><strong>, Right column, line</strong></strong>)</li>
</ol>
<p>Answers for “author queries”:</p>
<ol>
<li>*********************.</li>
<li><hr>
</li>
<li><hr>
</li>
</ol>
<p>We greatly appreciate the efficient, professional and rapid processing of our paper by your team. If there is anything else we should do, please do not hesitate to let us know.</p>
<p>Thank you and best regards.</p>
<p>Yours sincerely,</p>
<p>××××××</p>
<p>Corresponding author:</p>
<p>Name: ×××</p>
<p>E-mail: ××××@××××</p>
<h2 id="投稿图片常见错误"><a href="#投稿图片常见错误" class="headerlink" title="投稿图片常见错误"></a>投稿图片常见错误</h2><p>来源：<a href="https://mp.weixin.qq.com/s/biIX9qIJdYaRdCH6NfJynA">https://mp.weixin.qq.com/s/biIX9qIJdYaRdCH6NfJynA</a></p>
<h3 id="投稿图片常见错误-1"><a href="#投稿图片常见错误-1" class="headerlink" title="投稿图片常见错误"></a>投稿图片常见错误</h3><h4 id="图片常见错误"><a href="#图片常见错误" class="headerlink" title="图片常见错误"></a>图片常见错误</h4><ol>
<li>单词拼写错误，比如漏写或者错写英文字母。</li>
<li>专有名词缩写错误，不可以自己杜撰。</li>
<li>图片中分组的顺序，应该在全文中保持一致，一般来说先对照组，再实验组。</li>
<li>研究对象的表述方式要做到全文统一，比如某种称呼方式、专有名词缩写或者该对象的单数还是复数表示。</li>
<li>Figure legend部分拼错或者错写单词或缺少空格。</li>
<li>Figure legend的编号介绍与描述要与正文中的相关部分内容保持一致。</li>
</ol>
<h4 id="图片格式错误"><a href="#图片格式错误" class="headerlink" title="图片格式错误"></a>图片格式错误</h4><ol>
<li>除图注外，整张图片的字体大小、线条粗细应该保持统一。</li>
<li>相同的格式类型，应该保持相同的表示方式，比如大小、对齐、图注等内容。</li>
<li>上下一致的数据图的横纵坐标轴，横纵坐标的标题，数据图格式应保持一致。</li>
<li>图片中的内容尽量保持对称，不要在图中的某个区域留下过多的空白。</li>
<li>图例的位置一般在图片的右上空白处，略调节字体小一号，不可喧宾夺主。</li>
<li>横纵坐标标题的最后一个英文单词与单位之间应该留一个空格。</li>
<li>不同组之间的对照图片要取相一致的位置来对照。</li>
<li>图片的亮度和对比度没有调整到合适的程度。</li>
</ol>
<h4 id="图片质量问题"><a href="#图片质量问题" class="headerlink" title="图片质量问题"></a>图片质量问题</h4><ol>
<li>所选的图片的代表性和统计结果不匹配。</li>
<li>图片中有明显的操作不当的问题，如 western blot图过曝，western blot图中有杂条带。</li>
<li>图片中需要比例尺标注的，没有标注。</li>
<li>图片分辨率过低，字体太小，不能清楚识别图中的内容。</li>
</ol>
<h4 id="图片注意事项"><a href="#图片注意事项" class="headerlink" title="图片注意事项"></a>图片注意事项</h4><ol>
<li>图表中需要特别说明的地方，如指标解释、数据口径，异常数据、预测数据等，使用上标或*、† 等符号进行标记，在脚注区进行说明。</li>
<li>图表的纵坐标都应该是零起点的。当使用非零起点坐标的时候，往往意味着夸大差异，尤其是非零起点的柱形图。如果你确实要使用非零起点坐标，那么一定要记得标上坐标轴截断图示，标记原点为零，尽到提示之责，这也将是你专业性的体现。</li>
<li>图表中有四舍五入计算时，特别要注意检查各分项之和是否等于总和，饼图显示数字之和是否等于100%。</li>
</ol>
<h3 id="投稿图片常见问题"><a href="#投稿图片常见问题" class="headerlink" title="投稿图片常见问题"></a>投稿图片常见问题</h3><h4 id="单独的图片很清晰，为什么投稿系统的PDF文件中图片很模糊？怎么解决？"><a href="#单独的图片很清晰，为什么投稿系统的PDF文件中图片很模糊？怎么解决？" class="headerlink" title="单独的图片很清晰，为什么投稿系统的PDF文件中图片很模糊？怎么解决？"></a>单独的图片很清晰，为什么投稿系统的PDF文件中图片很模糊？怎么解决？</h4><p>答：投稿系统在提交所有文件后，会自动生成PDF文件，生成PDF文件时投稿系统会自动压缩图片，降低图片分辨率，使生成的PDF文件较小，方便审稿时文件传输。</p>
<p>在生成的PDF文件里面一般存在指向原始图片的下载链接，审稿人可以下载原始图片浏览。</p>
<p>怎么提高投稿系统PDF文件中图片的清晰度？</p>
<p>首先图片可以采用矢量图(如EPS或PDF)的，尽量提交矢量图，矢量图在压缩、放大时不会失真，生成的PDF文件会很清晰。</p>
<p>对于有些只能采用位图格式的图片，尽量在采用高分辨率时降低图片的大小，或者采用投稿杂志要求的最低分辨率即可。</p>
<p>不要过分追求高分辨率，分辨率越高，图片越大，在压缩时图片损失的信息就很多。</p>
<h4 id="如何提高图片分辨率又不至于让图片太大？"><a href="#如何提高图片分辨率又不至于让图片太大？" class="headerlink" title="如何提高图片分辨率又不至于让图片太大？"></a>如何提高图片分辨率又不至于让图片太大？</h4><p>答：原则上我们是没有办法直接提高图片分辨率的，只能在现有的图像信息基础上进行类似于”重新分配”的工作。如通过降低图片的尺寸，从而达到(无损)提升图片分辨率的目的。</p>
<p>需要说明的是，针对单张图片，降低尺寸导致的分辨率提升是不会使图片变大的(因为图像信息并未增加)，所以图片大小是不会增减的。</p>
<p>因此，该问题暗示的意思是人为调大图像分辨率导致图片变大，但我们并不推荐这样做，因为人为地直接提升图片分辨率会让图片更加模糊，也是无法满足杂志社要求的。</p>
<h4 id="投稿SCI杂志的图片大小有何限制？怎么降低图片的体积？"><a href="#投稿SCI杂志的图片大小有何限制？怎么降低图片的体积？" class="headerlink" title="投稿SCI杂志的图片大小有何限制？怎么降低图片的体积？"></a>投稿SCI杂志的图片大小有何限制？怎么降低图片的体积？</h4><p>答：单张图片的大小并没有明确限制，但是图片尽量不要太大。</p>
<p>对于太大的图片怎么降低体积？</p>
<p>前面讲过，投稿图片分三种，半版图、2&#x2F;3版图和全版图，不同类型的图片宽度不一样。</p>
<p>在提交投稿系统前，可以在PS里面将图片宽度设置为想在论文中展示的宽度，保存的时候选择”LZW”、”扔掉图层并拷贝”将图片保存为TIFF格式。</p>
<p>对于分辨率太高的图片可以适当降低分辨率，只要满足期刊投稿要求即可。</p>
<h4 id="投稿图片是不是分辨率越高越好？"><a href="#投稿图片是不是分辨率越高越好？" class="headerlink" title="投稿图片是不是分辨率越高越好？"></a>投稿图片是不是分辨率越高越好？</h4><p>答：不是越高越好。</p>
<p>首先要满足期刊的投稿图片最低要求，在非人为的情况下尽量选择高分辨率。</p>
<p>尽量不要人为提高投稿图片的分辨率，人为调高分辨率并不能增加图片的清晰度。</p>
<p>反而使得图片越大，提交投稿的时候越麻烦。</p>
<h4 id="图片是中文版软件处理的或通过中文版软件生成的，导致图片上有中文怎么办？"><a href="#图片是中文版软件处理的或通过中文版软件生成的，导致图片上有中文怎么办？" class="headerlink" title="图片是中文版软件处理的或通过中文版软件生成的，导致图片上有中文怎么办？"></a>图片是中文版软件处理的或通过中文版软件生成的，导致图片上有中文怎么办？</h4><p>答：很多作图软件如(SPSS、SAS、R等)都有中英文版本，可以使用英文版本。</p>
<p>另外在导入原始数据进入作图软件前，将原始数据中的中文改成英文，或者生成图片后，软件里一般可以直接编辑图形，此时改成需要的英文。</p>
<p>实在有中文的删不掉的图片，位图可以用Photoshop修改，矢量图可以用Illustrator修改，只要不是篡改实验数据等重要信息时，有修改痕迹没关系的。修改的字体和大小应与原始图片保持一致。</p>
<h4 id="Photoshop中保存的TIFF格式的图片过大，怎么办？"><a href="#Photoshop中保存的TIFF格式的图片过大，怎么办？" class="headerlink" title="Photoshop中保存的TIFF格式的图片过大，怎么办？"></a>Photoshop中保存的TIFF格式的图片过大，怎么办？</h4><p>答：TIFF格式图片可以保留图层信息，这是图片变大的主要原因。</p>
<p>在保存的时候选择无损压缩TIFF图片，使图片文件较小。</p>
<h4 id="既然矢量图片放大不会失真，是不是都用矢量图比较好？"><a href="#既然矢量图片放大不会失真，是不是都用矢量图比较好？" class="headerlink" title="既然矢量图片放大不会失真，是不是都用矢量图比较好？"></a>既然矢量图片放大不会失真，是不是都用矢量图比较好？</h4><p>答：不建议都使用矢量图。</p>
<p>不同的图片对于色彩、细节以及需要显示的信息有不同要求。</p>
<p>论文图片的类型一般分为三种实验图、数据图和示意图。</p>
<p>对于数据图(如生存曲线) 或者示意图(如信号通路) 尽量提交矢量图，而实验图(如荧光、电镜)需要显示丰富的色彩信息，不需要看清所有细节，建议提交位图。</p>
<h4 id="图片要求CMYK色彩模式还是RGB色彩模式？"><a href="#图片要求CMYK色彩模式还是RGB色彩模式？" class="headerlink" title="图片要求CMYK色彩模式还是RGB色彩模式？"></a>图片要求CMYK色彩模式还是RGB色彩模式？</h4><p>答：前面讲过，CMYK色彩模式是印刷业通用标准，RGB色彩模式适用于数码设备上。</p>
<p>要出版印刷的文章建议采用CMYK模式，但是现在很多期刊都有电子版，而RGB模式显示效果更好，更适合在网络上传播。</p>
<p>并且RGB模式转变为CMYK模式容易，但是由CMYK模式转变为RGB模式，图像的表现力却会下降。</p>
<p>所以 在提交图片时可以考虑提交RGB色彩模式。</p>
<p>而对于壁报等需要印刷出来展示的，建议考虑CMYK模式。</p>
<p>参考资料</p>
<ol>
<li><a href="https://mp.weixin.qq.com/s/rSrUxZP8AZbVB-sDWMk2dQ">https://mp.weixin.qq.com/s/rSrUxZP8AZbVB-sDWMk2dQ</a></li>
<li><a href="https://baike.baidu.com/item/%E9%A2%9C%E8%89%B2%E6%A8%A1%E5%BC%8F/7361869?fr=aladdin">https://baike.baidu.com/item/%E9%A2%9C%E8%89%B2%E6%A8%A1%E5%BC%8F/7361869?fr=aladdin</a></li>
<li><a href="https://xmuchong.com/news/lunwen/00000670.html">https://xmuchong.com/news/lunwen/00000670.html</a></li>
<li><a href="https://mp.weixin.qq.com/s/GcUJ7q8cpekPyLqCZ7Ax5A">https://mp.weixin.qq.com/s/GcUJ7q8cpekPyLqCZ7Ax5A</a></li>
<li><a href="https://mp.weixin.qq.com/s/Yn6aLQDB-pyQLob0sNprnQ">https://mp.weixin.qq.com/s/Yn6aLQDB-pyQLob0sNprnQ</a></li>
</ol>
]]></content>
      <categories>
        <category>Recharge</category>
      </categories>
  </entry>
  <entry>
    <title>Funding Application</title>
    <url>/2023/05/01/Recharge/Funding%20Application/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="申请国家自然科学基金心得与体会（PPT版）—刘家军教授"><a href="#申请国家自然科学基金心得与体会（PPT版）—刘家军教授" class="headerlink" title="申请国家自然科学基金心得与体会（PPT版）—刘家军教授"></a>申请国家自然科学基金心得与体会（PPT版）—刘家军教授</h2><p><img src="https://p.ipic.vip/btjy7u.jpg" alt="Image"></p>
<p><img src="https://p.ipic.vip/5ci2yl.jpg" alt="Image"></p>
<p><img src="https://p.ipic.vip/lyf8ya.jpg" alt="Image"></p>
<p><img src="https://p.ipic.vip/sne6o7.jpg" alt="Image"></p>
<p><img src="https://p.ipic.vip/artyxz.jpg" alt="Image"></p>
<p><img src="https://p.ipic.vip/xtsrbm.jpg" alt="Image"></p>
<p><img src="https://p.ipic.vip/ok48ue.jpg" alt="Image"></p>
<p><img src="https://p.ipic.vip/3d33m0.jpg" alt="Image"></p>
<p><img src="https://p.ipic.vip/peftd8.jpg" alt="Image"></p>
<p><img src="https://p.ipic.vip/ufbe9y.jpg" alt="Image"></p>
<p><img src="https://p.ipic.vip/v2z6w8.jpg" alt="Image"></p>
<p><img src="https://p.ipic.vip/h16wbu.jpg" alt="Image"></p>
<p><img src="https://p.ipic.vip/sbt26b.jpg" alt="Image"></p>
<p><img src="https://p.ipic.vip/4u3p0w.jpg" alt="Image"></p>
<p><img src="https://p.ipic.vip/q8aanw.jpg" alt="Image"></p>
<p><img src="https://p.ipic.vip/p30nm7.jpg" alt="Image"></p>
<p><img src="https://p.ipic.vip/mi50jp.jpg" alt="Image"></p>
<p><img src="https://p.ipic.vip/mmynll.jpg" alt="Image"></p>
<p><img src="https://p.ipic.vip/4h5sl1.jpg" alt="Image"></p>
<p><img src="https://p.ipic.vip/l67s06.jpg" alt="Image"></p>
<p><img src="https://p.ipic.vip/2l6244.jpg" alt="Image"></p>
<p><img src="https://p.ipic.vip/hop3qn.jpg" alt="Image"></p>
<p><img src="https://p.ipic.vip/5axz9m.jpg" alt="Image"></p>
<p><img src="https://p.ipic.vip/5w3ome.jpg" alt="Image"></p>
<p><img src="https://p.ipic.vip/gwe97d.jpg" alt="Image"></p>
<p><img src="https://p.ipic.vip/sbxeyt.jpg" alt="Image"></p>
<p><img src="https://p.ipic.vip/4wh7pv.jpg" alt="Image"></p>
<p><img src="https://p.ipic.vip/a3eaij.jpg" alt="Image"></p>
<p><img src="https://p.ipic.vip/m3j1kt.jpg" alt="Image"></p>
<p><img src="https://p.ipic.vip/onpzbv.jpg" alt="Image"></p>
<p><img src="https://p.ipic.vip/qpybfp.jpg" alt="Image"></p>
<p><img src="https://p.ipic.vip/vh3y2e.jpg" alt="Image"></p>
<p><img src="https://p.ipic.vip/srru4n.jpg" alt="Image"></p>
<p><img src="https://p.ipic.vip/idjrag.jpg" alt="Image"></p>
<p><img src="https://p.ipic.vip/86xg4m.jpg" alt="Image"></p>
<h2 id="2023-国家自然科学基金申报-科研与规划处"><a href="#2023-国家自然科学基金申报-科研与规划处" class="headerlink" title="2023 国家自然科学基金申报 科研与规划处"></a>2023 国家自然科学基金申报 科研与规划处</h2><p><img src="https://p.ipic.vip/chf92b.jpg" alt="0_01"></p>
<p><img src="https://p.ipic.vip/p8nx87.jpg" alt="0_02"></p>
<p><img src="https://p.ipic.vip/l9y428.jpg" alt="0_03"></p>
<p><img src="https://p.ipic.vip/of7ggq.jpg" alt="0_04"></p>
<p><img src="https://p.ipic.vip/p2e9ue.jpg" alt="0_05"></p>
<p><img src="https://p.ipic.vip/6jx4z3.jpg" alt="0_06"></p>
<p><img src="https://p.ipic.vip/62l9tc.jpg" alt="0_07"></p>
<p><img src="https://p.ipic.vip/rmnomu.jpg" alt="0_08"></p>
<p><img src="https://p.ipic.vip/9buq08.jpg" alt="0_09"></p>
<p><img src="https://p.ipic.vip/ar0ozy.jpg" alt="0_10"></p>
<p><img src="https://p.ipic.vip/m0vf0p.jpg" alt="0_11"></p>
<p><img src="https://p.ipic.vip/rtvcnt.jpg" alt="0_12"></p>
<p><img src="https://p.ipic.vip/b7jt72.jpg" alt="0_13"></p>
<p><img src="https://p.ipic.vip/adi2xu.jpg" alt="0_14"></p>
<p><img src="https://p.ipic.vip/236thl.jpg" alt="0_15"></p>
<p><img src="https://p.ipic.vip/xwqsv2.jpg" alt="0_16"></p>
<p><img src="https://p.ipic.vip/9ixz3u.jpg" alt="0_17"></p>
<p><img src="https://p.ipic.vip/xx7kat.jpg" alt="0_18"></p>
<p><img src="https://p.ipic.vip/zp68jz.jpg" alt="0_19"></p>
<p><img src="https://p.ipic.vip/o08rg3.jpg" alt="0_20"></p>
<p><img src="https://p.ipic.vip/3oqml0.jpg" alt="0_21"></p>
<p><img src="https://p.ipic.vip/2ewnei.jpg" alt="0_22"></p>
<p><img src="https://p.ipic.vip/bovyax.jpg" alt="0_23"></p>
<p><img src="https://p.ipic.vip/8hqpum.jpg" alt="0_24"></p>
<p><img src="https://p.ipic.vip/bdz9xo.jpg" alt="0_25"></p>
<p><img src="https://p.ipic.vip/khrb33.jpg" alt="0_26"></p>
<p><img src="https://p.ipic.vip/a6xhwi.jpg" alt="0_27"></p>
<p><img src="https://p.ipic.vip/7v61ha.jpg" alt="0_28"></p>
<p><img src="https://p.ipic.vip/c6sxcp.jpg" alt="0_29"></p>
<p><img src="https://p.ipic.vip/l0be07.jpg" alt="0_30"></p>
<p><img src="https://p.ipic.vip/ihirqv.jpg" alt="0_31"></p>
<p><img src="https://p.ipic.vip/1uxrun.jpg" alt="0_32"></p>
<p><img src="https://p.ipic.vip/j498ks.jpg" alt="0_33"></p>
<p><img src="https://p.ipic.vip/1xbv6w.jpg" alt="0_34"></p>
<p><img src="https://p.ipic.vip/gkbwmu.jpg" alt="0_35"></p>
<p><img src="https://p.ipic.vip/w80blm.jpg" alt="0_36"></p>
<p><img src="https://p.ipic.vip/izle2e.jpg" alt="0_37"></p>
<p><img src="https://p.ipic.vip/db3ido.jpg" alt="0_38"></p>
<p><img src="https://p.ipic.vip/j5p9kr.jpg" alt="0_39"></p>
<p><img src="https://p.ipic.vip/vainup.jpg" alt="0_40"></p>
<p><img src="https://p.ipic.vip/q7stdq.jpg" alt="0_41"></p>
<p><img src="https://p.ipic.vip/34im3l.jpg" alt="0_42"></p>
<p><img src="https://p.ipic.vip/cln8ls.jpg" alt="0_43"></p>
<p><img src="https://p.ipic.vip/r5372m.jpg" alt="0_44"></p>
<p><img src="https://p.ipic.vip/pw6614.jpg" alt="0_45"></p>
<p><img src="https://p.ipic.vip/4xf7s0.jpg" alt="0_46"></p>
<p><img src="https://p.ipic.vip/p1d2dt.jpg" alt="0_47"></p>
<p><img src="https://p.ipic.vip/jys7e5.jpg" alt="0_48"></p>
<p><img src="https://p.ipic.vip/9wig23.jpg" alt="0_49"></p>
<p><img src="https://p.ipic.vip/qpzb59.jpg" alt="0_50"></p>
<p><img src="https://p.ipic.vip/1j1gy8.jpg" alt="0_51"></p>
<p><img src="https://p.ipic.vip/nwb9uq.jpg" alt="0_52"></p>
<p><img src="https://p.ipic.vip/z8430b.jpg" alt="0_53"></p>
<p><img src="https://p.ipic.vip/0e8wog.jpg" alt="0_54"></p>
<p><img src="https://p.ipic.vip/xymdbg.jpg" alt="0_55"></p>
<p><img src="https://p.ipic.vip/8werd9.jpg" alt="0_56"></p>
<p><img src="https://p.ipic.vip/v5z1jc.jpg" alt="0_57"></p>
<p><img src="https://p.ipic.vip/kuqw6i.jpg" alt="0_58"></p>
<p><img src="https://p.ipic.vip/xn2v4i.jpg" alt="0_59"></p>
<p><img src="https://p.ipic.vip/053tck.jpg" alt="0_60"></p>
<p><img src="https://p.ipic.vip/6h7dum.jpg" alt="0_61"></p>
<p><img src="https://p.ipic.vip/32u9dc.jpg" alt="0_62"></p>
<p><img src="https://p.ipic.vip/vovuug.jpg" alt="0_63"></p>
<p><img src="https://p.ipic.vip/v5v0xr.jpg" alt="0_64"></p>
<p><img src="https://p.ipic.vip/pdi0p3.jpg" alt="0_65"></p>
<p><img src="https://p.ipic.vip/4ec8m6.jpg" alt="0_66"></p>
<p><img src="https://p.ipic.vip/gbolfa.jpg" alt="0_67"></p>
<p><img src="https://p.ipic.vip/vjzz2w.jpg" alt="0_68"></p>
<p><img src="https://p.ipic.vip/q9hj9j.jpg" alt="0_69"></p>
<h2 id="2023-国家基金申请体会与交流"><a href="#2023-国家基金申请体会与交流" class="headerlink" title="2023 国家基金申请体会与交流"></a>2023 国家基金申请体会与交流</h2><p><img src="https://p.ipic.vip/0m9rhj.jpg" alt="0_01"></p>
<p><img src="https://p.ipic.vip/vhqfrg.jpg" alt="0_02"></p>
<p><img src="https://p.ipic.vip/8j34ko.jpg" alt="0_03"></p>
<p><img src="https://p.ipic.vip/xdi2i5.jpg" alt="0_04"></p>
<p><img src="https://p.ipic.vip/mug6e9.jpg" alt="0_05"></p>
<p><img src="https://p.ipic.vip/mjcpam.jpg" alt="0_06"></p>
<p><img src="https://p.ipic.vip/cax4xj.jpg" alt="0_07"></p>
<p><img src="https://p.ipic.vip/ly6tkw.jpg" alt="0_08"></p>
<p><img src="https://p.ipic.vip/vspv50.jpg" alt="0_09"></p>
<p><img src="https://p.ipic.vip/545pqv.jpg" alt="0_10"></p>
<p><img src="https://p.ipic.vip/49snoo.jpg" alt="0_11"></p>
<p><img src="https://p.ipic.vip/tfm00v.jpg" alt="0_12"></p>
<p><img src="https://p.ipic.vip/ccgqfh.jpg" alt="0_13"></p>
<p><img src="https://p.ipic.vip/1nhh1v.jpg" alt="0_14"></p>
<p><img src="https://p.ipic.vip/av4s4d.jpg" alt="0_15"></p>
<p><img src="https://p.ipic.vip/zv1mju.jpg" alt="0_16"></p>
<p><img src="https://p.ipic.vip/rlu5y7.jpg" alt="0_17"></p>
<p><img src="https://p.ipic.vip/129jos.jpg" alt="0_18"></p>
<p><img src="https://p.ipic.vip/tviliq.jpg" alt="0_19"></p>
<p><img src="https://p.ipic.vip/ptzxu6.jpg" alt="0_20"></p>
<p><img src="https://p.ipic.vip/3ppcfj.jpg" alt="0_21"></p>
<p><img src="https://p.ipic.vip/i5lik2.jpg" alt="0_22"></p>
<p><img src="https://p.ipic.vip/4p1qcz.jpg" alt="0_23"></p>
<p><img src="https://p.ipic.vip/4n1u7z.jpg" alt="0_24"></p>
<p><img src="https://p.ipic.vip/wdza22.jpg" alt="0_25"></p>
<p><img src="https://p.ipic.vip/660d55.jpg" alt="0_26"></p>
<p><img src="https://p.ipic.vip/3wx982.jpg" alt="0_27"></p>
<p><img src="https://p.ipic.vip/ps75vp.jpg" alt="0_28"></p>
<p><img src="https://p.ipic.vip/luuwxi.jpg" alt="0_29"></p>
<p><img src="https://p.ipic.vip/vgm049.jpg" alt="0_30"></p>
<p><img src="https://p.ipic.vip/hj8kc3.jpg" alt="0_31"></p>
<p><img src="https://p.ipic.vip/ydp4bq.jpg" alt="0_32"></p>
]]></content>
      <categories>
        <category>Recharge</category>
      </categories>
  </entry>
  <entry>
    <title>Kalman Filter</title>
    <url>/2023/05/01/Recharge/Kalman%20Filter/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>来源：<a href="https://zhuanlan.zhihu.com/p/530377846">https://zhuanlan.zhihu.com/p/530377846</a></p>
<p><strong>诞生背景</strong></p>
<p>听名字就知道又是一种以名字而命名的算法，而这个人的全名就是鲁道夫·卡尔曼（Rudolf E.Kalman）。1930年，卡尔曼出生在一个犹太人家庭。1957年，从哥伦比亚大学博士毕业后，先在IBM干了一年技术员，随即加入到一位著名数学家创办的工作室做数学研究，这一干就是6年。在这6年间，卡尔曼悬梁刺股、挑灯夜战，在前人工作基础上、团队成员协作下，发明了在专业工程师圈子熟知的卡尔曼滤波算法。</p>
<p>但是刚出道的卡尔曼滤波算法并没有迎来学术界的聚光灯，反而遭遇学术界九代长老们的非议和质疑，这像极了历史上其它著名理论的出道遭遇。所幸的是，卡尔曼在三十而立之年的时候，遇到了伯乐，时任NASA动力分析处主任的斯坦尼·施密特（Stanley F. Schmidt），一位主导人类历史上第一个登月计划中导航项目的男人。</p>
<p>施密特当时遇到的难题是：飞船从陀螺仪、加速度计和雷达等传感器上获取的测量数据充满了不确定性误差和随机噪声。当飞船飞向月球表面时，如果不能很好地处理这些误差和噪声，产生的危害将是致命的。施密特尝试了时下各种滤波算法后，效果均不理想，直到一次偶然的机会听闻卡尔曼有个很厉害的新滤波算法。</p>
<p>施密特随即邀请卡尔曼访问NASA，双方一见钟情，眉来眼去之后便确认通过卡尔曼滤波算法可以对飞船所处的位置和速度做出精确估计，同时还可以确定这些估计在统计意义上的好坏程度。随后，两人爱情的结晶成功助力阿波罗飞船登月。卡尔曼滤波算法自此一战成名，直到今天，还一直引领控制理论和系统科学的主流。卡尔曼自此也开始成为各种荣誉和奖项的收割机。</p>
<p>《麻省理工学院技术评论》在一篇纪念卡尔曼先生的文章中提到道：“卡尔曼最重要的发明是卡尔曼滤波算法，该算法成就了过去50年间的许多基本技术，如把阿波罗号宇航员送上月球的航天计算机系统、把人类送去探索深海和星球的机器人载体，以及几乎所有需要从噪声数据去估算实际状态的项目。有人甚至把包括环绕地球的卫星系统、卫星地面站及各类计算机系统在内的整个GPS系统统称为一个巨大无比的卡尔曼滤波器。”</p>
<p><strong>原理的直观理解</strong></p>
<p>目前可以看到的介绍卡尔曼滤波算法文章，上来不是正态分布，就是协方差矩阵，突然感觉回到了大学本科概率统计的课堂。知道老师介绍的字面意思是什么，但无法领会这东西可以解决工程中的什么问题。这似乎是大学所有基础类课程的通病，只学会了公式的推导过程，求解方法，但没有领悟这公式可以带来的“人民币”价值。</p>
<p>直到偶然机会看到一则通俗介绍卡尔滤波算法的回答，备受启发，能让一个算法之外的自动驾驶从业人员快速了解其原理。本文于是借鉴其表达思路，也通过一个朴素而不普通的实例来直观的介绍卡尔曼滤波算法在融合定位领域的一个作用。</p>
<p>我们假设一辆在公路上行驶的汽车，起点位置A，下一秒汽车驶入林荫道中的B点，再下一秒汽车驶出林荫道来到C点。这辆汽车上安装有IMU和GNSS两种定位传感器。起点A的位置和速度假设是已知的，距离惯性坐标系X轴原点的距离为2m，速度为Vt-1。当车辆驶入到B点时，一方面我们可以根据IMU测量得到汽车本体的三轴加速度和三轴角速度，结合初始速度Vt-1，便可以计算得到B点相对于A点在X轴方向行驶距离的<strong>估计值，</strong>这里我们假设估计值为10m。</p>
<p><img src="https://p.ipic.vip/gb00n0.jpg" alt="img"></p>
<p>另一方面，通过GNSS我们可以直接测量出来B点的经纬度，通过坐标转换之后可以直接获得B点在X轴方向行驶的<strong>观测值</strong>，这里我们假设观测值为13m。问题来了，距离惯性坐标系点的距离现在有估计值（12m&#x3D;10m+2m）和观测值（13m）两个值，且两个值不一致，我们该如何确定B点的<strong>准确估计值</strong>呢？</p>
<p>众所周知，IMU测量汽车本体的加速度和角速度过程中，存在误差和噪声，GNSS通过卫星信号定位车辆经纬度的过程中也存在误差和噪声。两种传感器给出的值都是一种概率最大，意思是在这个位置的概率最大，其它位置不是不可能只是概率较小。而在卡尔曼滤波算法的理论中，无论是汽车上一秒的位置，IMU的测量数据，还是GNSS的直接观测值均被认为服从正态分布。 </p>
<p>正态分布是一种概率分布，一般表示为**N(均值、方差)**。服从正态分布的随机变量取与均值邻近的值的概率大，取与均值越远的值的概率越小。同时方差越小，分布越集中在均值附近，方差越大，分布越分散。</p>
<p>这里我们假设A点位置Xt-1服从<strong>N(2,0.22)<strong>，如下图所示。从图中可以看出</strong>2m</strong>处纵坐标最大，概率最大，其它取值概率均小于此处。方差<strong>0.22</strong>则代表A点位置的误差水平。</p>
<p><img src="https://p.ipic.vip/cfttfb.jpg" alt="img"></p>
<p>而对于IMU和GNSS这两种传感器来说，他们的噪声方差是可以测量的，在使用时是已知的。这里我们省略移动模型建模过程，直接假设基于IMU获得B点相对于A点的距离估计值XI服从<strong>N(10,0.12)</strong> ，方差<strong>0.12</strong>则代表IMU噪声的误差水平，此误差水平受IMU的精度，测量的累积时长有关。</p>
<p>GNSS通过卫星信号获得B点相对于原点的测量值XG服从<strong>N(13,0.42)</strong> ，方差<strong>0.42</strong>代表GNSS噪声的误差水平。此误差水平一方面受GNSS里卫星板卡的精度水平，另一方面主要受所处的环境有关，是否有遮挡，是否多金属环境等。由于B点处于林荫道下，卫星信号时有时无，因此此时<strong>0.42</strong>的误差水平还是比较高的。 </p>
<p>现在我们有了两组数据，一组是B点相对于原点0的估计值 **XBOI &#x3D; XI + XA &#x3D; N(10,0.12) + N(2,0.22) &#x3D; N(12,0.12 +0.22)**，一组是B点相对于原点0的观测值XG &#x3D; **N(13,0.42)<strong>。全文的高潮点来了，我该如何从两个概率分布中找到最准确的那个估计值呢，可以想象的是这个准确的估计值也遵从正态分布，这个正态分布的均值就是我们苦苦追寻的值。卡尔曼给出的答案是，直接将两个概率分布相乘，即</strong>N(12,0.12 +0.22) * N(13,0.42)**。</p>
<p><img src="https://p.ipic.vip/9mn6ik.png" alt="img"></p>
<p>正态分布的乘法公式如上，将<strong>N(12,0.12 +0.22) * N(13,0.42)<strong>中的值带入下面公式，则可以得到如下正态分布。B点准确估计值就是此正态分布的均值</strong>12.23</strong>,此准确估计值的误差水平为<strong>0.192</strong>。0.22^2&#x2F;(0.22^2+0.4^2)这个参数在卡尔曼滤波算法理论中被称为<strong>卡尔曼增益</strong>。</p>
<p><img src="https://p.ipic.vip/ucd91k.jpg" alt="img"></p>
<p>B点的（12.23,0.192）又将作为计算C点位置的初始值，重复上述过程。</p>
<p><strong>算法的理论分析</strong></p>
<p>卡尔曼滤波算法是那种理解起来很难，但用起来非常简单的算法。整个算法只有五个公式，公式的详细推导对于绝大多数人来说没有必要也没有兴趣了解。因此，本段直接给出推导后的预测方程和更新方程，并简单解释变量和方程的含义。</p>
<p><strong>一、预测方程</strong></p>
<p><strong>xk-1</strong>为系统上一时刻状态向量，这个状态向量可以包含任何需要跟踪的信号，且状态向量中的每个变量都服从正态分布。在上文直观理解车辆运动例子中，这个状态变量包含速度和位置。</p>
<p>我们采用预测矩阵<strong>F</strong>,来刻画上一时刻状态到当前时刻状态的关系。同时考虑到外部因素会带来一些与系统自身状态没有相关性的改变，我们引入外部控制量<strong>ut-1</strong>及系统参数B。至此，一个考虑了自身和外部因素的状态预测方程便诞生了，如下式所示。</p>
<p><img src="https://p.ipic.vip/kfvoiz.png" alt="img"></p>
<p>在车辆运动例子中，上一时刻的状态变量中速度和位置变量是存在一定关系的，速度大，运行到当前时刻时，车辆就会行驶得更远。但在其它的系统中，我们可能无法仅凭肉眼就直观的看到变量间的依赖关系，而这也是卡尔曼滤波算法的核心目的，从不确定的系统中，尽可能的挖掘确定的信息。</p>
<p>卡尔曼滤波算法在这里使用的是协方差矩阵<strong>Pk-1</strong>来衡量上一时刻状态变量中每个变量的相关程度。同时将没有跟踪到的噪音干扰当作协方差为<strong>Q</strong>的噪音来影响，由此我们可以获得当前时刻考虑外部因素的协方差矩阵，如下式所示。</p>
<p><img src="https://p.ipic.vip/om5bx1.jpg" alt="img"></p>
<p><strong>二、更新方程</strong></p>
<p>通过上文的预测过程，我们对系统当前时刻的状态有了一个模糊的估计。与此同时，我们也将通过传感器测量到当前时刻系统状态的观测值<strong>zk</strong>及其测量的不确定性<strong>R</strong>。对于测量量，我们还需要一个变换矩阵<strong>H</strong>，来将系统真实状态空间映射成观测空间。随后再经过艰苦卓绝的推导便可以得到如下的状态更新方程组。</p>
<p><strong><img src="https://p.ipic.vip/6gzopr.jpg" alt="img"></strong></p>
<p><strong>自动驾驶中的应用</strong>  </p>
<p>卡尔曼滤波算法在自动驾驶的经典应用之一就是融合定位。L4&#x2F;L5自动驾驶系统基本标配GNSS和IMU。GNSS定位数据更新频率低（典型10Hz），有遮挡或多径影响下，输出的定位数据不可靠。IMU定位数据更新频率高（典型150Hz）,但是内部积分运算会随着时间的推移，产生较大的累计误差。</p>
<p>而为了获得全局准确的定位数据，各家利用GNSS可靠的定位数据来对IMU进行校准，消除IMU的累计误差。同时在GNSS定位不可靠时，利用IMU自身推算结果优化GNSS定位不可靠的数据。而从GNSS&#x2F;IMU的不确定信息中获得更多确定性信息的手段就是利用的卡尔曼滤波算法。</p>
<p>而在障碍物追踪和预测方面，卡尔曼滤波算法广泛被用于通过融合激光雷达和毫米波雷达的数据，估计障碍物的位置和速度。而在车道线追踪和预测方面，卡尔曼滤波算法可以通过对当前图像的预测来估计下一时刻车道线的位置，并且能识别判断出车道线的走向(左转或右转)，提取有效的道路信息进行车道线的跟踪。</p>
<p><strong>小结</strong></p>
<p>在深度学习口号喊得震天响的今天，笔者不得不戳穿的一个真相便是，卡尔曼滤波算法可能仍是多数自动驾驶公司的当家花旦。这个朴素而不普通的算法，仅凭五个公式便可解决极其复杂的问题，没有理由不受到工程技术人员的拥戴。有时为了追求技术先进性而一味的盲目从众，消耗的还是自己本身。</p>
]]></content>
      <categories>
        <category>Recharge</category>
      </categories>
  </entry>
  <entry>
    <title>Marine meteorology</title>
    <url>/2024/12/01/Recharge/Marine%20meteorology/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="2020"><a href="#2020" class="headerlink" title="2020"></a>2020</h3><h4 id="2020-07-18-产品精选-海洋预报系统RASWIFS"><a href="#2020-07-18-产品精选-海洋预报系统RASWIFS" class="headerlink" title="2020-07-18 产品精选 | 海洋预报系统RASWIFS"></a>2020-07-18 <a href="https://mp.weixin.qq.com/s/kZDkCYIi1gmmeJpVtQ7zlQ">产品精选 | 海洋预报系统RASWIFS</a></h4><h4 id="2020-12-14-浙江首个县级海洋精细化预报平台“亮相”！"><a href="#2020-12-14-浙江首个县级海洋精细化预报平台“亮相”！" class="headerlink" title="2020-12-14 浙江首个县级海洋精细化预报平台“亮相”！"></a>2020-12-14 <a href="https://mp.weixin.qq.com/s/ZUudNs23DVtCeOmOMDE96w">浙江首个县级海洋精细化预报平台“亮相”！</a></h4><h4 id="2020-12-18-国家海洋环境预报中心主任于福江谈海洋防灾减灾"><a href="#2020-12-18-国家海洋环境预报中心主任于福江谈海洋防灾减灾" class="headerlink" title="2020-12-18 国家海洋环境预报中心主任于福江谈海洋防灾减灾"></a>2020-12-18 <a href="https://mp.weixin.qq.com/s/sdSvrTtqeiMmGNIG1FldYQ">国家海洋环境预报中心主任于福江谈海洋防灾减灾</a></h4><h4 id="2020-12-29-中国海洋预报App和微信小程序上线"><a href="#2020-12-29-中国海洋预报App和微信小程序上线" class="headerlink" title="2020-12-29 中国海洋预报App和微信小程序上线"></a>2020-12-29 <a href="https://mp.weixin.qq.com/s/xn-_4E0S9Wpb41BreIkIvQ">中国海洋预报App和微信小程序上线</a></h4><h4 id="2020-12-30-中国海洋预报的两大利器同步上线"><a href="#2020-12-30-中国海洋预报的两大利器同步上线" class="headerlink" title="2020-12-30 中国海洋预报的两大利器同步上线"></a>2020-12-30 <a href="https://mp.weixin.qq.com/s/qHx1SAhVKazAnOUBJDnkUg">中国海洋预报的两大利器同步上线</a></h4><h3 id="2021"><a href="#2021" class="headerlink" title="2021"></a>2021</h3><h4 id="2021-03-23-3·23世界气象日-我们如何预报海洋天气？"><a href="#2021-03-23-3·23世界气象日-我们如何预报海洋天气？" class="headerlink" title="2021-03-23 3·23世界气象日| 我们如何预报海洋天气？"></a>2021-03-23 <a href="https://mp.weixin.qq.com/s/yiTyjSEMUlwdCNjhu2yN1Q">3·23世界气象日| 我们如何预报海洋天气？</a></h4><h4 id="2021-11-26-美国海军业务化海洋预报系统发展历程及启示"><a href="#2021-11-26-美国海军业务化海洋预报系统发展历程及启示" class="headerlink" title="2021-11-26 美国海军业务化海洋预报系统发展历程及启示"></a>2021-11-26 <a href="https://mp.weixin.qq.com/s/XeCs84rbwVF-ztJG-B2CZw">美国海军业务化海洋预报系统发展历程及启示</a></h4><h4 id="2021-11-30-海洋测报这五年-②海洋预警预报守护安全"><a href="#2021-11-30-海洋测报这五年-②海洋预警预报守护安全" class="headerlink" title="2021-11-30 海洋测报这五年 | ②海洋预警预报守护安全"></a>2021-11-30 <a href="https://mp.weixin.qq.com/s/IK-Lq2LCgkn_G8PoK0NLPQ">海洋测报这五年 | ②海洋预警预报守护安全</a></h4><h4 id="2021-12-29-我国完全自主开发的“海洋环流数值模式‘妈祖1-0’”正式发布"><a href="#2021-12-29-我国完全自主开发的“海洋环流数值模式‘妈祖1-0’”正式发布" class="headerlink" title="2021-12-29 我国完全自主开发的“海洋环流数值模式‘妈祖1.0’”正式发布"></a>2021-12-29 <a href="https://mp.weixin.qq.com/s/SyS1p89cuLeqAvLrgGHlJg">我国完全自主开发的“海洋环流数值模式‘妈祖1.0’”正式发布</a></h4><h3 id="2022"><a href="#2022" class="headerlink" title="2022"></a>2022</h3><h4 id="2022-07-12-全球业务化海洋预报系统进展"><a href="#2022-07-12-全球业务化海洋预报系统进展" class="headerlink" title="2022-07-12 全球业务化海洋预报系统进展"></a>2022-07-12 <a href="https://mp.weixin.qq.com/s/ueaQAfTws3uxjueHyAhmyg">全球业务化海洋预报系统进展</a></h4><h4 id="2022-08-25-海洋所建成东中国海海洋动力环境四维变分同化预报系统"><a href="#2022-08-25-海洋所建成东中国海海洋动力环境四维变分同化预报系统" class="headerlink" title="2022-08-25 海洋所建成东中国海海洋动力环境四维变分同化预报系统"></a>2022-08-25 <a href="https://mp.weixin.qq.com/s/t88IO7Lk7lRZHmTGEYXqPw">海洋所建成东中国海海洋动力环境四维变分同化预报系统</a></h4><h3 id="2023"><a href="#2023" class="headerlink" title="2023"></a>2023</h3><h4 id="2023-01-18-科学家风采-高艳秋、刘婷、宋迅殊：高影响海气环境事件多模式集合预报系统"><a href="#2023-01-18-科学家风采-高艳秋、刘婷、宋迅殊：高影响海气环境事件多模式集合预报系统" class="headerlink" title="2023-01-18 科学家风采 | 高艳秋、刘婷、宋迅殊：高影响海气环境事件多模式集合预报系统"></a>2023-01-18 <a href="https://mp.weixin.qq.com/s/ha-649O9mCDC2lp6AJPemA">科学家风采 | 高艳秋、刘婷、宋迅殊：高影响海气环境事件多模式集合预报系统</a></h4><h4 id="2023-01-19-现有海洋数值模型介绍"><a href="#2023-01-19-现有海洋数值模型介绍" class="headerlink" title="2023-01-19 现有海洋数值模型介绍"></a>2023-01-19 <a href="https://mp.weixin.qq.com/s/fU5SojRAwTzXL84VKpQjNQ">现有海洋数值模型介绍</a></h4><h4 id="2023-03-08-海洋领域的海洋环流与海浪数值模式"><a href="#2023-03-08-海洋领域的海洋环流与海浪数值模式" class="headerlink" title="2023-03-08 海洋领域的海洋环流与海浪数值模式"></a>2023-03-08 <a href="https://mp.weixin.qq.com/s/9QVPwLEr83Btk4zzI3_J8g">海洋领域的海洋环流与海浪数值模式</a></h4><h4 id="2023-03-31-软件｜海洋气象信息预警发布平台，助力智慧海洋气象现代化"><a href="#2023-03-31-软件｜海洋气象信息预警发布平台，助力智慧海洋气象现代化" class="headerlink" title="2023-03-31 软件｜海洋气象信息预警发布平台，助力智慧海洋气象现代化"></a>2023-03-31 <a href="https://mp.weixin.qq.com/s/9Nj_schbkecaKML44xNWGQ">软件｜海洋气象信息预警发布平台，助力智慧海洋气象现代化</a></h4><h4 id="2023-07-06-国外气象业务中心海浪预报能力的比较和发展"><a href="#2023-07-06-国外气象业务中心海浪预报能力的比较和发展" class="headerlink" title="2023-07-06 国外气象业务中心海浪预报能力的比较和发展"></a>2023-07-06 <a href="https://mp.weixin.qq.com/s/727_hgfbWZSwDUY4yoabyw">国外气象业务中心海浪预报能力的比较和发展</a></h4><h4 id="2023-09-21-NUIST预报服务篇（四）-预风预雨，预灾防害：气象预报守护你我他"><a href="#2023-09-21-NUIST预报服务篇（四）-预风预雨，预灾防害：气象预报守护你我他" class="headerlink" title="2023-09-21 NUIST预报服务篇（四）| 预风预雨，预灾防害：气象预报守护你我他"></a>2023-09-21 <a href="https://mp.weixin.qq.com/s/Mu-Y4yPB7M6Su5eI2xhNoA">NUIST预报服务篇（四）| 预风预雨，预灾防害：气象预报守护你我他</a></h4><h4 id="2023-09-26-NUIST预报服务篇（六）-AI赋能，安全航路：海洋气象预报守护大海航行"><a href="#2023-09-26-NUIST预报服务篇（六）-AI赋能，安全航路：海洋气象预报守护大海航行" class="headerlink" title="2023-09-26 NUIST预报服务篇（六）| AI赋能，安全航路：海洋气象预报守护大海航行"></a>2023-09-26 <a href="https://mp.weixin.qq.com/s/3S6MiggwTxuoC-i5_A8yug">NUIST预报服务篇（六）| AI赋能，安全航路：海洋气象预报守护大海航行</a></h4><h4 id="2023-09-27-自然资源部自主研发的海洋环境数值预报模式应用于杭州第19届亚运会帆船比赛"><a href="#2023-09-27-自然资源部自主研发的海洋环境数值预报模式应用于杭州第19届亚运会帆船比赛" class="headerlink" title="2023-09-27 自然资源部自主研发的海洋环境数值预报模式应用于杭州第19届亚运会帆船比赛"></a>2023-09-27 <a href="https://mp.weixin.qq.com/s/sAam-97nSKyqSn4qS64OXw">自然资源部自主研发的海洋环境数值预报模式应用于杭州第19届亚运会帆船比赛</a></h4><h4 id="2023-11-16-响应海洋防灾减灾利好政策，励图高科深耕智慧海洋预报减灾，产品硕果累累、项目遍地生花"><a href="#2023-11-16-响应海洋防灾减灾利好政策，励图高科深耕智慧海洋预报减灾，产品硕果累累、项目遍地生花" class="headerlink" title="2023-11-16 响应海洋防灾减灾利好政策，励图高科深耕智慧海洋预报减灾，产品硕果累累、项目遍地生花"></a>2023-11-16 <a href="https://mp.weixin.qq.com/s/-Uk9Zqcq6GrsIvn-_kdSFw">响应海洋防灾减灾利好政策，励图高科深耕智慧海洋预报减灾，产品硕果累累、项目遍地生花</a></h4><h4 id="2023-12-20-自然资源部召开我国自主研发的海浪数值预报模式“妈祖·海浪”专家评审会"><a href="#2023-12-20-自然资源部召开我国自主研发的海浪数值预报模式“妈祖·海浪”专家评审会" class="headerlink" title="2023-12-20 自然资源部召开我国自主研发的海浪数值预报模式“妈祖·海浪”专家评审会"></a>2023-12-20 <a href="https://mp.weixin.qq.com/s/VrwNu6nbrufMZhZpeEzmcA">自然资源部召开我国自主研发的海浪数值预报模式“妈祖·海浪”专家评审会</a></h4><h3 id="2024"><a href="#2024" class="headerlink" title="2024"></a>2024</h3><h4 id="2024-04-01-北海区召开海洋预报一体化部署会"><a href="#2024-04-01-北海区召开海洋预报一体化部署会" class="headerlink" title="2024-04-01 北海区召开海洋预报一体化部署会"></a>2024-04-01 <a href="https://mp.weixin.qq.com/s/j_LnQyM1yO65LrItSOZc3Q">北海区召开海洋预报一体化部署会</a></h4><h4 id="2024-04-25-造福海洋预报！采用-OpenACC-框架的-FVCOM-模型实现超百倍计算加速"><a href="#2024-04-25-造福海洋预报！采用-OpenACC-框架的-FVCOM-模型实现超百倍计算加速" class="headerlink" title="2024-04-25 造福海洋预报！采用 OpenACC 框架的 FVCOM 模型实现超百倍计算加速"></a>2024-04-25 <a href="https://mp.weixin.qq.com/s/29frSzkCtfIxmZriohVB6g">造福海洋预报！采用 OpenACC 框架的 FVCOM 模型实现超百倍计算加速</a></h4><h4 id="2024-05-11-自然资源部海洋预警监测司司长王华一行在舟山开展海洋灾害防御汛前检查工作"><a href="#2024-05-11-自然资源部海洋预警监测司司长王华一行在舟山开展海洋灾害防御汛前检查工作" class="headerlink" title="2024-05-11 自然资源部海洋预警监测司司长王华一行在舟山开展海洋灾害防御汛前检查工作"></a>2024-05-11 <a href="https://mp.weixin.qq.com/s/9ahmLwAIUmL3PxCkinpHcQ">自然资源部海洋预警监测司司长王华一行在舟山开展海洋灾害防御汛前检查工作</a></h4><h4 id="2024-05-12-“中国海海洋热浪预报产品”正式业务化运行"><a href="#2024-05-12-“中国海海洋热浪预报产品”正式业务化运行" class="headerlink" title="2024-05-12 “中国海海洋热浪预报产品”正式业务化运行"></a>2024-05-12 <a href="https://mp.weixin.qq.com/s/eRnv-t8_ftisrOm4M7QjIQ">“中国海海洋热浪预报产品”正式业务化运行</a></h4><h4 id="2024-05-17-遥感技术及其在海洋测绘领域中的应用"><a href="#2024-05-17-遥感技术及其在海洋测绘领域中的应用" class="headerlink" title="2024-05-17 遥感技术及其在海洋测绘领域中的应用"></a>2024-05-17 <a href="https://mp.weixin.qq.com/s/dnv6MSQf00AwldxTlYq5LA">遥感技术及其在海洋测绘领域中的应用</a></h4><h4 id="2024-05-17-自然资源部海洋灾害预报技术重点实验室第三届学术委员会第二次会议顺利召开"><a href="#2024-05-17-自然资源部海洋灾害预报技术重点实验室第三届学术委员会第二次会议顺利召开" class="headerlink" title="2024-05-17 自然资源部海洋灾害预报技术重点实验室第三届学术委员会第二次会议顺利召开"></a>2024-05-17 <a href="https://mp.weixin.qq.com/s/tU-IWocccbkDEbtciKm7-Q">自然资源部海洋灾害预报技术重点实验室第三届学术委员会第二次会议顺利召开</a></h4><hr>
<p><img src="https://p.ipic.vip/7jnxee.png" alt="Screenshot 2024-05-20 at 09.51.00"></p>
<p><img src="https://p.ipic.vip/h3g6el.png" alt="Screenshot 2024-05-20 at 09.53.33"></p>
<p><img src="https://p.ipic.vip/7bs5n4.png" alt="Screenshot 2024-05-20 at 09.53.44"></p>
<p><img src="https://p.ipic.vip/gxk77w.png" alt="Screenshot 2024-05-20 at 09.53.56"></p>
]]></content>
      <categories>
        <category>Recharge</category>
      </categories>
  </entry>
  <entry>
    <title>Effectively Communicating Your Research</title>
    <url>/2022/05/01/Recharge/Effective%20Academic%20Writing/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="Effective-Academic-Writing"><a href="#Effective-Academic-Writing" class="headerlink" title="Effective Academic Writing"></a>Effective Academic Writing</h4><div class="pdfobject-container" data-target="https://docs.qq.com/pdf/DSnlhVEN5Zll1ek9P" data-height="1000px"></div>

<h4 id="Logical-Manuscript-Structure"><a href="#Logical-Manuscript-Structure" class="headerlink" title="Logical Manuscript Structure"></a>Logical Manuscript Structure</h4><div class="pdfobject-container" data-target="https://docs.qq.com/pdf/DSlNIalBFb2lQSlhy" data-height="1000px"></div>

<h4 id="Maximizing-Discoverability"><a href="#Maximizing-Discoverability" class="headerlink" title="Maximizing Discoverability"></a>Maximizing Discoverability</h4><div class="pdfobject-container" data-target="https://docs.qq.com/pdf/DSmdVWUFUTXRYdG16" data-height="1000px"></div>

<h4 id="Publishing-amp-Research-Ethics"><a href="#Publishing-amp-Research-Ethics" class="headerlink" title="Publishing &amp; Research Ethics"></a>Publishing &amp; Research Ethics</h4><div class="pdfobject-container" data-target="https://docs.qq.com/pdf/DSmdrR0ZweXdCZWZW" data-height="1000px"></div>

<h4 id="Navigating-Editorial-Decisions-and-Peer-Review"><a href="#Navigating-Editorial-Decisions-and-Peer-Review" class="headerlink" title="Navigating Editorial Decisions and Peer Review"></a>Navigating Editorial Decisions and Peer Review</h4><div class="pdfobject-container" data-target="https://docs.qq.com/pdf/DSmFaWXpnTVdkTmZQ" data-height="1000px"></div>

<h4 id="Successful-Submission-Strategies"><a href="#Successful-Submission-Strategies" class="headerlink" title="Successful Submission Strategies"></a>Successful Submission Strategies</h4><div class="pdfobject-container" data-target="https://docs.qq.com/pdf/DSndTUlJFRWprYXpE" data-height="1000px"></div>

<h4 id="Workbook"><a href="#Workbook" class="headerlink" title="Workbook"></a><strong>Workbook</strong></h4><div class="pdfobject-container" data-target="https://docs.qq.com/pdf/DSnhtRHpkV2RPRXFs" data-height="1000px"></div>
]]></content>
      <categories>
        <category>Recharge</category>
      </categories>
  </entry>
  <entry>
    <title>Pangu-Weather</title>
    <url>/2023/05/01/Recharge/Pangu-Weather/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="华为云提出盘古气象大模型：中长期气象预报精度首次超过传统数值方法，速度提升10000倍以上"><a href="#华为云提出盘古气象大模型：中长期气象预报精度首次超过传统数值方法，速度提升10000倍以上" class="headerlink" title="华为云提出盘古气象大模型：中长期气象预报精度首次超过传统数值方法，速度提升10000倍以上"></a>华为云提出盘古气象大模型：中长期气象预报精度首次超过传统数值方法，速度提升10000倍以上</h2><p><a href="https://zhuanlan.zhihu.com/p/582285853?utm_campaign=shareopn&amp;utm_medium=social&amp;utm_oi=684003931882000384&amp;utm_psn=1576470760872431616&amp;utm_source=wechat_session">https://zhuanlan.zhihu.com/p/582285853?utm_campaign=shareopn&amp;utm_medium=social&amp;utm_oi=684003931882000384&amp;utm_psn=1576470760872431616&amp;utm_source=wechat_session</a></p>
<p>上世纪20年代以来，特别是近三十年随着算力的迅速发展，数值天气预报在每日天气预报、极端灾害预警、气候变化预测等领域取得了巨大的成功。但是随着算力增长的趋缓和物理模型的逐渐复杂化，传统数值预报的瓶颈日益突出。研究者们开始挖掘新的气象预报范式如使用深度学习方法预测未来天气。在数值方法应用最广泛的领域如中长期预报中，现有的AI预报方法精度仍然显著低于数值预报方法，并受到可解释性欠缺，极端天气预测不准等问题的制约。</p>
<p>来自华为云的研究人员提出了一种新的高分辨率全球AI气象预报系统：盘古气象大模型。盘古气象大模型是首个精度超过传统数值预报方法的AI方法，1小时-7天预测精度均高于传统数值方法（欧洲气象中心的operational IFS[<a href="https://zhuanlan.zhihu.com/p/582285853?utm_campaign=shareopn&utm_medium=social&utm_oi=684003931882000384&utm_psn=1576470760872431616&utm_source=wechat_session#ref_1">1]</a>），同时预测速度提升10000倍，能够提供秒级的全球气象预报，包括位势、湿度、风速、温度、海平面气压等。盘古气象模型的水平空间分辨率达到 0.25∘×0.25∘ ，时间分辨率为1小时，覆盖13层垂直高度，可以精准地预测细粒度气象特征。作为基础模型，盘古气象大模型还能够直接应用于多个下游场景。例如，在热带风暴预测任务中，盘古气象大模型的预测精度显著超过欧洲气象中心的高精度预报（ECMWF HRES Forecast）结果。</p>
<p>本文主要介绍盘古气象大模型的技术要点和代表性预测结果。关于技术细节，可以参考发布在arXiv上的完整论文：<a href="https://link.zhihu.com/?target=https://arxiv.org/abs/2211.02556">Pangu-Weather: A 3D High-Resolution Model for Fast and Accurate Global Weather Forecast</a>。</p>
<p><img src="https://p.ipic.vip/7qksvd.jpg" alt="img"></p>
<p><strong>【转载声明】</strong>转载此文章请注明出处，并且注明：文章所有内容均只代表作者观点，其中涉及的前沿内容均有可能被推翻。二次转载务必连同声明一起转载。此中文稿的主要作者为毕恺峰、谢凌曦，转载时请标注。</p>
<p>盘古气象大模型由盘古团队发布，主要完成人为毕恺峰、谢凌曦、张恒亨、陈鑫、顾晓韬以及田奇老师。</p>
<h3 id="引言：AI气象预报方法能不能超过数值气象预报方法？"><a href="#引言：AI气象预报方法能不能超过数值气象预报方法？" class="headerlink" title="引言：AI气象预报方法能不能超过数值气象预报方法？"></a>引言：AI气象预报方法能不能超过数值气象预报方法？</h3><p>气象预报是科学计算领域最重要的场景之一，对未来天气变化的预测特别是对极端天气如暴雨、台风、干旱、寒潮的预测至关重要。传统数值预报使用数学物理方程建模大气状态并使用计算机仿真方法求解方程得到未来天气状态，在过去三十年取得了令人瞩目的成功。但是，随着算力增长的趋缓和物理模型的日益复杂，数值气象预报方法也逐渐遇到了瓶颈：一方面，传统数值预报对算力的消耗非常大，如 0.25∘×0.25∘ 精度的未来10天数值预报，需在超过3000个节点的超级计算机上花费数小时进行仿真；另一方面，复杂的参数化物理模型始终是不完备的，对物理过程的参数化，不可避免地向数值预报引入系统误差。</p>
<p>AI气象预报首先在短临预报取得了巨大的成功。这得益于AI预报在预测速度上的巨大优势：数值预报方法无法给出分钟级的气象预测，而AI方法拟合雷达回波数据的能力，超过了光流法等外插方法。当把AI预报方法应用于中长期气象预报时（数值气象预报应用最成功的领域之一），尽管AI方法能够大幅提升预测速度，AI预报方法的分辨率和精度均明显落后于数值气象预报方法。2022年3月，英伟达推出FourCastNet模型[<a href="https://zhuanlan.zhihu.com/p/582285853?utm_campaign=shareopn&utm_medium=social&utm_oi=684003931882000384&utm_psn=1576470760872431616&utm_source=wechat_session#ref_2">2]</a>，首次把预报水平分辨率提升到了和数值预报相比拟的水平即 0.25∘×0.25∘ ，但是其预报精度仍然大幅落后于数值预报方法。例如，FourCastNet的5天位势预测的均方根误差（RMSE）为484.5，即使使用100个模型进行集成预报，其均方根误差依然高达462.5，远高于欧洲气象中心operational IFS报告的333.7。在盘古气象模型提出之前，AI气象预报主要是作为数值预报的快速替代模型，并不能直接替代传统数值预报方法。甚至有气象学家指出，AI预报方法超越传统数值方法，还需要一段时间[<a href="https://zhuanlan.zhihu.com/p/582285853?utm_campaign=shareopn&utm_medium=social&utm_oi=684003931882000384&utm_psn=1576470760872431616&utm_source=wechat_session#ref_3">3]</a>。</p>
<p><strong>盘古气象大模型首次在中长期气象预报上超过了传统数值方法。</strong>训练和测试均在ERA5数据集上进行，其包括43年（1979-2021年）的全球实况气象数据。其中，1979-2017年数据作为训练集，2019年数据作为验证集，2018、2020、2021年数据作为测试集。盘古大模型使用的数据，包括垂直高度上13个不同气压层，每层五种气象要素（温度、湿度、位势、经度和纬度方向的风速），以及地球表面的四种气象要素（2米温度、经度和纬度方向的10米风速、海平面气压）。图1展示了盘古气象大模型的一些结果。我们可以看到，盘古气象大模型全方位地超过了现有的数值预报方法（欧洲气象中心的operational IFS）。例如，盘古气象大模型提供的Z500五天预报均方根误差为296.7，显著低于之前最好的数值预报方法（operational IFS：333.7）和AI方法（FourCastNet：462.5）。同时，盘古气象大模型在一张V100显卡上只需要1.4秒就能完成24小时的全球气象预报，相比传统数值预报提速10000倍以上。</p>
<p><img src="https://p.ipic.vip/zt5wmi.jpg" alt="img"></p>
<p>图1a　盘古气象大模型在不同要素、不同预测月份的预测精度，都显著超过数值预报方法（欧洲气象中心的operational IFS）和AI预报方法（英伟达的FourCastNet）</p>
<p><img src="https://p.ipic.vip/fl2vbo.jpg" alt="img"></p>
<p>图1b　盘古气象大模型在两个变量上的3天预报结果的可视化以及与真实值对比</p>
<p><img src="https://p.ipic.vip/fxsra9.jpg" alt="img"></p>
<p>图1c　盘古气象大模型对2018年两个超强台风康雷和玉兔的路径预测，准确度远超传统方法——尤其对于台风玉兔，盘古相较于传统方法提前48小时（比登陆时间提前6天以上）判断出玉兔的正确登陆位置：菲律宾马里亚纳群岛</p>
<h3 id="方法：3D神经网络结合层次化时域聚合"><a href="#方法：3D神经网络结合层次化时域聚合" class="headerlink" title="方法：3D神经网络结合层次化时域聚合"></a>方法：3D神经网络结合层次化时域聚合</h3><p>盘古气象大模型的思路十分明确：气象数据和图像数据具有很多相似之处，能否利用当前CV领域的大模型，对于气象数据进行分析？在前人工作（如英伟达的FourCastNet）的基础上，盘古研究团队发现：AI气象预报模型的精度不足，主要有两个原因。第一，现有的AI气象预报模型都是基于2D神经网络，无法很好地处理不均匀的3D气象数据。第二，AI方法缺少数学物理机理约束，因此在迭代的过程中会不断积累迭代误差。为此，本文提出了3D Earth-Specific Transformer（3DEST）来处理复杂的不均匀3D气象数据，并且使用层次化时域聚合策略来减少预报迭代次数，从而减少迭代误差。</p>
<h4 id="神经网络：3D-Earth-Specific-Transformer"><a href="#神经网络：3D-Earth-Specific-Transformer" class="headerlink" title="神经网络：3D Earth-Specific Transformer"></a>神经网络：<strong>3D Earth-Specific Transformer</strong></h4><p>图2为本文提出的3D Earth-Specific Transformer的示意图。其主要思想是使用一个视觉transformer[<a href="https://zhuanlan.zhihu.com/p/582285853?utm_campaign=shareopn&utm_medium=social&utm_oi=684003931882000384&utm_psn=1576470760872431616&utm_source=wechat_session#ref_4">4]</a>的3D变种来处理复杂的不均匀的气象要素。由于气象数据分辨率很大，因而相比于常见的vision transformer方法，研究人员将网络的encoder和decoder减少到2级（8个block），同时采用Swin transformer[<a href="https://zhuanlan.zhihu.com/p/582285853?utm_campaign=shareopn&utm_medium=social&utm_oi=684003931882000384&utm_psn=1576470760872431616&utm_source=wechat_session#ref_5">5]</a>的滑窗注意力机制，以减少网络的计算量。需要注意的是，即使采用了这些方法，当前网络的总体FLOPs依然超过3000G。未来，在算力充足的条件下，可以使用更大的网络以进一步提升预报精度。</p>
<p><img src="https://p.ipic.vip/j85eqf.jpg" alt="img"></p>
<p>图2　3D Earth-Specific Transformer的架构示意图</p>
<p>在每一个网络block里，最重要的改进是引入了Earth-Specific位置编码。这是团队在对气象数据性质进行仔细分析后，所做出的改进。气象预报数据和普通图像数据最大的区别在于，特征图上的每个像素都对应于地球上的一个绝对位置，而图像上的像素往往只包含相对位置信息。同时，如图3所示，气象要素数据对应的经纬度网格是不均匀的，而不同的要素在不同纬度、高度的分布也是不均匀的。对这些不均匀性的建模，有利于学习气象数据背后潜藏着的复杂物理规律，如科里奥利力等。为此，本文在每一个transformer模块中引入和纬度、高度相关的绝对位置编码来学习每一次空间运算的不规则分量。这样改动后的transformer模块，被称为3D Earth-Specific Transformer。关于更多的技术细节，请参阅论文。</p>
<p><img src="https://p.ipic.vip/fqff78.jpg" alt="img"></p>
<p>图3　使用Earth-Specific位置编码的原因——左边：地球表面的经纬度网格是空间不均匀的；中间：位势高度和纬度、高度紧密相关；右边：平均风速和温度和垂直高度紧密相关</p>
<h4 id="层次化时域聚合策略"><a href="#层次化时域聚合策略" class="headerlink" title="层次化时域聚合策略"></a>层次化时域聚合策略</h4><p>中长期气象预报需要多次迭代模型得到预报结果。例如，FourCastNet需要调用6小时预测间隔的AI模型共计28次，以得到7天的预测结果。由于缺少数学物理机理约束，AI模型的迭代误差随着迭代次数的增加而迅速上升。如图4所示，把盘古气象预报的6小时模型迭代了28次得到的7天预报结果，精度明显低于24小时模型迭代7次的预报结果；而如果使用1小时模型迭代168次，预报误差则呈现超线性上升趋势。</p>
<p><img src="https://p.ipic.vip/zb0aqx.jpg" alt="img"></p>
<p>图4　不同基础模型的7天预报精度对比</p>
<p>为了缓解迭代误差，本文提出一个简单而有效的策略。研究人员训练了4个不同预报间隔的模型，分别为1小时间隔、3小时间隔、6小时间隔、24小时间隔。进而，研究人员使用贪心算法调用这些模型，使得预测特定时间气象状况的迭代次数最小。例如，对于24小时预测，只需要调用一次24小时间隔的模型；而对于23小时预测，则需要调用三次6小时预报，一次3小时预报和两次1小时预报。通过使用多个不同时间间隔模型捕捉不同时序关系，盘古气象大模型不仅减少了迭代误差，并且避免了由递归训练带来的训练资源消耗。在训练过程中，盘古气象大模型只需要使用单一时间的天气状况监督模型训练，而之前的方法（如FourCastNet）往往监督多个时间点的天气状况以降低迭代误差，从而成倍地增加了显存消耗和训练时间，并且使得训练过程的稳定性下降。</p>
<p>【算力消耗】为了训练每个模型，研究人员使用1979-2021年的气象数据，以小时为单位采样，训练了100个epoch。每个模型需要在192块V100显卡上训练16天。事实上，即使经历100个epoch，这些模型依旧没有完全收敛。也就是说，在计算资源更加充足的情况下，AI预报的精度还能够进一步提升。推理时，盘古气象大模型仅需在一张V100显卡上运行1.4秒，即可完成24小时全球气象预报。相比传统数值预报，计算速度的提升超过10000倍。</p>
<h3 id="实验结果展示"><a href="#实验结果展示" class="headerlink" title="实验结果展示"></a>实验结果展示</h3><p>本文主要在两个数据集上测试盘古气象大模型。一是从ERA5数据集[<a href="https://zhuanlan.zhihu.com/p/582285853?utm_campaign=shareopn&utm_medium=social&utm_oi=684003931882000384&utm_psn=1576470760872431616&utm_source=wechat_session#ref_6">6]</a>中划分出的测试集（2018、2020、2021年数据），主要用来测试盘古气象大模型的整体预报精度。二是IBTrACS热带风暴观测数据[<a href="https://zhuanlan.zhihu.com/p/582285853?utm_campaign=shareopn&utm_medium=social&utm_oi=684003931882000384&utm_psn=1576470760872431616&utm_source=wechat_session#ref_7">7]</a>，主要用来测试盘古气象大模型在特定极端天气场景（热带风暴轨迹预测）上的准确度。盘古气象大模型的比较对象，包括当前最先进的数值预报方法（从TIGGE存档下载的欧洲气象中心operational IFS预报结果）和AI方法（英伟达的FourCastNet论文中报告的精度）。</p>
<h4 id="确定性预报结果"><a href="#确定性预报结果" class="headerlink" title="确定性预报结果"></a>确定性预报结果</h4><p><strong>【高空气象变量】</strong>如图1和图5所示，盘古气象大模型在高空气象变量Z500、T850、T500、Q500、U500、V500上的测试精度，在所有预测时间均领先于欧洲气象中心的operational IFS。例如，对于Z500，3天和5天operational IFS的预测均方根误差（单位： m2&#x2F;s2 ）为152.8和333.7，盘古气象大模型把误差减少到134.5和296.7。对于T850，3天和5天operational IFS的预测均方根误差（单位： K ）为1.37和2.06，盘古气象大模型把误差减少到1.14和1.79 。在所有场景中，盘古气象大模型相比operational IFS的均方根误差相对降低都超过10%。使用同等精度下的预报时间间隔来衡量，盘古气象大模型相对欧洲气象中心的operational IFS的精度提升相当于超过10-15小时的“预测时间收益”（即，盘古的预测时间比IFS多10-15小时时，预测精度与IFS相当）。与英伟达的FourCastNet相比，盘古气象大模型有更大的精度优势——在所有场景中，均方根误差相对降低超过30%，“预测时间增益”也扩大到36小时以上。</p>
<p><img src="https://p.ipic.vip/exjh86.jpg" alt="img"></p>
<p>图5　左侧：四个高空气象变量的量化对比结果；右侧：三个地表气象变量的量化对比结果</p>
<p><strong>【地表气象变量】</strong>如图5所示，盘古气象大模型在地表气象变量2m温度（T2M），10m经度方向和纬度方向风速（U10和V10）上测试精度稳定的高于欧洲气象中心的operational IFS和英伟达的FourCastNet。使用“预测时间收益”来衡量，盘古气象大模型相对于operational IFS的精度提升相当于超过18小时的“预测时间收益”。例如，对于2m温度（T2M），3天和5天operational IFS的预测均方根误差（单位： K ）为1.34和1.75，FourCastNet的均方根误差为1.39和 2.00，盘古气象大模型把误差减少到1.05 和1.53。对于10米经度方向风速，3天和5天operational IFS的预测均方根误差（单位： m&#x2F;s ）为1.94和2.90，FourCastNet的均方根误差为2.24和 3.41，盘古气象大模型把误差减少到1.61和2.53 。</p>
<p><strong>【可视化】</strong>如图1和图6所示，盘古气象大模型可以很好地预测细粒度气象特征。同时，在可视化中可以观察到，AI预报的结果通常更加平滑，而数值预报则更经常地预测出一些不存在的特征。这反映出AI气象预报和传统气象预报间存在差异性和互补性。</p>
<p><img src="https://p.ipic.vip/7bpyty.jpg" alt="img"></p>
<p>图6　盘古气象大模型在另外两个变量上的3天预报结果的可视化以及与传统数值预报结果以及真实值的对比</p>
<p><strong>【诊断实验】</strong>本文提供两个诊断实验。</p>
<ul>
<li>如图1所示，盘古气象大模型在一年的不同月份预测ACC均高于欧洲气象中心的operational IFS。盘古气象大模型的精度优势在“难度最高”的月份更大，这意味着AI方法能够在传统数值方法失效的情况下从数据中学出大气演进的规律。</li>
<li>如图7所示，盘古气象大模型另一个独特的优势是能够提供逐小时的预报结果。与之相对，之前的高分辨率AI预测方法（如FourCastNet）只能提供逐6小时的预报结果。</li>
</ul>
<p><img src="https://p.ipic.vip/1udebo.jpg" alt="img"></p>
<p>图7　盘古气象大模型的逐小时预报结果</p>
<h4 id="极端天气预报结果"><a href="#极端天气预报结果" class="headerlink" title="极端天气预报结果"></a>极端天气预报结果</h4><p><strong>【总体极端天气预测趋势】</strong>与FourCastNet一样，盘古气象大模型计算了RQE值来衡量不同预报方法的极端天气预测趋势（具体数学定义参见论文）。RQE值小于0表示模型倾向于低估极端天气影响，RQE值大于0表示模型倾向于高估极端天气影响，RQE值接近0表示模型预报更准确。从图8中可以看出，AI方法和数值方法都倾向于低估极端天气影响。盘古气象大模型在Q500上表现的比operational IFS强（低估得更少），在U500上表现的比operational IFS弱（低估得更多），在U10上一开始表现的比operational强，最后表现的比operational IFS略弱。得益于高效的层次化时域聚合算法，盘古气象大模型在U10上的RQE结果明显高于FourCastNet（低估得更少），这也对应于盘古气象大模型在确定性预报上精度更高的事实。</p>
<p><img src="https://p.ipic.vip/jisosn.jpg" alt="img"></p>
<p>图8　三种气象变量的RQE值随时间变化趋势</p>
<p><strong>【热带风暴路径预测】</strong>如图9所示，通过计算海平面气压、850hPa旋度、10米风速和200hPa-850hPa厚度，盘古气象大模型可以准确地预测热带风暴的路径（具体方法参见论文）。研究人员将预报方法运用于2018年的88个热带风暴（IBTrACS数据集和TIGGE里 ECMWF HRES热带风暴预报的交集）后发现，盘古的预测精度明显高于传统方法。和ECMWF HRES比较，盘古气象大模型在不同地区、不同热带风暴强度、不同预测时间上台风路径预测准确度都有明显优势。例如，盘古气象大模型对88个热带风暴路径预测的三天&#x2F;五天平均误差为120.29公里&#x2F;195.65公里，明显低于ECMWF HRES的162.28公里&#x2F;272.10公里。如图1和图10所示，盘古气象大模型在2018年著名的台风康雷和玉兔（其轨迹被被多个气象预报长时间误判）上，都报告了很高的准确度。特别是台风玉兔，盘古领先传统方法超过48小时，即判断出玉兔的正确登陆地点：菲律宾马里亚纳群岛。</p>
<p><img src="https://p.ipic.vip/poml30.jpg" alt="img"></p>
<p>图9　通过追踪几个重点变量，盘古气象大模型能够准确地实现热带风暴轨迹预测</p>
<p><img src="https://p.ipic.vip/c0x4ub.jpg" alt="img"></p>
<p>图10　台风康雷的动态预报结果，可见盘古相较于传统方法的领先幅度</p>
<h4 id="集成气象预报结果"><a href="#集成气象预报结果" class="headerlink" title="集成气象预报结果"></a>集成气象预报结果</h4><p>最后，本文还探索了使用盘古气象大模型进行集成预报的简单方法。研究人员向模型的输入中加入随机珀林噪声，得到99组输入扰动的预报和1组输入未扰动的预报。如图11所示，简单的输入扰动形成的集成预报，其短期（&lt;2天）预报精度略低于未经扰动的确定性预报，而其长期（&gt;5天）预报精度明显高于未经扰动的确定性预报。例如，集成预报的平均值把Z500和U10的7天预测均方根误差从500.3和3.48降低至450.6和2.96，相对下降达到10%和15%以上。结合气象知识使用相似的方法可以得到更加有效的集成预报，例如使用奇异向量法扰动盘古气象大模型的输入。受限于作者有限的气象知识，研究人员期待，在经验更丰富的气象专家介入之后，盘古气象大模型的集成预报效果能够得到进一步的提升。</p>
<p><img src="https://p.ipic.vip/syzvkx.jpg" alt="img"></p>
<p>图11　盘古气象大模型的集成预报结果，及其与确定性预报结果的对比</p>
<h3 id="总结与展望"><a href="#总结与展望" class="headerlink" title="总结与展望"></a>总结与展望</h3><p>本文介绍了一个基于人工智能的数值天气预报系统：盘古气象大模型。本文的主要技术贡献包括（i）设计3D Earth-Specific（3DEST）网络结构和（ii）应用层次化时域聚合策略。通过在39年的全球天气数据上训练深度神经网络，盘古气象大模型首次在精度和速度方面超越了传统的NWP方法。盘古气象大模型具有极高的预报速度，为气象学家将他们的知识整合到基于人工智能方法中提供了便利。</p>
<p>展望未来，计算资源将成为进一步提高AI气象预报准确性的关键要素。根据本文得到的实验，在（i）使用更多的气象要素训练网络模型，（ii）加入时间维度来训练4D深度神经网络，以及（iii）简单地使用更大的神经网络等方面，AI预报方法还有很大的提升空间。所有这些都需要更多的算力资源：更强力的GPU，更大的内存，更高的浮点数运算能力，等等。</p>
<h3 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h3><p>作者感谢欧洲气象中心和美国NOAA国家环境信息中心，他们无私地分享了ERA5和IBTrACS数据集，使得本研究能够顺利进行。作者同时感谢盘古团队的其他成员，以及华为云EI集成验证团队成员在算力上的支持。</p>
<h3 id="11月15日更新"><a href="#11月15日更新" class="headerlink" title="11月15日更新"></a>11月15日更新</h3><p>文章发布几天以来，许多气象学专业的朋友给我们留下了不少评论。非常感谢大家的关注！以下，我简单回应几个提及比较多的问题。</p>
<p><strong>1. 关于“AI方法能够超过传统NWP方法”的论断</strong></p>
<p>这可能是引起争议最大的一句话，原文是“We end the debate on whether AI-based methods can surpass NWP for global weather forecast”。有气象学专家指出，盘古只是完成了在ERA5（再分析数据）数据上的拟合。而产生ERA5数据的过程很复杂，需要用到同化等技术。在没有覆盖这些技术的情况下，声称盘古超越了NWP方法，有过度宣传之嫌。我们接受这个意见。由于专业所限，我们之前阅读的文章主要是英伟达的FourCastNet以及引用里的几篇文献。在盘古文章中，我们将NWP限定为“基于同化数据进行预测的方法”，而不是指代“整个数值气象预报领域”。盘古确实首次在同化数据上超越了传统方法：我们使用了与英伟达FourCastNet完全相同的测试环境，确保对比的公平性和结论的可信度。</p>
<p><strong>2. 再分析数据也许不能实时获得，因而此类AI算法可能不实用</strong></p>
<p>这是一个很好的问题。ERA5数据集的质量，确实比大部分分析数据集都要好。然而我们看到，英伟达测试过FourCastNet（在ERA5数据上训练）迁移到GFS分析数据的结果[<a href="https://zhuanlan.zhihu.com/p/582285853?utm_campaign=shareopn&utm_medium=social&utm_oi=684003931882000384&utm_psn=1576470760872431616&utm_source=wechat_session#ref_8">8]</a>。结果显示，在5天预报上，迁移对于预报精度的影响小于“6小时间隔”（见下图），而盘古领先operational IFS的时间在所有变量上都达到10小时以上，说明盘古确实在预报精度上具有优势。</p>
<p><img src="https://p.ipic.vip/462fyb.jpg" alt="img"></p>
<p>英伟达研究表明，ERA5上训练的模型迁移到GFS数据上，预报精度损失并不很大</p>
<p><strong>3. 为什么我们坚信AI方法一定是气象预报的未来趋势</strong></p>
<p>AI已经不是新鲜事物，但是对于不从事AI研发的人而言，也许还无法准确地回答“AI究竟强在什么方面”这个问题。总的来说，AI主要擅长做两件事：处理重复任务、拟合未知数据关系——前者对于气象领域或许不太重要（除非将来AI系统被用于各个垂直领域、各个地区，进行精细化的预报），而后者非常重要。当前，气象预报的输入和输出之间，关系非常复杂。气象学家花费了大量的时间，创造了一套复杂度惊人的物理系统来做仿真，但是这套系统并不是完美的：不仅各种观测数据可能有缺陷、有误差，而且许多物理过程也建立在近似的基础上。在这种复杂环境下，人工构建的仿真系统，不仅精度受到限制，而且迭代代价极高。相比而言，AI不需要任何数理假设，只是暴力地学习数据中的关系，完成预报任务。因此，传统仿真方法和AI方法，各有优缺点。当数据噪声小、关系简单、仿真误差低时，确实没必要强行让AI方法介入；但是当数据噪声大、关系复杂、仿真误差高时，AI方法就一定会体现出优势来。换句更简单的话说，人类对于一个领域的认识越不足，AI就越有发挥的空间。很明显，气象预报完美符合AI方法的优势场景，因此AI一旦超越传统方法，就势必会一直领先下去，直到某个划时代的新理论出现（概率很低）。</p>
<p><strong>4. AI方法是否会取代传统方法？</strong></p>
<p>AI进入任何一个领域时，都会有类似的声音和担忧。举例说，AI与医学影像分析已经结合了10年以上，至今AI方法还是起到辅助作用，无法替代医生，特别是高水平专家。在气象领域也是一样：盘古虽然在全球预报上超越了传统方法，但是它也存在一些弊病，例如总是低估台风强度（路径准确、中心气压预估偏高），又例如可解释性不足。因此，我们的结论是明显的。第一，AI在量化评测上超过传统方法，已是不争的事实。第二，AI方法短期内无法彻底取代传统方法，两者需要深度融合。我呼吁气象学家们与AI领域深度合作，共同探索这一激动人心的新方向。</p>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ol>
<li>P. Bougeault, Z. Toth, C. Bishop, B. Brown, D. Burridge, D. H.Chen, B. Ebert, M. Fuentes, T. M. Hamill, K. Mylne et al., “The thorpex interactive grand global ensemble,” Bulletin of the American Meteorological Society, vol. 91, no. 8, pp. 1059–1072, 2010.</li>
<li>J. Pathak, S. Subramanian, P. Harrington, S. Raja, A. Chattopadhyay, M. Mardani, T. Kurth, D. Hall, Z. Li, K. Azizzadenesheli et al., “Fourcastnet: A global data-driven high-resolution weather model using adaptive fourier neural operators,” arXiv preprint arXiv:2202.11214, 2022.</li>
<li>M. G. Schultz, C. Betancourt, B. Gong, F. Kleinert, M. Langguth, L. H. Leufen, A. Mozaffari, and S. Stadtler, “Can deep learning beat numerical weather prediction?” Philosophical Transactions of the Royal Society A, vol. 379, no. 2194, p. 20200097, 2021.</li>
<li>A. Dosovitskiy, L. Beyer, A. Kolesnikov, D. Weissenborn, X. Zhai, T. Unterthiner, M. Dehghani, M. Minderer, G. Heigold, S. Gelly et al., “An image is worth 16x16 words: Transformers for image recognition at scale,” arXiv preprint arXiv:2010.11929, 2020.</li>
<li>Z. Liu, Y. Lin, Y. Cao, H. Hu, Y. Wei, Z. Zhang, S. Lin, and B. Guo,“Swin transformer: Hierarchical vision transformer using shifted windows,” in Proceedings of the IEEE&#x2F;CVF International Conference on Computer Vision, 2021, pp. 10 012–10 022.</li>
<li>H. Hersbach, B. Bell, P. Berrisford, S. Hirahara, A. Horanyi, ´J. Munoz-Sabater, J. Nicolas, C. Peubey, R. Radu, D. Schepers ˜ et al., “The era5 global reanalysis,” Quarterly Journal of the Royal Meteorological Society, vol. 146, no. 730, pp. 1999–2049, 2020.</li>
<li>K. R. Knapp, M. C. Kruk, D. H. Levinson, H. J. Diamond, and C. J. Neumann, “The international best track archive for climate stewardship (ibtracs) unifying tropical cyclone data,” Bulletin of the American Meteorological Society, vol. 91, no. 3, pp. 363–376, 2010.</li>
<li><a href="https://www.nvidia.com/en-us/on-demand/session/gtcfall22-a41326/">https://www.nvidia.com/en-us/on-demand/session/gtcfall22-a41326/</a></li>
</ol>
]]></content>
      <categories>
        <category>Recharge</category>
      </categories>
  </entry>
  <entry>
    <title>Machine Learning</title>
    <url>/2023/05/01/Recharge/Machine%20Learning/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Cross-Validation（交叉验证）详解"><a href="#Cross-Validation（交叉验证）详解" class="headerlink" title="Cross-Validation（交叉验证）详解"></a>Cross-Validation（交叉验证）详解</h2><p>在机器学习里，通常来说我们不能将全部用于数据训练模型，否则我们将没有数据集对该模型进行验证，从而评估我们的模型的预测效果。为了解决这一问题，有如下常用的方法：</p>
<h3 id="1-The-Validation-Set-Approach"><a href="#1-The-Validation-Set-Approach" class="headerlink" title="1.The Validation Set Approach"></a>1.The Validation Set Approach</h3><p>第一种是最简单的，也是很容易就想到的。我们可以把整个数据集分成两部分，一部分用于训练，一部分用于验证，这也就是我们经常提到的训练集（training set）和测试集（test set）。</p>
<p><img src="https://p.ipic.vip/j5nrvl.jpg" alt="img"></p>
<p>例如，如上图所示，我们可以将蓝色部分的数据作为训练集（包含7、22、13等数据），将右侧的数据作为测试集（包含91等），这样通过在蓝色的训练集上训练模型，在测试集上观察不同模型不同参数对应的MSE的大小，就可以合适选择模型和参数了。</p>
<p>不过，这个简单的方法存在两个弊端。</p>
<p>1.最终模型与参数的选取将极大程度依赖于你对训练集和测试集的划分方法。什么意思呢？我们再看一张图：</p>
<p><img src="https://p.ipic.vip/opu7kj.jpg" alt="img"></p>
<p>右边是十种不同的训练集和测试集划分方法得到的test MSE，可以看到，在不同的划分方法下，test MSE的变动是很大的，而且对应的最优degree也不一样。所以如果我们的训练集和测试集的划分方法不够好，很有可能无法选择到最好的模型与参数。</p>
<p>2.该方法只用了部分数据进行模型的训练</p>
<p>我们都知道，当用于模型训练的数据量越大时，训练出来的模型通常效果会越好。所以训练集和测试集的划分意味着我们无法充分利用我们手头已有的数据，所以得到的模型效果也会受到一定的影响。</p>
<p>基于这样的背景，有人就提出了Cross-Validation方法，也就是交叉验证。</p>
<h3 id="2-Cross-Validation"><a href="#2-Cross-Validation" class="headerlink" title="2.Cross-Validation"></a>2.Cross-Validation</h3><p><em><strong>2.1 LOOCV</strong></em></p>
<p>首先，我们先介绍LOOCV方法，即（Leave-one-out cross-validation）。像Test set approach一样，LOOCV方法也包含将数据集分为训练集和测试集这一步骤。但是不同的是，我们现在只用一个数据作为测试集，其他的数据都作为训练集，并将此步骤重复N次（N为数据集的数据数量）。</p>
<p><img src="https://p.ipic.vip/e56w3s.jpg" alt="img"></p>
<p>如上图所示，假设我们现在有n个数据组成的数据集，那么LOOCV的方法就是每次取出一个数据作为测试集的唯一元素，而其他n-1个数据都作为训练集用于训练模型和调参。结果就是我们最终训练了n个模型，每次都能得到一个MSE。而计算最终test MSE则就是将这n个MSE取平均。</p>
<p><img src="https://p.ipic.vip/7983et.jpg" alt="img"></p>
<p>��比起test set approach，LOOCV有很多优点。首先它不受测试集合训练集划分方法的影响，因为每一个数据都单独的做过测试集。同时，其用了n-1个数据训练模型，也几乎用到了所有的数据，保证了模型的bias更小。不过LOOCV的缺点也很明显，那就是计算量过于大，是test set approach耗时的n-1倍。</p>
<p>为了解决计算成本太大的弊端，又有人提供了下面的式子，使得LOOCV计算成本和只训练一个模型一样快。</p>
<p><img src="https://p.ipic.vip/jgviny.jpg" alt="img"></p>
<p>其中��^表示第i个拟合值，而ℎ�则表示leverage。关于ℎ�的计算方法详见线性回归的部分（以后会涉及）。</p>
<p><em><strong>2.2 K-fold Cross Validation</strong></em></p>
<p>另外一种折中的办法叫做K折交叉验证，和LOOCV的不同在于，我们每次的测试集将不再只包含一个数据，而是多个，具体数目将根据K的选取决定。比如，如果K&#x3D;5，那么我们利用五折交叉验证的步骤就是：</p>
<p>1.将所有数据集分成5份</p>
<p>2.不重复地每次取其中一份做测试集，用其他四份做训练集训练模型，之后计算该模型在测试集上的����</p>
<p>3.将5次的����取平均得到最后的MSE</p>
<p><img src="https://p.ipic.vip/w62vr9.jpg" alt="img"></p>
<p>不难理解，其实LOOCV是一种特殊的K-fold Cross Validation（K&#x3D;N）。再来看一组图：</p>
<p><img src="https://p.ipic.vip/xxxdjo.jpg" alt="img"></p>
<p>每一幅图种蓝色表示的真实的test MSE，而黑色虚线和橙线则分贝表示的是LOOCV方法和10-fold CV方法得到的test MSE。我们可以看到事实上LOOCV和10-fold CV对test MSE的估计是很相似的，但是相比LOOCV，10-fold CV的计算成本却小了很多，耗时更少。</p>
<p><strong><em>2.3 Bias-Variance Trade-Off for* *k*</em>-Fold Cross-Validation*</strong></p>
<p>最后，我们要说说K的选取。事实上，和开头给出的文章里的部分内容一样，K的选取是一个Bias和Variance的trade-off。</p>
<p>K越大，每次投入的训练集的数据越多，模型的Bias越小。但是K越大，又意味着每一次选取的训练集之前的相关性越大（考虑最极端的例子，当k&#x3D;N，也就是在LOOCV里，每次都训练数据几乎是一样的）。而这种大相关性会导致最终的test error具有更大的Variance。</p>
<p>一般来说，根据经验我们一般选择k&#x3D;5或10。</p>
<p><em><strong>2.4 Cross-Validation on Classification Problems</strong></em></p>
<p>上面我们讲的都是回归问题，所以用MSE来衡量test error。如果是分类问题，那么我们可以用以下式子来衡量Cross-Validation的test error：</p>
<p><img src="https://p.ipic.vip/m19xuy.jpg" alt="img"></p>
<p>其中Erri表示的是第i个模型在第i组测试集上的分类错误的个数。</p>
<p>图片来源：《An Introduction to Statistical Learning with Applications in R》</p>
<h2 id="不平衡数据处理"><a href="#不平衡数据处理" class="headerlink" title="不平衡数据处理"></a>不平衡数据处理</h2><p>本文作者用python代码示例解释了3种处理不平衡数据集的可选方法，包括数据层面上的2种重采样数据集方法和算法层面上的1个集成分类器方法。</p>
<p>分类是机器学习最常见的问题之一，处理它的最佳方法是从分析和探索数据集开始，即从探索式数据分析（Exploratory Data Analysis， EDA）开始。除了生成尽可能多的数据见解和信息，它还用于查找数据集中可能存在的任何问题。在分析用于分类的数据集时，类别不平衡是常见问题之一。</p>
<h3 id="什么是数据不平衡（类别不平衡）？"><a href="#什么是数据不平衡（类别不平衡）？" class="headerlink" title="什么是数据不平衡（类别不平衡）？"></a>什么是数据不平衡（类别不平衡）？</h3><p>数据不平衡通常反映了数据集中类别的不均匀分布。例如，在信用卡欺诈检测数据集中，大多数信用卡交易类型都不是欺诈，仅有很少一部分类型是欺诈交易，如此以来，非欺诈交易和欺诈交易之间的比率达到50:1。本文中，我将使用来自Kaggle的信用卡欺诈交易数据数据集，你可以从这里下载。</p>
<p><strong>这里</strong></p>
<p><a href="https://link.zhihu.com/?target=https://www.kaggle.com/mlg-ulb/creditcardfraud">https://www.kaggle.com/mlg-ulb/creditcardfraud</a></p>
<p>首先，我们先绘制类分布图，查看不平衡情况。</p>
<p><img src="https://p.ipic.vip/2l6e34.jpg" alt="img"></p>
<p>如你所见，非欺诈交易类型数据数量远远超过欺诈交易类型。如果我们在不解决这个类别不平衡问题的情况下训练了一个二分类模型，那么这个模型完全是有偏差的，稍后我还会向你演示它影响特征相关性的过程并解释其中的原因。</p>
<p>现在，我们来介绍一些解决类别不平衡问题的技巧，你可以在这里找到完整代码的notebook。</p>
<p><strong>这里</strong></p>
<p><a href="https://link.zhihu.com/?target=https://github.com/wmlba/innovate2019/blob/master/Credit_Card_Fraud_Detection.ipynb">https://github.com/wmlba/innovate2019/blob/master/Credit_Card_Fraud_Detection.ipynb</a></p>
<h3 id="重采样（过采样和欠采样）"><a href="#重采样（过采样和欠采样）" class="headerlink" title="重采样（过采样和欠采样）"></a>重采样（过采样和欠采样）</h3><p><img src="https://p.ipic.vip/ni73qu.jpg" alt="img"></p>
<p>这听起来很直接。欠采样就是一个随机删除一部分多数类（数量多的类型）数据的过程，这样可以使多数类数据数量可以和少数类（数量少的类型）相匹配。一个简单实现代码如下：</p>
<p># Shuffle the Dataset.</p>
<p>shuffled_df &#x3D; credit_df.sample(frac&#x3D;1,random_state&#x3D;4)</p>
<p># Put all the fraud class in a separate dataset.</p>
<p>fraud_df &#x3D; shuffled_df.loc[shuffled_df[‘Class’] &#x3D;&#x3D; 1]</p>
<p>#Randomly select 492 observations from the non-fraud (majority class)</p>
<p>non_fraud_df&#x3D;shuffled_df.loc[shuffled_df[‘Class’]&#x3D;&#x3D; 0].sample(n&#x3D;492,random_state&#x3D;42)</p>
<p># Concatenate both dataframes again</p>
<p>normalized_df &#x3D; pd.concat([fraud_df, non_fraud_df])</p>
<p>#plot the dataset after the undersampling</p>
<p>plt.figure(figsize&#x3D;(8, 8))</p>
<p>sns.countplot(‘Class’, data&#x3D;normalized_df)</p>
<p>plt.title(‘Balanced Classes’)</p>
<p>plt.show()</p>
<p><strong>对多数类进行欠采样</strong></p>
<p>对数据集进行欠采样之后，我重新画出了类型分布图（如下），可见两个类型的数量相等。</p>
<p><img src="https://p.ipic.vip/hqvjrh.jpg" alt="img"></p>
<p><strong>平衡数据集（欠采样）</strong></p>
<p>第二种重采样技术叫过采样，这个过程比欠采样复杂一点。它是一个生成合成数据的过程，试图学习少数类样本特征随机地生成新的少数类样本数据。对于典型的分类问题，有许多方法对数据集进行过采样，最常见的技术是SMOTE（Synthetic Minority Over-sampling Technique，合成少数类过采样技术）。简单地说，就是在少数类数据点的特征空间里，根据随机选择的一个K最近邻样本随机地合成新样本。</p>
<p><img src="https://p.ipic.vip/4fzybh.jpg" alt="img"></p>
<p><strong>来源</strong></p>
<p><a href="https://link.zhihu.com/?target=https://imbalanced-learn.readthedocs.io/en/stable/over_sampling.html">https://imbalanced-learn.readthedocs.io/en/stable/over_sampling.html</a></p>
<p>为了用python编码，我调用了imbalanced-learn 库（或imblearn），实现SMOTE的代码如下：</p>
<p>imbalanced-learn</p>
<p><a href="https://link.zhihu.com/?target=https://imbalanced-learn.readthedocs.io/en/stable/index.html">https://imbalanced-learn.readthedocs.io/en/stable/index.html</a></p>
<p>from imblearn.over_sampling import SMOTE</p>
<p># Resample the minority class. You can change the strategy to ‘auto’ if you are not sure.</p>
<p>sm &#x3D; SMOTE(sampling_strategy&#x3D;’minority’, random_state&#x3D;7)</p>
<p># Fit the model to generate the data.</p>
<p>oversampled_trainX,oversampled_trainY&#x3D;sm.fit_sample(credit_df.drop(‘Class’, axis&#x3D;1), credit_df[‘Class’])</p>
<p>oversampled_train&#x3D;pd.concat([pd.DataFrame(oversampled_trainY), pd.DataFrame(oversampled_trainX)], axis&#x3D;1)</p>
<p>oversampled_train.columns &#x3D; normalized_df.columns</p>
<p>还记得我说过不平衡的数据会影响特征相关性吗？让我向您展示处理不平衡类问题前后的特征相关性。</p>
<p><strong>重采样之前：</strong></p>
<p>下面的代码用来绘制所有特征之间的相关矩阵：</p>
<p># Sample figsize in inches</p>
<p>fig, ax &#x3D; plt.subplots(figsize&#x3D;(20,10))</p>
<p># Imbalanced DataFrame Correlation</p>
<p>corr &#x3D; credit_df.corr()</p>
<p>sns.heatmap(corr, cmap&#x3D;’YlGnBu’, annot_kws&#x3D;{‘size’:30}, ax&#x3D;ax)</p>
<p>ax.set_title(“Imbalanced Correlation Matrix”, fontsize&#x3D;14)</p>
<p>plt.show()</p>
<p><img src="https://p.ipic.vip/yy9aey.jpg" alt="img"></p>
<p><strong>重采样之后：</strong></p>
<p><img src="https://p.ipic.vip/4k2qyp.jpg" alt="img"></p>
<p>请注意，现在特征相关性更明显了。在解决不平衡问题之前，大多数特征并没有显示出相关性，这肯定会影响模型的性能。除了会关系到整个模型的性能，特征性相关性还会影响ML模型的性能，因此修复类别不平衡问题非常重要。</p>
<p><strong>会关系到整个模型的性能</strong></p>
<p><a href="https://link.zhihu.com/?target=https://towardsdatascience.com/why-feature-correlation-matters-a-lot-847e8ba439c4">https://towardsdatascience.com/why-feature-correlation-matters-a-lot-847e8ba439c4</a></p>
<h3 id="集成方法（采样器集成）"><a href="#集成方法（采样器集成）" class="headerlink" title="集成方法（采样器集成）"></a>集成方法（采样器集成）</h3><p>在机器学习中，集成方法会使用多种学习算法和技术，以获得比单独使用其中一个算法更好的性能（是的，就像一个民主投票系统）。当使用集合分类器时，bagging方法变得流行起来，它通过构建多个分类器在随机选择的不同数据集上进行训练。在scikit-learn库中，有一个名叫“BaggingClassifier”的集成分类器，然而这个分类器不能训练不平衡数据集。当训练不平衡数据集时，这个分类器将会偏向多数类，从而创建一个有偏差的模型。</p>
<p>为了解决这个问题，我们可以使用imblearn库中的BalancedBaggingClassifier。它允许在训练集成分类器中每个子分类器之前对每个子数据集进行重采样。</p>
<p><strong>BalancedBaggingClassifier</strong></p>
<p><a href="https://link.zhihu.com/?target=https://mp.weixin.qq.com/cgi-bin/appmsg?t=media/appmsg_edit&action=edit&type=10&isMul=1&isNew=1&lang=zh_CN&token=89565677%23imblearn.ensemble.BalancedBaggingClassifier">https://mp.weixin.qq.com/cgi-bin/appmsg?t=media/appmsg_edit&amp;action&#x3D;edit&amp;type&#x3D;10&amp;isMul&#x3D;1&amp;isNew&#x3D;1&amp;lang&#x3D;zh_CN&amp;token&#x3D;89565677#imblearn.ensemble.BalancedBaggingClassifier</a></p>
<p>因此，BalancedBaggingClassifier除了需要和Scikit Learn BaggingClassifier相同的参数以外，还需要2个参数sampling_strategy和replacement来控制随机采样器的执行。下面是具体的执行代码：</p>
<p>from imblearn.ensemble import BalancedBaggingClassifier</p>
<p>from sklearn.tree import DecisionTreeClassifier</p>
<p>#Create an object of the classifier.</p>
<p>bbc &#x3D; BalancedBaggingClassifier(base_estimator&#x3D;DecisionTreeClassifier(),</p>
<p>sampling_strategy&#x3D;’auto’,</p>
<p>replacement&#x3D;False,</p>
<p>random_state&#x3D;0)</p>
<p>y_train &#x3D; credit_df[‘Class’]</p>
<p>X_train &#x3D; credit_df.drop([‘Class’], axis&#x3D;1, inplace&#x3D;False)</p>
<p>#Train the classifier.</p>
<p>bbc.fit(X_train, y_train)</p>
<p>preds &#x3D; bbc.predict(X_train)</p>
<p><strong>使用集合采样器训练不平衡数据集</strong></p>
<p>这样，您就可以训练一个分类器来处理类别不平衡问题，而不必在训练前手动进行欠采样或过采样。</p>
<p>总之，每个人都应该知道，建立在不平衡数据集上的ML模型会难以准确预测稀有点和少数点，整体性能会受到限制。因此，识别和解决这些点的不平衡对生成模型的质量和性能是至关重要的。</p>
<p>原文标题：</p>
<p>How to fix an Unbalanced Dataset</p>
<p>原文链接：</p>
<p><a href="https://link.zhihu.com/?target=https://www.kdnuggets.com/2019/05/fix-unbalanced-dataset.html">https://www.kdnuggets.com/2019/05/f</a></p>
<h2 id="Bagging-算法"><a href="#Bagging-算法" class="headerlink" title="Bagging 算法"></a>Bagging 算法</h2><p>Bagging算法 （英语：Bootstrap aggregating，引导聚集算法），又称装袋算法，是机器学习领域的一种团体学习算法。最初由Leo Breiman于1996年提出。Bagging算法可与其他分类、回归算法结合，提高其准确率、稳定性的同时，通过降低结果的方差，避免过拟合的发生。</p>
<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>Bagging [Breiman, 1996a] 是井行式集成学习方法最著名的代表.从名字即可看出，它直接基于自助采样法(bootstrap sampling).给定包含m 个样本的数据集，我们先随机取出一个样本放入采样集中，再把该样本放回初始数据集，使得下次采样时该样本仍有可能被选中，这样，经过m次随机采样操作，我们得到含m 个样本的采样集，初始训练集中有的样本在采样集里多次出现，有的则从未出现，初始训练集中约有63.2%的样本出现在来样集中.<br>照这样，我们可采样出T 个含m 个训练样本的采样集，然后基于每个采样集训练出一个基学习器，再将这些基学习器进行结合.这就是Bagging 的基本流程.在对预测输出进行结合时， Bagging 通常对分类任务使用简单投票法，对回归任务使用简单平均法.若分类预测时出现两个类收到同样票数的情形，则最简单的做法是随机选择一个，也可进一步考察学习器投票的置信度来确定最终胜者.<br>Bagging是通过结合几个模型降低泛化误差的技术。主要想法是分别训练几个不同的模型，然后让所有模型表决测试样例的输出。 这是机器学习中常规策略的一个例子，被称为模型平均（modelaveraging）。采用这种策略的技术被称为集成方法。模型平均（model averaging）奏效的原因是不同的模型通常不会在测试集上产生完全相同的误差。模型平均是一个减少泛化误差的非常强大可靠的方法。</p>
<h3 id="基本思想"><a href="#基本思想" class="headerlink" title="基本思想"></a>基本思想</h3><p>1.给定一个弱学习算法,和一个训练集;</p>
<p>2.单个弱学习算法准确率不高;</p>
<p>3.将该学习算法使用多次,得出预测函数序列,进行投票;</p>
<p>4.最后结果准确率将得到提高.</p>
<p>大致过程如下：</p>
<ol>
<li>对于给定的训练样本S,每轮从训练样本S中采用有放回抽样(Booststraping)的方式抽取M个训练样本,共进行n轮，得到了n个样本集合，需要注意的是这里的n个训练集之间是相互独立的。</li>
<li>在获取了样本集合之后，每次使用一个样本集合得到一个预测模型，对于n个样本集合来说，我们总共可以得到n个预测模型。</li>
<li>如果我们需要解决的是分类问题，那么我们可以对前面得到的n个模型采用投票的方式得到分类的结果，对于回归问题来说，我们可以采用计算模型均值的方法来作为最终预测的结果。</li>
</ol>
<p><img src="https://p.ipic.vip/qhtanc.jpg" alt="img"></p>
<p>特点在于随机采样，那么什么是随机采样（自组采样）呢？<br><strong>随机采样（bootstrap sample）从n个数据点中有放回</strong>地<strong>重复随机抽取</strong>一个样本（即同一个样本可被多次抽取），共抽取n次。创建一个与原数据大小相同得数据集，但有些数据点会缺失（大约1&#x2F;3），有些会重复。<br>举例说明：<br>原数据集：[‘a’, ‘b’, ‘c’, ‘d’]<br>随机采样1：[‘c’, ‘d’, ‘c’, ‘a’]<br>随机采样2：[‘d’, ‘d’, ‘a’, ‘b’]<br>…<br>对于缺失得数据点我们常常称之为袋外数据(Out Of Bag, 简称OOB)。这些数据没有参与训练集模型的拟合，因此可以用来检测模型的泛化能力。</p>
<p><strong>bagging的集合策略</strong>也比较简单，对于分类问题，通常使用简单投票法，得到最多票数的类别或者类别之一为最终的模型输出。对于回归问题，通常使用简单平均法，对T个弱学习器得到的回归结果进行算术平均得到最终的模型输出。</p>
<h2 id="正则化"><a href="#正则化" class="headerlink" title="正则化"></a>正则化</h2><h3 id="正则化的作用"><a href="#正则化的作用" class="headerlink" title="正则化的作用"></a>正则化的作用</h3><p>正则化的主要作用是防止过拟合，对模型添加正则化项可以限制模型的复杂度，使得模型在复杂度和性能达到平衡。<br>常用的正则化方法有L1正则化和L2正则化。L1正则化和L2正则化可以看做是损失函数的惩罚项。所谓『惩罚』是指对损失函数中的某些参数做一些限制。 L1正则化的模型建叫做Lasso回归，使用L2正则化的模型叫做Ridge回归（岭回归。但是使用正则化来防止过拟合的原理是什么？L1和L2正则化有什么区别呢？</p>
<h3 id="L1正则化和L2正则化"><a href="#L1正则化和L2正则化" class="headerlink" title="L1正则化和L2正则化"></a>L1正则化和L2正则化</h3><p>![Screenshot 2023-06-09 at 10.46.02](&#x2F;Users&#x2F;ruyanc&#x2F;Desktop&#x2F;Screenshot 2023-06-09 at 10.46.02.png)</p>
<h4 id="L1和L2正则化的作用："><a href="#L1和L2正则化的作用：" class="headerlink" title="L1和L2正则化的作用："></a>L1和L2正则化的作用：</h4><p>L1正则化可以产生稀疏权值矩阵，即产生一个稀疏模型，可以用于特征选择，一定程度上，L1也可以防止过拟合<br>L2正则化可以防止模型过拟合（overfitting）<br>下面看李飞飞在CS2312中给的更为详细的解释：</p>
<p>L2正则化可以直观理解为它对于大数值的权重向量进行严厉惩罚，倾向于更加分散的权重向量。由于输入和权重之间的乘法操作，这样就有了一个优良的特性：使网络更倾向于使用所有输入特征，而不是严重依赖输入特征中某些小部分特征。 L2惩罚倾向于更小更分散的权重向量，这就会鼓励分类器最终将所有维度上的特征都用起来，而不是强烈依赖其中少数几个维度。这样做可以提高模型的泛化能力，降低过拟合的风险。</p>
<p>L1正则化有一个有趣的性质，它会让权重向量在最优化的过程中变得稀疏（即非常接近0）。也就是说，使用L1正则化的神经元最后使用的是它们最重要的输入数据的稀疏子集，同时对于噪音输入则几乎是不变的了。相较L1正则化，L2正则化中的权重向量大多是分散的小数字。</p>
<p>在实践中，如果不是特别关注某些明确的特征选择，一般说来L2正则化都会比L1正则化效果好。</p>
<h3 id="L1和L2正则化的原理"><a href="#L1和L2正则化的原理" class="headerlink" title="L1和L2正则化的原理"></a>L1和L2正则化的原理</h3><p>上面讲到L1倾向于学得稀疏的权重矩阵，L2倾向于学得更小更分散的权重？但是L1和L2是怎样起到这样的作用的呢？背后的数学原理是什么呢？</p>
<p>模型的学习优化的目标是最小化损失函数，学习的结果是模型参数。在原始目标函数的基础上添加正则化相当于，在参数原始的解空间添加了额外的约束。</p>
<p><img src="https://p.ipic.vip/h8gs2d.png" alt="Screenshot 2023-06-09 at 10.49.27"></p>
<p><img src="https://p.ipic.vip/mrrxt1.png" alt="Screenshot 2023-06-09 at 10.49.42"></p>
<p>在二维平面上绘制以上两个式子的图像，可得L1约束的范围是一个顶点在坐标轴上的菱形，L2约束的范围是一个圆形。</p>
<p><img src="https://p.ipic.vip/5y2wbj.png" alt="在这里插入图片描述"></p>
<p>上面的图，左面是L2约束下解空间的图像，右面是L1约束下解空间的图像。</p>
<p>蓝色的圆圈表示损失函数的等值线。同一个圆上的损失函数值相等的，圆的半径越大表示损失值越大，由外到内，损失函数值越来越小，中间最小。</p>
<p>如果没有L1和L2正则化约束的话，w1和w2是可以任意取值的，损失函数可以优化到中心的最小值的，此时中心对应的w1和w2的取值就是模型最终求得的参数。</p>
<p>但是填了L1和L2正则化约束就把解空间约束在了黄色的平面内。黄色图像的边缘与损失函数等值线的交点，便是满足约束条件的损失函数最小化的模型的参数的解。 由于L1正则化约束的解空间是一个菱形，所以等值线与菱形端点相交的概率比与线的中间相交的概率要大很多，端点在坐标轴上，一些参数的取值便为0。L2正则化约束的解空间是圆形，所以等值线与圆的任何部分相交的概率都是一样的，所以也就不会产生稀疏的参数。</p>
<p><img src="https://p.ipic.vip/3qg5la.png" alt="Screenshot 2023-06-09 at 10.51.51"></p>
<h3 id="正则化参数λ"><a href="#正则化参数λ" class="headerlink" title="正则化参数λ"></a>正则化参数λ</h3><p><img src="https://p.ipic.vip/ry75un.png" alt="Screenshot 2023-06-09 at 10.53.07"></p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>添加正则化相当于参数的解空间添加了约束，限制了模型的复杂度</p>
<p>L1正则化的形式是添加参数的绝对值之和作为结构风险项，L2正则化的形式添加参数的平方和作为结构风险项</p>
<p>L1正则化鼓励产生稀疏的权重，即使得一部分权重为0，用于特征选择；L2鼓励产生小而分散的权重，鼓励让模型做决策的时候考虑更多的特征，而不是仅仅依赖强依赖某几个特征，可以增强模型的泛化能力，防止过拟合。</p>
<p>正则化参数 λ越大，约束越严格，太大容易产生欠拟合。正则化参数 λ越小，约束宽松，太小起不到约束作用，容易产生过拟合。</p>
<p>如果不是为了进行特征选择，一般使用L2正则化模型效果更好。</p>
<h2 id="XGBoost算法"><a href="#XGBoost算法" class="headerlink" title="XGBoost算法"></a>XGBoost算法</h2><p>XGBoost是2014年2月由华盛顿大学的博士生陈天奇发明的基于梯度提升算法(GBDT)的机器学习算法，其算法不但具有优良的学习效果，而且训练速度高效，在数据竞赛中大放异彩。</p>
<p>XGBoost 是大规模并行Boosting Tree 的工具，它是性能和速度俱佳的开源Boosting Tree 工具包，比常见的工具包快很多倍。XGBoost 和 GBDT 两者都是Boosting 方法，除了工程实现、解决问题上的一些差异外，最大的不同就是目标函数的定义。</p>
<h3 id="10-5-1-算法思想"><a href="#10-5-1-算法思想" class="headerlink" title="10.5.1 算法思想"></a>10.5.1 算法思想</h3><p>XGBoost算法原理主要是以下几个方面：</p>
<p><strong>1.防止过拟合</strong></p>
<p>机器学习算法的泛化误差可以分为偏差(Bias)和方差(Variance)两部分。偏差指的是算法的期望预测与真实预测之间的偏差程度，反应了模型本身的拟合能力；方差度量了同等大小的训练集的变动导致学习性能的变化，刻画了数据扰动所导致的影响。</p>
<p>如图10-9所示，随着机器学习的模型复杂度增加，偏差越来越小，但方差却越来越大，而当模型越简单时，模型的方差很小，偏差却往往越大，也就是说，高方差导致过拟合，而高偏差导致欠拟合。</p>
<p><img src="https://p.ipic.vip/sbesz0.png" alt="Image"></p>
<p>图10-9 机器学习方差和偏差</p>
<p>XGBoost有效解决了过拟合问题，对叶节点的权重进行了惩罚，防止过拟合，惩罚相当于添加了正则项，即目标函数为：训练损失加上正则项。</p>
<p><strong>2.采用二阶泰勒展开加快收敛</strong></p>
<p>GBDT的损失函数用了一阶收敛，用到了梯度下降，XGBoost的方法是用牛顿法进行二阶收敛，即将损失函数做二阶泰勒展开，使用前两阶作为改进的残差。梯度下降法是用了目标函数的一阶偏导数，而牛顿法就是用用了目标函数的二阶偏导数，二阶偏导数考虑了梯度的变化趋势，所以牛顿法会更容易收敛。图10-10显示了牛顿法(左)和梯度下降法(右)的迭代路径，可以发现，左边的路径更符合最优下降路径。使用二阶收敛，这也是XGBoost加快收敛的原因。</p>
<p><img src="https://p.ipic.vip/jxd5mo.png" alt="Image"></p>
<p>图10-10 牛顿法(左)和梯度下降法(右)</p>
<p><strong>3.树构造的分裂条件采用导数统计量</strong></p>
<p>在寻找最佳分割点时，XGBoost 也实现了一种完全搜索式的精确的贪心算法(Exact Greedy Algorithm)。这种搜索算法会遍历一个特征上所有可能的分裂点，分别计算其损失减小量，然后选择最优的分裂点。根据结构分数的增益情况计算出来选择哪个特征的哪个分割点，某个特征的重要性，就是它在所有树中出现的次数之和。即增益(Gain)计算完了之后会选择一个增益最高的特征来分裂，然后这个特征的重要性加1。</p>
<p><strong>4.支持并行计算，可以采用多线程优化技术</strong></p>
<p>XGBoost的并行，并不是说每棵树可以并行训练，XGBoost本质上仍然采用boosting思想，每棵树训练前需要等前面的树训练完成才能开始训练。</p>
<p>XGBoost的并行，指的是特征维度的并行：在训练之前，每个特征按特征值对样本进行预排序，并存储为Block结构，在后面查找特征分割点时可以重复使用，而且特征已经被存储为一个个block结构，那么在寻找每个特征的最佳分割点时，可以利用多线程对每个block并行计算。</p>
<h3 id="10-5-2-XGBoost算法推导"><a href="#10-5-2-XGBoost算法推导" class="headerlink" title="10.5.2 XGBoost算法推导"></a>10.5.2 XGBoost算法推导</h3><p>XGBoost中最主要的基学习器为CART(分类与回归树)，这里定义是叶子的权重， 是将每个节点分配给叶子的函数，是树的数量，并定义为一个常数。假设前步迭代优化得到的模型为，在第步中，待求参数为，则第步的目标函数为：</p>
<p>公式(10.14)第一部分是预测值和目标真实值之间的训练误差，第二部分是每棵树的复杂度之和。</p>
<p>根据泰勒展开公式，使用了二阶泰勒展开：</p>
<p>把看成则，就可以看成，则：</p>
<p>公式(10.16)中：</p>
<p>为的一阶偏导数：</p>
<p>为的二阶偏导数：</p>
<p>则公式(10.14)可以转化为：</p>
<p>在这里，我们首先改进一棵树的定义 如下：</p>
<p>在 XGBoost 中，我们将复杂度定义为：</p>
<p>γ</p>
<p>则目标函数可以定义为：</p>
<p>很明显，是一个常数，可以用替代，对于目标函数无影响，则目标函数可以转换为：</p>
<p>其中定义是分配给第 个叶子的数据点的索引的集合。因为在同一叶子上，所有数据点的分数相同，所以在第二行中，我们更改了总和的索引。因此公式(10.23)等价于：</p>
<p>即：</p>
<p>我们可以通过定义，来进一步压缩表达式，则：</p>
<p>对求偏导，如果有一个给定的树的结构，那么在上式达到最小的情况下(即导数为0)，得到：</p>
<p>则：</p>
<p>并且得到相对应的最优目标函数值：</p>
<p>以图10-11为例：</p>
<p><img src="https://p.ipic.vip/ujpurh.png" alt="Image"></p>
<p>图10-11 决策树案例</p>
<p>根据已知的数据，得到相应的参数如图10-12：</p>
<p><img src="https://p.ipic.vip/qrqql2.png" alt="Image"></p>
<p>图10-12 决策树参数</p>
<p>图10-12的数据，，根据公式(10.30)，则：</p>
<p>$分数越小，代表这个树的结构越好。</p>
<p>在寻找最佳分割点时，使用一种完全搜索式的精确贪心算法(Exact Greedy Algorithm)。这种搜索算法会遍历一个特征上所有可能的分裂点，分别计算其损失减小量，然后选择最优的分裂点。精确贪心算法的流程见算法10.1。</p>
<table>
<thead>
<tr>
<th align="left">算法10.1精确贪心算法</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><img src="https://p.ipic.vip/5puvua.png" alt="Image"></td>
</tr>
</tbody></table>
<p>算法思路：</p>
<p>由于树的结构是未知的，而且也不可能去遍历所有的树结构。因此，XGBoost采用贪婪算法来分裂节点，从根节点开始，遍历所有属性，遍历属性的可能取值，计算复杂度是：决策树叶子节点数减去1。根据定义，记分到左、右子树的样本集为、，，则分裂该节点导致的损失减少值为：</p>
<p>即：</p>
<p>其中：为分割后左子树的分数，为分割后右子树的分数，为未分割的树的分数，为新叶子的正则化项，即加入新叶子节点引入的复杂度代价，我们希望找到一个属性以及其对应的大小，使得取值最大。</p>
<h3 id="10-5-3-XGBoost算法总结"><a href="#10-5-3-XGBoost算法总结" class="headerlink" title="10.5.3 XGBoost算法总结"></a>10.5.3 XGBoost算法总结</h3><p>XGBoost是算法竞赛中最热门的算法之一，它将GBDT的优化走向了一个极致：</p>
<p>(1) XGBoost生成CART树考虑了树的复杂度，GDBT未考虑，GDBT在树的剪枝步骤中考虑了树的复杂度。</p>
<p>(2) XGBoost是拟合上一轮损失函数的二阶导展开，GDBT是拟合上一轮损失函数的一阶导展开，因此，XGBoost的准确性更高，且满足相同的训练效果，需要的迭代次数更少。</p>
<p>(3) XGBoost与GDBT都是逐次迭代来提高模型性能，但是XGBoost在选取最佳分割点时可以开启多线程进行，大大提高了运行速度。当然，后续微软又出了LightGBM，在内存占用和运行速度上又做了不少优化，但是从算法本身来说，优化点则并没有比XGBoost多。</p>
<h2 id="XGBoost在地学中的应用及原理解析"><a href="#XGBoost在地学中的应用及原理解析" class="headerlink" title="XGBoost在地学中的应用及原理解析"></a>XGBoost在地学中的应用及原理解析</h2><h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><p><strong>XGBoost</strong>（eXtreme Gradient Boosting）是一种非常流行的机器学习算法，被广泛应用于数据分析和预测任务中。它之所以受到欢迎，是因为它能够有效地处理各种复杂的问题，并提供准确的预测结果，正被广泛运用于地学研究中。</p>
<h4 id="原理解析"><a href="#原理解析" class="headerlink" title="原理解析"></a>原理解析</h4><p><strong>核心原理</strong>：XGBoost的核心原理是在每一轮迭代中，根据之前弱分类器的表现来调整样本的权重，使得模型能够更加关注错误分类的样本，从而减少整体的误差。</p>
<p><img src="https://p.ipic.vip/wdwso5.png" alt="Image"></p>
<p><strong>举个例子</strong>：XGBoost的工作原理可以用一个简单的比喻来解释：就像训练一支强大的军队一样。初始时，我们有一些弱小的士兵（决策树），它们只能做出简单的决策。但通过反复训练和提升，我们能够让这些士兵逐渐变得更加聪明和强大。</p>
<p>此外，XGBoost使用了一种特殊的目标函数，即损失函数的二阶泰勒展开，并采用近似贪婪算法对损失函数进行近似计算，快速找到每次迭代中最优的分裂点，从而减少了计算复杂度。同时，XGBoost引入了正则化技术和并行计算技术，提高了泛化能力，加快了训练速度。</p>
<p><strong>优势与特点</strong></p>
<p><strong>（1）高准确性</strong>：XGBoost以弱分类器（决策树）为基础，通过迭代的方式逐步提升模型的性能。它能够有效地捕捉数据中的非线性关系，具有较低的偏差和较高的泛化能力，从而达到高准确性的预测结果。</p>
<p><strong>（2）特征工程的灵活性</strong>：XGBoost能够自动处理缺失值和异常值，并对特征进行有效的组合和选择。它提供了丰富的特征重要性评估指标，可以帮助用户识别最重要的特征，并进行特征工程的优化。</p>
<p><strong>（3）鲁棒性</strong>：XGBoost具有较强的鲁棒性，对于噪声和异常值具有一定的容错能力。它通过正则化技术和剪枝策略来控制模型的复杂度，避免过拟合现象，并提高模型的稳定性和泛化能力。</p>
<p><strong>（4）可解释性</strong>：XGBoost提供了丰富的模型解释能力，可以输出特征重要性排名、节点分裂方式和模型预测的解释，有助于用户理解模型的决策过程，并为业务问题提供可解释的结果。</p>
<h4 id="在地理学中典型的应用"><a href="#在地理学中典型的应用" class="headerlink" title="在地理学中典型的应用"></a>在地理学中典型的应用</h4><p><strong>（1）生态旅游适宜性评价</strong></p>
<p>参考文献：黄钦,谭翠,杨波.基于XGBoost算法的亚热带地区生态旅游适宜性评价方法研究[J&#x2F;OL].地球信息科学学报.</p>
<p><img src="https://p.ipic.vip/kp7cy0.png" alt="Image"></p>
<p><img src="https://p.ipic.vip/5q3c2w.png" alt="Image"></p>
<p><strong>（2）大气污染反演</strong></p>
<p>参考文献：胡占占,陈传法,胡保健.基于时空XGBoost的中国区域PM2.5浓度遥感反演[J].环境科学学报,2021,41(10).</p>
<p><img src="https://p.ipic.vip/98yvvg.png" alt="Image"></p>
<p><img src="https://p.ipic.vip/a2xpxj.png" alt="Image"></p>
<p><strong>（3）地灾风险分析</strong></p>
<p>参考文献：张福浩,朱月月,赵习枝等.地理因子支持下的滑坡隐患点空间分布特征及识别研究[J].武汉大学学报(信息科学版),2020,45(08).</p>
<p><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/gGz97SeibVTPFxDRyfcMPukdjsI3hwbibbHVPFamTWpahINzqcuXGBn32AeiczJYwBLy3aOXJdf4eBkzGAKzY8uKg/640?wx_fmt=png&wxfrom=5&wx_lazy=1&wx_co=1" alt="Image"></p>
<p><img src="https://p.ipic.vip/l6g3b8.png" alt="Image"></p>
<h2 id="LightGBM模型详解"><a href="#LightGBM模型详解" class="headerlink" title="LightGBM模型详解"></a>LightGBM模型详解</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">来源：数据科学与人工智能本文约4500字，建议阅读8分钟本文介绍了LightGBM的模型详解。</span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="https://www.showmeai.tech/article-detail/195">https://www.showmeai.tech/article-detail/195</a></p>
</blockquote>
<blockquote>
<p>之前 ShowMeAI 对强大的 boosting 模型工具 XGBoost 做了介绍 『XGBoost模型』详解，本篇我们来学习 GBDT模型 模型的另一个进化版本：LightGBM。</p>
</blockquote>
<p>LightGBM 是微软开发的 boosting 集成模型，和 XGBoost 一样是对 GBDT 的优化和高效实现，原理有一些相似之处，但它很多方面比 XGBoost 有着更为优秀的表现。官方给出的这个工具库模型的优势如下：</p>
<ul>
<li>更快的训练效率</li>
<li>低内存使用</li>
<li>更高的准确率</li>
<li>支持并行化学习</li>
<li>可处理大规模数据</li>
<li>支持直接使用category特征</li>
</ul>
<p>下图是一组实验数据，在这份实验中，LightGBM 比 XGBoost 快将近 10 倍，内存占用率大约为 XGBoost 的 1&#x2F;6，准确率也略有提升。</p>
<p><img src="https://p.ipic.vip/a01ixo.jpg" alt="Image"></p>
<h3 id="1-LightGBM动机"><a href="#1-LightGBM动机" class="headerlink" title="1. LightGBM动机"></a>1. LightGBM动机</h3><p>互联网领域的算法应用，通常背后都有海量的大数据。深度学习中一系列神经网络算法，都是以mini-batch的方式喂数据迭代训练的，总训练数据量不受内存限制。</p>
<p>但我们用到的机器学习算法，比如 GBDT在每一次迭代的时候，都需要遍历整个训练数据多次。</p>
<ul>
<li>如果把整个训练数据一次性装进内存，会明显限制训练数据的大小。</li>
<li>如果不装进内存，反复地读写训练数据又会消耗非常大的时间。</li>
</ul>
<p>面对工业级海量的数据，普通的 GBDT 算法无法满足需求。LightGBM 提出的主要原因之一，就是为了解决上述大数据量级下的 GBDT 训练问题，以便工业实践中能支撑大数据量并保证效率。</p>
<h3 id="2-XGBoost优缺点"><a href="#2-XGBoost优缺点" class="headerlink" title="2. XGBoost优缺点"></a>2. XGBoost优缺点</h3><p>我们之前介绍过强大的 XGBoost，但 XGBoost 也依旧存在一些缺点，LightGBM 针对其中的一部分进行了调整优化。XGB 优缺点归纳如下：</p>
<h4 id="1）精确贪心算法"><a href="#1）精确贪心算法" class="headerlink" title="1）精确贪心算法"></a>1）精确贪心算法</h4><p>轮迭代时，都需要遍历整个训练数据多次。如果把整个训练数据装进内存则会限制训练数据的大小；如果不装进内存，反复地读写训练数据又会消耗非常大的时间。</p>
<p><img src="https://p.ipic.vip/dalgsr.jpg" alt="Image"></p>
<ul>
<li>优点：可以找到精确的划分条件。</li>
<li>缺点：计算量巨大、内存占用巨大、易产生过拟合。</li>
</ul>
<h4 id="2）Level-wise生长方式"><a href="#2）Level-wise生长方式" class="headerlink" title="2）Level-wise生长方式"></a>2）Level-wise生长方式</h4><p><img src="https://p.ipic.vip/osnhyw.png" alt="Image"></p>
<p>XGBoost 采用 Level-wise 的增长策略：基于层进行生长，直到达到停止条件。这种增长策略方便并行计算每一层的分裂节点，提高了训练速度，但同时也因为节点增益过小增加了很多不必要的分裂，增加了计算量。</p>
<ul>
<li>优点：可以使用多线程、可以加速精确贪心算法。</li>
<li>缺点：效率低下，可能产生不必要的叶结点。</li>
</ul>
<h4 id="3）对cache优化不友好"><a href="#3）对cache优化不友好" class="headerlink" title="3）对cache优化不友好"></a>3）对cache优化不友好</h4><p>在预排序后，特征对梯度的访问是一种随机访问，并且不同的特征访问的顺序不一样，无法对 cache 进行优化。同时，在每一层长树的时候，需要随机访问一个行索引到叶子索引的数组，并且不同特征访问的顺序也不一样，也会造成较大的 cache miss。</p>
<h3 id="3-LightGBM优化点"><a href="#3-LightGBM优化点" class="headerlink" title="3.LightGBM优化点"></a>3.LightGBM优化点</h3><p><img src="https://p.ipic.vip/je9ku4.png" alt="Image"></p>
<p>上个部分其实也是 LightGBM 作者们，构建新算法时着重优化的点。概括来说，LightGBM 主要有以下特点：</p>
<ul>
<li>基于 Histogram 的决策树算法</li>
<li>带深度限制的 Leaf-wise 的叶子生长策略</li>
<li>直方图做差加速</li>
<li>直接支持类别特征（Categorical Feature）</li>
<li>Cache 命中率优化</li>
<li>基于直方图的稀疏特征优化</li>
<li>多线程优化</li>
</ul>
<h3 id="4-决策树算法"><a href="#4-决策树算法" class="headerlink" title="4.决策树算法"></a>4.决策树算法</h3><h4 id="1）XGBoost：Pre-sorted算法"><a href="#1）XGBoost：Pre-sorted算法" class="headerlink" title="1）XGBoost：Pre-sorted算法"></a>1）XGBoost：Pre-sorted算法</h4><p>XGBoost 使用的是 Pre-sorted 算法，能够更精确的找到数据分隔点。</p>
<ul>
<li>首先，对所有特征按数值进行预排序。</li>
<li>其次，在每次的样本分割时，用 O(#data) 的代价找到每个特征的最优分割点。</li>
<li>最后，找到最后的特征以及分割点，将数据分裂成左右两个子节点。</li>
</ul>
<p>这种 pre-sorting 算法能够准确找到分裂点，但是在空间和时间上有很大的开销。</p>
<ul>
<li>由于需要对特征进行预排序并且需要保存排序后的索引值（为了后续快速的计算分裂点），因此内存需要训练数据的两倍。</li>
<li>在遍历每一个分割点的时候，都需要进行分裂增益的计算，消耗的代价大。</li>
</ul>
<h4 id="2）LightGBM：直方图算法"><a href="#2）LightGBM：直方图算法" class="headerlink" title="2）LightGBM：直方图算法"></a>2）LightGBM：直方图算法</h4><p><img src="https://p.ipic.vip/agl4sn.png" alt="Image"></p>
<p>LightGBM 使用的是直方图算法（histogram algorithm），占用的内存更低，数据分割的复杂度更低。直方图算法思想是：</p>
<ul>
<li>将连续的浮点特征离散成 k 个离散值，并构造宽度为 k 的 Histogram。</li>
<li>遍历训练数据，统计每个离散值在直方图中的累计统计量。</li>
<li>在进行特征选择时，只需要根据直方图的离散值，遍历寻找最优的分割点。</li>
</ul>
<p><strong>（1）内存优化</strong></p>
<p><img src="https://p.ipic.vip/laixus.png" alt="Image"></p>
<p>直方图算法可以很大程度降低内存消耗，它不仅不需要额外存储预排序的结果，还可以只保存特征离散化后的值（一般用8位整型存储就足够了）。</p>
<p>如图所示，用8位整型存储，内存消耗可以降低为原来的1&#x2F;8。</p>
<p><strong>（2）计算量优化</strong></p>
<p>应用直方图算法，计算代价也大幅降低，预排序算法每遍历一个特征值就需要计算一次分裂的增益，而直方图算法只需要计算 k 次（k可以认为是常数），时间复杂度从 O(#data*#feature) 直接优化到 O(k#*features)。</p>
<p><strong>（3）注意点</strong></p>
<p><img src="https://p.ipic.vip/96l3vt.png" alt="Image"></p>
<p>直方图算法的理解和注意点如下：</p>
<ul>
<li>使用分桶 bin 替代原始数据相当于增加了正则化。</li>
<li>使用分桶 bin 意味着很多数据的细节特征丢失，相似的数据如果划分到相同的桶中，数据之间的差异就无法捕获了。</li>
<li>分桶 bin 数量决定了正则化的程度， bin 越少惩罚越严重，欠拟合风险越高。</li>
<li>因为预先设定了 bin 的范围，构建直方图时不需要对数据进行排序。</li>
<li>直方图保存『划分阈值』、『当前bin内样本数』、『当前bin内所有样本的一阶梯度和』。</li>
<li>阈值的选取是按照直方图从小到大遍历，使用了上面的一阶梯度和，目的是得到划分之后△loss最大的特征及阈值。</li>
</ul>
<h3 id=""><a href="#" class="headerlink" title=""></a></h3><p><strong>（4）直方图算法优缺点</strong></p>
<ul>
<li>Histogram算法并不是完美的。由于特征被离散化后，找到的并不是很精确的分割点，所以会对结果产生影响。但在实际的数据集上表明，离散化的分裂点对最终的精度影响并不大，甚至会好一些。原因在于decision tree本身就是一个弱学习器，采用Histogram算法会起到正则化的效果，有效地防止模型的过拟合。</li>
<li>时间上的开销由原来的O(#data*#features)降到O(k*#features)。由于离散化，#bin远小于#data，因此时间上有很大的提升。</li>
</ul>
<p>Histogram 算法还可以进一步加速。一个叶子节点的 Histogram 可以直接由父节点的 Histogram 和兄弟节点的 Histogram 做差得到。一般情况下，构造 Histogram 需要遍历该叶子上的所有数据，通过该方法，只需要遍历 Histogram 的 k 个捅。速度提升了一倍。</p>
<h3 id="5-决策树生长策略"><a href="#5-决策树生长策略" class="headerlink" title="5.决策树生长策略"></a>5.决策树生长策略</h3><h4 id="1）树生长策略调整"><a href="#1）树生长策略调整" class="headerlink" title="1）树生长策略调整"></a>1）树生长策略调整</h4><p>直方图算法之上，LightGBM 进行进一步的优化。它没有使用大多数GBDT工具使用的按层生长（Level-wise）的决策树生长策略，而使用了带有深度限制的按叶子生长（Leaf-wise）算法。</p>
<p><img src="https://p.ipic.vip/mz3bt4.png" alt="Image"></p>
<h4 id="2）XGBoost：Level-wise"><a href="#2）XGBoost：Level-wise" class="headerlink" title="2）XGBoost：Level-wise"></a>2）XGBoost：Level-wise</h4><p>XGBoost采用的是Level-wise（按层生长）策略生长的，能够同时分裂同一层的叶子，从而进行多线程优化，不容易过拟合。</p>
<p>但不加区分的对待同一层的叶子，带来了很多没必要的开销。因为实际上很多叶子的分裂增益较低，没必要进行搜索和分裂。</p>
<h4 id="3）LightGBM：Leaf-wise"><a href="#3）LightGBM：Leaf-wise" class="headerlink" title="3）LightGBM：Leaf-wise"></a>3）LightGBM：Leaf-wise</h4><p>LightGBM采用Leaf-wise（按叶子生长）生长策略，每次从当前所有叶子中找到分裂增益最大（一般也是数据量最大）的一个叶子，然后分裂，如此循环。</p>
<p><img src="https://p.ipic.vip/zkhxd6.png" alt="Image"></p>
<p>同Level-wise相比，在分裂次数相同的情况下，Leaf-wise可以降低更多的误差，得到更好的精度。Leaf-wise的缺点是可能会长出比较深的决策树，产生过拟合。因此LightGBM在Leaf-wise之上增加了一个最大深度的限制，在保证高效率的同时防止过拟合。</p>
<h3 id="6-直方图差加速"><a href="#6-直方图差加速" class="headerlink" title="6.直方图差加速"></a>6.直方图差加速</h3><p>LightGBM 另一个优化是 Histogram（直方图）做差加速。整个构建过程中可以观察到：一个叶子的直方图可以由它的父亲节点的直方图与它兄弟的直方图做差得到。</p>
<p><img src="https://p.ipic.vip/ctynpx.png" alt="Image"></p>
<p>一般来说构造直方图，需要遍历该叶子上的所有数据，但直方图做差仅需遍历直方图的 k 个桶。利用上述特征，LightGBM 可以在构造一个叶子的直方图后，可以用非常微小的代价得到它兄弟叶子的直方图，在速度上可以提升一倍。</p>
<h3 id="7-类别型特征支持"><a href="#7-类别型特征支持" class="headerlink" title="7.类别型特征支持"></a>7.类别型特征支持</h3><p>大多数机器学习工具都无法直接支持类别型特征，我们会先将其编码再做后续建模，如果使用 one-hot 这种编码方式还会降低空间和时间效率。</p>
<p>LightGBM优化了对类别型特征的支持，可以直接输入类别特征，不需要额外的编码或 one-hot 0&#x2F;1 展开。并在决策树算法上增加了类别型特征的决策规则。</p>
<h4 id="1）树模型与one-hot编码"><a href="#1）树模型与one-hot编码" class="headerlink" title="1）树模型与one-hot编码"></a>1）树模型与one-hot编码</h4><p>one-hot 编码是处理类别特征的一个通用方法，然而在树模型中，这可能并不一定是一个好的方法，尤其当类别特征中类别个数很多的情况下，主要的问题是：</p>
<p><strong>问题1：可能无法在这个类别特征上进行切分。</strong></p>
<p>使用one-hot编码的话，意味着在每一个决策节点上只能使用one vs rest（例如是不是男性，是不是一线城市等）的切分方式。当类别值很多时，每个类别上的数据可能会比较少，这时候切分会产生不平衡，这意味着切分增益也会很小。</p>
<p><strong>问题2：影响决策树的学习。</strong></p>
<p>就算可以在这个类别特征进行切分，也会把数据切分到很多零碎的小空间上，如下左图所示。而决策树学习时利用的是统计信息，在这些数据量小的空间上，统计信息不准确，学习会变差。但如果使用下右图的分裂方式，数据会被切分到两个比较大的空间，进一步的学习也会更好。</p>
<p><img src="https://p.ipic.vip/pjr30s.png" alt="Image"></p>
<p>圈中的数值表示该结点内的数据。右图中叶子节点 X&#x3D;A || X&#x3D;C 的含义是 X&#x3D;A 或者 X&#x3D;C 放到左孩子，其余放到右孩子。</p>
<h4 id="2）LightGBM类别型特征处理方式"><a href="#2）LightGBM类别型特征处理方式" class="headerlink" title="2）LightGBM类别型特征处理方式"></a>2）LightGBM类别型特征处理方式</h4><p>LightGBM 采用了 Many vs Many 的切分方式解决 one-hot 编码带来的问题，实现了类别特征的最优切分。用LightGBM可以直</p>
<p>接输入类别特征，并产生上右图的效果。在 1 个 维的类别特征中寻找最优切分，朴素的枚举算法的复杂度是 ，而 LightGBM 采用了如 On Grouping For Maximum Homogeneity 的方法实现了 的算法。</p>
<p>算法流程如图所示：</p>
<p><img src="https://p.ipic.vip/0jv36d.png" alt="Image"></p>
<ul>
<li>①在枚举分割点之前，先把直方图按每个类别的均值进行排序。</li>
<li>②接着按照均值的结果依次枚举最优分割点。</li>
</ul>
<p>从下图可以看到，Sum(y)&#x2F;Count(y)为类别的均值。当然，这个方法很容易过拟合，所以在 LightGBM中 加入了很多对这个方法的约束和正则化。</p>
<p><img src="https://p.ipic.vip/mgsydm.png" alt="Image"></p>
<p>求解类别型特征的最优切分的具体流程如下：</p>
<p>① 离散特征建立直方图的过程</p>
<p>统计该特征下每一种离散值出现的次数，并从高到低排序，并过滤掉出现次数较少的特征值。然后为每一个特征值，建立一个 bin 容器，对于在bin容器内出现次数较少的特征值直接过滤掉，不建立 bin 容器。</p>
<p>② 计算分裂阈值的过程</p>
<ul>
<li>先看该特征下划分出的 bin 容器的个数，如果 bin 容器的数量小于4，直接使用 one vs other 方式，逐个扫描每一个 bin 容器，找出最佳分裂点。</li>
<li>对于 bin 容器较多的情况，先进行过滤，只让子集合较大的 bin 容器参加划分阈值计算，对每一个符合条件的bin容器进行公式计算，得到一个值，根据该值对 bin 容器从小到大进行排序，然后分从左到右、从右到左进行搜索，得到最优分裂阈值。公式如下：</li>
</ul>
<p>这里为什么不是 label 的均值呢？其实上例中只是为了便于理解，只针对了学习一棵树且是回归问题的情况。这时候一阶导数是 ，二阶导数是 ），</p>
<ul>
<li><p>没有搜索所有的 bin 容器，而是设定了一个搜索 bin 容器数量的上限值，程序中设定是 ，即参数 <code>max_num_cat</code>。</p>
</li>
<li><p>LightGBM 中对离散特征实行的是 many vs many 策略，这32个 bin 中最优划分的阈值的左边或者右边所有的 bin 容器就是一个 many集合，而其他的 bin 容器就是另一个 many 集合。</p>
</li>
</ul>
<p>③ 对于连续特征，划分阈值只有一个。对于离散值可能会有多个划分阈值，每一个划分阈值对应着一个bin容器编号。</p>
<p>当使用离散特征进行分裂时，只要数据样本对应的 bin 容器编号在这些阈值对应的 bin 集合之中，这条数据就加入分裂后的左子树，否则加入分裂后的右子树。</p>
<h3 id="8-并行支持与优化"><a href="#8-并行支持与优化" class="headerlink" title="8.并行支持与优化"></a>8.并行支持与优化</h3><p>LightGBM 原生支持并行学习，目前支持『特征并行』和『数据并行』的两种，LightGBM 针对这两种并行方法都做了优化。</p>
<ul>
<li>特征并行：在不同机器在不同的特征集合上分别寻找最优的分割点，然后在机器间同步最优的分割点。</li>
<li>数据并行：让不同的机器先在本地构造直方图，然后进行全局的合并，最后在合并的直方图上面寻找最优分割点。</li>
</ul>
<h4 id="1）特征并行"><a href="#1）特征并行" class="headerlink" title="1）特征并行"></a>1）特征并行</h4><p><img src="https://p.ipic.vip/kn5sqf.png" alt="Image"></p>
<p>LightGBM 在特征并行算法中，通过在本地保存全部数据避免对数据切分结果的通信。</p>
<h4 id="2）数据并行"><a href="#2）数据并行" class="headerlink" title="2）数据并行"></a>2）数据并行</h4><p>Lightgbm 在数据并行中使用分散规约（Reduce scatter）把直方图合并的任务分摊到不同的机器，降低通信和计算，并利用直方图做差，进一步减少了一半的通信量。</p>
<p><img src="https://p.ipic.vip/tv12nm.png" alt="Image"></p>
<p>基于投票的数据并行则进一步优化数据并行中的通信代价，使通信代价变成常数级别。在数据量很大的时候，使用投票并行可以得到非常好的加速效果。</p>
<p><img src="https://p.ipic.vip/sy8um3.png" alt="Image"></p>
<h2 id="注意力机制"><a href="#注意力机制" class="headerlink" title="注意力机制"></a>注意力机制</h2><p>在整个注意力过程中，模型会学习了三个权重:查询、键和值。查询、键和值的思想来源于信息检索系统。所以我们先理解数据库查询的思想。</p>
<p>假设有一个数据库，里面有所有一些作家和他们的书籍信息。现在我想读一些Rabindranath写的书：</p>
<p><img src="https://p.ipic.vip/ujvm4n.png" alt="Image"></p>
<p>在数据库中，作者名字类似于键，图书类似于值。查询的关键词Rabindranath是这个问题的键。所以需要计算查询和数据库的键(数据库中的所有作者)之间的相似度，然后返回最相似作者的值(书籍)。</p>
<p>同样，注意力有三个矩阵，分别是查询矩阵(Q)、键矩阵(K)和值矩阵(V)。它们中的每一个都具有与输入嵌入相同的维数。模型在训练中学习这些度量的值。</p>
<p>我们可以假设我们从每个单词中创建一个向量，这样我们就可以处理信息。对于每个单词，生成一个512维的向量。所有3个矩阵都是512x512(因为单词嵌入的维度是512)。对于每个标记嵌入，我们将其与所有三个矩阵(Q, K, V)相乘，每个标记将有3个长度为512的中间向量。</p>
<p><img src="https://p.ipic.vip/pe82gy.png" alt="Image"></p>
<p>接下来计算分数，它是查询和键向量之间的点积。分数决定了当我们在某个位置编码单词时，对输入句子的其他部分的关注程度。</p>
<p>然后将点积除以关键向量维数的平方根。这种缩放是为了防止点积变得太大或太小(取决于正值或负值)，因为这可能导致训练期间的数值不稳定。选择比例因子是为了确保点积的方差近似等于1。</p>
<p>然后通过softmax操作传递结果。这将分数标准化：它们都是正的，并且加起来等于1。softmax输出决定了我们应该从不同的单词中获取多少信息或特征(值)，也就是在计算权重。</p>
<p>这里需要注意的一点是，为什么需要其他单词的信息&#x2F;特征？因为我们的语言是有上下文含义的，一个相同的单词出现在不同的语境，含义也不一样。</p>
<p>最后一步就是计算softmax与这些值的乘积，并将它们相加。</p>
<h4 id="可视化图解"><a href="#可视化图解" class="headerlink" title="可视化图解"></a>可视化图解</h4><p>上面逻辑都是文字内容，看起来有一些枯燥，下面我们可视化它的矢量化实现。这样可以更加深入的理解。</p>
<p>查询键和矩阵的计算方法如下</p>
<p><img src="https://p.ipic.vip/sj5j8r.png" alt="Image"></p>
<p>同样的方法可以计算键向量和值向量。</p>
<p><img src="https://p.ipic.vip/mqod9w.png" alt="Image"><img src="https://p.ipic.vip/inrqt1.png" alt="Image"></p>
<p>最后计算得分和注意力输出。</p>
<p>![Image](data:image&#x2F;svg+xml,%3C%3Fxml version&#x3D;’1.0’ encoding&#x3D;’UTF-8’%3F%3E%3Csvg width&#x3D;’1px’ height&#x3D;’1px’ viewBox&#x3D;’0 0 1 1’ version&#x3D;’1.1’ xmlns&#x3D;’<a href="http://www.w3.org/2000/svg&#39;">http://www.w3.org/2000/svg&#39;</a> xmlns:xlink&#x3D;’<a href="http://www.w3.org/1999/xlink&#39;%3E%3Ctitle%3E%3C/title%3E%3Cg">http://www.w3.org/1999/xlink&#39;%3E%3Ctitle%3E%3C/title%3E%3Cg</a> stroke&#x3D;’none’ stroke-width&#x3D;’1’ fill&#x3D;’none’ fill-rule&#x3D;’evenodd’ fill-opacity&#x3D;’0’%3E%3Cg transform&#x3D;’translate(-249.000000, -126.000000)’ fill&#x3D;’%23FFFFFF’%3E%3Crect x&#x3D;’249’ y&#x3D;’126’ width&#x3D;’1’ height&#x3D;’1’%3E%3C&#x2F;rect%3E%3C&#x2F;g%3E%3C&#x2F;g%3E%3C&#x2F;svg%3E)</p>
<h4 id="简单代码实现"><a href="#简单代码实现" class="headerlink" title="简单代码实现"></a>简单代码实现</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"> <span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"> <span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">List</span></span><br><span class="line"> </span><br><span class="line"> <span class="keyword">def</span> <span class="title function_">get_input_embeddings</span>(<span class="params">words: <span class="type">List</span>[<span class="built_in">str</span>], embeddings_dim: <span class="built_in">int</span></span>):</span><br><span class="line">     <span class="comment"># we are creating random vector of embeddings_dim size for each words</span></span><br><span class="line">     <span class="comment"># normally we train a tokenizer to get the embeddings.</span></span><br><span class="line">     <span class="comment"># check the blog on tokenizer to learn about this part</span></span><br><span class="line">     embeddings = [torch.randn(embeddings_dim) <span class="keyword">for</span> word <span class="keyword">in</span> words]</span><br><span class="line">     <span class="keyword">return</span> embeddings</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> text = <span class="string">&quot;I should sleep now&quot;</span></span><br><span class="line"> words = text.split(<span class="string">&quot; &quot;</span>)</span><br><span class="line"> <span class="built_in">len</span>(words) <span class="comment"># 4</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> embeddings_dim = <span class="number">512</span> <span class="comment"># 512 dim because the original paper uses it. we can use other dim also</span></span><br><span class="line"> embeddings = get_input_embeddings(words, embeddings_dim=embeddings_dim)</span><br><span class="line"> embeddings[<span class="number">0</span>].shape <span class="comment"># torch.Size([512])</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> <span class="comment"># initialize the query, key and value metrices</span></span><br><span class="line"> query_matrix = nn.Linear(embeddings_dim, embeddings_dim)</span><br><span class="line"> key_matrix = nn.Linear(embeddings_dim, embeddings_dim)</span><br><span class="line"> value_matrix = nn.Linear(embeddings_dim, embeddings_dim)</span><br><span class="line"> query_matrix.weight.shape, key_matrix.weight.shape, value_matrix.weight.shape <span class="comment"># torch.Size([512, 512]), torch.Size([512, 512]), torch.Size([512, 512])</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> <span class="comment"># query, key and value vectors computation for each words embeddings</span></span><br><span class="line"> query_vectors = torch.stack([query_matrix(embedding) <span class="keyword">for</span> embedding <span class="keyword">in</span> embeddings])</span><br><span class="line"> key_vectors = torch.stack([key_matrix(embedding) <span class="keyword">for</span> embedding <span class="keyword">in</span> embeddings])</span><br><span class="line"> value_vectors = torch.stack([value_matrix(embedding) <span class="keyword">for</span> embedding <span class="keyword">in</span> embeddings])</span><br><span class="line"> query_vectors.shape, key_vectors.shape, value_vectors.shape <span class="comment"># torch.Size([4, 512]), torch.Size([4, 512]), torch.Size([4, 512])</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> <span class="comment"># compute the score</span></span><br><span class="line"> scores = torch.matmul(query_vectors, key_vectors.transpose(-<span class="number">2</span>, -<span class="number">1</span>)) / torch.sqrt(torch.tensor(embeddings_dim, dtype=torch.float32))</span><br><span class="line"> scores.shape <span class="comment"># torch.Size([4, 4])</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> <span class="comment"># compute the attention weights for each of the words with the other words</span></span><br><span class="line"> softmax = nn.Softmax(dim=-<span class="number">1</span>)</span><br><span class="line"> attention_weights = softmax(scores)</span><br><span class="line"> attention_weights.shape <span class="comment"># torch.Size([4, 4])</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> <span class="comment"># attention output</span></span><br><span class="line"> output = torch.matmul(attention_weights, value_vectors)</span><br><span class="line"> output.shape <span class="comment"># torch.Size([4, 512])</span></span><br></pre></td></tr></table></figure>



<p>以上代码只是为了展示注意力机制的实现，并未优化。</p>
<h4 id="多头注意力"><a href="#多头注意力" class="headerlink" title="多头注意力"></a>多头注意力</h4><p>上面提到的注意力是单头注意力，在原论文中有8个头。对于多头和单多头注意力计算相同，只是查询(q0-q3)，键(k0-k3)，值(v0-v3)中间向量会有一些区别。</p>
<p><img src="https://p.ipic.vip/333ts2.png" alt="Image"></p>
<p>之后将查询向量分成相等的部分（有多少头就分成多少）。在上图中有8个头，查询，键和值向量的维度为512。所以就变为了8个64维的向量。</p>
<p>把前64个向量放到第一个头，第二组向量放到第二个头，以此类推。在上面的图片中，我只展示了第一个头的计算。</p>
<p><strong>这里需要注意的是：不同的框架有不同的实现方法，pytorch官方的实现是上面这种，但是tf和一些第三方的代码中是将每个头分开计算了</strong>，比如8个头会使用8个linear（tf的dense）而不是一个大linear再拆解。还记得Pytorch的transformer里面要求emb_dim能被num_heads整除吗，就是因为这个。</p>
<p><strong>使用哪种方式都可以，因为最终的结果都类似影响不大。</strong></p>
<p>当我们在一个head中有了小查询、键和值(64 dim的)之后，计算剩下的逻辑与单个head注意相同。最后得到的64维的向量来自每个头。</p>
<p>我们将每个头的64个输出组合起来，得到最后的512个dim输出向量。</p>
<p><img src="https://p.ipic.vip/041u5l.png" alt="Image"></p>
<p>多头注意力可以表示数据中的复杂关系。每个头都能学习不同的模式。多个头还提供了同时处理输入表示的不同子空间(本例：64个向量表示512个原始向量)的能力。</p>
<h4 id="多头注意代码实现"><a href="#多头注意代码实现" class="headerlink" title="多头注意代码实现"></a>多头注意代码实现</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">num_heads = <span class="number">8</span></span><br><span class="line"> <span class="comment"># batch dim is 1 since we are processing one text.</span></span><br><span class="line"> batch_size = <span class="number">1</span></span><br><span class="line"> </span><br><span class="line"> text = <span class="string">&quot;I should sleep now&quot;</span></span><br><span class="line"> words = text.split(<span class="string">&quot; &quot;</span>)</span><br><span class="line"> <span class="built_in">len</span>(words) <span class="comment"># 4</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> embeddings_dim = <span class="number">512</span></span><br><span class="line"> embeddings = get_input_embeddings(words, embeddings_dim=embeddings_dim)</span><br><span class="line"> embeddings[<span class="number">0</span>].shape <span class="comment"># torch.Size([512])</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> <span class="comment"># initialize the query, key and value metrices</span></span><br><span class="line"> query_matrix = nn.Linear(embeddings_dim, embeddings_dim)</span><br><span class="line"> key_matrix = nn.Linear(embeddings_dim, embeddings_dim)</span><br><span class="line"> value_matrix = nn.Linear(embeddings_dim, embeddings_dim)</span><br><span class="line"> query_matrix.weight.shape, key_matrix.weight.shape, value_matrix.weight.shape <span class="comment"># torch.Size([512, 512]), torch.Size([512, 512]), torch.Size([512, 512])</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> <span class="comment"># query, key and value vectors computation for each words embeddings</span></span><br><span class="line"> query_vectors = torch.stack([query_matrix(embedding) <span class="keyword">for</span> embedding <span class="keyword">in</span> embeddings])</span><br><span class="line"> key_vectors = torch.stack([key_matrix(embedding) <span class="keyword">for</span> embedding <span class="keyword">in</span> embeddings])</span><br><span class="line"> value_vectors = torch.stack([value_matrix(embedding) <span class="keyword">for</span> embedding <span class="keyword">in</span> embeddings])</span><br><span class="line"> query_vectors.shape, key_vectors.shape, value_vectors.shape <span class="comment"># torch.Size([4, 512]), torch.Size([4, 512]), torch.Size([4, 512])</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> <span class="comment"># (batch_size, num_heads, seq_len, embeddings_dim)</span></span><br><span class="line"> query_vectors_view = query_vectors.view(batch_size, -<span class="number">1</span>, num_heads, embeddings_dim//num_heads).transpose(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"> key_vectors_view = key_vectors.view(batch_size, -<span class="number">1</span>, num_heads, embeddings_dim//num_heads).transpose(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"> value_vectors_view = value_vectors.view(batch_size, -<span class="number">1</span>, num_heads, embeddings_dim//num_heads).transpose(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"> query_vectors_view.shape, key_vectors_view.shape, value_vectors_view.shape</span><br><span class="line"> <span class="comment"># torch.Size([1, 8, 4, 64]),</span></span><br><span class="line"> <span class="comment"># torch.Size([1, 8, 4, 64]),</span></span><br><span class="line"> <span class="comment"># torch.Size([1, 8, 4, 64])</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> <span class="comment"># We are splitting the each vectors into 8 heads.</span></span><br><span class="line"> <span class="comment"># Assuming we have one text (batch size of 1), So we split</span></span><br><span class="line"> <span class="comment"># the embedding vectors also into 8 parts. Each head will</span></span><br><span class="line"> <span class="comment"># take these parts. If we do this one head at a time.</span></span><br><span class="line"> head1_query_vector = query_vectors_view[<span class="number">0</span>, <span class="number">0</span>, ...]</span><br><span class="line"> head1_key_vector = key_vectors_view[<span class="number">0</span>, <span class="number">0</span>, ...]</span><br><span class="line"> head1_value_vector = value_vectors_view[<span class="number">0</span>, <span class="number">0</span>, ...]</span><br><span class="line"> head1_query_vector.shape, head1_key_vector.shape, head1_value_vector.shape</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> <span class="comment"># The above vectors are of same size as before only the feature dim is changed from 512 to 64</span></span><br><span class="line"> <span class="comment"># compute the score</span></span><br><span class="line"> scores_head1 = torch.matmul(head1_query_vector, head1_key_vector.permute(<span class="number">1</span>, <span class="number">0</span>)) / torch.sqrt(torch.tensor(embeddings_dim//num_heads, dtype=torch.float32))</span><br><span class="line"> scores_head1.shape <span class="comment"># torch.Size([4, 4])</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> <span class="comment"># compute the attention weights for each of the words with the other words</span></span><br><span class="line"> softmax = nn.Softmax(dim=-<span class="number">1</span>)</span><br><span class="line"> attention_weights_head1 = softmax(scores_head1)</span><br><span class="line"> attention_weights_head1.shape <span class="comment"># torch.Size([4, 4])</span></span><br><span class="line"> </span><br><span class="line"> output_head1 = torch.matmul(attention_weights_head1, head1_value_vector)</span><br><span class="line"> output_head1.shape <span class="comment"># torch.Size([4, 512])</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> <span class="comment"># we can compute the output for all the heads</span></span><br><span class="line"> outputs = []</span><br><span class="line"> <span class="keyword">for</span> head_idx <span class="keyword">in</span> <span class="built_in">range</span>(num_heads):</span><br><span class="line">     head_idx_query_vector = query_vectors_view[<span class="number">0</span>, head_idx, ...]</span><br><span class="line">     head_idx_key_vector = key_vectors_view[<span class="number">0</span>, head_idx, ...]</span><br><span class="line">     head_idx_value_vector = value_vectors_view[<span class="number">0</span>, head_idx, ...]</span><br><span class="line">     scores_head_idx = torch.matmul(head_idx_query_vector, head_idx_key_vector.permute(<span class="number">1</span>, <span class="number">0</span>)) / torch.sqrt(torch.tensor(embeddings_dim//num_heads, dtype=torch.float32))</span><br><span class="line"> </span><br><span class="line">     softmax = nn.Softmax(dim=-<span class="number">1</span>)</span><br><span class="line">     attention_weights_idx = softmax(scores_head_idx)</span><br><span class="line">     output = torch.matmul(attention_weights_idx, head_idx_value_vector)</span><br><span class="line">     outputs.append(output)</span><br><span class="line"> </span><br><span class="line"> [out.shape <span class="keyword">for</span> out <span class="keyword">in</span> outputs]</span><br><span class="line"> <span class="comment"># [torch.Size([4, 64]),</span></span><br><span class="line"> <span class="comment"># torch.Size([4, 64]),</span></span><br><span class="line"> <span class="comment"># torch.Size([4, 64]),</span></span><br><span class="line"> <span class="comment"># torch.Size([4, 64]),</span></span><br><span class="line"> <span class="comment"># torch.Size([4, 64]),</span></span><br><span class="line"> <span class="comment"># torch.Size([4, 64]),</span></span><br><span class="line"> <span class="comment"># torch.Size([4, 64]),</span></span><br><span class="line"> <span class="comment"># torch.Size([4, 64])]</span></span><br><span class="line"> </span><br><span class="line"> <span class="comment"># stack the result from each heads for the corresponding words</span></span><br><span class="line"> word0_outputs = torch.cat([out[<span class="number">0</span>] <span class="keyword">for</span> out <span class="keyword">in</span> outputs])</span><br><span class="line"> word0_outputs.shape</span><br><span class="line"> </span><br><span class="line"> <span class="comment"># lets do it for all the words</span></span><br><span class="line"> attn_outputs = []</span><br><span class="line"> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(words)):</span><br><span class="line">     attn_output = torch.cat([out[i] <span class="keyword">for</span> out <span class="keyword">in</span> outputs])</span><br><span class="line">     attn_outputs.append(attn_output)</span><br><span class="line"> [attn_output.shape <span class="keyword">for</span> attn_output <span class="keyword">in</span> attn_outputs] <span class="comment"># [torch.Size([512]), torch.Size([512]), torch.Size([512]), torch.Size([512])]</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> <span class="comment"># Now lets do it in vectorize way.</span></span><br><span class="line"> <span class="comment"># We can not permute the last two dimension of the key vector.</span></span><br><span class="line"> key_vectors_view.permute(<span class="number">0</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>).shape <span class="comment"># torch.Size([1, 8, 64, 4])</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> <span class="comment"># Transpose the key vector on the last dim</span></span><br><span class="line"> score = torch.matmul(query_vectors_view, key_vectors_view.permute(<span class="number">0</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>)) <span class="comment"># Q*k</span></span><br><span class="line"> score = torch.softmax(score, dim=-<span class="number">1</span>)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> <span class="comment"># reshape the results</span></span><br><span class="line"> attention_results = torch.matmul(score, value_vectors_view)</span><br><span class="line"> attention_results.shape <span class="comment"># [1, 8, 4, 64]</span></span><br><span class="line"> </span><br><span class="line"> <span class="comment"># merge the results</span></span><br><span class="line"> attention_results = attention_results.permute(<span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">3</span>).contiguous().view(batch_size, -<span class="number">1</span>, embeddings_dim)</span><br><span class="line"> attention_results.shape <span class="comment"># torch.Size([1, 4, 512])</span></span><br></pre></td></tr></table></figure>



<h4 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h4><p>注意力机制（attention  mechanism）是Transformer模型中的重要组成部分。Transformer是一种基于自注意力机制（self-attention）的神经网络模型，广泛应用于自然语言处理任务，如机器翻译、文本生成和语言模型等。本文介绍的自注意力机制是Transformer模型的基础，在此基础之上衍生发展出了各种不同的更加高效的注意力机制，所以深入了解自注意力机制，将能够更好地理解Transformer模型的设计原理和工作机制，以及如何在具体的各种任务中应用和调整模型。这将有助于你更有效地使用Transformer模型并进行相关研究和开发。</p>
<p>最后有兴趣的可以看看这个，它里面包含了pytorch的transformer的完整实现:</p>
<p><a href="https://www.kaggle.com/code/hengck23/lb-0-67-one-pytorch-transformer-solution">https://www.kaggle.com/code/hengck23/lb-0-67-one-pytorch-transformer-solution</a></p>
<p>作者：Souvik Mandal</p>
]]></content>
      <categories>
        <category>Recharge</category>
      </categories>
  </entry>
  <entry>
    <title>MIT Deep Learning course</title>
    <url>/2022/05/01/Recharge/MIT%20Deep%20Learning%20course/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><span style="color:green"><strong>Need the access to YouTube</strong></span></p>
<h2 id="MIT-Introduction-to-Deep-Learning-Alexander-Amini"><a href="#MIT-Introduction-to-Deep-Learning-Alexander-Amini" class="headerlink" title="MIT Introduction to Deep Learning | Alexander Amini"></a>MIT Introduction to Deep Learning | Alexander Amini</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/7sB052Pz0sQ" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<br/>



]]></content>
      <categories>
        <category>Recharge</category>
      </categories>
  </entry>
  <entry>
    <title>Six of the most useful ML algorithms</title>
    <url>/2023/05/01/Recharge/Six%20of%20the%20most%20useful%20ML%20algorithms/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>来源: <a href="https://read.deeplearning.ai/the-batch/issue-146/">https://read.deeplearning.ai/the-batch/issue-146/</a></strong></p>
<p><em>Dear friends,</em></p>
<p><em>Years ago, I had to choose between a neural network and a decision tree learning algorithm. It was necessary to pick an efficient one, because we planned to apply the algorithm to a very large set of users on a limited compute budget. I went with a neural network. I hadn’t used boosted decision trees in a while, and I thought they required more computation than they actually do — so I made a bad call. Fortunately, my team quickly revised my decision, and the project was successful.</em></p>
<p><em>This experience was a lesson in the importance of learning, and continually refreshing, foundational knowledge. If I had refreshed my familiarity with boosted trees, I would have made a better decision.</em></p>
<p><em>Machine learning, like many technical fields, evolves as the community of researchers builds on top of one another’s work. Some contributions have staying power and become the basis of further developments. Consequently, everything from a housing-price predictor to a text-to-image generator is built on core ideas that include algorithms (linear and logistic regression, decision trees, and so on) and concepts (regularization, optimizing a loss function, bias&#x2F;variance, and the like).</em></p>
<p><em>A solid, up-to-date foundation is one key to being a productive machine learning engineer. Many teams draw on these ideas in their day-to-day work, and blog posts and research papers often assume that you’re familiar with them. This shared base of knowledge is essential to the rapid progress we’ve seen in machine learning in recent years.</em></p>
<p><em>That’s why I’m updating my original machine learning class as the new <a href="https://www.deeplearning.ai/program/machine-learning-specialization/?utm_campaign=mls-launch-2022&utm_source=the-batch-web">Machine Learning Specialization</a>, which will be available in a few weeks.</em></p>
<p><em>My team spent many hours debating the most important concepts to teach. We developed extensive syllabi for various topics and prototyped course units in them. Sometimes this process helped us realize that a different topic was more important, so we cut material we had developed to focus on something else. The result, I hope, is an accessible set of courses that will help anyone master the most important algorithms and concepts in machine learning today — including deep learning but also a lot of other things — and to build effective learning systems.</em></p>
<p><em>In that spirit, this week’s issue of</em> The Batch <em>explores some of our field’s most important algorithms, explaining how they work and describing some of their surprising origins. If you’re just starting out, I hope it will demystify some of the approaches at the heart of machine learning. For those who are more advanced, you’ll find lesser-known perspectives on familiar territory. Either way, I hope this special issue will help you build your intuition and give you fun facts about machine learning’s foundations that you can share with friends.</em></p>
<p><em>Keep learning!</em></p>
<p><em>Andrew</em></p>
<h1 id="Essential-Algorithms"><a href="#Essential-Algorithms" class="headerlink" title="Essential Algorithms"></a>Essential Algorithms</h1><p>Machine learning offers a deep toolbox for solving all kinds of problems, but which tool is best for which task? When is the open-ended wrench better than the adjustable kind? Who invented these things anyway? In this special issue of <em>The Batch</em>, we survey six of the most useful algorithms in the kit: where they came from, what they do, and how they’re evolving as AI advances into every facet of society. If you want to learn more, the <em>Machine Learning Specialization</em> provides a simple, practical introduction to these algorithms and more. <a href="https://www.deeplearning.ai/program/machine-learning-specialization/?utm_campaign=mls-launch-2022&utm_source=the-batch-web">Join the waitlist</a> to be notified when it’s available.</p>
<h1 id="Linear-Regression-Straight-amp-Narrow"><a href="#Linear-Regression-Straight-amp-Narrow" class="headerlink" title="Linear Regression: Straight &amp; Narrow"></a>Linear Regression: Straight &amp; Narrow</h1><p>Linear regression may be the key statistical method in machine learning, but it didn’t get to be that way without a fight. Two eminent mathematicians claimed credit for it, and 200 years later the matter remains unresolved. The longstanding dispute attests not only to the algorithm’s extraordinary utility but also to its essential simplicity.<br><strong>Whose algorithm is it anyway?</strong> In 1805, French mathematician Adrien-Marie Legendre published the method of fitting a line to a set of points while trying to predict the location of a comet (celestial navigation being the science most valuable in global commerce at the time, much like AI is today — the new electricity, if you will, two decades before the electric motor). Four years later, the 24-year-old German wunderkind Carl Friedrich Gauss insisted that he had been using it since 1795 but had deemed it too trivial to write about. Gauss’ claim prompted Legendre to publish an addendum anonymously observing that “a very celebrated geometer has not hesitated to appropriate this method.”<br><strong>Slopes and biases:</strong> Linear regression is useful any time the relationship between an outcome and a variable that influences it follows a straight line. For instance, a car’s fuel consumption bears a linear relationship to its weight.</p>
<ul>
<li>The relationship between a car’s fuel consumption <em>y</em> and its weight <em>x</em> depends on the line’s slope <em>w</em> (how steeply fuel consumption rises with weight) and bias term <em>b</em> (fuel consumption at zero weight): <em>y&#x3D;w*x+b</em>.</li>
<li>During training, given a car’s weight, the algorithm predicts the expected fuel consumption. It compares expected and actual fuel consumption. Then it minimizes the squared difference, typically via the technique of ordinary least squares, which hones the values of <em>w</em> and <em>b</em>.</li>
<li>Taking the car’s drag into account makes it possible to generate more precise predictions. The additional variable extends the line into a plane. In this way, linear regression can accommodate any number of variables&#x2F;dimensions.</li>
</ul>
<p><strong>Two steps to ubiquity:</strong> The algorithm immediately helped navigators to follow the stars, and later biologists (notably Charles Darwin’s cousin Francis Galton) to identify heritable traits in plants and animals. Two further developments unlocked its broad potential. In 1922, English statisticians Ronald Fisher and Karl Pearson showed how linear regression fit into the general statistical framework of correlation and distribution, making it useful throughout all sciences. And, nearly a century later, the advent of computers provided the data and processing power to take far greater advantage of it.<br><strong>Coping with ambiguity:</strong> Of course, data is never perfectly measured, and some variables are more important than others. These facts of life have spurred more sophisticated variants. For instance, linear regression with regularization (also called <a href="https://en.wikipedia.org/wiki/Tikhonov_regularization">ridge regression</a>) encourages a linear regression model to not depend too much on any one variable, or rather to rely evenly on the most important variables. If you’re going for simplicity, a different form of regularization (L1 instead of L2) results in <a href="https://en.wikipedia.org/wiki/Lasso_(statistics)">lasso</a>, which encourages as many coefficients as possible to be zero. In other words, it learns to select variables with high prediction power and ignores the rest. <a href="https://en.wikipedia.org/wiki/Elastic_net_regularization">Elastic net </a>combines both types of regularization. It’s useful when data is sparse or features appear to be correlated.<br><strong>In every neuron:</strong> Still, the simple version is enormously useful. The most common sort of neuron in a neural network is a linear regression model followed by a nonlinear activation function, making linear regression a fundamental building block of deep learning.</p>
<h1 id="Logistic-Regression-Follow-the-Curve"><a href="#Logistic-Regression-Follow-the-Curve" class="headerlink" title="Logistic Regression: Follow the Curve"></a>Logistic Regression: Follow the Curve</h1><p>There was a moment when logistic regression was used to classify just one thing: If you drink a vial of poison, are you likely to be labeled “living” or “deceased”? Times have changed, and today not only does calling emergency services provide a better answer to that question, but logistic regression is at the very heart of deep learning.<br><strong>Poison control:</strong> The logistic function dates to the 1830s, when the Belgian statistician P.F. Verhulst invented it to describe population dynamics: Over time, an initial explosion of exponential growth flattens as it consumes available resources, resulting in the characteristic logistic curve. More than a century passed before American statistician E. B. Wilson and his student Jane Worcester devised logistic regression to figure out how much of a given hazardous substance would be fatal. How they gathered their training data is a subject for another essay.<br><strong>Fitting the function:</strong> Logistic regression fits the logistic function to a dataset in order to predict the probability, given an event (say, ingesting strychnine), that a particular outcome will occur (say, an untimely demise).</p>
<ul>
<li>Training adjusts the curve’s center location horizontally and its middle vertically to minimize error between the function’s output and the data.</li>
<li>Adjusting the center to the right or the left means that it would take more or less poison to kill the average person. A steep slope signifies certainty: Before the halfway point, most people survive; beyond the halfway point, <em>sayonara</em>. A gentle slope is more forgiving: lower than midway up the curve, more than half survive; farther up, less than half.</li>
<li>Set a threshold of, say, 0.5 between one outcome and another, and the curve becomes a classifier. Just enter the dose into the model, and you’ll know whether you should be planning a party or a funeral.</li>
</ul>
<p><strong>More outcomes:</strong> Verhulst’s work found the probabilities of binary outcomes, ignoring further possibilities like which side of the afterlife a poison victim might land in. His successors extended the algorithm:</p>
<ul>
<li>Working independently in the late 1960s, British statistician [David Cox](<a href="https://scholar.google.com/scholar_lookup?hl=en&amp;publication_year=1966&amp;pages=55-71&amp;author=D">https://scholar.google.com/scholar_lookup?hl=en&amp;publication_year=1966&amp;pages=55-71&amp;author=D</a>. R. Coxauthor%3DF. N. David&amp;title&#x3D;Some procedures associated with the logistic qualitative response curve&amp;utm_campaign&#x3D;The Batch&amp;utm_source&#x3D;hs_email&amp;utm_medium&#x3D;email&amp;_hsenc&#x3D;p2ANqtz-89CuP3WvPesniFqd7Y2_JHnJ2W7cNuwgaPgBDzsj7k_StihDPBT45KtWU5iDiwJ3MTnaA2) and Dutch statistician [Henri Theil](<a href="https://www.jstor.org/stable/2525642?casa_token=PyEOSgvoa4cAAAAA:4t757YdDeEwOHZlGH06W7GOd5djaJjP1_eRkv5V8UqPhL1sKTwzsw6FmD6veSI_hL9X3CbPdhaTcKbEj8I0aoDwHQ46Vv34C2EXgKrXMvmXrXwy7NA&amp;seq=1&amp;utm_campaign=The">https://www.jstor.org/stable/2525642?casa_token=PyEOSgvoa4cAAAAA%3A4t757YdDeEwOHZlGH06W7GOd5djaJjP1_eRkv5V8UqPhL1sKTwzsw6FmD6veSI_hL9X3CbPdhaTcKbEj8I0aoDwHQ46Vv34C2EXgKrXMvmXrXwy7NA&amp;seq=1&amp;utm_campaign=The</a> Batch&amp;utm_source&#x3D;hs_email&amp;utm_medium&#x3D;email&amp;_hsenc&#x3D;p2ANqtz-89CuP3WvPesniFqd7Y2_JHnJ2W7cNuwgaPgBDzsj7k_StihDPBT45KtWU5iDiwJ3MTnaA2) adapted logistic regression for situations that have more than two possible outcomes.</li>
<li>Further work yielded <a href="https://www.jstor.org/stable/2984952">ordered logistic regression</a>, in which the outcomes are ordered values.</li>
<li>To deal with sparse or high-dimensional data, logistic regression can take advantage of the same regularization techniques as linear regression.</li>
</ul>
<p><strong>Versatile curve:</strong> The logistic function describes a wide range of phenomena with fair accuracy, so logistic regression provides serviceable baseline predictions in many situations. In medicine, it estimates mortality and risk of disease. In political science, it predicts winners and losers of elections. In economics, it forecasts business prospects. More important, it drives a portion of the neurons, in which the nonlinearity is a sigmoid, in a wide variety of neural networks.</p>
<h1 id="Gradient-Descent-It’s-All-Downhill"><a href="#Gradient-Descent-It’s-All-Downhill" class="headerlink" title="Gradient Descent: It’s All Downhill"></a>Gradient Descent: It’s All Downhill</h1><p>Imagine hiking in the mountains past dusk and finding that you can’t see much beyond your feet. And your phone’s battery died so you can’t use a GPS app to find your way home. You might find the quickest path down via gradient descent. Just be careful not to walk off a cliff.<br><strong>Suns and rugs:</strong> Gradient descent is good for more than descending through precipitous terrain. In 1847, French mathematician Augustin-Louis Cauchy <a href="https://cs.uwaterloo.ca/~y328yu/classics/cauchy-en.pdf">invented</a> the algorithm to approximate the orbits of stars. Sixty years later, his compatriot Jacques Hadamard independently <a href="https://searchworks.stanford.edu/view/2147097">developed</a> it to describe deformations of thin, flexible objects like throw rugs that might make a downward hike easier on the knees. In machine learning, though, its most common use is to find the lowest point in the landscape of a learning algorithm’s loss function.<br><strong>Downward climb:</strong> A trained neural network provides a function that, given an input, computes a desired output. One way to train the network is to minimize the loss, or error in its output, by iteratively computing the difference between the actual output and the desired output and then changing the network’s parameter values to narrow that difference. Gradient descent narrows the difference, minimizing the function that computes the loss. The network’s parameter values are tantamount to a position on the landscape, and the loss is the current altitude. As you descend, you improve the network’s ability to compute outputs close to the desired one. Visibility is limited because, in a typical supervised learning situation, the algorithm relies solely on the network’s parameter values and the gradient, or slope of the loss function — that is, your position on the hill and the slope immediately beneath your feet.</p>
<ul>
<li>The basic method is to move in the direction where the terrain descends most steeply. The trick is to calibrate your stride. Too small, and it takes ages to make any progress. Too large, and you leap into the unknown, possibly heading uphill instead of downward.</li>
<li>Given the current position, the algorithm estimates the direction of steepest descent by computing the gradient of the loss function. The gradient points uphill, so the algorithm steps in the opposite direction by subtracting a fraction of the gradient. The fraction <em>α</em>, which is called the learning rate, determines the size of the step before measuring the gradient again.</li>
<li>Apply this iteratively, and hopefully you’ll arrive at a valley. Congratulations!</li>
</ul>
<p><strong>Stuck in the valley:</strong> Too bad your phone is out of juice, because the algorithm may not have propelled you to the bottom of a convex mountain. You may be stuck in a nonconvex landscape of multiple valleys (local minima), peaks (local maxima), saddles (saddle points), and plateaus. In fact, tasks like image recognition, text generation, and speech recognition are nonconvex, and many variations on gradient descent have emerged to handle such situations.  For example, the algorithm may have <a href="https://distill.pub/2017/momentum/">momentum </a>that helps it zoom over small rises and dips, giving it a better chance at arriving at the bottom. Researchers have devised so many variants that it may seem as though there are as many optimizers as there are local minima. Luckily, local and global minima tend to be <a href="https://arxiv.org/abs/1412.0233">roughly equivalent</a>.<br><strong>Optimal optimizer:</strong> Gradient descent is the clear choice for finding the minimum of any function. In cases where an exact solution can be computed directly — say, a linear regression task with lots of variables — it can approximate one, often faster and more cheaply. But it really comes into its own in complex, nonlinear tasks. Armed with gradient descent and an adventurous spirit, you might just make it out of the mountains in time for dinner.</p>
<h2 id="A-MESSAGE-FROM-DEEPLEARNING-AI"><a href="#A-MESSAGE-FROM-DEEPLEARNING-AI" class="headerlink" title="A MESSAGE FROM DEEPLEARNING.AI"></a>A MESSAGE FROM <strong><a href="http://deeplearning.ai/">DEEPLEARNING.AI</a></strong></h2><p>No advanced math required! The new <em>Machine Learning Specialization</em> balances intuition, practice, and theory to create a powerful learning experience for beginners. <a href="https://www.deeplearning.ai/program/machine-learning-specialization/?utm_campaign=mls-launch-2022&utm_source=the-batch-web">Pre-enroll</a> and achieve your career goals.</p>
<h1 id="Neural-Networks-Find-the-Function"><a href="#Neural-Networks-Find-the-Function" class="headerlink" title="Neural Networks: Find the Function"></a>Neural Networks: Find the Function</h1><p>Let’s get this out of the way: A brain is not a cluster of graphics processing units, and if it were, it would run software far more complex than the typical artificial neural network. Yet neural networks were inspired by the brain’s architecture: layers of interconnected neurons, each of which computes its own output depending on the states of its neighbors. The resulting cascade of activity forms an idea — or recognizes a picture of a cat.<br><strong>From biological to artificial:</strong> The insight that the brain learns through interactions among neurons dates back to 1873, but it wasn’t until 1943 that American neuroscientists Warren McCulloch and Walter Pitts <a href="http://www.cse.chalmers.se/~coquand/AUTOMATA/mcp.pdf">modeled </a>biological neural networks using simple mathematical rules. In 1958, American psychologist Frank Rosenblatt developed the <a href="https://citeseerx.ist.psu.edu/viewdoc/download">perceptron</a>, a single-layer vision network implemented on punch cards with the intention of building a hardware version for the United States Navy.<br><strong>Bigger is better:</strong> Rosenblatt’s invention recognized only classes that could be separated by a line. Ukrainian mathematicians Alexey Ivakhnenko and Valentin Lapa overcame this limitation by <a href="https://mailman.srv.cs.cmu.edu/pipermail/connectionists/2014-July/027158.html">stacking</a> networks of neurons in any number of layers. In 1985, working independently, French computer scientist Yann LeCun, David Parker, and American psychologist David Rumelhart and his colleagues [described](<a href="http://yann.lecun.com/exdb/publis/pdf/lecun-85.pdf?utm_campaign=The">http://yann.lecun.com/exdb/publis/pdf/lecun-85.pdf?utm_campaign=The</a> Batch&amp;utm_source&#x3D;hs_email&amp;utm_medium&#x3D;email&amp;_hsenc&#x3D;p2ANqtz-89CuP3WvPesniFqd7Y2_JHnJ2W7cNuwgaPgBDzsj7k_StihDPBT45KtWU5iDiwJ3MTnaA2) [using](<a href="https://books.google.com/books/about/Learning_logic.html?id=2kS9GwAACAAJ&amp;utm_campaign=The">https://books.google.com/books/about/Learning_logic.html?id=2kS9GwAACAAJ&amp;utm_campaign=The</a> Batch&amp;utm_source&#x3D;hs_email&amp;utm_medium&#x3D;email&amp;_hsenc&#x3D;p2ANqtz-89CuP3WvPesniFqd7Y2_JHnJ2W7cNuwgaPgBDzsj7k_StihDPBT45KtWU5iDiwJ3MTnaA2) <a href="https://www.nature.com/articles/323533a0">backpropagation</a> to train such networks efficiently. In the first decade of the new millennium, researchers including Kumar Chellapilla, Dave Steinkraus, and Rajat Raina (with Andrew Ng) <a href="https://dl.acm.org/doi/10.1109/ICDAR.2005.251">accelerated</a> [neural](<a href="https://dl.acm.org/doi/10.1145/1553374.1553486?utm_campaign=The">https://dl.acm.org/doi/10.1145/1553374.1553486?utm_campaign=The</a> Batch&amp;utm_source&#x3D;hs_email&amp;utm_medium&#x3D;email&amp;_hsenc&#x3D;p2ANqtz-89CuP3WvPesniFqd7Y2_JHnJ2W7cNuwgaPgBDzsj7k_StihDPBT45KtWU5iDiwJ3MTnaA2) [networks](<a href="https://hal.inria.fr/inria-00112631?utm_campaign=The">https://hal.inria.fr/inria-00112631?utm_campaign=The</a> Batch&amp;utm_source&#x3D;hs_email&amp;utm_medium&#x3D;email&amp;_hsenc&#x3D;p2ANqtz-89CuP3WvPesniFqd7Y2_JHnJ2W7cNuwgaPgBDzsj7k_StihDPBT45KtWU5iDiwJ3MTnaA2) using graphical processing units, which has enabled ever-larger neural networks to learn from the immense amounts of data generated by the internet.<br><strong>Fit for every task:</strong> The idea behind a neural network is simple: For any task, there’s a function that can perform it. A neural network constitutes a trainable function by combining many simple functions, each executed by a single neuron. A neuron’s function is determined by adjustable parameters called weights. Given random values for those weights and examples of inputs and their desired outputs, it’s possible to alter the weights iteratively until the trainable function performs the task at hand.</p>
<ul>
<li>A neuron accepts various inputs (for example, numbers representing a pixel or word, or the outputs of the previous layer), multiplies them by its weights, adds the products, and feeds the sum through a nonlinear function, or activation function, chosen by the developer. Consider it linear regression plus an activation function.</li>
<li>Training modifies the weights. For every example input, the network computes an output and compares it to the expected output. Backpropagation uses gradient descent to change the weights to reduce the difference between actual and expected outputs. Repeat this process enough times with enough (good) examples, and the network should learn to perform the task.</li>
</ul>
<p><strong>Black box:</strong> While a trained network may perform its task, good luck determining how. You can read the final function, but often it’s so complex — with thousands of variables and nested activation functions — that it’s exceedingly difficult to explain how the network succeeded at its task. Moreover, a trained network is only as good as the data it learned from. For instance, if the dataset was skewed, the network’s output will be skewed. If it included only high-resolution pictures of cats, there’s no telling how it would respond to lower-resolution images.<br><strong>Toward common sense:</strong> Reporting on Rosenblatt’s Perceptron in 1958, <em>The New York Times</em> blazed the trail for AI hype by <a href="https://timesmachine.nytimes.com/timesmachine/1958/07/08/83417341.html">calling</a> it “the embryo of an electronic computer that the United States Navy expects will be able to walk, talk, see, write, reproduce itself and be conscious of its existence.” While it didn’t live up to that billing, it begot a host of impressive models: convolutional neural networks for images; recurrent neural networks for text; and transformers for images, text, speech, video, protein structures, and more. They’ve done amazing things, exceeding human-level performance in playing Go and approaching it in practical tasks like diagnosing x-ray images. Yet they still have a hard time with common sense and logical reasoning. <a href="https://lacker.io/ai/2020/07/06/giving-gpt-3-a-turing-test.html">Ask GPT-3</a>, “When counting, what number comes before a million?” and it may respond, “Nine hundred thousand and ninety-nine comes before a million.” To which we reply: Keep learning!</p>
<h1 id="Decision-Trees-From-Root-to-Leaves"><a href="#Decision-Trees-From-Root-to-Leaves" class="headerlink" title="Decision Trees: From Root to Leaves"></a>Decision Trees: From Root to Leaves</h1><p>What kind of beast was Aristotle? The philosopher’s follower Porphyry, who lived in Syria during the third century, came up with a logical way to answer the question. He organized Aristotle’s proposed “categories of being” from general to specific and assigned Aristotle himself to each category in turn: Aristotle’s substance occupied space rather than being conceptual or spiritual; his body was animate not inanimate; his mind was rational not irrational. Thus his classification was human. Medieval teachers of logic drew the sequence as a vertical flowchart: An early decision tree.<br><strong>The digital difference:</strong> Fast forward to 1963, when University of Michigan sociologist John Sonquist and economist James Morgan, dividing survey respondents into groups, first <a href="https://www.semanticscholar.org/paper/Problems-in-the-Analysis-of-Survey-Data%2C-and-a-Morgan-Sonquist/957728a4244d3b323e98e351098a0125382f1199">implemented</a> decision trees in a computer. Such work became commonplace with the advent of software that automates training the algorithm, now implemented in a variety of machine learning libraries including scikit-learn. The code took a quartet of statisticians at Stanford and UC Berkeley 10 years to develop. Today, coding a decision tree from scratch is a homework assignment in Machine Learning 101.<br><strong>Roots in the sky:</strong> A decision tree can perform classification or regression. It grows downward, from root to canopy, in a hierarchy of decisions that sort input examples into two (or more) groups. Consider the task of Johann Blumenbach, the German physician and anthropologist who first distinguished monkeys from apes (setting aside humans) circa 1776, before which they had been categorized together. The classification depends on various criteria such as presence or absence of a tail, narrow or broad chest, upright versus crouched posture, and lesser or greater intelligence. A decision tree trained to label such animals would consider each criterion one by one, ultimately separating the two groups.</p>
<ul>
<li>The tree starts with a root node that can be viewed as containing all examples in a dataset of creatures — chimpanzees, gorillas, and orangutans as well as capuchins, baboons, and marmosets. The root presents a choice between examples that exhibit a particular feature or not, leading to two child nodes that contain examples with and without that feature. Each child poses yet another choice (with or without a different feature) leading to two more children, and so on. The process ends with any number of leaf nodes, each of which contains examples that belong — mostly or wholly — to one class.</li>
<li>To grow, the tree must find the root decision. To choose, it considers all features and their values — posterior appendage, barrel chest, and so on — and chooses the one that maximizes the purity of the split, optimal purity being defined as 100 percent of examples of one class going to a particular child node and none going to the other node. Splits are rarely 100 percent pure after just one decision and may never get there, so the process continues, producing level after level of child nodes, until purity won’t rise much by considering further features. At this point, the tree is fully trained.</li>
<li>At inference, a fresh example traverses the tree from top to bottom evaluating a different decision at each level. It takes the label of the data contained by the leaf node it lands in.</li>
</ul>
<p><strong>Top 10 hit:</strong> Given Blumenbach’s conclusion (later overturned by Charles Darwin) that humans are distinguished from apes by a broad pelvis, hands, and close-set teeth, what if we wanted to extend the decision tree to classify not just apes and monkeys but humans as well? Australian computer scientist John Ross Quinlan made this possible in 1986 with <a href="https://link.springer.com/article/10.1007/BF00116251">ID3</a>, which extended decision trees to support nonbinary outcomes. In 2008, a further refinement called <a href="https://link.springer.com/article/10.1007/BF00993309">C4.5</a> capped a list of Top 10 Algorithms in Data Mining curated by the IEEE International Conference on Data Mining. In a world of rampant innovation, that’s staying power.<br><strong>Raking leaves:</strong> Decision trees do have some drawbacks. They can easily overfit the data by growing so many levels that leaf nodes include as few as one example. Worse, they’re prone to the butterfly effect: Change one example, and the tree that grows could look dramatically different.<br><strong>Into the woods:</strong> Turning this trait into an advantage, American statistician Leo Breiman and New Zealander statistician Adele Cutler in 2001 developed the <a href="https://link.springer.com/article/10.1023/A:1010933404324">random forest</a>, an ensemble of decision trees, each of which processes a different, overlapping selection of examples that vote on a final decision. Random forest and its cousin XGBoost are less prone to overfitting, which helps make them among the most popular machine learning algorithms. It’s like having Aristotle, Porphyry, Blumenbach, Darwin, Jane Goodall, Dian Fossey, and 1,000 other zoologists in the room together, all making sure your classifications are the best they can be.</p>
<h1 id="K-Means-Clustering-Group-Think"><a href="#K-Means-Clustering-Group-Think" class="headerlink" title="K-Means Clustering: Group Think"></a>K-Means Clustering: Group Think</h1><p>If you’re standing close to others at a party, it’s likely that you have something in common. This is the idea behind using k-means clustering to split data points into groups. Whether the groups formed via human agency or some other force, this algorithm will find them.<br><strong>From detonations to dial tones:</strong> American physicist Stuart Lloyd, an alumnus of both Bell Labs’ iconic innovation factory and the Manhattan Project that invented the atomic bomb, first proposed k-means clustering in 1957 to distribute information within digital signals. He didn’t <a href="https://cs.nyu.edu/~roweis/csc2515-2006/readings/lloyd57.pdf">publish</a> it until 1982. Meanwhile, American statistician Edward Forgy <a href="https://cir.nii.ac.jp/crid/1571980074621944832">described</a> a similar method in 1965, leading to its alternative name, the Lloyd-Forgy algorithm.<br><strong>Finding the center:</strong> Consider breaking up the party into like-minded working groups. Given the positions of attendees in the room and the number of groups to be formed, k-means clustering can divide the attendees into groups of roughly equal size, each gathered around a central point, or centroid.</p>
<ul>
<li>During training, the algorithm initially designates k centroids by randomly choosing k people. (K must be chosen manually, and finding an optimal value is not always trivial.) Then it grows k clusters by associating each person to the closest centroid.</li>
<li>For each cluster, it computes the mean position of all people assigned to the group and designates the mean position as the new centroid. Each new centroid probably isn’t occupied by a person, but so what? People tend to gather around the chocolate fondue.</li>
<li>Having calculated new centroids, the algorithm reassigns individuals to the centroid closest to them. Then it computes new centroids, adjusts clusters, and so on, until the centroids (and the groups around them) no longer shift. From there, assigning newcomers to the right cluster is easy. Let them take their place in the room and look for the nearest centroid.</li>
<li>Be forewarned: Given the initial random centroid assignments, you may not end up in the same group as that cute data-centric AI specialist you were hoping to be with. The algorithm does a good job, but it’s not guaranteed to find the best solution. Better luck at the next party!</li>
</ul>
<p><strong>Different distances:</strong> Of course the distance between clustered objects doesn’t need to be spatial. Any measure between two vectors will do. For instance, rather than grouping partygoers according to physical proximity, k-means clustering can divide them by their outfits, occupations, or other attributes. Online shops use it to partition customers based on their preferences or behavior, and astronomers to group stars of the same type.<br><strong>Power to the data points:</strong> The idea has spawned a few notable variations:</p>
<ul>
<li><a href="https://onlinelibrary.wiley.com/doi/abs/10.1002/9780470316801.ch2">K-medoids</a> use actual data points as centroids rather than mean positions in a given cluster. The medoids are points that minimize the distance to all other points in their cluster. This variation is more interpretable because the centroids are always data points.</li>
<li><a href="https://www.tandfonline.com/doi/abs/10.1080/01969727308546046">Fuzzy C-Means Clustering</a> enables the data points to participate in multiple clusters to varying degrees. It replaces hard cluster assignments with degrees of membership depending on distance from the centroids.</li>
</ul>
<p><strong>Revelry in *n* dimensions:</strong> Nonetheless, the algorithm in its original form remains widely useful — especially because, as an unsupervised algorithm, it doesn’t require gathering potentially expensive labeled data. It’s also ever faster to use. For instance, machine learning libraries including scikit-learn benefit from the 2002 addition of <a href="http://www.cs.umd.edu/~mount/Papers/pami02.pdf">kd-trees</a> that partition high-dimensional data extremely quickly. By the way, if you throw any high-dimensional parties, we’d love to be on the guest list.</p>
]]></content>
      <categories>
        <category>Recharge</category>
      </categories>
  </entry>
  <entry>
    <title>AI</title>
    <url>/2022/05/01/Tool/AI/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>分享一些最近发掘的实用工具，它们遍布多个行业领域和多种使用场景，说不定其中的某个神器就能解决你现在面临的难题，赶紧来看看👇</p>
<table>
<thead>
<tr>
<th><strong>工具名称</strong></th>
<th><strong>类型</strong></th>
<th><strong>地址</strong></th>
<th><strong>国内&#x2F;外</strong></th>
</tr>
</thead>
<tbody><tr>
<td>SciChat</td>
<td>科研论文</td>
<td><a href="https://www.sciradar.com/">https://www.sciradar.com/</a></td>
<td>国内</td>
</tr>
<tr>
<td>酷表ChatExcel</td>
<td>表格</td>
<td><a href="https://chatexcel.com/convert">https://chatexcel.com/convert</a></td>
<td>国内</td>
</tr>
<tr>
<td>FlowUs 息流</td>
<td>笔记本&#x2F;文档</td>
<td><a href="https://flowus.cn/product">https://flowus.cn/product</a></td>
<td>国内</td>
</tr>
<tr>
<td>风声雨声</td>
<td>文档翻译</td>
<td><a href="https://fsys.app/">https://fsys.app/</a></td>
<td>国内</td>
</tr>
<tr>
<td>AI维权律师</td>
<td>法律维权</td>
<td><a href="https://ai-lawyer.yuanx.me/">https://ai-lawyer.yuanx.me/</a></td>
<td>国内</td>
</tr>
<tr>
<td>ChatVox</td>
<td>音&#x2F;视频</td>
<td><a href="https://chatvox.aitodo.co/">https://chatvox.aitodo.co/</a></td>
<td>国外</td>
</tr>
<tr>
<td>ChatWebpage</td>
<td>网页</td>
<td><a href="https://app.chatwebpage.com/">https://app.chatwebpage.com/</a></td>
<td>国外</td>
</tr>
<tr>
<td>Chatbase</td>
<td>网页&#x2F;文档</td>
<td><a href="https://www.chatbase.co/">https://www.chatbase.co/</a></td>
<td>国外</td>
</tr>
<tr>
<td>SQL Chat</td>
<td>SQL</td>
<td><a href="https://www.sqlchat.ai/">https://www.sqlchat.ai/</a></td>
<td>国外</td>
</tr>
<tr>
<td>ChatThing</td>
<td>数据源&#x2F;文档</td>
<td><a href="https://chatthing.ai/">https://chatthing.ai/</a></td>
<td>国外</td>
</tr>
</tbody></table>
<p><strong>来源：</strong>AI兔子洞</p>
<table>
<thead>
<tr>
<th><a href="https://www.sciradar.com/">https://www.sciradar.com/</a></th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://chatexcel.com/convert">https://chatexcel.com/convert</a></td>
</tr>
<tr>
<td><a href="https://flowus.cn/product">https://flowus.cn/product</a></td>
</tr>
<tr>
<td><a href="https://fsys.app/">https://fsys.app/</a></td>
</tr>
<tr>
<td><a href="https://ai-lawyer.yuanx.me/">https://ai-lawyer.yuanx.me/</a></td>
</tr>
<tr>
<td><a href="https://chatvox.aitodo.co/">https://chatvox.aitodo.co/</a></td>
</tr>
<tr>
<td><a href="https://app.chatwebpage.com/">https://app.chatwebpage.com/</a></td>
</tr>
<tr>
<td><a href="https://www.chatbase.co/">https://www.chatbase.co/</a></td>
</tr>
<tr>
<td><a href="https://www.sqlchat.ai/">https://www.sqlchat.ai/</a></td>
</tr>
<tr>
<td><a href="https://chatthing.ai/">https://chatthing.ai/</a></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Airflow</title>
    <url>/2022/05/01/Tool/Airflow/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Airflow-入门及使用"><a href="#Airflow-入门及使用" class="headerlink" title="Airflow 入门及使用"></a>Airflow 入门及使用</h2><p>来源：<a href="https://zhuanlan.zhihu.com/p/84332879">https://zhuanlan.zhihu.com/p/84332879</a></p>
<h3 id="什么是-Airflow？"><a href="#什么是-Airflow？" class="headerlink" title="什么是 Airflow？"></a>什么是 Airflow？</h3><p>Airflow 是一个使用 python 语言编写的 data pipeline 调度和监控工作流的平台。 Airflow 是通过 DAG（Directed acyclic graph 有向无环图）来管理任务流程的任务调度工具， 不需要知道业务数据的具体内容，设置任务的依赖关系即可实现任务调度。</p>
<p>这个平台拥有和 Hive、Presto、MySQL、HDFS、Postgres 等数据源之间交互的能力，并且提供了钩子（hook）使其拥有很好地扩展性。 除了一个命令行界面，该工具还提供了一个基于 Web 的用户界面可以可视化管道的依赖关系、监控进度、触发任务等。</p>
<h3 id="Airflow-的架构"><a href="#Airflow-的架构" class="headerlink" title="Airflow 的架构"></a>Airflow 的架构</h3><p>在一个可扩展的生产环境中，Airflow 含有以下组件：</p>
<ul>
<li>元数据库：这个数据库存储有关任务状态的信息。</li>
<li>调度器：Scheduler 是一种使用 DAG 定义结合元数据中的任务状态来决定哪些任务需要被执行以及任务执行优先级的过程。 调度器通常作为服务运行。</li>
<li>执行器：Executor 是一个消息队列进程，它被绑定到调度器中，用于确定实际执行每个任务计划的工作进程。 有不同类型的执行器，每个执行器都使用一个指定工作进程的类来执行任务。 例如，LocalExecutor 使用与调度器进程在同一台机器上运行的并行进程执行任务。 其他像 CeleryExecutor 的执行器使用存在于独立的工作机器集群中的工作进程执行任务。</li>
<li>Workers：这些是实际执行任务逻辑的进程，由正在使用的执行器确定。</li>
</ul>
<p><img src="https://p.ipic.vip/hf2pa4.jpg" alt="img"></p>
<h3 id="Airflow-解决哪些问题"><a href="#Airflow-解决哪些问题" class="headerlink" title="Airflow 解决哪些问题"></a>Airflow 解决哪些问题</h3><p>通常，在一个运维系统，数据分析系统，或测试系统等大型系统中，我们会有各种各样的依赖需求。包括但不限于： <em>时间依赖：任务需要等待某一个时间点触发。</em> 外部系统依赖：任务依赖外部系统需要调用接口去访问。 <em>任务间依赖：任务 A 需要在任务 B 完成后启动，两个任务互相间会产生影响。</em> 资源环境依赖：任务消耗资源非常多， 或者只能在特定的机器上执行。</p>
<p>crontab 可以很好地处理定时执行任务的需求，但仅能管理时间上的依赖。</p>
<p>Airflow 的核心概念是 DAG (有向无环图)。DAG 由一个或多个 task 组成，而这个 DAG 正是解决了上文所说任务间的依赖问题。 任务执行的先后依赖顺序、多个 task 之间的依赖关系可以很好的用 DAG 表示完善。</p>
<p>Airflow 同样完整的支持 crontab 表达式，也支持直接使用 python 的 datatime 模块表述时间，还可以用 datatime 的 delta 表述时间差。</p>
<h3 id="Airflow-安装并运用"><a href="#Airflow-安装并运用" class="headerlink" title="Airflow 安装并运用"></a>Airflow 安装并运用</h3><p>官网安装指南：<a href="https://airflow.apache.org/docs/apache-airflow/stable/start.html">https://airflow.apache.org/docs/apache-airflow/stable/start.html</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 默认目录在~/airflow，也可以使用以下命令来指定目录</span></span><br><span class="line"><span class="built_in">export</span> AIRFLOW_HOME=&#123;yourpath&#125;/airflow</span><br><span class="line"></span><br><span class="line">pip install apache-airflow</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置文件中的 sql_alchemy_conn</span></span><br><span class="line">vim airflow/airflow.cfg</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化数据库</span></span><br><span class="line">airflow initdb</span><br></pre></td></tr></table></figure>



<h3 id="定义第一个DAG"><a href="#定义第一个DAG" class="headerlink" title="定义第一个DAG"></a>定义第一个DAG</h3><p>在 $AIRFLOW_HOME 目录下新建 dags 文件夹，后面的所有 dag 文件都要存储在这个目录。</p>
<p>新建 dag 文件 demo.py，语句含义见注释</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime, timedelta</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> airflow <span class="keyword">import</span> DAG</span><br><span class="line"><span class="keyword">from</span> airflow.utils <span class="keyword">import</span> dates</span><br><span class="line"><span class="keyword">from</span> airflow.utils.helpers <span class="keyword">import</span> chain</span><br><span class="line"><span class="keyword">from</span> airflow.operators.bash_operator <span class="keyword">import</span> BashOperator</span><br><span class="line"><span class="keyword">from</span> airflow.operators.python_operator <span class="keyword">import</span> PythonOperator</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">default_options</span>():</span><br><span class="line">    default_args = &#123;</span><br><span class="line">        <span class="string">&#x27;owner&#x27;</span>: <span class="string">&#x27;airflow&#x27;</span>,  <span class="comment"># 拥有者名称</span></span><br><span class="line">        <span class="string">&#x27;start_date&#x27;</span>: dates.days_ago(<span class="number">1</span>),  <span class="comment"># 第一次开始执行的时间，为 UTC 时间</span></span><br><span class="line">        <span class="string">&#x27;retries&#x27;</span>: <span class="number">1</span>,  <span class="comment"># 失败重试次数</span></span><br><span class="line">        <span class="string">&#x27;retry_delay&#x27;</span>: timedelta(seconds=<span class="number">5</span>)  <span class="comment"># 失败重试间隔</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> default_args</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义DAG</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test1</span>(<span class="params">dag</span>):</span><br><span class="line">    t = <span class="string">&quot;pwd&quot;</span></span><br><span class="line">    <span class="comment"># operator 支持多种类型， 这里使用 BashOperator</span></span><br><span class="line">    task = BashOperator(</span><br><span class="line">        task_id=<span class="string">&#x27;test1&#x27;</span>,  <span class="comment"># task_id</span></span><br><span class="line">        bash_command=t,  <span class="comment"># 指定要执行的命令</span></span><br><span class="line">        dag=dag  <span class="comment"># 指定归属的dag</span></span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">return</span> task</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello_world_1</span>():</span><br><span class="line">    current_time = <span class="built_in">str</span>(datetime.today())</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;hello world at &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(current_time))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test2</span>(<span class="params">dag</span>):</span><br><span class="line">    <span class="comment"># PythonOperator</span></span><br><span class="line">    task = PythonOperator(</span><br><span class="line">        task_id=<span class="string">&#x27;test2&#x27;</span>,</span><br><span class="line">        python_callable=hello_world_1,  <span class="comment"># 指定要执行的函数</span></span><br><span class="line">        dag=dag)</span><br><span class="line">    <span class="keyword">return</span> task</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test3</span>(<span class="params">dag</span>):</span><br><span class="line">    t = <span class="string">&quot;date&quot;</span></span><br><span class="line">    task = BashOperator(</span><br><span class="line">        task_id=<span class="string">&#x27;test3&#x27;</span>,</span><br><span class="line">        bash_command=t,</span><br><span class="line">        dag=dag)</span><br><span class="line">    <span class="keyword">return</span> task</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> DAG(</span><br><span class="line">        <span class="string">&#x27;test_task&#x27;</span>,  <span class="comment"># dag_id</span></span><br><span class="line">        default_args=default_options(),  <span class="comment"># 指定默认参数</span></span><br><span class="line">        schedule_interval=<span class="string">&quot;20 8 * * *&quot;</span>  <span class="comment"># 执行周期</span></span><br><span class="line">) <span class="keyword">as</span> d:</span><br><span class="line">    task1 = test1(d)</span><br><span class="line">    task2 = test2(d)</span><br><span class="line">    task3 = test3(d)</span><br><span class="line">    chain(task1, task2, task3)  <span class="comment"># 指定执行顺序</span></span><br></pre></td></tr></table></figure>

<p>写完后执行 <code>python $AIRFLOW_HOME/dags/demo.py</code> 检查是否有错误，如果命令行没有报错，就表示没问题。</p>
<p>命令行输入 <code>airflow list_dags -sd $AIRFLOW_HOME/dags</code> 查看生效的 dags</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-------------------------------------------------------------------</span><br><span class="line">DAGS</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">test_task</span><br></pre></td></tr></table></figure>



<h3 id="也可以用位位移指定任务执行顺序"><a href="#也可以用位位移指定任务执行顺序" class="headerlink" title="也可以用位位移指定任务执行顺序"></a>也可以用位位移指定任务执行顺序</h3><p>可以使用位移符号：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">task1 &gt;&gt; task2 &gt;&gt; task3</span><br></pre></td></tr></table></figure>

<p>等价于</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">task1.set_downstream(task2)</span><br><span class="line">task2.set_downstream(task23)</span><br></pre></td></tr></table></figure>



<h3 id="Web-UI"><a href="#Web-UI" class="headerlink" title="Web UI"></a>Web UI</h3><p>启动命令 <code>airflow webserver</code></p>
<blockquote>
<p>任务图视图</p>
</blockquote>
<p><img src="https://p.ipic.vip/4rh24y.jpg" alt="img"></p>
<blockquote>
<p>任务树视图</p>
</blockquote>
<p><img src="https://p.ipic.vip/yt90ft.jpg" alt="img"></p>
<h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 测试任务，格式：airflow test dag_id task_id execution_time</span></span><br><span class="line">airflow <span class="built_in">test</span> test_task test1 2019-09-10</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开始运行任务(这一步也可以在web界面点trigger按钮)</span></span><br><span class="line">airflow trigger_dag test_task</span><br><span class="line"></span><br><span class="line"><span class="comment"># 守护进程运行webserver, 默认端口为8080，也可以通过`-p`来指定</span></span><br><span class="line">airflow webserver -D  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 守护进程运行调度器     </span></span><br><span class="line">airflow scheduler -D   </span><br><span class="line"></span><br><span class="line"><span class="comment"># 守护进程运行调度器    </span></span><br><span class="line">airflow worker -D          </span><br><span class="line"></span><br><span class="line"><span class="comment"># 暂停任务</span></span><br><span class="line">airflow pause dag_id　     </span><br><span class="line"></span><br><span class="line"><span class="comment"># 取消暂停，等同于在web管理界面打开off按钮</span></span><br><span class="line">airflow unpause dag_id     </span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看task列表</span></span><br><span class="line">airflow list_tasks dag_id  查看task列表</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清空任务状态</span></span><br><span class="line">airflow clear dag_id       </span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行task</span></span><br><span class="line">airflow run dag_id task_id execution_date</span><br></pre></td></tr></table></figure>

<h2 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h2><p><a href="https://link.zhihu.com/?target=https://airflow.apache.org/start.html">Apache Airflow</a></p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Author Guide</title>
    <url>/2022/05/01/Tool/Author%20Guide/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Environmental-Research-Letters"><a href="#Environmental-Research-Letters" class="headerlink" title="Environmental Research Letters"></a>Environmental Research Letters</h2><h3 id="Words-Limit"><a href="#Words-Limit" class="headerlink" title="Words Limit"></a>Words Limit</h3><p>The word limits of all article types exclude titles, abstract, figures, tables, captions, and references. ERL welcomes submissions of the following article types:</p>
<ul>
<li><strong>Research Letters:</strong> concise high impact original research articles, maximum 4000 words, making a timely, novel, and significant contribution to environmental science and research. Authors must ensure their articles are written as concisely as possible with the journal’s broad readership in mind. Letters which exceed 4000 words, without a thorough justification in a cover letter (i.e. why shortening the article would adversely affect rigor or clarity) may not be considered. For qualitative research, authors may choose to style their article as a ‘summary for policymakers’; utilizing supplementary information to meet the requirements for length. In such instances, the supplementary information must be presented concisely and clearly in a way that transparently demonstrates the evidence for the claims made in the main text.</li>
</ul>
<h3 id="Submission-Check-List"><a href="#Submission-Check-List" class="headerlink" title="Submission Check List"></a>Submission Check List</h3><p><a href="https://publishingsupport.iopscience.iop.org/submission-checklist/">https://publishingsupport.iopscience.iop.org/submission-checklist/</a></p>
<h3 id="Template"><a href="#Template" class="headerlink" title="Template"></a>Template</h3><p><a href="https://publishingsupport.iopscience.iop.org/questions/latex-template/">https://publishingsupport.iopscience.iop.org/questions/latex-template/</a></p>
<p><a href="https://publishingsupport.iopscience.iop.org/questions/microsoft-word-template-journal-articles/">https://publishingsupport.iopscience.iop.org/questions/microsoft-word-template-journal-articles/</a></p>
<h3 id="Style-Gudie"><a href="#Style-Gudie" class="headerlink" title="Style Gudie"></a>Style Gudie</h3><p><a href="https://publishingsupport.iopscience.iop.org/questions/style-guide-journal-articles/">https://publishingsupport.iopscience.iop.org/questions/style-guide-journal-articles/</a></p>
<h4 id="Miscellaneous"><a href="#Miscellaneous" class="headerlink" title="Miscellaneous"></a>Miscellaneous</h4><ul>
<li>Use single quotation marks for quotations and double quotation marks for quotations within quotations.</li>
<li>Use lower case ‘x’ in ‘x-ray’, except at the beginning of a sentence.</li>
<li>Use a single space after a full stop.</li>
<li>En dashes (<em>–</em>) can denote a range or relationship between two nouns. Em dashes (—) can be used in place of commas or brackets. Do not use spaces between em dashes or en dashes.</li>
<li>We encourage authors to use inclusive language (e.g. “they” instead of “he” or “she”) wherever possible.</li>
</ul>
<h4 id="Figures-and-tables"><a href="#Figures-and-tables" class="headerlink" title="Figures and tables"></a>Figures and tables</h4><p>Place figures and graphics at the top of the page where possible and do not embed within the text. Size and position figures to achieve consistent font size and information display.</p>
<p>Figures and tables will be placed as close as possible to their first citation within the text (ideally on the same page) when your article is typeset; however, sometimes the number or size of figures does not allow for this.</p>
<p>Number all figures and tables in numerical order. If this is not the case they will be renumbered as part of the production process.</p>
<p>Use labels, e.g., ‘(a)’, ‘(b)’, etc where a figure has several parts. Explain all parts in the caption.</p>
<p>If the figure has been previously published elsewhere, obtain permission from the original publisher and include the appropriate permissions wording in your figure caption, even if it is your own work.</p>
<p>The style in the text for referring to tables and figures is, for example, ‘table 1’ and ‘figure 1’ (or ‘Table 1’ and ‘Figure 1’ if at the beginning of a sentence), respectively. Contractions (e.g. ‘tab. 2’, ‘fig. 1’) are not allowed.</p>
<h4 id="References"><a href="#References" class="headerlink" title="References"></a>References</h4><p>We encourage the use of the Harvard or Vancouver reference systems. However, you can use any reference system providing it is sensible and consistent throughout the paper. We will ensure your references adhere to house style during the production process, whatever format you submit them in.</p>
<p>A reference should give your reader enough information to locate the article, and you should take care to ensure that the information is correct so that DOI links can be made.</p>
<p>Listed below are the most common reference types. We have included details of how they should be styled and the mandatory elements they should include.</p>
<h5 id="Journal-articles"><a href="#Journal-articles" class="headerlink" title="Journal articles"></a>Journal articles</h5><p>References to journal works should include:</p>
<ul>
<li>Author(s): surname(s) and initial(s)</li>
<li>Year</li>
<li>[Title of article (optional, but see below)]</li>
<li>Standard abbreviated journal title (in italics)</li>
<li>Part of journal (e.g. A, B, etc, if appropriate)</li>
<li>Volume number (in bold)</li>
<li>Page number, page range or article number</li>
</ul>
<p>Example:</p>
<ul>
<li>Cantillano C, Mukherjee S, Morales-Inostroza L, Real B, Cáceres-Aravena G, Hermann-Avigliano C, Thomson R R and Vicencio R A 2018 <em>New J. Phys.</em> <strong>20</strong> 033028</li>
</ul>
<p>For more than ten authors, the name of the first author should be given followed by <em>et al</em>.</p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Bash</title>
    <url>/2022/05/01/Tool/Bash/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="循环年月下载数据（月份保持两位数显示）"><a href="#循环年月下载数据（月份保持两位数显示）" class="headerlink" title="循环年月下载数据（月份保持两位数显示）"></a>循环年月下载数据（月份保持两位数显示）</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ystart=1959</span><br><span class="line">yend=2020</span><br><span class="line"></span><br><span class="line">mstart=1</span><br><span class="line">mend=12</span><br><span class="line"></span><br><span class="line"><span class="built_in">let</span> nyears=<span class="variable">$&#123;yend&#125;</span>-<span class="variable">$&#123;ystart&#125;</span></span><br><span class="line"><span class="built_in">let</span> nmonths=<span class="variable">$&#123;mend&#125;</span>-<span class="variable">$&#123;mstart&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 0 <span class="variable">$&#123;nyears&#125;</span>`</span><br><span class="line">   <span class="keyword">do</span>  </span><br><span class="line">   <span class="keyword">for</span> j <span class="keyword">in</span> `<span class="built_in">seq</span> 0 <span class="variable">$&#123;nmonths&#125;</span>`</span><br><span class="line">      <span class="keyword">do</span>  </span><br><span class="line">      <span class="built_in">let</span> year=<span class="variable">$&#123;ystart&#125;</span>+<span class="variable">$&#123;i&#125;</span></span><br><span class="line">      <span class="built_in">let</span> var=<span class="variable">$&#123;mstart&#125;</span>+<span class="variable">$&#123;j&#125;</span></span><br><span class="line">      month=$(<span class="built_in">printf</span> <span class="string">&quot;%02d&quot;</span> <span class="string">&quot;<span class="variable">$&#123;var&#125;</span>&quot;</span>)</span><br><span class="line">      <span class="built_in">echo</span> <span class="variable">$year</span></span><br><span class="line">      <span class="built_in">echo</span> <span class="variable">$month</span></span><br><span class="line">      sed s/XYEARX/<span class="variable">$&#123;year&#125;</span>/g SST_new.py &gt; getdata_temp.py</span><br><span class="line">      sed s/XMONTHX/<span class="variable">$&#123;month&#125;</span>/g getdata_temp.py &gt; getdata_new.py</span><br><span class="line">   <span class="comment">#chmod a+x getdata.py</span></span><br><span class="line">      python ./getdata_new.py</span><br><span class="line">      <span class="built_in">rm</span> getdata_new.py</span><br><span class="line">      <span class="built_in">rm</span> getdata_temp.py</span><br><span class="line">   <span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>



<h2 id="Bash-Shell-常用的三种并行方法"><a href="#Bash-Shell-常用的三种并行方法" class="headerlink" title="Bash Shell 常用的三种并行方法"></a>Bash Shell 常用的三种并行方法</h2><p><strong>以下全文代码和数据均已发布至和鲸社区，阅读原文前往，可一键fork跑通</strong></p>
<blockquote>
<p><a href="https://www.heywhale.com/mw/project/6469f61a19ec36f57f821e84">https://www.heywhale.com/mw/project/6469f61a19ec36f57f821e84</a></p>
</blockquote>
<p>在 shell 脚本中，可以使用并行的方式来执行多个任务，以减少任务执行时间和提高系统资源利用率。通过并行执行任务，可以充分利用系统的 CPU 和 IO 资源，以提高任务的速度和效率。先定义待执行函数、参数和进程数：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 定义待执行的任务函数</span><br><span class="line">run_task () &#123;</span><br><span class="line">    # 需要执行的任务命令</span><br><span class="line">    command=$1</span><br><span class="line">    # 执行任务</span><br><span class="line">    </span><br><span class="line">    xx=$((RANDOM % 10))  # 随机数，用于模拟任务执行时间</span><br><span class="line">    sleep $xx</span><br><span class="line">    echo $1 $xx</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 定义一个数组，存储要执行的任务命令</span><br><span class="line">commands=(</span><br><span class="line">    &quot;command1&quot;</span><br><span class="line">    &quot;command2&quot;</span><br><span class="line">    &quot;command3&quot;</span><br><span class="line">    &quot;command4&quot;</span><br><span class="line">    &quot;command5&quot;</span><br><span class="line">    &quot;command6&quot;</span><br><span class="line">    &quot;command7&quot;</span><br><span class="line">    &quot;command8&quot;</span><br><span class="line">    &quot;command9&quot;</span><br><span class="line">    &quot;command10&quot;</span><br><span class="line">    &quot;command11&quot;</span><br><span class="line">    &quot;command12&quot;</span><br><span class="line">    &quot;command13&quot;</span><br><span class="line">    &quot;command14&quot;</span><br><span class="line">    &quot;command15&quot;</span><br><span class="line">    &quot;command16&quot;</span><br><span class="line">    &quot;command17&quot;</span><br><span class="line">    &quot;command18&quot;</span><br><span class="line">    &quot;command19&quot;</span><br><span class="line">    &quot;command20&quot;</span><br><span class="line">    &quot;command21&quot;</span><br><span class="line">    &quot;command22&quot;</span><br><span class="line">    &quot;command23&quot;</span><br><span class="line">    &quot;command24&quot;</span><br><span class="line">    &quot;command25&quot;</span><br><span class="line">    &quot;command26&quot;</span><br><span class="line">    &quot;command27&quot;</span><br><span class="line">    &quot;command28&quot;</span><br><span class="line">    &quot;command29&quot;</span><br><span class="line">    &quot;command30&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"># 定义变量来存储要启动的进程数</span><br><span class="line">max_processes=5</span><br></pre></td></tr></table></figure>

<p>下面是几种常用的并行方法</p>
<h2 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 初始化计数器</span><br><span class="line">count=0</span><br><span class="line"></span><br><span class="line"># 遍历数组，逐个执行任务</span><br><span class="line">for command in &quot;$&#123;commands[@]&#125;&quot;; do</span><br><span class="line">    # 同时运行的进程数超过了最大值，则等待一个进程完成</span><br><span class="line">    ((++count)) &amp;&amp; ((count==$max_processes)) &amp;&amp; wait -n &amp;&amp; ((count--))</span><br><span class="line">    # 执行函数，并将任务命令传递给它</span><br><span class="line">    run_task &quot;$command&quot; &amp;</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"># 等待所有任务完成</span><br><span class="line">wait</span><br></pre></td></tr></table></figure>

<p>wait -n 命令会等待任意一个子进程结束并返回其状态。与 wait 命令不同的是，wait -n 命令可以让父进程在等待期间继续执行其他任务，而不必阻塞等待所有子进程执行完毕。</p>
<p>注意，bash版本需要高于4.3</p>
<h2 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">for i in $(seq 0 $(($&#123;#commands[@]&#125; - 1))); do</span><br><span class="line">    # 同时运行的进程数超过了最大值，则等待一个进程完成</span><br><span class="line">    if ((i % max_processes == 0)); then</span><br><span class="line">        wait # 此时会等待任务中的任何一个完成。</span><br><span class="line">        pids=() # 清除 pids 数组</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line">    command=&quot;$&#123;commands[$i]&#125;&quot;</span><br><span class="line">    # 执行函数，并将任务命令传递给它</span><br><span class="line">    run_task &quot;$command&quot; &amp;</span><br><span class="line">    # 将 fork 的进程号（PID）保存到 $pids 数组中</span><br><span class="line">    pids+=($!)</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"># 等待所有任务完成</span><br><span class="line">wait</span><br></pre></td></tr></table></figure>

<p>该方法按5条任务一组分批运行</p>
<h2 id="方法3"><a href="#方法3" class="headerlink" title="方法3"></a>方法3</h2><p>使用 GNU parallel 工具来实现在 shell 中同时执行多个进程。</p>
<p>创建一个包含 30 个任务的文件 tasks.txt，每行一个任务。使用 parallel 命令来执行任务。使用 –jobs 参数指定使用 5 个进程来执行任务。使用 –joblog 参数指定记录任务执行的日志。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat tasks.txt | parallel -j 5 --joblog joblog.txt ./run_task.sh &#123;&#125;</span><br></pre></td></tr></table></figure>





<h2 id="Bash-Debug"><a href="#Bash-Debug" class="headerlink" title="Bash Debug"></a>Bash Debug</h2><h3 id="set-euxo-pipefail"><a href="#set-euxo-pipefail" class="headerlink" title="set -euxo pipefail"></a>set -euxo pipefail</h3><p>有些开发人员会用Bash来实现很复杂的功能，就像使用别的高级语言一样。他可能觉得自己很牛逼但其他人早就想锤爆他了，Bash的可读性和可维护性远远低于任何高级语言。更要命的是，Bash并没有方便的调试工具和防错机制，出了问题你要排查半天。</p>
<p>在Ruby或者Python等高级语言里，你很容易知道错误是哪行什么类型的错误，还有IDE的Debugger加持。而Bash只能看源码，通过打印log等非常低效的方式调试。</p>
<p>本文将介绍Bash中 <code>set -euxo pipefail</code>，它们可以帮助你写出更容易维护也更安全的脚本。这也是Bash脚本的终极调试手段，希望你以后在自己的脚本中加上这么一行，头顶也能少秃一点。</p>
<h3 id="set-e"><a href="#set-e" class="headerlink" title="set -e"></a>set -e</h3><p><code>set -e</code> 选项可以让你的脚本在出现异常时马上退出，后续命令不再执行。默认情况下Shell脚本不会因为错误而结束执行，但大多数情况是，我们希望出现异常时就不要再往下走了。假如你的<code>if</code>判断条件里会出现异常，这时脚本也会直接退出，但可能这并不是你期望的情况，这时你可以在判断语句后加上 <code>|| true</code> 来阻止退出。</p>
<h3 id="set-o-pipefail"><a href="#set-o-pipefail" class="headerlink" title="set -o pipefail"></a>set -o pipefail</h3><p>默认情况下Bash只会检查管道（pipeline）操作最后一个命令的返回值，假如最右边的命令成功那么它就认为这个语句没问题。这个行为其实是很不安全的，所以就有了<code>set -o pipefail</code>。这个特别的选项表示在管道连接的命令中，只要有任何一个命令失败（返回值非0），则整个管道操作被视为失败。只有管道中所有命令都成功执行了这个管道才算成功执行。</p>
<h3 id="set-u"><a href="#set-u" class="headerlink" title="set -u"></a>set -u</h3><p><code>set -u</code> 比较容易理解，Bash会把所有未定义的变量视为错误。默认情况下Bash会将未定义的变量视为空，不会报错，这也是很多坑的来源。也许由于变量名的细微差别让你查半天最后骂骂咧咧。</p>
<h3 id="set-x"><a href="#set-x" class="headerlink" title="set -x"></a>set -x</h3><p><code>set -x</code> 可以让Bash把每个命令在执行前先打印出来，你可以认为这就是Bash的Debug开关。它的好处当然显而易见，方便你快速找到有问题的脚本位置，但是也坏处也有吧，就是Bash的log会格外的乱。另外，它在打印命令前会把变量先解析出来，所以你可以知道当前执行的语句的变量值是什么。纵然log可能会乱一些，总比头发乱一些好，所以建议还是打开这个开关。</p>
<p>以上就是关于 <code>set -euxo pipefail</code> 的介绍，从Shell脚本的编写角度看，我十分建议所有人都应该在自己的Shell脚本里加上这么一行。但从实际情况看，如果你的Shell脚本已经超过200行，我更建议你换成高级语言来实现。比如Python或者Ruby甚至Perl，这些高级语言在Linux系统都是内置的，注意版本兼容性就好，写起来比Shell舒服太多了。</p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Auto Backup</title>
    <url>/2022/05/01/Tool/Auto%20Backup/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="gitee在linux下自动备份"><a href="#gitee在linux下自动备份" class="headerlink" title="gitee在linux下自动备份"></a>gitee在linux下自动备份</h2><p>参考：<a href="https://www.cnblogs.com/sdgtxuyong/p/15331591.html">https://www.cnblogs.com/sdgtxuyong/p/15331591.html</a></p>
<h3 id="1-生产密钥"><a href="#1-生产密钥" class="headerlink" title="1.生产密钥"></a>1.生产密钥</h3><p><code>ssh-keygen -t rsa -C &quot;your gitee email address&quot;</code></p>
<p>如果以有<code> ~/.ssh/id_rsa.pub</code>，则跳过该步骤</p>
<h3 id="2-查看密钥"><a href="#2-查看密钥" class="headerlink" title="2.查看密钥"></a>2.查看密钥</h3><p>Your identification has been saved in &#x2F;root&#x2F;.ssh&#x2F;id_rsa.<br>Your public key has been saved in &#x2F;root&#x2F;.ssh&#x2F;id_rsa.pub.</p>
<p>到&#x2F;root&#x2F;.ssh&#x2F;查看 cat id_rsa.pub 复制里面的内容。是以ssh-rsa 开头的。</p>
<p> <img src="https://p.ipic.vip/g7fbex.png" alt="img"></p>
<h3 id="3-更改gitee的提交方式"><a href="#3-更改gitee的提交方式" class="headerlink" title="3.更改gitee的提交方式"></a>3.更改gitee的提交方式</h3><p>git remote -v 查看原来的提交方式，这里不能用https的方式提交，需要改为ssh的</p>
<p>git remote rm origin</p>
<p>git remote add origin <a href="mailto:&#103;&#105;&#116;&#x40;&#103;&#x69;&#x74;&#101;&#101;&#x2e;&#x63;&#111;&#109;">&#103;&#105;&#116;&#x40;&#103;&#x69;&#x74;&#101;&#101;&#x2e;&#x63;&#111;&#109;</a>:xxxx.git</p>
<h3 id="4-添加密钥到gitee网站，可信任"><a href="#4-添加密钥到gitee网站，可信任" class="headerlink" title="4.添加密钥到gitee网站，可信任"></a>4.添加密钥到gitee网站，可信任</h3><p>打开gitee网址，添加cat的id_rsa.pub 里面的内容。</p>
<p><img src="https://p.ipic.vip/6cv0qq.png" alt="img"></p>
<p>这时候，再提交一次，需要输入一次密码，以后就不用输入了。</p>
<h3 id="5-编写自动执行脚本"><a href="#5-编写自动执行脚本" class="headerlink" title="5.编写自动执行脚本"></a>5.编写自动执行脚本</h3><h4 id="mysqlBackup-sh"><a href="#mysqlBackup-sh" class="headerlink" title="mysqlBackup.sh"></a>mysqlBackup.sh</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line"></span><br><span class="line">time1=$(date -d &#x27;-2 month&#x27; &quot;+%Y%m%d&quot;)</span><br><span class="line">time2=$(date &quot;+%Y%m%d&quot;)</span><br><span class="line">time=$(date &quot;+%Y-%m-%d %X&quot;)</span><br><span class="line">cd $WORK</span><br><span class="line">echo $time &gt;&gt; ./upload.log</span><br><span class="line">git add -A</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">echo</span> <span class="variable">$time1</span></span></span><br><span class="line">sleep 2</span><br><span class="line">git commit -m &quot;$time2&quot;</span><br><span class="line">sleep 2</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">chmod</span>+x mysqlBackup.sh  <span class="comment"># 改为可执行</span></span></span><br></pre></td></tr></table></figure>



<h4 id="crontab-e"><a href="#crontab-e" class="headerlink" title="crontab -e"></a>crontab -e</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*/5 * * * * ll</span><br><span class="line">0 16 * * * /root/mysqlBackup.sh</span><br></pre></td></tr></table></figure>

<p>每日16点做备份上传至gitee</p>
<h4 id="WZCS"><a href="#WZCS" class="headerlink" title="WZCS"></a>WZCS</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">0 14 * * * sh /work/home/acyii6v8kt/WORK/Palm/Backup_WZCS-Palm.sh</span><br><span class="line">0 15 * * * sh /work/home/acyii6v8kt/WORK/Downscaling/Backup_WZCS-Downscaling.sh</span><br><span class="line">0 2 * * * sh /work/home/acyii6v8kt/WORK/DATA_download/Backup_WZCS-DATA_download.sh</span><br><span class="line">0 3 * * * sh /work/home/acyii6v8kt/WORK/GSI/Backup_WZCS-GSI.sh</span><br><span class="line">0 0 * * * delete -rf /home_gkx/users/nsgkx_zx2/.trash/*</span><br><span class="line"></span><br><span class="line">30 0 * * * sh /work/home/acyii6v8kt/WORK/DATA_download/For_HAFS/download_12.sh &gt;&gt; /work/home/acyii6v8kt/DATA/For_HAFS/log.out</span><br><span class="line">30 12 * * * sh /work/home/acyii6v8kt/WORK/DATA_download/For_HAFS/download_00.sh &gt;&gt; /work/home/acyii6v8kt/DATA/For_HAFS/log.out</span><br><span class="line"></span><br><span class="line">0 16 * * * sh /work/home/acyii6v8kt/WORK/Palm/Operational/check_HAFS_pm_001.sh</span><br><span class="line">0 4 * * * sh /work/home/acyii6v8kt/WORK/Palm/Operational/check_HAFS_am_001.sh</span><br><span class="line"></span><br><span class="line">0 7 * * * sh /work/home/acyii6v8kt/WORK/Palm/Operational/check_HAFS_am_036.sh</span><br><span class="line">0 8 * * * sh /work/home/acyii6v8kt/WORK/Palm/Operational/run_am.sh &gt; /work/home/acyii6v8kt/WORK/Palm/Operational/log.run 2&gt;&amp;1</span><br><span class="line">0 16 * * * sh /work/home/acyii6v8kt/WORK/Palm/Operational/output_am.sh &gt; /work/home/acyii6v8kt/WORK/Palm/Operational/log.output 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line">0 19 * * * sh /work/home/acyii6v8kt/WORK/Palm/Operational/check_HAFS_pm_036.sh</span><br><span class="line">0 20 * * * sh /work/home/acyii6v8kt/WORK/Palm/Operational/run_pm.sh &gt; /work/home/acyii6v8kt/WORK/Palm/Operational/log.run 2&gt;&amp;1</span><br><span class="line">0 4 * * * sh /work/home/acyii6v8kt/WORK/Palm/Operational/output_pm.sh &gt; /work/home/acyii6v8kt/WORK/Palm/Operational/log.output 2&gt;&amp;1</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>CDO QA</title>
    <url>/2022/05/01/Tool/CDO%20QA/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>来源：<a href="https://mp.weixin.qq.com/s/RVU7Q9wg1W6IR-0DAHtJQw">https://mp.weixin.qq.com/s/RVU7Q9wg1W6IR-0DAHtJQw</a></p>
<p>总结整理了Cdo官网中最常见的，或者说被问得最多的问题，帮助下次可以更容易的找到问题的答案。</p>
<p>当然，cdo的许多命令是可以同时运行的，避免重复输出&#x2F;输入数据。</p>
<h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a><strong>目录</strong></h3><ol>
<li>如何获得帮助？[1]</li>
<li>如何在出版物中引用 CDO 用户指南？[2]</li>
<li>如何查看文件中的内容？[3]</li>
<li>如何查看文件中的时间步长？[4]</li>
<li>我的文件中有多少个时间步长？[5]</li>
<li>如何选择变量并将其保存到新文件？[6]</li>
<li>如何提取时间步长？[7]</li>
<li>如何将纬度的顺序从 N-S 反转为 S-N？[8]</li>
<li>如何将温度单位从 K 转换为摄氏度？[9]</li>
<li>如何将常数值设置为缺失值？[10]</li>
<li>如何将值范围设置为缺失值？[11]</li>
<li>如何使用纬度&#x2F;经度值（度）提取子区域？[12]</li>
<li>如何更改变量的属性？[13]</li>
<li>如何计算网格单元面积（以平方米为单位）？[14]</li>
<li>如何将数据插入&#x2F;重新映射到另一个网格？[15]</li>
<li>如何将 ASCII 文件转换为 netCDF？[16]</li>
<li>如何从 netCDF&#x2F;GRIB 文件中提取数据并将其写入 ASCII 文件？[17]</li>
<li>如何将我的数据重新映射到全局 1x1 度网格？[18]</li>
<li>当我必须将多个文件重新映射到高斯 N32 网格时，如何创建权重文件？[19]</li>
<li>如何将我的数据重新映射到另一个数据文件的不同网格？[20]</li>
<li>如果数据文件中缺少坐标变量纬度和经度，如何添加？[21]</li>
<li>如何添加缺失的时间坐标变量？[22]</li>
<li>如何删除大小为 1 的维度？[23]</li>
<li>如何设置或更改缺失值（或将 NaN 更改为缺失值）？[24]</li>
<li>如何将所有缺失值设置为最接近的非缺失值？[25]</li>
<li>如何创建 1x1 度陆地&#x2F;海洋掩模？[26]</li>
<li>如何使用掩模文件？[27]</li>
<li>如何将我的模型级别插入到压力级别？[28]</li>
<li>如何将简化高斯网格上的数据转换为常规网格？[29]</li>
<li>如何将包含多年的文件拆分为单个年度文件？[30]</li>
<li>如何从我的数据中提取像 JFMAM 这样的特殊季节？[31]</li>
<li>如何在不知道我的文件中有多少个时间步的情况下提取最后一个时间步？[32]</li>
<li>如何从多个文件中提取相同级别的相同变量？[33]</li>
<li>如何将 seasavg 的默认季节 DJF 更改为 JFM？[34]</li>
<li>如何将 GrADS 二进制文件转换为 netCDF？[35]</li>
<li>如何创建变量的快速查看图？[36]</li>
<li>如何检索温度低于 0 的霜冻天数？[37]</li>
<li>如何计算前 31 个时间步长的两个文件的偏差？[38]</li>
<li>如何删除 2 月 29 日？[39]</li>
<li>当网格信息存储在单独的文件中时，如何重新映射 ICON 数据？[40]</li>
<li>如何一步更改变量和全局文件属性？[41]</li>
<li>为什么我不能更改纬度、经度和级别变量的属性和名称？[42]</li>
<li>如何将我的级别值和单位从厘米转换为米？[43]</li>
<li>为什么在将 GRIB2 转换为 netCDF 时出现错误，但 CDO 将 grb2 列为受支持？[44]</li>
<li>为什么从 netCDF4 文件中提取一个时间步长时会得到更大的文件？[45]</li>
<li>如何将 6 小时数据插入到 1 小时数据中？[46]</li>
<li>如何加快我的脚本速度？[47]</li>
</ol>
<h3 id="如何获得帮助？"><a href="#如何获得帮助？" class="headerlink" title="如何获得帮助？"></a><strong>如何获得帮助？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cdo -V</span><br></pre></td></tr></table></figure>

<h3 id="如何在出版物中引用-CDO-用户指南？"><a href="#如何在出版物中引用-CDO-用户指南？" class="headerlink" title="如何在出版物中引用 CDO 用户指南？"></a><strong>如何在出版物中引用 CDO 用户指南？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://code.mpimet.mpg.de/projects/cdo/wiki/Cite</span><br></pre></td></tr></table></figure>

<h3 id="如何查看文件中的内容？"><a href="#如何查看文件中的内容？" class="headerlink" title="如何查看文件中的内容？"></a><strong>如何查看文件中的内容？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cdo sinfon infile.nc</span><br></pre></td></tr></table></figure>

<h3 id="如何查看文件中的时间步长？"><a href="#如何查看文件中的时间步长？" class="headerlink" title="如何查看文件中的时间步长？"></a><strong>如何查看文件中的时间步长？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cdo showtimestamp rectilinear_grid_2D.nc</span><br></pre></td></tr></table></figure>

<h3 id="我的文件中有多少个时间步长？"><a href="#我的文件中有多少个时间步长？" class="headerlink" title="我的文件中有多少个时间步长？"></a><strong>我的文件中有多少个时间步长？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cdo ntime rectilinear_grid_2D.nc</span><br></pre></td></tr></table></figure>

<h3 id="如何选择变量并将其保存到新文件？"><a href="#如何选择变量并将其保存到新文件？" class="headerlink" title="如何选择变量并将其保存到新文件？"></a><strong>如何选择变量并将其保存到新文件？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cdo -selname,variable infile outfile</span><br><span class="line">Ex:</span><br><span class="line">cdo -selname,tsurf rectilinear_grid_2D.nc tsurf_rectilinear_grid_2D.nc</span><br><span class="line">cdo -selname,tsurf,precip rectilinear_grid_2D.nc tsurf_precip_rectilinear_grid_2D.nc</span><br></pre></td></tr></table></figure>

<h3 id="如何提取时间步长？"><a href="#如何提取时间步长？" class="headerlink" title="如何提取时间步长？"></a><strong>如何提取时间步长？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cdo seltimestep,t infile outfile</span><br></pre></td></tr></table></figure>

<h3 id="如何将纬度的顺序从-N-S-反转为-S-N？（注意：不是反过来）"><a href="#如何将纬度的顺序从-N-S-反转为-S-N？（注意：不是反过来）" class="headerlink" title="如何将纬度的顺序从 N-S 反转为 S-N？（注意：不是反过来）"></a><strong>如何将纬度的顺序从 N-S 反转为 S-N？（注意：不是反过来）</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cdo invertlat infile outfile</span><br></pre></td></tr></table></figure>

<h3 id="如何将温度单位从-K-转换为摄氏度？"><a href="#如何将温度单位从-K-转换为摄氏度？" class="headerlink" title="如何将温度单位从 K 转换为摄氏度？"></a><strong>如何将温度单位从 K 转换为摄氏度？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cdo addc,-273.15 infile outfile</span><br></pre></td></tr></table></figure>

<h3 id="如何将常数值设置为缺失值？"><a href="#如何将常数值设置为缺失值？" class="headerlink" title="如何将常数值设置为缺失值？"></a><strong>如何将常数值设置为缺失值？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cdo setctomiss,value infile outfile</span><br></pre></td></tr></table></figure>

<h3 id="如何将值范围设置为缺失值？"><a href="#如何将值范围设置为缺失值？" class="headerlink" title="如何将值范围设置为缺失值？"></a><strong>如何将值范围设置为缺失值？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cdo setrtomiss,rmin,rmax infile outfile</span><br><span class="line"></span><br><span class="line">EX:</span><br><span class="line">cdo setrtomiss,0,273.15 infile outfile</span><br></pre></td></tr></table></figure>

<h3 id="如何使用纬度-x2F-经度值（度）提取子区域？"><a href="#如何使用纬度-x2F-经度值（度）提取子区域？" class="headerlink" title="如何使用纬度&#x2F;经度值（度）提取子区域？"></a><strong>如何使用纬度&#x2F;经度值（度）提取子区域？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cdo -sellonlatbox,lonmin,lonmax,latmin,latmax infile outfile</span><br></pre></td></tr></table></figure>

<h3 id="如何更改变量的属性？"><a href="#如何更改变量的属性？" class="headerlink" title="如何更改变量的属性？"></a><strong>如何更改变量的属性？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cdo -setattribute,tas@units=&quot;K&quot; infile outfile</span><br></pre></td></tr></table></figure>

<h3 id="如何计算网格单元面积（以平方米为单位）？"><a href="#如何计算网格单元面积（以平方米为单位）？" class="headerlink" title="如何计算网格单元面积（以平方米为单位）？"></a><strong>如何计算网格单元面积（以平方米为单位）？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cdo gridarea infile outfile</span><br></pre></td></tr></table></figure>

<h3 id="如何将数据插入-x2F-重新映射到另一个网格？"><a href="#如何将数据插入-x2F-重新映射到另一个网格？" class="headerlink" title="如何将数据插入&#x2F;重新映射到另一个网格？"></a><strong>如何将数据插入&#x2F;重新映射到另一个网格？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gridfile.txt:</span><br><span class="line"></span><br><span class="line">gridtype  = lonlat</span><br><span class="line">xsize     = 300</span><br><span class="line">ysize     = 207</span><br><span class="line">xfirst    = 47.51</span><br><span class="line">xinc      = 0.033333333</span><br><span class="line">yfirst    = 23.61</span><br><span class="line">yinc      = 0.033333333</span><br><span class="line"></span><br><span class="line">cdo remapbil,gridfile.txt infile outfile</span><br></pre></td></tr></table></figure>

<h3 id="如何将-ASCII-文件转换为-netCDF？"><a href="#如何将-ASCII-文件转换为-netCDF？" class="headerlink" title="如何将 ASCII 文件转换为 netCDF？"></a><strong>如何将 ASCII 文件转换为 netCDF？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gridfile.txt:</span><br><span class="line"></span><br><span class="line">gridtype = lonlat</span><br><span class="line">xsize = 32</span><br><span class="line">ysize = 64</span><br><span class="line">xfirst = 0.0</span><br><span class="line">xinc   = 1.0</span><br><span class="line">yfirst = 0.0</span><br><span class="line">yinc   = 1.0</span><br><span class="line"></span><br><span class="line">cdo -f nc -settaxis,2000-01-01,00:00:00,1day -setname,mask -input,gridfile.txt outfile.nc &lt; infile.txt</span><br></pre></td></tr></table></figure>

<h3 id="如何从-netCDF-x2F-GRIB-文件中提取数据并将其写入-ASCII-文件？"><a href="#如何从-netCDF-x2F-GRIB-文件中提取数据并将其写入-ASCII-文件？" class="headerlink" title="如何从 netCDF&#x2F;GRIB 文件中提取数据并将其写入 ASCII 文件？"></a><strong>如何从 netCDF&#x2F;GRIB 文件中提取数据并将其写入 ASCII 文件？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cdo -outputtab,name,date,lon,lat,value -sellevel,100000 -selname,variable infile.nc &gt; variable_lev100000.txt</span><br></pre></td></tr></table></figure>

<h3 id="如何将我的数据重新插值到全局-1x1-度网格？"><a href="#如何将我的数据重新插值到全局-1x1-度网格？" class="headerlink" title="如何将我的数据重新插值到全局 1x1 度网格？"></a><strong>如何将我的数据重新插值到全局 1x1 度网格？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cdo remapbil,r360x180 infile outfile</span><br></pre></td></tr></table></figure>

<h3 id="当我必须将多个文件重新映射到高斯-N32-网格时，如何创建权重文件？"><a href="#当我必须将多个文件重新映射到高斯-N32-网格时，如何创建权重文件？" class="headerlink" title="当我必须将多个文件重新映射到高斯 N32 网格时，如何创建权重文件？"></a><strong>当我必须将多个文件重新映射到高斯 N32 网格时，如何创建权重文件？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cdo genbil,n32 infile weights.nc</span><br><span class="line">cdo remap,n32,weights.nc infile outfile    </span><br></pre></td></tr></table></figure>

<h3 id="如何将我的数据重新映射到另一个数据文件的不同网格？"><a href="#如何将我的数据重新映射到另一个数据文件的不同网格？" class="headerlink" title="如何将我的数据重新映射到另一个数据文件的不同网格？"></a><strong>如何将我的数据重新映射到另一个数据文件的不同网格？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cdo -remapycon,other_data.nc infile outfile</span><br></pre></td></tr></table></figure>

<h3 id="如果数据文件中缺少坐标变量纬度和经度，如何添加？"><a href="#如果数据文件中缺少坐标变量纬度和经度，如何添加？" class="headerlink" title="如果数据文件中缺少坐标变量纬度和经度，如何添加？"></a><strong>如果数据文件中缺少坐标变量纬度和经度，如何添加？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cdo -f nc -setgrid,r360x180 infile outfile</span><br><span class="line"></span><br><span class="line">gridtype  = lonlat</span><br><span class="line">xsize     = 360</span><br><span class="line">ysize     = 180</span><br><span class="line">xfirst    = 10.0</span><br><span class="line">xinc      = 0.125 </span><br><span class="line">yfirst    = 0.0</span><br><span class="line">yinc      = 0.125</span><br><span class="line"></span><br><span class="line">cdo -f nc -setgrid,grid_latlon_global.txt infile outfile_with_latlon.nc</span><br></pre></td></tr></table></figure>

<h3 id="如何添加缺失的时间坐标变量？"><a href="#如何添加缺失的时间坐标变量？" class="headerlink" title="如何添加缺失的时间坐标变量？"></a><strong>如何添加缺失的时间坐标变量？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cdo -r -f nc -settaxis,2000-01-01,12:00:00,1day infile outfile</span><br></pre></td></tr></table></figure>

<h3 id="如何删除大小为-1-的维度？"><a href="#如何删除大小为-1-的维度？" class="headerlink" title="如何删除大小为 1 的维度？"></a><strong>如何删除大小为 1 的维度？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cdo --reduce_dim infile outfile</span><br></pre></td></tr></table></figure>

<h3 id="如何设置或更改缺失值（或将-NaN-更改为缺失值）？"><a href="#如何设置或更改缺失值（或将-NaN-更改为缺失值）？" class="headerlink" title="如何设置或更改缺失值（或将 NaN 更改为缺失值）？"></a><strong>如何设置或更改缺失值（或将 NaN 更改为缺失值）？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Set missing value to a constant value, e.g. -9999</span><br><span class="line"></span><br><span class="line">cdo setmisstoc,-9999 infile outfile</span><br><span class="line"></span><br><span class="line">Set constant value e.g. -999.9 to missing value</span><br><span class="line"></span><br><span class="line">cdo setctomiss,-999.9 infile outfile</span><br><span class="line"></span><br><span class="line">Set NaN to missing value and change the missing value to -9999.9</span><br><span class="line"></span><br><span class="line">cdo setmissval,nan infile outfile</span><br><span class="line">cdo setmissval,-9999.9 -setmissval,nan ifile ofile</span><br></pre></td></tr></table></figure>

<h3 id="如何将所有缺失值设置为最接近的非缺失值？"><a href="#如何将所有缺失值设置为最接近的非缺失值？" class="headerlink" title="如何将所有缺失值设置为最接近的非缺失值？"></a><strong>如何将所有缺失值设置为最接近的非缺失值？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cdo -setmisstonn infile outfile</span><br></pre></td></tr></table></figure>

<h3 id="如何创建-1x1-度陆地-x2F-海洋掩模？"><a href="#如何创建-1x1-度陆地-x2F-海洋掩模？" class="headerlink" title="如何创建 1x1 度陆地&#x2F;海洋掩模？"></a><strong>如何创建 1x1 度陆地&#x2F;海洋掩模？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Create a file with masked land:</span><br><span class="line"></span><br><span class="line">cdo -f nc -setrtomiss,0,10000 -topo masked_land.nc</span><br><span class="line"></span><br><span class="line">Create a file with masked ocean:</span><br><span class="line"></span><br><span class="line">cdo -f nc -setrtomiss,-20000,0 -topo masked_ocean.nc</span><br></pre></td></tr></table></figure>

<h3 id="如何使用掩模文件？"><a href="#如何使用掩模文件？" class="headerlink" title="如何使用掩模文件？"></a><strong>如何使用掩模文件？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">In the forum section &#x27;Operator News&#x27; there is an article &#x27;Masking - more general&#x27; which describes the</span><br><span class="line">creation and use of mask files in more detail. https://code.mpimet.mpg.de/boards/53/topics/10933</span><br></pre></td></tr></table></figure>

<h3 id="如何将我的模型级别插入到压力级别？"><a href="#如何将我的模型级别插入到压力级别？" class="headerlink" title="如何将我的模型级别插入到压力级别？"></a><strong>如何将我的模型级别插入到压力级别？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cdo ml2pl,92500,85000,50000,20000 &lt;input file&gt; &lt;output file&gt;</span><br></pre></td></tr></table></figure>

<h3 id="如何将简化高斯网格上的数据转换为常规网格？"><a href="#如何将简化高斯网格上的数据转换为常规网格？" class="headerlink" title="如何将简化高斯网格上的数据转换为常规网格？"></a><strong>如何将简化高斯网格上的数据转换为常规网格？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cdo -R copy infile outfile</span><br><span class="line"></span><br><span class="line">or</span><br><span class="line"></span><br><span class="line">cdo -setgridtype,regular infile outfile</span><br></pre></td></tr></table></figure>

<h3 id="如何将包含多年的文件拆分为单个年度文件？"><a href="#如何将包含多年的文件拆分为单个年度文件？" class="headerlink" title="如何将包含多年的文件拆分为单个年度文件？"></a><strong>如何将包含多年的文件拆分为单个年度文件？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">You can do it manually year by year, e.g. to select the years 1960-2100:</span><br><span class="line"></span><br><span class="line">cdo -selyear,1960 infile 1960_data.nc</span><br><span class="line">cdo -selyear,1961 infile 1961_data.nc</span><br><span class="line">...</span><br><span class="line">cdo -selyear,2100 infile 2100_data.nc</span><br><span class="line">or more comfortable - do it in one command line</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">for year in $(seq -w 1961 1 2100); do cdo -f nc -selyear,$year infile $&#123;year&#125;_data.nc ; done</span><br></pre></td></tr></table></figure>

<h3 id="如何从我的数据中提取像-JFMAM-这样的特殊季节？"><a href="#如何从我的数据中提取像-JFMAM-这样的特殊季节？" class="headerlink" title="如何从我的数据中提取像 JFMAM 这样的特殊季节？"></a><strong>如何从我的数据中提取像 JFMAM 这样的特殊季节？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">To chose user defined seasons use the select operator with the parameter season</span><br><span class="line">where SEASON is a comma separated list of seasons (substring of DJFMAMJJA- SOND or ANN):</span><br><span class="line"></span><br><span class="line">cdo select,season=SEASON infile outfile</span><br><span class="line"></span><br><span class="line">here you have to do</span><br><span class="line"></span><br><span class="line">cdo select,season=JFMAM infile outfile</span><br></pre></td></tr></table></figure>

<h3 id="如何在不知道我的文件中有多少个时间步的情况下提取最后一个时间步？"><a href="#如何在不知道我的文件中有多少个时间步的情况下提取最后一个时间步？" class="headerlink" title="如何在不知道我的文件中有多少个时间步的情况下提取最后一个时间步？"></a><strong>如何在不知道我的文件中有多少个时间步的情况下提取最后一个时间步？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cdo select,timestep=-1 infile outfile</span><br></pre></td></tr></table></figure>

<h3 id="如何从多个文件中提取相同级别的相同变量？"><a href="#如何从多个文件中提取相同级别的相同变量？" class="headerlink" title="如何从多个文件中提取相同级别的相同变量？"></a><strong>如何从多个文件中提取相同级别的相同变量？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cdo select,name=T,U,V,level=200,500,850 infile1 infile2 infile3 outfile</span><br></pre></td></tr></table></figure>

<h3 id="如何将-seasavg-的默认季节-DJF-更改为-JFM？"><a href="#如何将-seasavg-的默认季节-DJF-更改为-JFM？" class="headerlink" title="如何将 seasavg 的默认季节 DJF 更改为 JFM？"></a><strong>如何将 seasavg 的默认季节 DJF 更改为 JFM？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Change the season months for e.g. seasavg (default DJF, MAM, JJA, SON) to e.g. JFM, AMJ, JAS and OND</span><br><span class="line"></span><br><span class="line">export CDO_SEASON_START=JAN</span><br><span class="line"></span><br><span class="line">Check the used seasons with -v option</span><br><span class="line"></span><br><span class="line">cdo -v seasavg infile outfile</span><br></pre></td></tr></table></figure>

<h3 id="如何将-GrADS-二进制文件转换为-netCDF？"><a href="#如何将-GrADS-二进制文件转换为-netCDF？" class="headerlink" title="如何将 GrADS 二进制文件转换为 netCDF？"></a><strong>如何将 GrADS 二进制文件转换为 netCDF？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cdo -f nc import_binary infile.ctl outfile</span><br></pre></td></tr></table></figure>

<h3 id="如何创建变量的快速查看图？"><a href="#如何创建变量的快速查看图？" class="headerlink" title="如何创建变量的快速查看图？"></a><strong>如何创建变量的快速查看图？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cdo shaded,device=&quot;pdf&quot; -seltimestep,25 -selname,tas in.nc plotfile_t25</span><br></pre></td></tr></table></figure>

<h3 id="如何检索温度低于-0-的霜冻天数？"><a href="#如何检索温度低于-0-的霜冻天数？" class="headerlink" title="如何检索温度低于 0 的霜冻天数？"></a><strong>如何检索温度低于 0 的霜冻天数？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cdo -f nc -timsum -ltc,0 infile outfile</span><br><span class="line"></span><br><span class="line">or</span><br><span class="line"></span><br><span class="line">cdo -f nc -timsum -expr,&#x27;t2min = ((t2min &lt; 0.0)) ? 1.0 : (t2min/0.0)&#x27; infile outfile</span><br></pre></td></tr></table></figure>

<h3 id="如何计算前-31-个时间步长的两个文件的偏差？"><a href="#如何计算前-31-个时间步长的两个文件的偏差？" class="headerlink" title="如何计算前 31 个时间步长的两个文件的偏差？"></a><strong>如何计算前 31 个时间步长的两个文件的偏差？</strong></h3><p>general: <code>bias = sum(obs(file1)-sim(file2))/ntimes</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cdo -divc,31 -timsum -sub -seltimestep,1/31 file1 file2 outfile</span><br></pre></td></tr></table></figure>

<h3 id="如何删除-2-月-29-日？"><a href="#如何删除-2-月-29-日？" class="headerlink" title="如何删除 2 月 29 日？"></a><strong>如何删除 2 月 29 日？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cdo delete,month=2,day=29 infile outfile</span><br></pre></td></tr></table></figure>

<h3 id="当网格信息存储在单独的文件中时，如何重新映射-ICON-数据？"><a href="#当网格信息存储在单独的文件中时，如何重新映射-ICON-数据？" class="headerlink" title="当网格信息存储在单独的文件中时，如何重新映射 ICON 数据？"></a><strong>当网格信息存储在单独的文件中时，如何重新映射 ICON 数据？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Assume you want to remap the ICON data to a global 1x1 degree grid.</span><br><span class="line">First, compute the weights using the separated grid file</span><br><span class="line"></span><br><span class="line">cdo genbil,r360x180 ICON_grid_information.nc weights.nc</span><br><span class="line"></span><br><span class="line">then remap ICON data</span><br><span class="line"></span><br><span class="line">cdo remap,r360x180,weights.nc -setgrid,ICON_grid_information.nc infile outfile</span><br></pre></td></tr></table></figure>

<h3 id="如何一步更改变量和全局文件属性？"><a href="#如何一步更改变量和全局文件属性？" class="headerlink" title="如何一步更改变量和全局文件属性？"></a><strong>如何一步更改变量和全局文件属性？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cdo setattribute,FILE=myattributes.txt infile outfile</span><br></pre></td></tr></table></figure>

<p>E.g. myattributes.txt:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">**institute=&quot;My institute&quot; </span><br><span class="line">source=&quot;my_original_file.nc&quot; </span><br><span class="line">tas@coordinates=&quot;lat lon&quot; </span><br><span class="line">tas@units=&quot;degC&quot; </span><br><span class="line">pres@units=&quot;hPa&quot; **</span><br></pre></td></tr></table></figure>

<h3 id="为什么我不能更改纬度、经度和级别变量的属性和名称？"><a href="#为什么我不能更改纬度、经度和级别变量的属性和名称？" class="headerlink" title="为什么我不能更改纬度、经度和级别变量的属性和名称？"></a><strong>为什么我不能更改纬度、经度和级别变量的属性和名称？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ncatted -a units,lat,o,c,&quot;degrees_north&quot; -a units,lon,o,c,&quot;degrees_east&quot; infile outfile</span><br></pre></td></tr></table></figure>

<h3 id="如何将我的级别值和单位从厘米转换为米？"><a href="#如何将我的级别值和单位从厘米转换为米？" class="headerlink" title="如何将我的级别值和单位从厘米转换为米？"></a><strong>如何将我的级别值和单位从厘米转换为米？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/usr/bin/env bash</span><br><span class="line"></span><br><span class="line">infile=&quot;infile.nc&quot; </span><br><span class="line"></span><br><span class="line">levels=$(cdo -s showlevel $infile)</span><br><span class="line">echo &quot;levels = $levels&quot; </span><br><span class="line"></span><br><span class="line">i=0</span><br><span class="line">for value in $levels; do</span><br><span class="line">    v=$(echo &quot;scale=6; $value/100&quot; | bc -l)</span><br><span class="line">    echo &quot;$value cm = $v m &quot; </span><br><span class="line">    if [[ $i -gt 0 ]]; then</span><br><span class="line">       levelsm=$(echo &quot;$levelsm, $v&quot;)</span><br><span class="line">    else</span><br><span class="line">       levelsm=$v</span><br><span class="line">    fi</span><br><span class="line">    i=`expr $i + 1`</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">cat &gt; zaxis_meter.txt &lt;&lt; EOF</span><br><span class="line">zaxistype = depth_below_land</span><br><span class="line">size      = $i</span><br><span class="line">name      = olevel</span><br><span class="line">units     = &quot;m&quot; </span><br><span class="line">levels    = $levelsm</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">cdo -f nc setzaxis,zaxis_meter.txt $infile outfile.nc</span><br></pre></td></tr></table></figure>

<h3 id="为什么在将-GRIB2-转换为-netCDF-时出现错误，但-CDO-将-grb2-列为受支持？"><a href="#为什么在将-GRIB2-转换为-netCDF-时出现错误，但-CDO-将-grb2-列为受支持？" class="headerlink" title="为什么在将 GRIB2 转换为 netCDF 时出现错误，但 CDO 将 grb2 列为受支持？"></a><strong>为什么在将 GRIB2 转换为 netCDF 时出现错误，但 CDO 将 grb2 列为受支持？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grib_set -s editionNumber=1 infile.grb new_infile.grb</span><br></pre></td></tr></table></figure>

<h3 id="为什么从-netCDF4-文件中提取一个时间步长时会得到更大的文件？"><a href="#为什么从-netCDF4-文件中提取一个时间步长时会得到更大的文件？" class="headerlink" title="为什么从 netCDF4 文件中提取一个时间步长时会得到更大的文件？"></a><strong>为什么从 netCDF4 文件中提取一个时间步长时会得到更大的文件？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cdo -z zip -seltimestep,7 infile outfile</span><br></pre></td></tr></table></figure>

<h3 id="如何将-6-小时数据插入到-1-小时数据中？"><a href="#如何将-6-小时数据插入到-1-小时数据中？" class="headerlink" title="如何将 6 小时数据插入到 1 小时数据中？"></a><strong>如何将 6 小时数据插入到 1 小时数据中？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cdo inttime,6 infile outfile</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">or</span><br><span class="line"></span><br><span class="line">cdo inttime,2011-01-01,00:00,1hour infile outfile</span><br></pre></td></tr></table></figure>

<h3 id="如何加快我的脚本速度？"><a href="#如何加快我的脚本速度？" class="headerlink" title="如何加快我的脚本速度？"></a><strong>如何加快我的脚本速度？</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://code.mpimet.mpg.de/boards/53/topics/6672</span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="https://code.mpimet.mpg.de/projects/cdo/wiki/FAQ">https://code.mpimet.mpg.de/projects/cdo/wiki/FAQ</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>CDO Ref Card</title>
    <url>/2022/05/01/Tool/CDO%20Ref%20Card/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="pdfobject-container" data-target="https://docs.qq.com/pdf/DSmhBT1BNSXFKbGd2" data-height="1000px"></div>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>CDO User Guide</title>
    <url>/2022/05/01/Tool/CDO%20User%20Guide.md/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="pdfobject-container" data-target="https://docs.qq.com/pdf/DSndkWlBMck5NZUJo" data-height="1000px"></div>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>CDO</title>
    <url>/2022/05/01/Tool/CDO/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">cdo seltimestep,<span class="number">1</span>/<span class="number">31</span> <span class="number">1_WP_1d_00010101_00010629_grid_T</span>.nc MOD_ocn_1mon.nc</span><br><span class="line"></span><br><span class="line">ncks -d time,<span class="number">0</span>,<span class="number">9</span> infile outfile</span><br><span class="line"></span><br><span class="line">cdo <span class="keyword">select</span>,<span class="keyword">name</span>=tos,sos,mldr10_1 <span class="number">1_WP_1d_00010101_00010629_grid_T</span>.nc MOD_ocn_var.nc</span><br><span class="line"></span><br><span class="line">cdo seltimestep,<span class="number">1</span>/<span class="number">168</span> ta_Amon_HadGEM2-ES_piControl_r1i1p1_208412-<span class="number">209910.</span>nc ta_Amon_HadGEM2-ES_piControl_r1i1p1_208412-<span class="number">209811.</span>nc</span><br><span class="line"></span><br><span class="line">cdo <span class="keyword">select</span>,level=<span class="number">85000</span> ./temp/*.nc HadGEM2-ES_r1i1p1_v850.nc</span><br><span class="line"></span><br><span class="line">cdo <span class="keyword">select</span>,level=<span class="number">85000</span> *.nc /project/cas/ruyanc/WORK/<span class="keyword">data</span>/CMIP5/q850_add/CNRM-CM5_r1i1p1_q850.nc</span><br><span class="line"></span><br><span class="line">ncrcat ./temp/*.nc ACCESS1-<span class="number">3_r1i1p1_ua</span>.nc</span><br><span class="line"></span><br><span class="line">cdo <span class="keyword">select</span>,level=<span class="number">20000</span> ACCESS1-<span class="number">3_r1i1p1_ua</span>.nc ACCESS1-<span class="number">3_r1i1p1_u200</span>.nc</span><br><span class="line"></span><br><span class="line">cdo <span class="keyword">select</span>,level=<span class="number">200</span> ./temp/*.nc HadGEM2-ES_r1i1p1_v200.nc</span><br><span class="line"></span><br><span class="line">cdo <span class="keyword">select</span>,level=<span class="number">850</span> toga_ersstv3b_ens01_Q_188001-<span class="number">201612.</span>nc toga_ersstv3b_ens01_Q850_188001-<span class="number">201612.</span>nc</span><br><span class="line"></span><br><span class="line">cdo <span class="keyword">select</span>,<span class="keyword">name</span>=DTCOND,QRL,QRS,DTV ./temp/*.nc CAM4_EN_plusQ0p15_heating_000210-<span class="number">000304.</span>nc</span><br><span class="line"></span><br><span class="line">cdo <span class="keyword">select</span>,<span class="keyword">name</span>=TS ./temp/*.nc CAM4_EN_plusQ0p15_TS_002010-<span class="number">002104.</span>nc</span><br><span class="line"></span><br><span class="line">cdo <span class="keyword">select</span>,<span class="keyword">name</span>=PSL ./temp/*.nc CAM4_EN_plusQ0p15_PSL_002010-<span class="number">002104.</span>nc</span><br><span class="line"></span><br><span class="line">cdo <span class="keyword">select</span>,<span class="keyword">name</span>=Nudge_T ./temp/*.nc CAM4_EN_plusQ0p51_Nudge_T_002010-<span class="number">002104.</span>nc</span><br><span class="line"></span><br><span class="line">cdo <span class="keyword">select</span>,<span class="keyword">name</span>=PS,PHIS ./temp/*.nc CAM4_EN_PS_PHIS_000310-<span class="number">000404.</span>nc</span><br></pre></td></tr></table></figure>



<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">cdo cat ifile1 ifile2 ifile3 ofile</span><br><span class="line"></span><br><span class="line">cdo <span class="keyword">select</span>,<span class="keyword">name</span>=T,U,V,level=<span class="number">200</span>,<span class="number">500</span>,<span class="number">850</span> ifile1 ifile2 ifile3 ofile</span><br><span class="line"></span><br><span class="line">cdo remapbil,r144*<span class="number">72</span> file_in file_out</span><br><span class="line"></span><br><span class="line">cdo remapbil,r360x180 -selvar,sst HadISST_sst.nc sst.nc</span><br></pre></td></tr></table></figure>





<h4 id="txt-to-nc"><a href="#txt-to-nc" class="headerlink" title="txt to nc"></a>txt to nc</h4><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">cdo -f nc input,r1x1,zaxis temp_z.nc &lt; temp_z.txt </span><br><span class="line"></span><br><span class="line">cdo -f nc input,r60x500 /Users/ruyanc/Desktop/SY6/<span class="keyword">DATA</span>/Infrared/From_YXH/To_NC/temperature_profile_20210909.nc &lt; /Users/ruyanc/Desktop/SY6/<span class="keyword">DATA</span>/Infrared/From_YXH/<span class="keyword">Data</span>/temperature_profile_20210909.txt</span><br></pre></td></tr></table></figure>



<h4 id="NCO"><a href="#NCO" class="headerlink" title="NCO"></a>NCO</h4><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">ncrcat -v ts -d lev,<span class="number">0</span> /nfs2/Models/FGOALS-gc-script/dataall/data_ocn/MMEAN0001-??.nc ts.nc</span><br><span class="line"></span><br><span class="line">ncrcat -d plev,<span class="number">5</span> *.nc zg_Amon_bcc-csm1-<span class="number">1_000101</span>-<span class="number">050012.</span>nc</span><br><span class="line"></span><br><span class="line">ncatted -a coordinates,sst,c,c,<span class="string">&quot;nav_lon nav_lat&quot;</span> sst_data.nc</span><br></pre></td></tr></table></figure>





<h2 id="二进制文件批量转换NC"><a href="#二进制文件批量转换NC" class="headerlink" title="二进制文件批量转换NC"></a>二进制文件批量转换NC</h2><p><strong>以下全文代码和数据均已发布至和鲸社区，阅读原文前往，可一键fork跑通</strong></p>
<blockquote>
<p><a href="https://www.heywhale.com/mw/project/6427dda534db799a8ad3ce32">https://www.heywhale.com/mw/project/6427dda534db799a8ad3ce32</a></p>
</blockquote>
<p>气象中很多计算通过fortran来实现，通常输出为二进制文件，但是绘图（如NCL和python）读取nc文件更方便。xgrads或者CDO都可以根据ctl文件快速地将二进制文件转为nc文件。以下代码从文件名中解析时间，动态创建ctl文件用于转换文件格式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import os</span><br><span class="line">import glob</span><br><span class="line">from datetime import datetime</span><br><span class="line"></span><br><span class="line">def Bin2Nc(full_path):</span><br><span class="line">   </span><br><span class="line">    _, fn = os.path.split(full_path)</span><br><span class="line">    fn, _  = os.path.splitext(_fn)</span><br><span class="line">    valid = datetime.strptime(fn[1:], &quot;%Y%m%d%H&quot;)</span><br><span class="line">    print(valid.strftime(&quot;%HZ%d%b%Y&quot;))</span><br><span class="line">   </span><br><span class="line">    ctl = f&#x27;&#x27;&#x27;\</span><br><span class="line">dset &#123;full_path&#125;</span><br><span class="line">undef 9.999E+20</span><br><span class="line">options yrev byteswapped</span><br><span class="line">title grided sample  </span><br><span class="line">xdef 241 linear 60.0 0.25</span><br><span class="line">ydef 241 linear 0.00 0.25  </span><br><span class="line">tdef 1 linear &#123;valid.strftime(&quot;%HZ%d%b%Y&quot;)&#125; 3hr</span><br><span class="line">zdef 19 levels 1000 950 925 900 850 800 700 600 500 400 300 250 200 150 100 70 50 20 10</span><br><span class="line">vars 5  </span><br><span class="line">gh   19 99 geopotential high [m]</span><br><span class="line">t    19 99 temperature       [k]</span><br><span class="line">rh   19 99 relative humidity [%]</span><br><span class="line">u    19 99 U wind            [m/s]</span><br><span class="line">v    19 99 V wind            [m/s]</span><br><span class="line">endvars &#x27;&#x27;&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    with open(f&quot;&#123;fn&#125;.ctl&quot;,&#x27;w&#x27;) as f:</span><br><span class="line">        f.write(ctl)</span><br><span class="line"></span><br><span class="line">    # cdo</span><br><span class="line">    os.system(f&quot;cdo -f nc import_binary &#123;fn&#125;.ctl &#123;fn&#125;.nc&quot;)</span><br><span class="line">   </span><br><span class="line">    # xgrads</span><br><span class="line">    # from xgrads import open_CtlDataset</span><br><span class="line">    # dset = open_CtlDataset(f&#x27;./&#123;fn&#125;.ctl&#x27;)</span><br><span class="line">    # dset.to_netcdf(f&quot;&#123;fn&#125;.nc&quot;)</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">data_root = &quot;/public/home/test/data&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">files = os.listdir(data_root)</span><br><span class="line">for file in files[:1]:</span><br><span class="line">    print(file)</span><br><span class="line">    Bin2Nc(f&quot;&#123;data_root&#125;/&#123;file&#125;&quot;)</span><br></pre></td></tr></table></figure>

<p>tips：</p>
<ul>
<li>• ctl模板好像不行，需要具体到文件</li>
<li>• xgrads库的导入速度比较慢，推荐优先使用cdo</li>
<li>• 如果时间分辨率需要精确到分钟，tdef那一行可以改为<code> tdef 1 linear &#123;valid.strftime(&quot;%H:%MZ%d%b%Y&quot;)&#125; 10MN</code></li>
</ul>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>CESM</title>
    <url>/2022/05/01/Tool/CESM/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="4-5-The-Four-Run-Types"><a href="#4-5-The-Four-Run-Types" class="headerlink" title="4.5 The Four Run Types"></a>4.5 The Four Run Types</h4><p>The environment variable $RUNTYPE set in the main setup script specifies the state in which the model will begin a run. This variable has four options, ‘startup’, ‘hybrid’, ‘continue’ or ‘branch’, with ‘startup’ being the default setting. The four options are described in this section.</p>
<h4 id="4-5-1-Startup-Runs"><a href="#4-5-1-Startup-Runs" class="headerlink" title="4.5.1 Startup Runs"></a>4.5.1 Startup Runs</h4><p>If $RUNTYPE is set to ‘startup’, the model will start from some arbitrary baseline state that need not be associated with any previous run. Startup runs are typically initialized using a $BASEDATE of 0001-01-01, although there is no dependence of these runs on previous case names or calendar dates. The ice model uses the $BASEDATE sent from the coupler on a startup run. The ice setup script will create a pointer file named <em>rpointer.ice</em> with the name of the initial restart file in it using $BASEDATE. The date read in from the restart file will be written over by $BASEDATE. The primary environment variables for a startup run are:</p>
<p> CASE    test.a1    #new case name</p>
<p> RUNTYPE  startup    </p>
<p> BASEDATE  0001-01-01  #start date for initial run</p>
<p>Startup runs can start from a $BASEDATE other then 0001-01-01. Startup runs can also be initialized using data created within the ice model, as described in the next section.</p>
<h5 id="4-5-1-1-Using-Initial-Conditions-from-within-CSIM4"><a href="#4-5-1-1-Using-Initial-Conditions-from-within-CSIM4" class="headerlink" title="4.5.1.1 Using Initial Conditions from within CSIM4"></a>4.5.1.1 Using Initial Conditions from within CSIM4</h5><p>Initial conditions can be calculated within the ice model in a subroutine called init_state in <em>ice_init.F</em>. Here, the ocean surface is initialized at the freezing point everywhere north of 40 degrees and south of -40 degrees latitude, allowing ice to form everywhere in these regions. While running the ice model with a data ocean will melt any extra ice during the first year of integration, is not recommended that these initial conditions be used when running the ice model coupled to an active ocean model. The advantage of using this input is that it is not grid or land mask dependent. To use these initial conditions, set RESTART in <em>ice.setup.csh</em>:</p>
<p>set RESTART &#x3D; .false.</p>
<h6 id="4-5-1-2-Using-Initial-Conditions-from-Input-Data-Files"><a href="#4-5-1-2-Using-Initial-Conditions-from-Input-Data-Files" class="headerlink" title="4.5.1.2 Using Initial Conditions from Input Data Files"></a>4.5.1.2 Using Initial Conditions from Input Data Files</h6><p>The input data file for the ice model is a binary restart file from a previous run. If $RUNTYPE is set to ‘startup’, the ice setup script is will read the initial condition file from the input data directory, <em>iced.0001-01-01.$ICE_GRID</em> regardless of $BASEDATE. For ‘continue’ runs, the input data file is determined by the filename set in the restart pointer file (see section <a href="https://www.cesm.ucar.edu/models/ccsm2.0/csim/UsersGuide/ice_usrdoc/node21.html#pointer_files">4.8.2.1</a>). If $RUNTYPE is ‘branch’ or ‘hybrid’, the ice setup script will attempt to file a restart file with $REFDATE in the filename.</p>
<p>For the startup and hybrid setups, it is not necessary that the date inside the binary file match the date in the filename, since the $BASEDATE received from the coupler will override the date in the restart file. This will not be true for continue and branch runs, where the $BASEDATE is set in the model using the date in the restart file. Initializing the model using a restart file from an equilibrium run will result in a more physically reasonable scenario than the initial conditions set within CSIM4. The conditions in the initial restart file provided with CSIM4 are from an active ice only equilibrium run using modified NCEP forcing. The drawbacks are that the data is binary, difficult to edit, and is date and grid dependent. A restart file will be used as initial conditions if</p>
<p>set RESTART &#x3D; .true.</p>
<p>in <em>ice.setup.csh</em>.</p>
<h4 id="4-5-2-Hybrid-Runs"><a href="#4-5-2-Hybrid-Runs" class="headerlink" title="4.5.2 Hybrid Runs"></a>4.5.2 Hybrid Runs</h4><p>A hybrid run should be used when a collection of arbitrary initial&#x2F;restart files from previous runs is desired to start the model. A new $CASE and $BASEDATE can be specified. The ice model receives $BASEDATE from the coupler. The date read in from the restart file will be written over by $BASEDATE. The climate simulated by the hybrid run should be continuous compared to the previous run, but an exact restart will not be produced. If all components start from the same reference case and date, $REFCASE and $REFDATE can be used to specify the previous date and case. Generally, a hybrid run will require some modifications to the scripts by the user, especially if some components are starting from inconsistent runs or dates. The primary environment variables for a startup run are:</p>
<p> CASE    test.a1    #new case name</p>
<p> RUNTYPE  hybrid</p>
<p> BASEDATE  0001-01-01  #date where to start run</p>
<p> REFCASE         #reference case for initial&#x2F;restart data</p>
<p> REFDATE  0001-01-01  #date in REFCASE to obtain initial&#x2F;restart data</p>
<h4 id="4-5-3-Continue-Runs"><a href="#4-5-3-Continue-Runs" class="headerlink" title="4.5.3 Continue Runs"></a>4.5.3 Continue Runs</h4><p>A continue run is an exact continuation of a previous run. This means that the run will produce a bit-for-bit answer as if the existing run had not stopped. In this case, it is assumed that $CASE and $BASEDATE have not changed and that the date is continuous from the previous run. For a continue run, the only change required in the main script is to set:</p>
<p> RUNTYPE  continue</p>
<p>A change in the $BASEDATE is not necessary for a continue run, since the date is read in from the restart files, and the coupler checks to see that the dates between the component models match.</p>
<h4 id="4-5-4-Branch-Runs"><a href="#4-5-4-Branch-Runs" class="headerlink" title="4.5.4 Branch Runs"></a>4.5.4 Branch Runs</h4><p>Branch runs will continue a previous run but with a new case name and possibly a new start date, where the previous run has created a consistent set of restart files. Branch runs differ from continuation runs in that they are typically used to perform sensitivity studies, or to modify output streams, branching off a previous run. The new case will restart exactly, as in a continuation run, if no source code or input namelist parameters have changed. For a branch run, $BASEDATE must remain the same as that in the previous run, and the following environment variables must be set in the the main script:</p>
<p> CASE    new case name </p>
<p> RUNTYPE  branch</p>
<p> BASEDATE  date to start this run</p>
<p> REFCASE  reference case to branch from </p>
<p> REFDATE  date in REFCASE to obtain restart data</p>
<p>【CESM2 release news】<br><a href="https://eos.org/articles/new-version-of-popular-climate-model-released">https://eos.org/articles/new-version-of-popular-climate-model-released</a></p>
<p>【CMIP6 forcing】<br><a href="https://docs.google.com/document/d/1pU9IiJvPJwRvIgVaSDdJ4O0Jeorv_2ekEtted34K9cA/edit#">https://docs.google.com/document/d/1pU9IiJvPJwRvIgVaSDdJ4O0Jeorv_2ekEtted34K9cA/edit#</a><br><a href="https://pcmdi.llnl.gov/mips/amip/">https://pcmdi.llnl.gov/mips/amip/</a><br><a href="https://pcmdi.llnl.gov/report/pdf/60.pdf?id=63">https://pcmdi.llnl.gov/report/pdf/60.pdf?id=63</a></p>
<p>【CMIP5 model errors】<a href="https://wattsupwiththat.com/2015/03/10/whoops-study-shows-huge-basic-errors-found-in-cmip5-climate-models/">https://wattsupwiththat.com/2015/03/10/whoops-study-shows-huge-basic-errors-found-in-cmip5-climate-models/</a></p>
<p>【How do climate models work?】<a href="https://www.carbonbrief.org/qa-how-do-climate-models-work">https://www.carbonbrief.org/qa-how-do-climate-models-work</a></p>
<p>【CESM related】</p>
<p>Supported Grids: <a href="http://www.cesm.ucar.edu/models/cesm1.0/cesm/cesm_doc_1_0_4/a3714.html">http://www.cesm.ucar.edu/models/cesm1.0/cesm/cesm_doc_1_0_4/a3714.html</a></p>
<p>【GFDL idealized model】<a href="https://www.gfdl.noaa.gov/idealized-spectral-models-quickstart/#Overview">https://www.gfdl.noaa.gov/idealized-spectral-models-quickstart/#Overview</a></p>
<h2 id="CESM2-运行简明教程"><a href="#CESM2-运行简明教程" class="headerlink" title="CESM2 运行简明教程"></a>CESM2 运行简明教程</h2><h3 id="一般来说CESM2运行分为以下几个步骤："><a href="#一般来说CESM2运行分为以下几个步骤：" class="headerlink" title="一般来说CESM2运行分为以下几个步骤："></a>一般来说CESM2运行分为以下几个步骤：</h3><ol>
<li>新建case</li>
<li>设置使用核数、跑多少年、重新提交多少次、reset文件输出频次等设置</li>
<li>修改各个分量的namelist（可选项）</li>
<li>修改源代码（可选项）</li>
<li>编译与提交</li>
</ol>
<p>下面我将分别对以上几步进行介绍</p>
<h4 id="1-新建case"><a href="#1-新建case" class="headerlink" title="1.新建case"></a>1.新建case</h4><p>这里假定CESM2已经成功的安装到了电脑上，且config等文件都已经在$HOME&#x2F;.cime&#x2F;路径下面配置好了，那么新建case的脚本在</p>
<p>{CESM_HOME}&#x2F;cime&#x2F;scripts 路径下 其中{CESM_HOME}是cesm2软件根目录所在的位置，该路径下的create_newcase即为运行创建case的脚本，关于此脚本详细的使用说明可以输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./create_newcase --help</span><br></pre></td></tr></table></figure>

<p>来进行查看。</p>
<p>这里举一个示例来说明用法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./create_newcase --case test_1 --res f09_t061 --compset B1850MOM --run-unsupported --compiler intel --mach oneapi</span><br></pre></td></tr></table></figure>

<p>–case 后面跟的是你给这个case所取的名字，这里我取名为test1</p>
<p>–res 告诉脚本你想给这个case使用什么样的分辨率，CESM2里面提供了各种各样的分辨率配置，所有的分辨率及详细介绍可见CESM2.2.0 Grid Resolution Definitions (ucar.edu)常见情况是下划线前面是大气与陆面（这俩常用同一个）的格点，下划线后面是海洋的格点，这里我选用的是f09_t061，在前面的网页中搜索，结果如下，嗯大气与陆面大约是1°的分辨率，海洋分辨率大约是0.66°</p>
<p><img src="https://p.ipic.vip/1a9q1b.png" alt="Image"></p>
<p>–compset 命令是设置使用什么样的模式组合，CESM2软件本身给我们提供了多种多样的模式配置，很多时候我们进行试验只需要其中几个分量模式运转，亦或者想让所有分量模式都参与运转。比如有时候我们希望只跑陆气耦合实验，海洋模式让它不运转，或者我们想跑全耦合实验，等等配置通过设置compset的值我们可以达到目的，正如它的全称所示：compset &#x3D; component set。详细的compset介绍可见CESM2.2.0 Component Sets Definitions (ucar.edu)。通过缩略名的首字母我们可以判断在这个compset中有哪些模式参与了工作，这里引一张官方示意图</p>
<p><img src="https://p.ipic.vip/qkut3r.png" alt="Image"></p>
<p>根据这张图，回到我们的示例，这里我们用的是B1850MOM，可知用的是全耦合的实验。如果开头是F的话，那么海洋海冰模式是不参与运转的，需要海表面的物理量了模式就会去读取现成的SST文件。</p>
<p>–run-unsupported 的作用是：因为cesm2会给某些compsets设置“官方的”分辨率，表示这个分辨率是经过他们验证，充分可靠的，譬如FHIST的官方支持分辨率为f09_f09_mg17，但假如你就是想用f09_g17这个分辨率呢，也是可以跑。在创建case的时候不加–run-unsupported后面是会报错的。因此这个设置我理解的意思就是官方说“你小子用这个分辨率跑出来奇怪的结果可别找我，谁让你不用官方的分辨率”，哈哈开个玩笑。</p>
<p>后面两个–compiler 与 –mach 是与你在一直模式过程中设置的config文件有关的，以–mach为例，指定了值后模式会进入~&#x2F;.cime&#x2F;config_machines.xml文件中读取与这个值相匹配的设置，并用到case的创建中，–compiler与之同理。这些应归于移植模式的设置，这里就不做讨论了。</p>
<p>以上是关于第一步创建case的介绍，输入上述命令后如果不报错，成功出现以case名的文件夹，就说明成功了。</p>
<h4 id="2-核数、年份等设置"><a href="#2-核数、年份等设置" class="headerlink" title="2.核数、年份等设置"></a>2.核数、年份等设置</h4><p>新建完case，那么就要开始对模式进行设置，此时模式的状态如下：</p>
<p>因此我们要告诉模式都要让他干什么，进入新创建的case文件夹后，对变量的修改推荐使用文件夹下的.&#x2F;xmlchange与.&#x2F;xmlquery脚本</p>
<p>这里列举几个常用到的设置示例</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./xmlchange NTASKS=-10</span><br><span class="line">./xmlchange STOP_OPTION=nyears</span><br><span class="line">./xmlchange STOP_N=2</span><br><span class="line">./xmlchange RESUBMIT=6</span><br><span class="line">./xmlchange REST_N=2</span><br><span class="line">./xmlchange REST_OPTION=nyears</span><br></pre></td></tr></table></figure>

<p>下面分点对上述的命令进行讲解：</p>
<ol>
<li>关于核数的设置，一般cesm2在超算上跑，需要对模式使用的核数进行设置，这里我给NTASKS的值为-10，复数表示节点数，假如一个节点有28个核，那么最后我调用的总核数就是28*10&#x3D;280核。如果仅设置NTASKS的话，那么所有的分量都使用这个配置，若想对不同的分量模式给予不同的设置，可以分别设置NTASKS_ATM NTASKS_OCN等等。直接对NTASKS进行设置固然省事，但合理地对不同分量模式设置核数可以提高运算速度+节约计算时间（钱），这里推荐一篇文章里面比较详细地介绍了核数的设置，因本文旨在介绍运行的一般流程，故不做展开 CESM2 实验笔记_一株草的世界的博客-CSDN博客</li>
<li>STOP_OPTION应该跟STOP_N配合着来看，STOP_N+STOP_OPTION告诉模式运转 X（单位），这里我给STOP_N &#x3D; 2, STOP_OPTION&#x3D;nyears，因此模式就运转两年，但如果STOP_OPTION&#x3D;nmonths，那么就是模式运行2个月，ndays就是2天。</li>
<li>关于RESUBMIT，一般在超算上单次任务是有时间限制的，比如12个小时，超过这个值了就给你kill掉，因此我们要结合模式模拟的时间对任务进行分割并多次提交。这里我设置RESUBMIT为6，那么在模式跑完第一个2年后，模式会自动提交，接着跑两年，结束后再次自动提交，那么最终我们的模式跑了2+（6*2）&#x3D;14年。</li>
<li>REST_N和REST_OPTION这两个量也是配合起来看的，因为模式再重新提交之后它需要读取restart文件，才可以继续往下跑。这两个设置就是设置restart文件的输出频率，这里我设置的含义即为每2年输出一次start文件。</li>
</ol>
<p>以上是关于模式设置几个常用到的量，但是不能覆盖所有情况，所有的量以及介绍可以在CESM2 Driver Caseroot Variable Definitions (ucar.edu)中找到。</p>
<p>上述变量设置完毕后就可以执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./case.setup</span><br></pre></td></tr></table></figure>

<p>上述变量就被读入模式设置里了</p>
<h4 id="3-namelist的设置"><a href="#3-namelist的设置" class="headerlink" title="3.namelist的设置"></a>3.namelist的设置</h4><p>执行上述命令以后，模式会在当前文件夹下生成下面几个文件，格式均为user_nl_ + 分量名</p>
<p><img src="https://p.ipic.vip/gea9n6.png" alt="Image"></p>
<p>如果不去修改这些文件，那么在编译的过程中模式会读取默认的设置，但如果你想对某些设置进行修改，那么就在这个文件下进行替换。那样的话模式在编译的过程中就会将你新给的量替换掉默认的设置。这里改哪个分量模式就去修改哪个namelist文件，譬如我要对大气模式进行修改那么就去改user_nl_cam文件</p>
<p>官方主页有关于所有设置的介绍，这里分享链接CESM2 Component Configuration Settings (ucar.edu)</p>
<p>譬如你想增加输出的变量，那么就在user_nl_cam文件中的空白处加一行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fincl2         = &#x27;U:A&#x27;,&#x27;V:A&#x27;,&#x27;OMEGA:A&#x27;,&#x27;T:A&#x27;,&#x27;PRECT:A&#x27;,&#x27;SHFLX:A&#x27;,&#x27;LHFLX:A&#x27;,&#x27;Q:A&#x27;,&#x27;TS:A&#x27;</span><br><span class="line">nhtfrq         = 0,-24</span><br><span class="line">mfilt          = 12,1</span><br></pre></td></tr></table></figure>

<p>那么模式在运行过程中输出变量就会有一组新的变量，等号右边的这些量。’:A’表示’平均的意思‘，nhtfrq意思为输出频率，负数代表“小时”，0表示“月平均”，mfilt表示一个文件里有几个时间样本。</p>
<p>那么上述三行综合起来看就是，在我新增加的这些变量，每24小时输出一次（-24），得到的值为在这24小时内的平均值，每个文件包含1个时次。nhtfrq的0和mfilt的12是对大气模式默认的输出进行设置。后面的（-24，1）则是对应fincl2的设置。</p>
<h4 id="4-源代码的修改"><a href="#4-源代码的修改" class="headerlink" title="4. 源代码的修改"></a>4. 源代码的修改</h4><p>有时候需要对模式进行深层次的修改，那么就需要修改源代码。模式源代码位置在{CESM_HOME}&#x2F;component下面，一般是不在这里进行模式代码的修改的。如果需要修改的话就找到相应的模式代码把它拷贝到case目录下面的SourceMods对应位置，在编译的时候就自动会将新的代码覆盖掉旧的代码了。</p>
<h4 id="5-编译"><a href="#5-编译" class="headerlink" title="5. 编译"></a>5. 编译</h4><p>如果不需要进行源代码的修改，再进行完第三步就可以输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./case.build</span><br></pre></td></tr></table></figure>

<p>进行编译了，编译成功后.&#x2F;case.submit脚本是提交运算的脚本，但如果在超算上面提交的话是需要写一个提交脚本再提交的，以上就是cesm2运行的一般流程。</p>
<p>参考：</p>
<p><a href="https://www.cesm.ucar.edu/models/cesm2/config/compsets.html">https://www.cesm.ucar.edu/models/cesm2/config/compsets.html</a></p>
<p><a href="https://blog.csdn.net/qq_38607066/article/details/109445839">https://blog.csdn.net/qq_38607066/article/details/109445839</a></p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Cite Figures</title>
    <url>/2022/05/01/Tool/Cite%20Figures/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="pdfobject-container" data-target="https://docs.qq.com/pdf/DSmdpU0RYUnNTWGlv" data-height="1000px"></div>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Chrome</title>
    <url>/2022/05/01/Tool/Chrome/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="FasterHosts"><a href="#FasterHosts" class="headerlink" title="FasterHosts"></a>FasterHosts</h2><p><code>FasterHosts</code> 是个 Chrome 插件，主要原理是拦截浏览器的某些请求，将 <code>domain</code> 替换成访问速度较快的那个。</p>
<ul>
<li>加速访问 GitHub 相关的资源</li>
<li>支持配置 Hosts</li>
</ul>
<blockquote>
<ol>
<li>下载 <a href="https://gitee.com/link?target=https://github.com/gauseen/faster-hosts/archive/master.zip">FasterHosts</a> 然后解压，找到 <code>extension</code> 子目录</li>
<li>打开 Chrome，输入: <code>chrome://extensions/</code></li>
<li>打开「开发者模式」</li>
<li>选择「加载已解压的扩展程序」，然后定位到刚才解压的文件夹里面的 <code>extension</code> 目录，确定</li>
<li>这就安装好了，关闭「开发这模式」</li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Conda</title>
    <url>/2022/05/01/Tool/Conda/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="conda-机器学习环境搭建"><a href="#conda-机器学习环境搭建" class="headerlink" title="conda 机器学习环境搭建"></a>conda 机器学习环境搭建</h2><h3 id="多种不同版本的python"><a href="#多种不同版本的python" class="headerlink" title="多种不同版本的python"></a>多种不同版本的python</h3><ul>
<li>查看当前所处的python环境</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python -V</span><br></pre></td></tr></table></figure>

<ul>
<li>创建一个名为python27的环境，指定Python版本是2.7（不用管是2.7.x，conda会为我们自动寻找2.7.x中的最新版本）</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda create --name python27 python=2.7</span><br></pre></td></tr></table></figure>

<ul>
<li>激活某个环境</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda activate python27</span><br></pre></td></tr></table></figure>

<ul>
<li>查看当前版本</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python -V</span><br></pre></td></tr></table></figure>

<ul>
<li>退出环境</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda deactivate</span><br></pre></td></tr></table></figure>



<h3 id="pytorch"><a href="#pytorch" class="headerlink" title="pytorch"></a>pytorch</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda create --name pytorch python=3.10</span><br><span class="line">conda activate pytorch</span><br><span class="line">conda install pytorch torchvision torchaudio pytorch-cuda=12.1 -c pytorch -c nvidia</span><br><span class="line">conda deactivate</span><br></pre></td></tr></table></figure>



<h3 id="tensorflow-sklearn-openCV"><a href="#tensorflow-sklearn-openCV" class="headerlink" title="tensorflow + sklearn + openCV"></a>tensorflow + sklearn + openCV</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda create --name tensorflow python=3.9</span><br><span class="line">conda activate tensorflow</span><br><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple tensorflow</span><br><span class="line">conda install keras</span><br><span class="line">conda install scikit-learn</span><br><span class="line">pip  install  opencv-python</span><br></pre></td></tr></table></figure>



<h3 id="NCL"><a href="#NCL" class="headerlink" title="NCL"></a>NCL</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda create -n ncl -c conda-forge ncl</span><br><span class="line">conda activate ncl</span><br></pre></td></tr></table></figure>





<h3 id="tensorflow-gpu"><a href="#tensorflow-gpu" class="headerlink" title="tensorflow-gpu"></a>tensorflow-gpu</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda create --name tensorflow-gpu python=3.9</span><br><span class="line">conda activate tensorflow</span><br><span class="line"></span><br><span class="line">sudo apt install clang</span><br><span class="line">clang --version</span><br></pre></td></tr></table></figure>



<ul>
<li><strong>使用 PyTorch 查看 CUDA 和 cuDNN 版本</strong></li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda activate pytorch</span><br><span class="line">python</span><br><span class="line">import torch</span><br><span class="line">print(torch.__version__)</span><br><span class="line">print(torch.version.cuda)</span><br><span class="line">print(torch.backends.cudnn.version())</span><br></pre></td></tr></table></figure>



<ul>
<li><strong>查看机器显卡配置情况</strong></li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lspci | grep -i vga</span><br><span class="line"></span><br><span class="line"># 以下为输出</span><br><span class="line">2a:00.0 VGA compatible controller: NVIDIA Corporation Device 26b1 (rev a1)</span><br><span class="line">3d:00.0 VGA compatible controller: NVIDIA Corporation Device 26b1 (rev a1)</span><br></pre></td></tr></table></figure>

<p>以第一列作为参数查看更详细信息：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lspci -vvs 2a:00.0</span><br><span class="line"></span><br><span class="line"># 以下为输出</span><br><span class="line">2a:00.0 VGA compatible controller: NVIDIA Corporation Device 26b1 (rev a1) (prog-if 00 [VGA controller])</span><br><span class="line">	Subsystem: Lenovo Device 16a1</span><br><span class="line">	Physical Slot: 6</span><br><span class="line">	Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr+ Stepping- SERR+ FastB2B- DisINTx+</span><br><span class="line">	Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast &gt;TAbort- &lt;TAbort- &lt;MAbort- &gt;SERR- &lt;PERR- INTx-</span><br><span class="line">	Latency: 0</span><br><span class="line">	Interrupt: pin A routed to IRQ 243</span><br><span class="line">	NUMA node: 0</span><br><span class="line">	Region 0: Memory at a8000000 (32-bit, non-prefetchable) [size=16M]</span><br><span class="line">	Region 1: Memory at 202fe0000000 (64-bit, prefetchable) [size=256M]</span><br><span class="line">	Region 3: Memory at 202ff0000000 (64-bit, prefetchable) [size=32M]</span><br><span class="line">	Region 5: I/O ports at 6000 [size=128]</span><br><span class="line">	Expansion ROM at a9000000 [virtual] [disabled] [size=512K]</span><br><span class="line">	Capabilities: &lt;access denied&gt;</span><br><span class="line">	Kernel driver in use: nvidia</span><br><span class="line">	Kernel modules: nvidiafb, nouveau, nvidia_drm, nvidia</span><br></pre></td></tr></table></figure>

<p>对于NVIDIA显卡，可以通过特定命令查看显卡信息：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nvidia-smi</span><br><span class="line"></span><br><span class="line"># 以下为输出</span><br><span class="line">Thu Jan 25 11:21:00 2024       </span><br><span class="line">+---------------------------------------------------------------------------------------+</span><br><span class="line">| NVIDIA-SMI 535.129.03             Driver Version: 535.129.03   CUDA Version: 12.2     |</span><br><span class="line">|-----------------------------------------+----------------------+----------------------+</span><br><span class="line">| GPU  Name                 Persistence-M | Bus-Id        Disp.A | Volatile Uncorr. ECC |</span><br><span class="line">| Fan  Temp   Perf          Pwr:Usage/Cap |         Memory-Usage | GPU-Util  Compute M. |</span><br><span class="line">|                                         |                      |               MIG M. |</span><br><span class="line">|=========================================+======================+======================|</span><br><span class="line">|   0  NVIDIA RTX 6000 Ada Gene...    Off | 00000000:2A:00.0 Off |                  Off |</span><br><span class="line">| 30%   47C    P8              28W / 300W |     31MiB / 49140MiB |      0%      Default |</span><br><span class="line">|                                         |                      |                  N/A |</span><br><span class="line">+-----------------------------------------+----------------------+----------------------+</span><br><span class="line">|   1  NVIDIA RTX 6000 Ada Gene...    Off | 00000000:3D:00.0 Off |                  Off |</span><br><span class="line">| 30%   43C    P8              21W / 300W |     14MiB / 49140MiB |      0%      Default |</span><br><span class="line">|                                         |                      |                  N/A |</span><br><span class="line">+-----------------------------------------+----------------------+----------------------+</span><br><span class="line">                                                                                         </span><br><span class="line">+---------------------------------------------------------------------------------------+</span><br><span class="line">| Processes:                                                                            |</span><br><span class="line">|  GPU   GI   CI        PID   Type   Process name                            GPU Memory |</span><br><span class="line">|        ID   ID                                                             Usage      |</span><br><span class="line">|=======================================================================================|</span><br><span class="line">|    0   N/A  N/A      1879      G   /usr/lib/xorg/Xorg                           10MiB |</span><br><span class="line">|    0   N/A  N/A      2139      G   /usr/bin/gnome-shell                          7MiB |</span><br><span class="line">|    1   N/A  N/A      1879      G   /usr/lib/xorg/Xorg                            4MiB |</span><br><span class="line">+---------------------------------------------------------------------------------------+</span><br></pre></td></tr></table></figure>

<p>其中，主要关注：</p>
<p>Temp：温度，过高可能是哪里出了问题</p>
<p>Memory-Usage：显存使用情况</p>
<p>GPU-Util：GPU使用率</p>
<p>CUDA Version: 后面要对应到TensorFlow版本</p>
<p>关于显卡更详细的信息可参考相关资料。</p>
<ul>
<li><strong>确定tensorflow版本</strong></li>
</ul>
<p>TensorFlow版本不是随便安装的，对GPU的支持需要对应的驱动库，版本不对应会导致问题。</p>
<p>所以真正开始动手安装之前一定要确认好版本。</p>
<p>确认版本的顺序：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">机器上显卡类型 -&gt; 显卡的CUDA版本 -&gt; TensorFlow版本</span><br></pre></td></tr></table></figure>

<p>具体版本间对应关系官网上有：<a href="https://tensorflow.google.cn/install/source">https://tensorflow.google.cn/install/source</a> 。</p>
<ul>
<li><strong>安装TensorFlow 2.3.0</strong></li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda config --add channels conda-forge</span><br><span class="line">conda create --name tensorflow-gpu python=xxx cudatoolkit=xxx</span><br><span class="line">conda activate tensorflow-gpu</span><br><span class="line">conda install cudnn=xxx</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install tensorflow==2.3.0</span><br><span class="line">pip install --upgrade keras # 安装最新版本keras</span><br></pre></td></tr></table></figure>

<p>测试 import tensorflow as tf 出现以下报错：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TypeError: Descriptors cannot not be created directly.</span><br><span class="line">If this call came from a _pb2.py file, your generated code is out of date and must be regenerated with protoc &gt;= 3.19.0.</span><br><span class="line">If you cannot immediately regenerate your protos, some other possible workarounds are:</span><br><span class="line"> 1. Downgrade the protobuf package to 3.20.x or lower.</span><br><span class="line"> 2. Set PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python (but this will use pure-Python parsing and will be much slower).</span><br></pre></td></tr></table></figure>

<p>解决方式：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip uninstall protobuf</span><br><span class="line">pip install protobuf==3.19.0</span><br></pre></td></tr></table></figure>



<ul>
<li><strong>完成安装测试</strong></li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import tensorflow as tf</span><br><span class="line">print(&quot;Num GPUs Available: &quot;, len(tf.config.list_physical_devices(&#x27;GPU&#x27;)))</span><br><span class="line"></span><br><span class="line"># 以下为输出</span><br><span class="line">Num GPUs Available:  2</span><br></pre></td></tr></table></figure>



<h3 id="cdo-nco"><a href="#cdo-nco" class="headerlink" title="cdo +nco"></a>cdo +nco</h3><p>参考：<a href="https://bairdlangenbrunner.github.io/python-for-climate-scientists/conda/setting-up-conda-environments.html">https://bairdlangenbrunner.github.io/python-for-climate-scientists/conda/setting-up-conda-environments.html</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda install -c conda-forge cdo  或 sudo apt-get install cdo</span><br><span class="line">conda install -c conda-forge nco  或 sudo apt-get install nco</span><br></pre></td></tr></table></figure>





<h2 id="pip"><a href="#pip" class="headerlink" title="pip"></a>pip</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install pip -U</span><br><span class="line">pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure>

<ul>
<li>如果只是临时使用一下某个pip源的话，可以用如下方式进行Python包的安装：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple numpy</span><br></pre></td></tr></table></figure>











<h2 id="Conda软件环境迁移"><a href="#Conda软件环境迁移" class="headerlink" title="Conda软件环境迁移"></a>Conda软件环境迁移</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">更新conda</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">conda update -n base -c conda-forge conda</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建py3环境并安装python</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">conda create -n py3 python=3.12</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">打包conda下的环境进行移植</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">conda pack -n envsname -o conda_envsname.tar.gz</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看当前所有软件环境</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">conda <span class="built_in">env</span> list</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看当前环境安装包</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">conda list</span></span><br></pre></td></tr></table></figure>



<h2 id="linux服务器离线安装conda-无网络迁移conda环境"><a href="#linux服务器离线安装conda-无网络迁移conda环境" class="headerlink" title="linux服务器离线安装conda-无网络迁移conda环境"></a>linux服务器离线安装conda-无网络迁移conda环境</h2><p>来源：<a href="https://zhuanlan.zhihu.com/p/602012820">https://zhuanlan.zhihu.com/p/602012820</a></p>
<h3 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h3><p>服务器在无法联网的情况下，安装anaconda</p>
<h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><h4 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h4><p><a href="https://link.zhihu.com/?target=https://docs.conda.io/en/latest/miniconda.html%23linux-installers">https://docs.conda.io/en/latest/miniconda.html#linux-installers</a></p>
<h3 id="上传到服务器"><a href="#上传到服务器" class="headerlink" title="上传到服务器"></a>上传到服务器</h3><h4 id="执行安装脚本"><a href="#执行安装脚本" class="headerlink" title="执行安装脚本"></a>执行安装脚本</h4><p>sh Anaconda3-2021.11-Linux-x86_64.sh</p>
<p>可以自定义Anaconda的安装路径</p>
<h4 id="迁出机器部分——打包环境"><a href="#迁出机器部分——打包环境" class="headerlink" title="迁出机器部分——打包环境"></a>迁出机器部分——打包环境</h4><p>迁出机器安装打包工具</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">conda install -c conda-forge conda-pack</span><br></pre></td></tr></table></figure>

<p>安装好之后打包需要迁出的环境（-n 之后为 虚拟环境名字 -o 之后为打包出来的文件名）</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">conda pack -n envsname -o conda_envsname.tar.gz</span><br></pre></td></tr></table></figure>

<p>如图所示 是一个压缩文件，包含了你环境本身以及所有的包</p>
<p><img src="https://p.ipic.vip/wixl54.png" alt="img"></p>
<p>将打包的环境通过 ftp 传输到迁入机器中</p>
<p>迁出机器部分结束</p>
<h4 id="迁入机器部分——解压、部署环境"><a href="#迁入机器部分——解压、部署环境" class="headerlink" title="迁入机器部分——解压、部署环境"></a>迁入机器部分——解压、部署环境</h4><p>在你的 anaconda 目录下创建文件夹 名称（envs）即为你迁过来的环境名称</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">mkdir -p /root/anaconda3/envs/envsname</span><br></pre></td></tr></table></figure>

<p>解压环境（-C 之前为打包压缩文件路径 -C 之后为迁入机器 anaconda3 文件夹下 envs 目录 + 环境名）</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">tar -xzf /root/tempfile/conda_envsname.tar.gz -C /root/anaconda3/envs/envsname</span><br></pre></td></tr></table></figure>

<p>执行后完成 cd 进 envs 目录中已经可以看到环境拷贝完成</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">/root/anaconda3/envs/envsname</span><br></pre></td></tr></table></figure>

<p>检查环境是否完全复制</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">conda activate envsname</span><br><span class="line"></span><br><span class="line">pip list</span><br><span class="line">conda list</span><br></pre></td></tr></table></figure>



<h3 id="无联网转移依赖包如下："><a href="#无联网转移依赖包如下：" class="headerlink" title="无联网转移依赖包如下："></a>无联网转移依赖包如下：</h3><p><a href="https://link.zhihu.com/?target=https://blog.csdn.net/Lsy_0408/article/details/122216652">conda虚拟环境的离线迁移_Lsy_0408的博客-CSDN博客_conda环境迁移</a></p>
<p>假定A为能上网的需要迁移出环境的机器；B为不能上网的需要迁移入环境的机器。</p>
<h4 id="方法一：直接拷贝envs下的整个已有环境"><a href="#方法一：直接拷贝envs下的整个已有环境" class="headerlink" title="方法一：直接拷贝envs下的整个已有环境"></a>方法一：直接拷贝envs下的整个已有环境</h4><p>先下载A机中envs目录下的已有环境文件夹，并将其上传至B机上</p>
<p>然后使用以下命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda create -n [new_envs_name] --clone[path to envs_names] --offline</span><br></pre></td></tr></table></figure>

<p>注：</p>
<p>-n [new_envs_name]：和正常创建conda的一样，创建新的虚拟环境的名字</p>
<p>–clone [path to envs_names]：需要迁移的虚拟环境文件夹的地址</p>
<p>–offline：离线安装的指令</p>
<p>但实际操作后发现会有RunTimeError，提示信息如下：</p>
<p>可能的解决方案（待测试）：</p>
<p>需要传至B机的不只有envs目录下的已有环境文件夹，还有anaconda下的pkgs文件夹。</p>
<p>所以需要用上传的pkgs文件夹替换B机原有的anaconda&#x2F;pkgs目录，或者将文件夹里的内容复制到B机原有的pkgs文件夹里面。然后再使用</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">conda create -n [name] --<span class="built_in">clone</span> [filepath] --offline</span></span><br></pre></td></tr></table></figure>

<h4 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h4><p><strong>1. 导出依赖清单</strong></p>
<p>进入A机的anaconda环境，使用conda导出：</p>
<p>conda env export &gt; copytest.yaml</p>
<p>得到的yaml文件如下：</p>
<p>在A机上建立一个txt文件，命名为conda.yaml，其中复制入dependencies:内的部分，并将“ - ”替换为“”（把空格和‘-’替换为空）。如果不修改，安装时报错。记事本编辑\替换可以完成这个操作。修改完成的清单如下：</p>
<p>在A机上再建立一个txt文件，命名为pip.txt，其中复制入pip:内的部分。替换要求同上，修改完成的清单如下：</p>
<p><strong>2. 获取依赖安装包</strong></p>
<p>获取conda依赖安装包：</p>
<p>进入A机anaconda安装根目录中的pkgs（注意不是环境中的），拷贝出所有的“.conda”，“.tar.bz2”</p>
<p>下载pip依赖安装包：</p>
<p>在A机上利用pip根据pip.txt中的清单下载依赖包。-r表示依赖清单，-d表示存储依赖的路径。（此处cd到了Desktop）</p>
<p>pip download -r pip.txt -d piplib</p>
<p>注：若使用 pip freeze &gt; pip.txt 命令，其中部分导出的模块会显示 @ file:&#x2F;&#x2F;&#x2F;…，并非具体的版本号，会导致报错。</p>
<p>最终需要从A机传至B机的共有以下四个文件： conda.yaml，pip.txt，conda安装包文件夹（名为condafile），pip安装包文件夹（名为pipfile）</p>
<p><strong>3. B机安装</strong></p>
<p>进入B机已创建的环境</p>
<p>conda安装：</p>
<p>将condafile里面的所有文件拷贝到B机的anaconda&#x2F;pkgs目录，Cd 到conda.yaml 的目录下，并执行命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">Conda install --file conda.yaml –offline</span></span><br></pre></td></tr></table></figure>

<p>若出现报错，可能是由于安装了其他python版本的包，或者是其依赖库没有找到，需要下载相对应的库。</p>
<p>pip安装：</p>
<p>同上，Cd 到pip.txt 的目录下，并执行命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">Pip install -r pip.txt --no-index --find-links=. --user</span></span><br></pre></td></tr></table></figure>



<h3 id="目标机器可以访问互联网"><a href="#目标机器可以访问互联网" class="headerlink" title="目标机器可以访问互联网:"></a>目标机器可以访问互联网:</h3><p>参考：<a href="https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html#create-env-from-file">https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html#create-env-from-file</a></p>
<ul>
<li>激活需要迁移的环境，通过conda env export &gt; pyn_env.yml导出当前环境的一些配置信息</li>
<li>将pyn_env.yml文件拷贝到目标机器上，执行conda env create -f pyn_env.yml（确保目标机器已经安装了Anaconda，下同）。</li>
</ul>
<h3 id="目标机器不可以访问互联网："><a href="#目标机器不可以访问互联网：" class="headerlink" title="目标机器不可以访问互联网："></a>目标机器不可以访问互联网：</h3><h4 id="使用Conda-Pack来进行环境的打包和迁移"><a href="#使用Conda-Pack来进行环境的打包和迁移" class="headerlink" title="使用Conda-Pack来进行环境的打包和迁移"></a>使用Conda-Pack来进行环境的打包和迁移</h4><ul>
<li>在可以联网的机器上配置好需要的环境后，通过conda install -c conda-forge conda-pack安装打包程序；</li>
<li>通过conda pack -n wrfpy -o wrfpy.tar.gz将需要的环境打包，并拷贝到目标机器；</li>
<li>在目标机器上新建目录mkdir -p $Anaconda&#x2F;envs&#x2F;wrfpy；</li>
<li>解压 tar -xzf wrfpy.tar.gz -C $Anaconda&#x2F;envs&#x2F;wrfpy；</li>
<li>此时conda env list就可以看到该环境了；</li>
<li>activate wrfpy激活环境，执行conda-unpack，大功告成！</li>
</ul>
<h2 id="conda-环境重命名"><a href="#conda-环境重命名" class="headerlink" title="conda 环境重命名"></a>conda 环境重命名</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda create -n tf --clone rcnn #把环境 rcnn 重命名成 tf</span><br><span class="line">conda remove -n rcnn --all </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">conda 其实没有重命名指令，实现重命名是通过 <span class="built_in">clone</span> 完成的，分两步：1.先 <span class="built_in">clone</span> 一份 new name 的环境。2.删除 old name 的环境。</span></span><br></pre></td></tr></table></figure>



<h2 id="列出当前安装的所有conda环境"><a href="#列出当前安装的所有conda环境" class="headerlink" title="列出当前安装的所有conda环境"></a>列出当前安装的所有conda环境</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda info -env</span><br></pre></td></tr></table></figure>



<h2 id="conda-恢复默认源"><a href="#conda-恢复默认源" class="headerlink" title="conda 恢复默认源"></a>conda 恢复默认源</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda config --remove-key channels</span><br></pre></td></tr></table></figure>







<h2 id="使用environment-yml文件配置conda环境"><a href="#使用environment-yml文件配置conda环境" class="headerlink" title="使用environment.yml文件配置conda环境"></a>使用environment.yml文件配置conda环境</h2><p><code>environment.yml</code> 文件是用于定义和创建 Conda 环境的配置文件。它通常包含了项目所需的所有依赖项及其版本信息。以下是一些常见的使用场景：</p>
<p>创建 Conda 环境：<br>在命令行中使用 <code>conda</code> 命令创建新环境，并指定新环境名称为 ‘myenv’：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda env create -f environment.yml -n myenv</span><br></pre></td></tr></table></figure>

<p>这将创建一个名为 <code>myenv</code> 的环境。</p>
<p>导出当前环境配置：<br>如果你已经在一个 Conda 环境中工作，并想要导出当前环境的配置，可以使用以下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda env export &gt; environment.yml</span><br></pre></td></tr></table></figure>

<p>这将把当前环境的配置导出到一个新的 <code>environment.yml</code> 文件中，你可以分享或重现这个环境。</p>
<p>更新环境：<br>如果 <code>environment.yml</code> 文件发生更改，你可能需要更新已有的环境。可以使用以下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda env update -f environment.yml</span><br></pre></td></tr></table></figure>


<p>这将根据新的 <code>environment.yml</code> 文件更新已有环境中的包。</p>
<p>激活环境：<br>创建或更新环境后，你可以通过以下方式激活环境：</p>
<p>在 Windows 上：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">activate myenv</span><br></pre></td></tr></table></figure>

<p>在 macOS&#x2F;Linux 上：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">source activate myenv</span><br></pre></td></tr></table></figure>


<p>其中 <code>myenv</code> 是环境的名称。激活环境后，你将在该环境中运行你的项目。</p>
<h2 id="报错："><a href="#报错：" class="headerlink" title="报错："></a>报错：</h2><p>【报错信息】</p>
<p>CondaHTTPError: HTTP None None for url <None></p>
<p>Elapsed: None</p>
<p>An HTTP error occurred when trying to retrieve this URL.</p>
<p>SSLError(SSLError(SSLError(“bad handshake: Error([(‘SSL routines’, ‘ssl3_get_server_certificate’, ‘certificate verify failed’)],)”,),),)</p>
<p>【解决方式】conda config –set offline true</p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Crontab</title>
    <url>/2022/05/01/Tool/Crontab/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="For-WZCS"><a href="#For-WZCS" class="headerlink" title="For WZCS"></a>For WZCS</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">0 14 * * * sh /work/home/acyii6v8kt/WORK/Palm/Backup_WZCS-Palm.sh</span><br><span class="line">0 15 * * * sh /work/home/acyii6v8kt/WORK/Downscaling/Backup_WZCS-Downscaling.sh</span><br><span class="line">0 2 * * * sh /work/home/acyii6v8kt/WORK/DATA_download/Backup_WZCS-DATA_download.sh</span><br><span class="line">0 3 * * * sh /work/home/acyii6v8kt/WORK/GSI/Backup_WZCS-GSI.sh</span><br><span class="line">0 0 * * * delete -rf /home_gkx/users/nsgkx_zx2/.trash/*</span><br><span class="line"></span><br><span class="line">0 15 * * * sh /work/home/acyii6v8kt/WORK/Palm/Operational/check_HAFS_pm_001.sh</span><br><span class="line">0 3 * * * sh /work/home/acyii6v8kt/WORK/Palm/Operational/check_HAFS_am_001.sh</span><br><span class="line"></span><br><span class="line">30 7 * * * sh /work/home/acyii6v8kt/WORK/Palm/Operational/check_HAFS_am_036.sh</span><br><span class="line">0 8 * * * sh /work/home/acyii6v8kt/WORK/Palm/Operational/run_am.sh &gt; /work/home/acyii6v8kt/WORK/Palm/Operational/log.run 2&gt;&amp;1</span><br><span class="line">0 17 * * * sh /work/home/acyii6v8kt/WORK/Palm/Operational/output_am.sh &gt; /work/home/acyii6v8kt/WORK/Palm/Operational/log.output 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line">30 19 * * * sh /work/home/acyii6v8kt/WORK/Palm/Operational/check_HAFS_pm_036.sh</span><br><span class="line">0 20 * * * sh /work/home/acyii6v8kt/WORK/Palm/Operational/run_pm.sh &gt; /work/home/acyii6v8kt/WORK/Palm/Operational/log.run 2&gt;&amp;1</span><br><span class="line">0 5 * * * sh /work/home/acyii6v8kt/WORK/Palm/Operational/output_pm.sh &gt; /work/home/acyii6v8kt/WORK/Palm/Operational/log.output 2&gt;&amp;1</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Debug Notes</title>
    <url>/2022/05/01/Tool/Debug%20Notes/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Compiler"><a href="#Compiler" class="headerlink" title="Compiler"></a>Compiler</h2><h4 id="Catastrophic-error-could-not-set-locale-“-“-to-allow-processing-of-multibyte-characters"><a href="#Catastrophic-error-could-not-set-locale-“-“-to-allow-processing-of-multibyte-characters" class="headerlink" title="Catastrophic error: could not set locale “ “ to allow processing of multibyte characters"></a>Catastrophic error: could not set locale “ “ to allow processing of multibyte characters</h4><ul>
<li>原因：intel 编译器在低版本的系统中出现的 bug</li>
<li>解决办法：在编译选项中添加 -no-multibyte-chars</li>
</ul>
<h2 id="WRF"><a href="#WRF" class="headerlink" title="WRF"></a>WRF</h2><h3 id="mpirun-np-1-x2F-real-exe-gt-amp-real-out-时报错如下"><a href="#mpirun-np-1-x2F-real-exe-gt-amp-real-out-时报错如下" class="headerlink" title="mpirun -np 1 .&#x2F;real.exe &gt;&amp; real.out 时报错如下"></a>mpirun -np 1 .&#x2F;real.exe &gt;&amp; real.out 时报错如下</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Max map factor in domain 1 =  0.99. Scale the dt in the model accordingly.</span><br><span class="line">-------------- FATAL CALLED ---------------</span><br><span class="line">FATAL CALLED FROM FILE:  &lt;stdin&gt;  LINE:     609</span><br><span class="line">Maybe this is a global domain, but the polar flag was not set in the bdy_control namelist.</span><br><span class="line">-------------------------------------------</span><br><span class="line">Abort(1) on node 0 (rank 0 in comm 0): application called MPI_Abort(MPI_COMM_WORLD, 1) - process 0</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>ERA5</title>
    <url>/2022/05/01/Tool/ERA5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Download-ERA5-data"><a href="#Download-ERA5-data" class="headerlink" title="Download ERA5 data"></a>Download ERA5 data</h2><h3 id="Link-to-the-download-page"><a href="#Link-to-the-download-page" class="headerlink" title="Link to the download page:"></a>Link to the download page:</h3><p>**ERA5 Land Monthly: **</p>
<p><a href="https://cds.climate.copernicus.eu/cdsapp#!/dataset/reanalysis-era5-land-monthly-means?tab=form">https://cds.climate.copernicus.eu/cdsapp#!/dataset/reanalysis-era5-land-monthly-means?tab=form</a></p>
<p><strong>ERA5 Land Hourly:</strong></p>
<p><a href="https://cds.climate.copernicus.eu/cdsapp#!/dataset/reanalysis-era5-land?tab=overview">https://cds.climate.copernicus.eu/cdsapp#!/dataset/reanalysis-era5-land?tab=overview</a></p>
<h3 id="How-to-use-the-CDS-API"><a href="#How-to-use-the-CDS-API" class="headerlink" title="How to use the CDS API"></a>How to use the CDS API</h3><p><a href="https://cds.climate.copernicus.eu/api-how-to#use-the-cds-api-client-for-data-access">https://cds.climate.copernicus.eu/api-how-to#use-the-cds-api-client-for-data-access</a></p>
<h3 id="download-scripts-example"><a href="#download-scripts-example" class="headerlink" title="download scripts example"></a>download scripts example</h3><h4 id="LHF-py"><a href="#LHF-py" class="headerlink" title="LHF.py"></a>LHF.py</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cdsapi</span><br><span class="line"></span><br><span class="line">c = cdsapi.Client()</span><br><span class="line"></span><br><span class="line">c.retrieve(</span><br><span class="line">    <span class="string">&#x27;reanalysis-era5-land&#x27;</span>,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;format&#x27;</span>: <span class="string">&#x27;netcdf&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;year&#x27;</span>: <span class="string">&#x27;XYEARX&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;month&#x27;</span>: [</span><br><span class="line">            <span class="string">&#x27;01&#x27;</span>, <span class="string">&#x27;02&#x27;</span>, <span class="string">&#x27;03&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;04&#x27;</span>, <span class="string">&#x27;05&#x27;</span>, <span class="string">&#x27;06&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;07&#x27;</span>, <span class="string">&#x27;08&#x27;</span>, <span class="string">&#x27;09&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;10&#x27;</span>, <span class="string">&#x27;11&#x27;</span>, <span class="string">&#x27;12&#x27;</span>,</span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&#x27;day&#x27;</span>: [</span><br><span class="line">            <span class="string">&#x27;01&#x27;</span>, <span class="string">&#x27;02&#x27;</span>, <span class="string">&#x27;03&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;04&#x27;</span>, <span class="string">&#x27;05&#x27;</span>, <span class="string">&#x27;06&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;07&#x27;</span>, <span class="string">&#x27;08&#x27;</span>, <span class="string">&#x27;09&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;10&#x27;</span>, <span class="string">&#x27;11&#x27;</span>, <span class="string">&#x27;12&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;13&#x27;</span>, <span class="string">&#x27;14&#x27;</span>, <span class="string">&#x27;15&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;16&#x27;</span>, <span class="string">&#x27;17&#x27;</span>, <span class="string">&#x27;18&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;19&#x27;</span>, <span class="string">&#x27;20&#x27;</span>, <span class="string">&#x27;21&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;22&#x27;</span>, <span class="string">&#x27;23&#x27;</span>, <span class="string">&#x27;24&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;25&#x27;</span>, <span class="string">&#x27;26&#x27;</span>, <span class="string">&#x27;27&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;28&#x27;</span>, <span class="string">&#x27;29&#x27;</span>, <span class="string">&#x27;30&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;31&#x27;</span>,</span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&#x27;time&#x27;</span>: [</span><br><span class="line">            <span class="string">&#x27;00:00&#x27;</span>, <span class="string">&#x27;01:00&#x27;</span>, <span class="string">&#x27;02:00&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;03:00&#x27;</span>, <span class="string">&#x27;04:00&#x27;</span>, <span class="string">&#x27;05:00&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;06:00&#x27;</span>, <span class="string">&#x27;07:00&#x27;</span>, <span class="string">&#x27;08:00&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;09:00&#x27;</span>, <span class="string">&#x27;10:00&#x27;</span>, <span class="string">&#x27;11:00&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;12:00&#x27;</span>, <span class="string">&#x27;13:00&#x27;</span>, <span class="string">&#x27;14:00&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;15:00&#x27;</span>, <span class="string">&#x27;16:00&#x27;</span>, <span class="string">&#x27;17:00&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;18:00&#x27;</span>, <span class="string">&#x27;19:00&#x27;</span>, <span class="string">&#x27;20:00&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;21:00&#x27;</span>, <span class="string">&#x27;22:00&#x27;</span>, <span class="string">&#x27;23:00&#x27;</span>,</span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&#x27;variable&#x27;</span>: <span class="string">&#x27;surface_latent_heat_flux&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;area&#x27;</span>: [</span><br><span class="line">            <span class="number">30</span>, -<span class="number">180</span>, -<span class="number">30</span>,</span><br><span class="line">            <span class="number">180</span>,</span><br><span class="line">        ],</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;ERA5_lhf_hourly_30S-30N_XYEARX.nc&#x27;</span>)</span><br></pre></td></tr></table></figure>



<h4 id="loop-sh"><a href="#loop-sh" class="headerlink" title="loop.sh"></a>loop.sh</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ystart=1950</span><br><span class="line">yend=2021</span><br><span class="line"></span><br><span class="line"><span class="built_in">let</span> nyears=<span class="variable">$&#123;yend&#125;</span>-<span class="variable">$&#123;ystart&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 0 <span class="variable">$&#123;nyears&#125;</span>`</span><br><span class="line">  <span class="keyword">do</span>  </span><br><span class="line">  <span class="built_in">let</span> year=<span class="variable">$&#123;ystart&#125;</span>+<span class="variable">$&#123;i&#125;</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$year</span></span><br><span class="line">   sed s/XYEARX/<span class="variable">$&#123;year&#125;</span>/g LHF.py &gt; getdata.py</span><br><span class="line">   <span class="comment">#chmod a+x getdata.py</span></span><br><span class="line">   python ./getdata.py</span><br><span class="line">   <span class="built_in">rm</span> getdata.py</span><br><span class="line"><span class="keyword">done</span> </span><br></pre></td></tr></table></figure>





<h3 id="For-download-daily-data"><a href="#For-download-daily-data" class="headerlink" title="For download daily data"></a>For download daily data</h3><p>参考：<a href="https://blog.csdn.net/mihuanchengbao/article/details/126305291">https://blog.csdn.net/mihuanchengbao/article/details/126305291</a></p>
<h4 id="1-最粗暴的方式"><a href="#1-最粗暴的方式" class="headerlink" title="1. 最粗暴的方式"></a>1. 最粗暴的方式</h4><p>就是把逐小时的资料全部下载下来，然后自己计算逐日平均。</p>
<p>Copernicus Climate Data Store |</p>
<p>但是把，这样下载时间成本、储存成本和再处理成本有点高。。。</p>
<h4 id="2-官方提供了daily的统计资料哦"><a href="#2-官方提供了daily的统计资料哦" class="headerlink" title="2. 官方提供了daily的统计资料哦"></a>2. 官方提供了daily的统计资料哦</h4><p>先把官网甩出来~：</p>
<p><a href="https://cds.climate.copernicus.eu/apps/user-apps/app-c3s-daily-era5-statistics?dataset=reanalysis-era5-single-levels&product_type=reanalysis&variable_e5sl=2m_temperature&pressure_level_e5sl=-&statistic=daily_mean&year_e5sl=1979&month=01&frequency=1-hourly&time_zone=UTC+00:00&grid_e5=0.25/0.25&area.lat:record:list:float=-90&area.lat:record:list:float=90&area.lon:record:list:float=-180&area.lon:record:list:float=180">Log in</a></p>
<p>ERA5 DAILY提供每天7个ERA5气候再分析参数的汇总值：2米空气温度、2米露点温度、总降水量、平均海平面气压、表面气压、10米u风分量和10米v风分量。此外，根据每小时的2米空气温度数据，计算出2米处的每日最低和最高空气温度。每日总降水质以每日总和给出。所有其他参数都以日平均数提供。</p>
<p><img src="https://p.ipic.vip/v7kc47.png" alt="img"></p>
<p> 根据你想要的选择合适之后，点击RUN便会生成.nc数据，点击下载就行。</p>
<p> 但是还是有个问题啊，每个变量每个月都得点击一次，这也太麻烦了！！！</p>
<h4 id="3-用脚本批量下载"><a href="#3-用脚本批量下载" class="headerlink" title="3. 用脚本批量下载"></a>3. 用脚本批量下载</h4><ul>
<li>step1：</li>
</ul>
<p>安装CDS API，大佬可以直接参阅官网提供的AAPI进行下载：</p>
<p><a href="https://cds.climate.copernicus.eu/api-how-to">How to use the CDS API</a></p>
<p>首先，创建.cdsapirc 文件并填入url和key</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vim <span class="variable">$HOME</span>/.cdsapirc</span></span><br></pre></td></tr></table></figure>

<p>然后键入i进入写入模式，填写你自己的url和key，类似于：，自己的url和key在此网站中：<a href="https://cds.climate.copernicus.eu/api-how-to">How to use the CDS API</a>，将右侧黑框中的url和key复制过来即可，注意需要先登录才会显示自己的url和key。</p>
<p><img src="https://p.ipic.vip/7zh4a4.png" alt="img"></p>
<p>然后，使用pip安装就行了</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pip install cdsapi</span></span><br></pre></td></tr></table></figure>



<ul>
<li>step2：</li>
</ul>
<p>运行 <code>downloadERA5Daily.py</code> 就行 这个脚本代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@author:Tong</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> cdsapi</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> multiprocessing</span><br><span class="line"> </span><br><span class="line"><span class="comment"># CDS API script to use CDS service to retrieve daily ERA5* variables and iterate over</span></span><br><span class="line"><span class="comment"># all months in the specified years.</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Requires:</span></span><br><span class="line"><span class="comment"># 1) the CDS API to be installed and working on your system</span></span><br><span class="line"><span class="comment"># 2) You have agreed to the ERA5 Licence (via the CDS web page)</span></span><br><span class="line"><span class="comment"># 3) Selection of required variable, daily statistic, etc</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Output:</span></span><br><span class="line"><span class="comment"># 1) separate netCDF file for chosen daily statistic/variable for each month</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Uncomment years as required</span></span><br><span class="line"><span class="comment"># For valid keywords, see Table 2 of:</span></span><br><span class="line"><span class="comment"># https://datastore.copernicus-climate.eu/documents/app-c3s-daily-era5-statistics/C3S_Application-Documentation_ERA5-daily-statistics-v2.pdf</span></span><br><span class="line"><span class="comment"># select your variable; name must be a valid ERA5 CDS API name.</span></span><br><span class="line"><span class="comment"># Select the required statistic, valid names given in link above</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">c = cdsapi.Client()<span class="comment">#timeout=300</span></span><br><span class="line">years = [ <span class="built_in">str</span>(id1) <span class="keyword">for</span> id1 <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1959</span>,<span class="number">2016</span>) ]</span><br><span class="line">months =[ <span class="string">&#x27;%02d&#x27;</span> % id2 <span class="keyword">for</span> id2 <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">13</span>) ]</span><br><span class="line">var = <span class="string">&quot;2m_temperature&quot;</span></span><br><span class="line">stat = <span class="string">&quot;daily_mean&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Download</span>(<span class="params">iyear, imonth</span>):</span><br><span class="line">    t000=time.time()</span><br><span class="line">    result = c.service(</span><br><span class="line">        <span class="string">&quot;tool.toolbox.orchestrator.workflow&quot;</span>,</span><br><span class="line">        params=&#123;</span><br><span class="line">            <span class="string">&quot;realm&quot;</span>: <span class="string">&quot;c3s&quot;</span>,</span><br><span class="line">            <span class="string">&quot;project&quot;</span>: <span class="string">&quot;app-c3s-daily-era5-statistics&quot;</span>,</span><br><span class="line">            <span class="string">&quot;version&quot;</span>: <span class="string">&quot;master&quot;</span>,</span><br><span class="line">            <span class="string">&quot;kwargs&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;dataset&quot;</span>: <span class="string">&quot;reanalysis-era5-single-levels&quot;</span>,</span><br><span class="line">                <span class="string">&quot;product_type&quot;</span>: <span class="string">&quot;reanalysis&quot;</span>,</span><br><span class="line">                <span class="string">&quot;variable&quot;</span>: var,</span><br><span class="line">                <span class="string">&quot;statistic&quot;</span>: stat,</span><br><span class="line">                <span class="string">&quot;year&quot;</span>: iyear,</span><br><span class="line">                <span class="string">&quot;month&quot;</span>: imonth,</span><br><span class="line">                <span class="string">&quot;time_zone&quot;</span>: <span class="string">&quot;UTC+00:0&quot;</span>,</span><br><span class="line">                <span class="string">&quot;frequency&quot;</span>: <span class="string">&quot;1-hourly&quot;</span>,</span><br><span class="line">                <span class="comment">#</span></span><br><span class="line">                <span class="comment"># Users can change the output grid resolution and selected area</span></span><br><span class="line">                <span class="comment">#</span></span><br><span class="line">                <span class="comment">#                &quot;grid&quot;: &quot;1.0/1.0&quot;,</span></span><br><span class="line">                <span class="comment">#                &quot;area&quot;:&#123;&quot;lat&quot;: [10, 60], &quot;lon&quot;: [65, 140]&#125;</span></span><br><span class="line"> </span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">&quot;workflow_name&quot;</span>: <span class="string">&quot;application&quot;</span></span><br><span class="line">        &#125;)</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># set name of output file for each month (statistic, variable, year, month</span></span><br><span class="line"> </span><br><span class="line">    file_name =  stat + <span class="string">&quot;_&quot;</span> + var +  iyear + imonth + <span class="string">&quot;.nc&quot;</span></span><br><span class="line"> </span><br><span class="line">    location = result[<span class="number">0</span>][<span class="string">&#x27;location&#x27;</span>]</span><br><span class="line">    res = requests.get(location, stream=<span class="literal">True</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Writing data to &quot;</span> + file_name)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_name, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> fh:</span><br><span class="line">        <span class="keyword">for</span> r <span class="keyword">in</span> res.iter_content(chunk_size=<span class="number">1024</span>):</span><br><span class="line">            fh.write(r)</span><br><span class="line">    fh.close()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;***样本%s 保存结束, 耗时: %.3f s / %.3f mins****************&#x27;</span> % (file_name,(time.time() - t000), (time.time() - t000) / <span class="number">60</span>))</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    t0 = time.time()</span><br><span class="line">    <span class="comment"># ===================================================================================</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;*****************程序开始*********************&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> yr <span class="keyword">in</span> years:</span><br><span class="line">        <span class="keyword">for</span> mn <span class="keyword">in</span> months:</span><br><span class="line">            Download(yr, mn)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;***********************程序结束, 耗时: %.3f s / %.3f mins****************&#x27;</span> % (</span><br><span class="line">        (time.time() - t0), (time.time() - t0) / <span class="number">60</span>))</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>FNL</title>
    <url>/2022/05/01/Tool/FNL/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="变量后缀说明"><a href="#变量后缀说明" class="headerlink" title="变量后缀说明"></a>变量后缀说明</h2><p>用NCL画FNL，print文件之后发现一堆变量，解释也很简单，比如气温，就有十个左右的变量名，但解释都只有“temperature”，有一些还能根据有几层来判断，有些单层的完全搞不明白，头大，后来在官网上查看每个层次对应哪些变量，大概整理了几个我认为常用的后缀表示的内容，另外一些应该比较容易辨别的出来。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2m处气温、比湿、相对湿度或10m处风 Specified height above ground：HTGL </span><br><span class="line"></span><br><span class="line">对流层顶 Tropopause：TRO</span><br><span class="line"></span><br><span class="line">地表 Ground or water surface：SFC</span><br><span class="line"></span><br><span class="line">I等压层 sobaric surface：ISBL</span><br><span class="line"></span><br><span class="line">Sigma level（0.995）：SIGL</span><br><span class="line"></span><br><span class="line">整层大气Entire atmosphere (considered as a singlelayer)：EATM</span><br><span class="line"></span><br><span class="line">Maximum wind level：MWSL</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Fortran</title>
    <url>/2022/05/01/Tool/Fortran/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Read-NC"><a href="#Read-NC" class="headerlink" title="Read NC"></a>Read NC</h3><p>fortran中读取nc文件主要分为以下几步：</p>
<ol>
<li>USE netcdf</li>
<li>NF90_OPEN函数打开文件</li>
<li>NF90_INQ_DIMID获取维度ID</li>
<li>NF90_INQUIRE_DIMENSION获取各维度的长度</li>
<li>ALLOCATE分配动态数组</li>
<li>NF90_INQ_VARID获取变量ID</li>
<li>NF90_GET_VAR获取变量值</li>
</ol>
<p>tips:社区环境不支持fortran，可以拷贝至团队版本或者本地进行尝试。</p>
<p>以下是具体示例代码</p>
<p>In [ ]:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">program main </span><br><span class="line"></span><br><span class="line">    USE netcdf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    implicit none </span><br><span class="line"></span><br><span class="line">    integer:: status, fidA, dimID_TIME, dimID_LAT, dimID_LON, T2_ID, LAT_ID, LON_ID, U10_ID</span><br><span class="line">    integer:: nx, ny, nt</span><br><span class="line"></span><br><span class="line">    real   , dimension(:,:,:) , allocatable :: t2m, u10</span><br><span class="line">    real   , dimension(:,:)   , allocatable :: lat, lon</span><br><span class="line">    CHARACTER(LEN=100) :: file_in</span><br><span class="line"></span><br><span class="line">    file_in  = &#x27;Test.nc&#x27;</span><br><span class="line"></span><br><span class="line">    !----------------------------------------------------------------</span><br><span class="line">    ! 打开文件 :</span><br><span class="line">    status = NF90_OPEN(TRIM(file_in),0,fidA)</span><br><span class="line">    call erreur(status,.TRUE.,&quot;read_A&quot;)</span><br><span class="line"></span><br><span class="line">    !- read ID of dimensions of interest and save them in-----------------</span><br><span class="line">    ! 获取维度变量ID</span><br><span class="line">    status = NF90_INQ_DIMID(fidA,&quot;time&quot;,dimID_TIME)</span><br><span class="line">    call erreur(status,.TRUE.,&quot;inq_dimID_TIME&quot;)</span><br><span class="line"></span><br><span class="line">    status = NF90_INQ_DIMID(fidA,&quot;y&quot;,dimID_LAT)</span><br><span class="line">    call erreur(status,.TRUE.,&quot;inq_dimID_LAT&quot;)</span><br><span class="line"></span><br><span class="line">    status = NF90_INQ_DIMID(fidA,&quot;x&quot;,dimID_LON)</span><br><span class="line">    call erreur(status,.TRUE.,&quot;inq_dimID_LON&quot;)</span><br><span class="line"></span><br><span class="line">    ! 获取维度的值:</span><br><span class="line">    status = NF90_INQUIRE_DIMENSION(fidA,dimID_TIME,len=nt)</span><br><span class="line">    call erreur(status,.TRUE.,&quot;inq_dim_TIME&quot;)</span><br><span class="line"></span><br><span class="line">    status = NF90_INQUIRE_DIMENSION(fidA,dimID_LAT,len=ny)</span><br><span class="line">    call erreur(status,.TRUE.,&quot;inq_dim_LAT&quot;)</span><br><span class="line"></span><br><span class="line">    status = NF90_INQUIRE_DIMENSION(fidA,dimID_LON,len=nx)</span><br><span class="line">    call erreur(status,.TRUE.,&quot;inq_dim_LON&quot;)</span><br><span class="line"></span><br><span class="line">    print*,nx,ny,nt </span><br><span class="line"></span><br><span class="line">    !- Allocation of arrays :</span><br><span class="line">    ALLOCATE(  t2m(nx, ny, nt)  )</span><br><span class="line">    ALLOCATE(  u10(nx, ny, nt)  )</span><br><span class="line">    ALLOCATE(  LAT(nx, ny)  )</span><br><span class="line">    ALLOCATE(  LON(nx, ny)  )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    !- 获取变量ID :</span><br><span class="line">    status = NF90_INQ_VARID(fidA,&quot;T2&quot;,T2_ID)</span><br><span class="line">    call erreur(status,.TRUE.,&quot;inq_T2_ID&quot;)</span><br><span class="line"></span><br><span class="line">    status = NF90_INQ_VARID(fidA,&quot;U10&quot;,U10_ID)</span><br><span class="line">    call erreur(status,.TRUE.,&quot;inq_U10_ID&quot;)</span><br><span class="line"></span><br><span class="line">    status = NF90_INQ_VARID(fidA,&quot;lat&quot;,LAT_ID)</span><br><span class="line">    call erreur(status,.TRUE.,&quot;inq_LAT_ID&quot;)</span><br><span class="line"></span><br><span class="line">    status = NF90_INQ_VARID(fidA,&quot;lon&quot;,LON_ID)</span><br><span class="line">    call erreur(status,.TRUE.,&quot;inq_LON_ID&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    !- 获取变量值 :</span><br><span class="line">    status = NF90_GET_VAR(fidA,T2_ID,t2m)</span><br><span class="line">    call erreur(status,.TRUE.,&quot;getvar_T2&quot;)</span><br><span class="line">   </span><br><span class="line">    status = NF90_GET_VAR(fidA,U10_ID,u10)</span><br><span class="line">    call erreur(status,.TRUE.,&quot;getvar_U10&quot;)</span><br><span class="line"></span><br><span class="line">    status = NF90_GET_VAR(fidA,LAT_ID,LAT)</span><br><span class="line">    call erreur(status,.TRUE.,&quot;getvar_LAT&quot;)</span><br><span class="line"></span><br><span class="line">    status = NF90_GET_VAR(fidA,LON_ID,LON)</span><br><span class="line">    call erreur(status,.TRUE.,&quot;getvar_LON&quot;)</span><br><span class="line"></span><br><span class="line">    !- close netcdf file :</span><br><span class="line">    status = NF90_CLOSE(fidA)</span><br><span class="line">    call erreur(status,.TRUE.,&quot;close_A&quot;)</span><br><span class="line"></span><br><span class="line">    print*,t2m(:,1,1)</span><br><span class="line">    print*,u10(:,1,1)</span><br><span class="line"></span><br><span class="line">    print*,lat(:,1)</span><br><span class="line"></span><br><span class="line">    print*,lon(:,1)</span><br><span class="line"></span><br><span class="line">end </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SUBROUTINE erreur(iret, lstop, chaine)</span><br><span class="line">! used to provide clear error messages :</span><br><span class="line">USE netcdf</span><br><span class="line">INTEGER, INTENT(in)                     :: iret</span><br><span class="line">LOGICAL, INTENT(in)                     :: lstop</span><br><span class="line">CHARACTER(LEN=*), INTENT(in)            :: chaine</span><br><span class="line">!</span><br><span class="line">CHARACTER(LEN=80)                       :: message</span><br><span class="line">!</span><br><span class="line">IF ( iret .NE. 0 ) THEN</span><br><span class="line">  WRITE(*,*) &#x27;ROUTINE: &#x27;, TRIM(chaine)</span><br><span class="line">  WRITE(*,*) &#x27;ERROR: &#x27;, iret</span><br><span class="line">  message=NF90_STRERROR(iret)</span><br><span class="line">  WRITE(*,*) &#x27;WHICH MEANS:&#x27;,TRIM(message)</span><br><span class="line">  IF ( lstop ) STOP</span><br><span class="line">ENDIF</span><br><span class="line">!</span><br><span class="line">END SUBROUTINE erreur</span><br></pre></td></tr></table></figure>

<p>编译方法：</p>
<p>In [ ]:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># bash</span><br><span class="line">NETCDF=xxx/netcdf/4.4.1  </span><br><span class="line">NC_INC=&quot;-I $&#123;NETCDF&#125;/include&quot;    </span><br><span class="line">NC_LIB=&quot;-L $&#123;NETCDF&#125;/lib -lnetcdf -lnetcdff&quot;  </span><br><span class="line">ifort -c $NC_INC io_netcdf.f90  </span><br><span class="line">ifort -o run_example io_netcdf.o $NC_LIB  </span><br><span class="line">./run_example  </span><br></pre></td></tr></table></figure>

<p>参考：</p>
<ul>
<li><a href="https://nicojourdain.github.io/students_dir/students_netcdf_fortran/">https://nicojourdain.github.io/students_dir/students_netcdf_fortran/</a></li>
<li><a href="https://docs.unidata.ucar.edu/netcdf-fortran/current/f90_The-NetCDF-Fortran-90-Interface-Guide.html">https://docs.unidata.ucar.edu/netcdf-fortran/current/f90_The-NetCDF-Fortran-90-Interface-Guide.html</a></li>
</ul>
<h2 id="利用f90nml读写namelist"><a href="#利用f90nml读写namelist" class="headerlink" title="利用f90nml读写namelist"></a>利用f90nml读写namelist</h2><p>**以下全文代码和数据均已发布至*<em>和鲸社区*<em>，复制下面链接或者阅读原文前往，可一键fork跑通：</em></em></p>
<blockquote>
<p><a href="https://www.heywhale.com/mw/project/63bbf0f96a05380d5b69fd52">https://www.heywhale.com/mw/project/63bbf0f96a05380d5b69fd52</a></p>
</blockquote>
<p>f90nml基础介绍可以参考：<a href="http://mp.weixin.qq.com/s?__biz=Mzg4NzY4MzgxNw==&mid=2247486843&idx=1&sn=31944127f79f0cf68e24dbc595a3cadb&chksm=cf87e2fdf8f06beb161e1ea768a743933d0a1c84bea5ba62b12c1ea1fbd75e33e658c5944fd0&scene=21#wechat_redirect">f90nml: 原来写namelist也可以这么轻松</a></p>
<p>气象软件通常使用namelist文件来传递参数，用python搭建数值预报系统时可以利用f90nml来方便地修改namelist。这里以wrf的namelist.input文件为例，仅修改模拟时间作为示例</p>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> f90nml </span><br><span class="line">from datetime <span class="keyword">import</span> date, datetime, timedelta</span><br><span class="line"></span><br><span class="line">runhours   = <span class="number">24</span> </span><br><span class="line">start_time = datetime(<span class="number">2022</span>,<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line">end_time   = start_time + timedelta(hours=runhours)</span><br><span class="line"></span><br><span class="line">namelist_wrf = f90nml.read(<span class="string">&#x27;namelist.input&#x27;</span>)</span><br><span class="line">namelist_wrf[<span class="string">&#x27;time_control&#x27;</span>][<span class="string">&#x27;run_days&#x27;</span>]           = <span class="number">0</span></span><br><span class="line">namelist_wrf[<span class="string">&#x27;time_control&#x27;</span>][<span class="string">&#x27;run_hours&#x27;</span>]          = runhours</span><br><span class="line">namelist_wrf[<span class="string">&#x27;time_control&#x27;</span>][<span class="string">&#x27;run_minutes&#x27;</span>]        = <span class="number">0</span></span><br><span class="line">namelist_wrf[<span class="string">&#x27;time_control&#x27;</span>][<span class="string">&#x27;run_seconds&#x27;</span>]        = <span class="number">0</span></span><br><span class="line">namelist_wrf[<span class="string">&#x27;time_control&#x27;</span>][<span class="string">&#x27;start_year&#x27;</span>]         = start_time.year   </span><br><span class="line">namelist_wrf[<span class="string">&#x27;time_control&#x27;</span>][<span class="string">&#x27;start_month&#x27;</span>]        = start_time.month  </span><br><span class="line">namelist_wrf[<span class="string">&#x27;time_control&#x27;</span>][<span class="string">&#x27;start_day&#x27;</span>]          = start_time.day    </span><br><span class="line">namelist_wrf[<span class="string">&#x27;time_control&#x27;</span>][<span class="string">&#x27;start_hour&#x27;</span>]         = start_time.hour   </span><br><span class="line">namelist_wrf[<span class="string">&#x27;time_control&#x27;</span>][<span class="string">&#x27;start_minute&#x27;</span>]       = start_time.minute </span><br><span class="line">namelist_wrf[<span class="string">&#x27;time_control&#x27;</span>][<span class="string">&#x27;end_year&#x27;</span>]           = end_time.year</span><br><span class="line">namelist_wrf[<span class="string">&#x27;time_control&#x27;</span>][<span class="string">&#x27;end_month&#x27;</span>]          = end_time.month</span><br><span class="line">namelist_wrf[<span class="string">&#x27;time_control&#x27;</span>][<span class="string">&#x27;end_day&#x27;</span>]            = end_time.day  </span><br><span class="line">namelist_wrf[<span class="string">&#x27;time_control&#x27;</span>][<span class="string">&#x27;end_hour&#x27;</span>]           = end_time.hour </span><br><span class="line">namelist_wrf[<span class="string">&#x27;time_control&#x27;</span>][<span class="string">&#x27;end_minute&#x27;</span>]         = end_time.minute</span><br><span class="line">namelist_wrf.<span class="built_in">write</span>(<span class="string">&#x27;./namelist.input&#x27;</span>, force = True)</span><br></pre></td></tr></table></figure>

<p>输出文件截图：</p>
<p><img src="https://p.ipic.vip/lz2f5x.png" alt="Image"></p>
<p>另记录两个常用设置：</p>
<ol>
<li>如果模拟的domain很多（如5层嵌套），一行的字符串过多可能会导致自动换行（默认72），这时只需要加上namelist_wrf.column_width &#x3D; 200即可。</li>
<li>新增一个字段为了避免排序混乱，建议使用有序字典。这里以添加随机扰动SKEB为例，先新建一个空的有序字典，再向字典中填充键值对，具体代码如下:</li>
</ol>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> collections</span><br><span class="line"></span><br><span class="line">def add_SKEB(input, imem):</span><br><span class="line">    namelist_wrf = f90nml.read(input)</span><br><span class="line">    # 新建一个字段（有序字典）</span><br><span class="line">    namelist_wrf[<span class="string">&#x27;stoch&#x27;</span>] = collections.OrderedDict()</span><br><span class="line">    namelist_wrf[<span class="string">&#x27;stoch&#x27;</span>][<span class="string">&#x27;skebs&#x27;</span>]               = <span class="number">1</span> </span><br><span class="line">    namelist_wrf[<span class="string">&#x27;stoch&#x27;</span>][<span class="string">&#x27;tot_backscat_psi&#x27;</span>]    = <span class="number">1.e-5</span></span><br><span class="line">    namelist_wrf[<span class="string">&#x27;stoch&#x27;</span>][<span class="string">&#x27;tot_backscat_t&#x27;</span>]      = <span class="number">5.e-6</span></span><br><span class="line">    namelist_wrf[<span class="string">&#x27;stoch&#x27;</span>][<span class="string">&#x27;ztau_psi&#x27;</span>]            = <span class="number">3240</span></span><br><span class="line">    namelist_wrf[<span class="string">&#x27;stoch&#x27;</span>][<span class="string">&#x27;ztau_t&#x27;</span>]              = <span class="number">3240</span></span><br><span class="line">    namelist_wrf[<span class="string">&#x27;stoch&#x27;</span>][<span class="string">&#x27;rexponent_psi&#x27;</span>]       = -<span class="number">2.567</span></span><br><span class="line">    namelist_wrf[<span class="string">&#x27;stoch&#x27;</span>][<span class="string">&#x27;rexponent_t&#x27;</span>]         = -<span class="number">2.567</span></span><br><span class="line">    namelist_wrf[<span class="string">&#x27;stoch&#x27;</span>][<span class="string">&#x27;zsigma2_eps&#x27;</span>]         = <span class="number">0.0833</span></span><br><span class="line">    namelist_wrf[<span class="string">&#x27;stoch&#x27;</span>][<span class="string">&#x27;zsigma2_eta&#x27;</span>]         = <span class="number">0.0833</span></span><br><span class="line">    namelist_wrf[<span class="string">&#x27;stoch&#x27;</span>][<span class="string">&#x27;kminforc&#x27;</span>]            = <span class="number">1</span></span><br><span class="line">    namelist_wrf[<span class="string">&#x27;stoch&#x27;</span>][<span class="string">&#x27;lminforc&#x27;</span>]            = <span class="number">1</span> </span><br><span class="line"></span><br><span class="line">    namelist_wrf[<span class="string">&#x27;stoch&#x27;</span>][<span class="string">&#x27;kminforct&#x27;</span>]           = <span class="number">1</span></span><br><span class="line">    namelist_wrf[<span class="string">&#x27;stoch&#x27;</span>][<span class="string">&#x27;lminforct&#x27;</span>]           = <span class="number">1</span></span><br><span class="line">    namelist_wrf[<span class="string">&#x27;stoch&#x27;</span>][<span class="string">&#x27;kmaxforc&#x27;</span>]            = <span class="number">1000000</span></span><br><span class="line">    namelist_wrf[<span class="string">&#x27;stoch&#x27;</span>][<span class="string">&#x27;lmaxforc&#x27;</span>]            = <span class="number">1000000</span></span><br><span class="line"></span><br><span class="line">    namelist_wrf[<span class="string">&#x27;stoch&#x27;</span>][<span class="string">&#x27;kmaxforct&#x27;</span>]           = <span class="number">1000000</span></span><br><span class="line">    namelist_wrf[<span class="string">&#x27;stoch&#x27;</span>][<span class="string">&#x27;lmaxforct&#x27;</span>]           = <span class="number">1000000</span></span><br><span class="line">    namelist_wrf[<span class="string">&#x27;stoch&#x27;</span>][<span class="string">&#x27;skebs_vertstruc&#x27;</span>]     = <span class="number">0</span></span><br><span class="line">    namelist_wrf[<span class="string">&#x27;stoch&#x27;</span>][<span class="string">&#x27;iseed_skebs&#x27;</span>]         = <span class="number">2</span> + imem</span><br><span class="line">    </span><br><span class="line">    namelist_wrf.column_width = <span class="number">200</span>    </span><br><span class="line">    namelist_wrf.<span class="built_in">write</span>(input, force=True)</span><br></pre></td></tr></table></figure>

<p><img src="https://p.ipic.vip/n6iho6.png" alt="Image"></p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Fortran95</title>
    <url>/2022/05/01/Tool/Fortran95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="pdfobject-container" data-target="https://docs.qq.com/pdf/DSlZTeVhicVdYWnJQ" data-height="1000px"></div>

]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>GCC</title>
    <url>/2022/05/01/Tool/GCC/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Linux-安装GCC讲解-在线和无网离线"><a href="#Linux-安装GCC讲解-在线和无网离线" class="headerlink" title="Linux 安装GCC讲解(在线和无网离线)"></a>Linux 安装GCC讲解(在线和无网离线)</h1><p>来源：<a href="https://www.cnblogs.com/xuliangxing/p/7132018.html">https://www.cnblogs.com/xuliangxing/p/7132018.html</a></p>
<p>本文主要介绍如何在无网络的环境下怎么离线安装GCC，如果有网，只需要通过命令 yum install gcc 进行安装就可以了，yum会自动把所有关联的依赖包也一起安装了，一键安装。　</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install gcc</span><br></pre></td></tr></table></figure>

<p>　　下面介绍两种离线安装GCC的方案</p>
<p><strong>方案一，下载安装包手动安装</strong></p>
<p>　　下载GCC所有需要的依赖包，逐个安装，可以从网站<a href="http://www.rpmfind.net/linux/rpm2html/search.php%E6%90%9C%E7%B4%A2%E4%B8%8B%E8%BD%BD%EF%BC%8C%E4%B8%8B%E9%9D%A2%E6%98%AF%E6%89%80%E9%9C%80%E8%A6%81%E5%AE%89%E8%A3%85%E7%9A%84GCC%E4%BE%9D%E8%B5%96%E5%88%97%E8%A1%A8">http://www.rpmfind.net/linux/rpm2html/search.php搜索下载，下面是所需要安装的GCC依赖列表</a></p>
<p><strong>安装gcc编译环境依赖(真实版本可能有所不同，这无关紧要)：</strong></p>
<p>安装gcc模块依赖：cloog-ppl、cpp、glibc-devel、libgomp、libgomp.so.1</p>
<p>安装cloog-ppl模块依赖：libppl.so.7、libppl_c.so.2</p>
<p>安装libppl.so.7、libppl_c.so.2模块依赖：无</p>
<p>安装cpp模块依赖：libmpcfr.so.1</p>
<p>安装libmpcfr.so.1模块依赖：无</p>
<p>安装glibc-devel模块依赖：glibc-headers</p>
<p>安装glibc-headers模块依赖：kernel-headers</p>
<p>安装kernel-headers模块依赖：无</p>
<p>安装libgomp、libgomp.so.1模块依赖：无</p>
<p><strong>安装顺序：</strong></p>
<p>rpm -ivh ppl-0.10.2-11.el6.x86_64.rpm                 #ppl(libppl.so.7、libppl_c.so.2)<br>rpm -ivh cloog-ppl-0.15.7-1.2.el6.x86_64.rpm            #cloog-ppl<br>rpm -ivh mpfr-2.4.1-6.el6.x86_64.rpm                  #libmpcfr.so.1<br>rpm -ivh cpp-4.4.7-17.el6.x86_64.rpm                  #cpp<br>rpm -ivh kernel-headers-2.6.32-642.el6.x86_64.rpm        #kernel-headers<br>rpm -ivh glibc-headers-2.12-1.192.el6.x86_64.rpm         #glibc-headers<br>rpm -ivh glibc-devel-2.12-1.192.el6.x86_64.rpm           #glibc-devel<br>rpm -ivh libgomp-4.4.7-17.el6.x86_64.rpm              #libgomp(libgomp、libgomp.so.1)<br>rpm -ivh gcc-4.4.7-17.el6.x86_64.rpm                  #gcc</p>
<p>至此安装成功</p>
<p><strong>方案一，挂载本地镜像安装</strong></p>
<p>前提是需要有安装盘，因为安装盘里有gcc，我们把安装盘当作一个本地yum源</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> 1 #设置光驱挂载点 </span><br><span class="line"> 2 mkdir -p /Application/cdrom </span><br><span class="line"> 3 #挂载光驱 </span><br><span class="line"> 4 mount /dev/cdrom /Application/cdrom  这个是挂载后文件地址，你也可以自己选着路径</span><br><span class="line"> 5 #备份原yum源 </span><br><span class="line"> 6 cp /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.bak</span><br><span class="line"> 7 #把光驱设为yum源 </span><br><span class="line"> 8 echo &quot;[base]&quot; &gt; /etc/yum.repos.d/CentOS-Base.repo </span><br><span class="line"> 9 echo &quot;name=CentOS-$releasever - Base&quot; &gt;&gt; /etc/yum.repos.d/CentOS-Base.repo </span><br><span class="line">10 echo &quot;baseurl=file:///Application/cdrom/&quot; &gt;&gt; /etc/yum.repos.d/CentOS-Base.repo 还记得你刚刚挂载镜像的地址不，没错，就是它</span><br><span class="line">11 echo &quot;gpgcheck=0&quot; &gt;&gt; /etc/yum.repos.d/CentOS-Base.repo </span><br><span class="line">12 #安装gcc </span><br><span class="line">13 yum install gcc -y </span><br><span class="line">14 #恢复原yum源 </span><br><span class="line">15 cp –f /etc/yum.repos.d/CentOS-Base.repo.bak /etc/yum.repos.d/CentOS-Base.repo </span><br></pre></td></tr></table></figure>

<p>输入命令：gcc -v 查看有没有显示版本信息，如果所示</p>
<p>　　<img src="https://p.ipic.vip/kh53xd.png" alt="img"></p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>GPU-OpenACC</title>
    <url>/2022/05/01/Tool/GPU-OpenACC/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="GPU-加速的三种途径"><a href="#GPU-加速的三种途径" class="headerlink" title="GPU 加速的三种途径"></a>GPU 加速的三种途径</h4><p><img src="https://p.ipic.vip/ksa88f.png" alt="Screenshot 2024-11-01 at 09.39.41"></p>
<ol>
<li>直接的调用加速库：常用函数和计算</li>
</ol>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">!举例</span></span><br><span class="line"><span class="keyword">use</span> cublas</span><br><span class="line"><span class="keyword">call</span> cublasgemm(a,b)</span><br></pre></td></tr></table></figure>

<p>2、编译器导语（openACC、openMP）：适用于对已有代码进行移植</p>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">!$OMP 导语，非注释，使用GPU多核心运行</span></span><br></pre></td></tr></table></figure>

<p>生效方法：编译的时候加上<code>-fopenmp</code>或<code>-mp</code>选项，具体取决于编译器</p>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">!$ACC 导语，非注释</span></span><br></pre></td></tr></table></figure>

<p>3、编程语言（OpenCL、CUDA、MAXMACA）：新的语法体系</p>
<h4 id="什么是OpenACC"><a href="#什么是OpenACC" class="headerlink" title="什么是OpenACC"></a>什么是OpenACC</h4><p><img src="https://p.ipic.vip/nzfxnr.png" alt="Screenshot 2024-11-01 at 09.49.22"></p>
<h4 id="openACC-开发的流程"><a href="#openACC-开发的流程" class="headerlink" title="openACC 开发的流程"></a>openACC 开发的流程</h4><p><img src="https://p.ipic.vip/mokxfq.png" alt="Screenshot 2024-11-01 at 09.51.37"></p>
<p>前后有依赖关系的不能并行</p>
<p>可以并行的程序：通常为循环</p>
<p>反复优化：挤海绵里的水</p>
<h4 id="openACC例子：Fortran"><a href="#openACC例子：Fortran" class="headerlink" title="openACC例子：Fortran"></a>openACC例子：Fortran</h4><p><img src="https://p.ipic.vip/htpz9d.png" alt="Screenshot 2024-11-01 at 09.53.59"></p>
<h4 id="OpenACC-特点"><a href="#OpenACC-特点" class="headerlink" title="OpenACC 特点"></a>OpenACC 特点</h4><p><img src="https://p.ipic.vip/3hzvz9.png" alt="Screenshot 2024-11-01 at 09.56.52"></p>
<p>渐进式：可逐行优化</p>
<p><img src="https://p.ipic.vip/6o0x5w.png" alt="Screenshot 2024-11-01 at 09.58.36"></p>
<p>既支持GPU，也支持CPU</p>
<p><img src="https://p.ipic.vip/78gfca.png" alt="Screenshot 2024-11-01 at 10.00.00"></p>
<p>对编译器来说相当于一个hint，开发者不需要理解底层逻辑</p>
<p><img src="https://p.ipic.vip/9pesd5.png" alt="Screenshot 2024-11-01 at 10.01.05"></p>
<h4 id="代码运行"><a href="#代码运行" class="headerlink" title="代码运行"></a>代码运行</h4><p><img src="https://p.ipic.vip/7lsbtv.png" alt="Screenshot 2024-11-01 at 10.02.43"></p>
<p><code>-Minfo=all</code> 打印细节</p>
<h4 id="执行模型"><a href="#执行模型" class="headerlink" title="执行模型"></a>执行模型</h4><p><img src="https://p.ipic.vip/t3tnev.png" alt="Screenshot 2024-11-01 at 10.04.12"></p>
<p>从CPU端开始—拷贝到GPU—GPU执行—返回CPU</p>
<p>Host（CPU）  Device（GPU）</p>
<p>显存：GPU的存储</p>
<p>隐式的同步：等待上一个并行模块执行完毕再执行下一个</p>
<h4 id="Kernels-导语"><a href="#Kernels-导语" class="headerlink" title="Kernels 导语"></a>Kernels 导语</h4><p><img src="https://p.ipic.vip/7apl59.png" alt="Screenshot 2024-11-01 at 10.06.53"></p>
<p>对编译器的”建议“，编译器辅助判断能否并行，适合新手</p>
<h4 id="Parallel-导语"><a href="#Parallel-导语" class="headerlink" title="Parallel 导语"></a>Parallel 导语</h4><p><img src="https://p.ipic.vip/trdk72.png" alt="Screenshot 2024-11-01 at 10.06.53"></p>
<p>严格按照要求执行，即使可能出错，适合专家级，实现对GPU的精确控制</p>
<p>但 Kernels 对于复杂情况的分析能力有限，可能过于保守，无法实现有效并行</p>
<h4 id="Kernels-VS-Parallel"><a href="#Kernels-VS-Parallel" class="headerlink" title="Kernels VS Parallel"></a>Kernels VS Parallel</h4><p><img src="https://p.ipic.vip/tf7rj0.png" alt="Screenshot 2024-11-01 at 10.12.26"></p>
<p>Kernels 放到两个Kernel上执行</p>
<p>Parallel 放到一个Kernel上执行</p>
<h4 id="OpenACC-三极并行"><a href="#OpenACC-三极并行" class="headerlink" title="OpenACC 三极并行"></a>OpenACC 三极并行</h4><p><img src="https://p.ipic.vip/5qp9qo.png" alt="Screenshot 2024-11-01 at 10.13.54"></p>
<p>线程数可以大于核心数</p>
<p>线程组织形式：三维</p>
<p>Gang 有多少个线程块    worker 宽   vector  长</p>
<p>程序计算量越大，GPU并行效果越好</p>
<h4 id="结构化数据导语"><a href="#结构化数据导语" class="headerlink" title="结构化数据导语"></a>结构化数据导语</h4><p><img src="https://p.ipic.vip/krza9k.png" alt="Screenshot 2024-11-01 at 10.17.43"></p>
<p>copyout(a) 需要拷出</p>
<p>creat(b,c) 只需要创建空间</p>
<p>循环1和循环2之间不再需要数据的拷贝，提升程序的性能</p>
<h4 id="非结构化数据导语"><a href="#非结构化数据导语" class="headerlink" title="非结构化数据导语"></a>非结构化数据导语</h4><p><img src="https://p.ipic.vip/enfmru.png" alt="Screenshot 2024-11-01 at 10.24.06"></p>
<p>左：不在一个子程序中，可以跨程序</p>
<p>右：<code>update host</code>对应更新CPU上的值，<code>update device</code>对应更新GPU上的值</p>
<p>​	由于拷贝过程的存在，GPU和CPU上的数组值不是时刻保持一致</p>
<h4 id="reduction-归约导语"><a href="#reduction-归约导语" class="headerlink" title="reduction 归约导语"></a>reduction 归约导语</h4><p><img src="https://p.ipic.vip/95o9hl.png" alt="Screenshot 2024-11-01 at 10.30.15"></p>
<p>看上去不能并行？</p>
<h4 id="举例：拉布拉斯方程求解"><a href="#举例：拉布拉斯方程求解" class="headerlink" title="举例：拉布拉斯方程求解"></a>举例：拉布拉斯方程求解</h4><p><img src="https://p.ipic.vip/4q0ixn.png" alt="Screenshot 2024-11-01 at 10.33.24"></p>
<p>每次求解都用周围四个点求平均，直到更新较小：模板计算</p>
<p><img src="https://p.ipic.vip/dwof32.png" alt="Screenshot 2024-11-01 at 10.34.36"></p>
<p><img src="https://p.ipic.vip/vvwfuj.png" alt="Screenshot 2024-11-01 at 10.36.43"></p>
<p><img src="https://p.ipic.vip/pgg4gl.png" alt="Screenshot 2024-11-01 at 10.37.34"></p>
<p><img src="https://p.ipic.vip/vj0fpw.png" alt="Screenshot 2024-11-01 at 10.57.01"></p>
<h4 id="Collapse-导语"><a href="#Collapse-导语" class="headerlink" title="Collapse 导语"></a>Collapse 导语</h4><p><img src="https://p.ipic.vip/pob95d.png" alt="Screenshot 2024-11-01 at 10.58.39"></p>
<p>多层级并行（最多三层 gang-worker-vector），其中两层没有依赖关系，进行合并</p>
<h4 id="routine-导语"><a href="#routine-导语" class="headerlink" title="routine 导语"></a>routine 导语</h4><p><img src="https://p.ipic.vip/n9s6yg.png" alt="Screenshot 2024-11-01 at 11.00.33"></p>
<h4 id="OpenACC-与CUDA交互"><a href="#OpenACC-与CUDA交互" class="headerlink" title="OpenACC 与CUDA交互"></a>OpenACC 与CUDA交互</h4><p><img src="https://p.ipic.vip/2ev4yg.png" alt="Screenshot 2024-11-01 at 11.00.58"></p>
<p> 直接在GPU上定义数组  <code>real, device dimension(N)</code></p>
<p>没有CPU上的副本，如需拷贝到CPU，需要额外调用cudamemcpy</p>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="keyword">real</span> :: a_h(<span class="number">100</span>)</span><br><span class="line"><span class="keyword">real</span>, device :: a_d(<span class="number">100</span>)</span><br><span class="line"><span class="keyword">call</span> cudamemcpy(a_d, a_h, device2host)</span><br></pre></td></tr></table></figure>

<h4 id="Profiling"><a href="#Profiling" class="headerlink" title="Profiling"></a>Profiling</h4><p><img src="https://p.ipic.vip/mlqug9.png" alt="Screenshot 2024-11-01 at 11.07.29"></p>
<p>查看程序运行状态</p>
<h4 id="OpenMP-VS-MPI"><a href="#OpenMP-VS-MPI" class="headerlink" title="OpenMP VS MPI"></a>OpenMP VS MPI</h4><p>超算上很多个节点，每个节点相当于一台计算机，一台计算机又有多个核心</p>
<p><strong>MPI：</strong> 粗粒度并行，大区域分割成若干个小区域</p>
<p>假如每台机器计算一个区域，每个计算机内存相对独立，边界上需要数据交换，不同进程间需要使用显示的MPI函数来通讯</p>
<p><strong>OpenMP：</strong> 在一台计算机上，有多个核心，内存共享，多核心的并行使用OpenMP，不需要进程间的内存交换，需要在编译的时候打开编译选项</p>
<p>对于气候模式而言，多台计算机形成集群，既需要用到多计算机的MPI并行，又需要一个计算机内部的多核心OpenMPI并行</p>
<h4 id="LAPACK"><a href="#LAPACK" class="headerlink" title="LAPACK"></a>LAPACK</h4><p>矩阵运算库</p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>GPU</title>
    <url>/2022/05/01/Tool/GPU/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul>
<li><p>查看显卡状态</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nvidia-smi</span></span><br></pre></td></tr></table></figure>

<p><img src="https://p.ipic.vip/qvfxmt.png" alt="Screenshot 2024-11-19 at 17.07.24"></p>
</li>
</ul>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>GSI</title>
    <url>/2022/05/01/Tool/GSI/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="GSI-安装手册"><a href="#GSI-安装手册" class="headerlink" title="GSI 安装手册"></a>GSI 安装手册</h2><p>参考：<a href="https://github.com/comgsi/documents">https://github.com/comgsi/documents</a></p>
<h3 id="Download-files"><a href="#Download-files" class="headerlink" title="Download files"></a>Download files</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/NOAA-EMC/GSI</span><br><span class="line">cd GSI</span><br><span class="line">git clone https://github.com/comgsi/fix</span><br></pre></td></tr></table></figure>

<h3 id="Build-required-libraries-from-the-hpc-stack"><a href="#Build-required-libraries-from-the-hpc-stack" class="headerlink" title="Build required libraries from the hpc-stack"></a>Build required libraries from the hpc-stack</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/NOAA-EMC/hpc-stack git.hpc_stack</span><br><span class="line">cd git.hpc-stack</span><br><span class="line">(... load comipiler, mpi and netcdf modules ...)</span><br><span class="line">./setup_modules.sh -p /path/to/hpc-stacks -c config/config_comgsi.sh</span><br><span class="line">./build_stack.sh -m -p /path/to/hpc-stacks  -c config/config_comgsi.sh -y config/stack_comgsi.yaml</span><br></pre></td></tr></table></figure>

<h3 id="load-hpc-stack-modules-following-the-following-example-your-hpc-intel-hpc-impi-may-have-different-version-numbers"><a href="#load-hpc-stack-modules-following-the-following-example-your-hpc-intel-hpc-impi-may-have-different-version-numbers" class="headerlink" title="load hpc-stack modules following the following example (your hpc-intel, hpc-impi may have different version numbers)"></a>load hpc-stack modules following the following example (your hpc-intel, hpc-impi may have different version numbers)</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">module use /path/to/hpc-stacks/modulefiles/stack</span><br><span class="line">module load hpc/1.1.0</span><br><span class="line">module load hpc-intel/18.0.5</span><br><span class="line">module load hpc-impi/2018.4.274</span><br><span class="line">module load bufr/11.5.0</span><br><span class="line">module load ip/3.3.3</span><br><span class="line">module load nemsio/2.5.2</span><br><span class="line">module load sfcio/1.4.1</span><br><span class="line">module load sigio/2.3.2</span><br><span class="line">module load sp/2.3.3</span><br><span class="line">module load w3nco/2.4.1</span><br><span class="line">module load w3emc/2.7.3</span><br><span class="line">module load bacio/2.4.1</span><br><span class="line">module load crtm/2.3.0</span><br><span class="line">module load wrf_io/1.2.0</span><br></pre></td></tr></table></figure>

<h3 id="Compile"><a href="#Compile" class="headerlink" title="Compile"></a>Compile</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd GSI</span><br><span class="line">mkdir build; cd build</span><br><span class="line">cmake -DCOMGSI=ON -DENKF_MODE=WRF ..</span><br><span class="line">make -j4</span><br></pre></td></tr></table></figure>



<hr>
<p><strong>报错信息：</strong>cannot find bufr lib</p>
<p><strong>报错原因：</strong> 由于hpc-stack的环境变量名与cmake不一致所致</p>
<p><strong>解决方式：</strong> 进入<code>cmake/Modules</code>所在文件夹，找到对应的<code>FindBUFR.cmake</code>文件，修改<code>set(BUFR_LIBRARY $ENV&#123;BUFR_LIBd&#125;)</code>与module load的路径的环境变量一致</p>
<p><strong>报错信息：</strong> MPI_Bcast reused</p>
<p><strong>报错原因：</strong> MPI_Bcast 的参数修改了全局变量的值</p>
<p><strong>解决方式：</strong> 在<code>/work/home/acyii6v8kt/WORK/GSI/src/enkf/gridinfo_wrf.f90</code>中添加一行<code>use mpisetup</code></p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Git Tutorial</title>
    <url>/2022/05/01/Tool/Git%20Tutorial/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Git-基本操作"><a href="#Git-基本操作" class="headerlink" title="Git 基本操作"></a>Git 基本操作</h2><h3 id="git-commit"><a href="#git-commit" class="headerlink" title="git commit"></a>git commit</h3><p>提交修改</p>
<h3 id="git-branch-lt-NewBrachName-gt"><a href="#git-branch-lt-NewBrachName-gt" class="headerlink" title="git branch &lt;NewBrachName&gt;"></a>git branch <code>&lt;NewBrachName&gt;</code></h3><p>创建分支</p>
<p>新创建的分支会指向的当前提交记录。</p>
<p><strong>注意：在新创建的分支中进行commit提交的时候需确认当前所在分支</strong></p>
<h3 id="git-checkout-lt-BranchName-gt"><a href="#git-checkout-lt-BranchName-gt" class="headerlink" title="git checkout &lt;BranchName&gt;"></a>git checkout <code>&lt;BranchName&gt;</code></h3><p>切换到某一分支</p>
<h3 id="git-merge-lt-BrachName-gt"><a href="#git-merge-lt-BrachName-gt" class="headerlink" title="git merge &lt;BrachName&gt;"></a>git merge <code>&lt;BrachName&gt;</code></h3><p>把BrachName分支合并到当前分支里，<strong>是将其他分支merge过来，即“合并过来”</strong></p>
<h3 id="git-rebase-lt-BrachName-gt"><a href="#git-rebase-lt-BrachName-gt" class="headerlink" title="git rebase &lt;BrachName&gt;"></a>git rebase <code>&lt;BrachName&gt;</code></h3><p>把当前分支里的工作直接移到BrachName分支上，<strong>是对当前分支的rebase，即“合并过去”</strong></p>
<p>优点：取出一系列的提交记录，“复制”它们，然后在另外一个地方逐个的放下去，创造更线性的提交历史</p>
<p><strong>注意：是通过创建“副本”的方式进行的，最后需要切换到主分支，并且再次 git rebase 一下完成最终合并</strong></p>
<h3 id="HEAD"><a href="#HEAD" class="headerlink" title="HEAD"></a>HEAD</h3><p>HEAD 总是指向当前分支上最近一次提交记录，随着提交向前移动</p>
<p>如果想看 HEAD 指向，可以通过 <code>cat .git/HEAD</code> 查看</p>
<p><strong>分离的 HEAD ：就是让其指向了某个具体的提交记录而不是分支名</strong></p>
<h3 id="git-log"><a href="#git-log" class="headerlink" title="git log"></a>git log</h3><p>查看提交记录的哈希值</p>
<h3 id="git-checkout-lt-BrabchName-gt"><a href="#git-checkout-lt-BrabchName-gt" class="headerlink" title="git checkout &lt;BrabchName&gt;^"></a>git checkout <code>&lt;BrabchName&gt;</code>^</h3><p>切换到BranchName的父节点</p>
<h3 id="git-checkout-lt-BranchName-gt-96-96"><a href="#git-checkout-lt-BranchName-gt-96-96" class="headerlink" title="git checkout &lt;BranchName&gt;~&#96;&#96;"></a>git checkout <code>&lt;BranchName&gt;</code>~&#96;<number>&#96;</h3><p>切换到BranchName的上<code>&lt;number&gt;</code>个节点，<strong>即“移动节点”</strong></p>
<h3 id="git-branch-f-lt-BranchName-gt-HEAD-96-96"><a href="#git-branch-f-lt-BranchName-gt-HEAD-96-96" class="headerlink" title="git branch -f &lt;BranchName&gt; HEAD~&#96;&#96;"></a>git branch -f <code>&lt;BranchName&gt;</code> HEAD~&#96;<number>&#96;</h3><p>将 BranchName 分支强制指向 HEAD 的第 3 级父提交，<strong>即“移动分支”</strong></p>
<p><strong>注意：此时HEAD 和 分支的分离</strong></p>
<h3 id="或-git-branch-f-lt-BranchName1-gt-lt-BranchName2-gt"><a href="#或-git-branch-f-lt-BranchName1-gt-lt-BranchName2-gt" class="headerlink" title="或 git branch -f &lt;BranchName1&gt;  &lt;BranchName2&gt;"></a>或 git branch -f <code>&lt;BranchName1&gt;</code>  <code>&lt;BranchName2&gt;</code></h3><p>将 BranchName1 分支强制指向 BranchName2 分支</p>
<h3 id="git-reset-HEAD-96-96"><a href="#git-reset-HEAD-96-96" class="headerlink" title="git reset HEAD~&#96;&#96;"></a>git reset HEAD~&#96;<number>&#96;</h3><p>向上移动分支，原来指向的提交记录就跟从来没有提交过一样</p>
<p><strong>注意：在reset后， 之前所做的变更还在，但是处于未加入暂存区状态</strong></p>
<h3 id="git-revert-HEAD-或-git-revert-lt-BranchName-gt"><a href="#git-revert-HEAD-或-git-revert-lt-BranchName-gt" class="headerlink" title="git revert HEAD 或 git revert &lt;BranchName&gt;"></a>git revert HEAD 或 git revert <code>&lt;BranchName&gt;</code></h3><p>git reset 对大家一起使用的远程分支是无效的，此时需要使用 git revert</p>
<p>revert 之后就可以把你的更改推送到远程仓库与别人分享</p>
<p><strong>注意与reset的区别：不需要指定向上移动几级</strong></p>
<h3 id="git-cherry-pick-lt-CommitNumber1-gt-lt-CommitNumber2-gt-…"><a href="#git-cherry-pick-lt-CommitNumber1-gt-lt-CommitNumber2-gt-…" class="headerlink" title="git cherry-pick &lt;CommitNumber1&gt; &lt;CommitNumber2&gt; …"></a>git cherry-pick <code>&lt;CommitNumber1&gt;</code> <code>&lt;CommitNumber2&gt;</code> …</h3><p>将 CommitNumber1、CommitNumber2 复制到当前分支下</p>
<p><strong>当你知道你所需要的提交记录（并且还知道这些提交记录的哈希值）时, 用 cherry-pick 再好不过了 —— 没有比这更简单的方式了</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git cherry-picl C2</span><br></pre></td></tr></table></figure>

<p><img src="https://p.ipic.vip/9kb0lg.png" alt="Screenshot 2023-10-01 at 19.53.33"></p>
<p>将提交树上的提交记录取过来追加到 HEAD 上（只要不是 HEAD 上游的提交就没问题）。</p>
<h3 id="git-rebase-i-HEAD-96-96"><a href="#git-rebase-i-HEAD-96-96" class="headerlink" title="git rebase -i HEAD~&#96;&#96;"></a>git rebase -i HEAD~&#96;<number>&#96;</h3><p>Git 会打开一个 UI 界面并列出将要被复制到目标分支的备选提交记录，它还会显示每个提交记录的哈希值和提交说明，提交说明有助于你理解这个提交进行了哪些更改。</p>
<p>在实际使用时，所谓的 UI 窗口一般会在文本编辑器 —— 如 Vim —— 中打开一个文件。</p>
<ul>
<li>调整提交记录的顺序（通过鼠标拖放来完成）</li>
<li>删除你不想要的提交（通过切换 <code>pick</code> 的状态来完成，关闭就意味着你不想要这个提交记录）</li>
<li>合并提交。</li>
</ul>
<h3 id="git-commit-–amend"><a href="#git-commit-–amend" class="headerlink" title="git commit –amend"></a>git commit –amend</h3><p>以“复制”的方式修改当前提交</p>
<h3 id="git-tag-v1-C1"><a href="#git-tag-v1-C1" class="headerlink" title="git tag v1 C1"></a>git tag v1 C1</h3><p>建立一个标签命名为 <code>v1</code>，并且明确地让它指向提交记录 <code>C1</code></p>
<p>如果你不指定提交记录，Git 会用 <code>HEAD</code> 所指向的位置</p>
<h3 id="git-describe-lt-ref-gt"><a href="#git-describe-lt-ref-gt" class="headerlink" title="git describe &lt;ref&gt;"></a>git describe <code>&lt;ref&gt;</code></h3><p>由于标签在代码库中起着“锚点”的作用，Git 还为此专门设计了一个命令用来<strong>描述</strong>离你最近的锚点（也就是标签），它就是 <code>git describe</code>！</p>
<p>git describe 能帮你在提交历史中移动了多次以后找到方向；当你用 <code>git bisect</code>（一个查找产生 Bug 的提交记录的指令）找到某个提交记录时，或者是当你坐在你那刚刚度假回来的同事的电脑前时， 可能会用到这个命令。</p>
<p><code>&lt;ref&gt;</code> 可以是任何能被 Git 识别成提交记录的引用，如果你没有指定的话，Git 会以HEAD所在位置</p>
<p>它输出的结果是这样的：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">`&lt;tag&gt;`_`&lt;numCommits&gt;`_g`&lt;hash&gt;`</span><br></pre></td></tr></table></figure>

<p><code>tag</code> 表示的是离 <code>ref</code> 最近的标签， <code>numCommits</code> 是表示这个 <code>ref</code> 与 <code>tag</code> 相差有多少个提交记录， <code>hash</code> 表示的是你所给定的 <code>ref</code> 所表示的提交记录哈希值的前几位。</p>
<p>当 <code>ref</code> 提交记录上有某个标签时，则只输出标签名称</p>
<h3 id="git-checkout-master-lt-num-gt"><a href="#git-checkout-master-lt-num-gt" class="headerlink" title="git checkout master^&lt;num&gt;"></a>git checkout master^<code>&lt;num&gt;</code></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git checkout mater^2</span><br></pre></td></tr></table></figure>

<p><img src="https://p.ipic.vip/spdluh.png" alt="Screenshot 2023-10-01 at 20.19.00"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git checkout HEAD~^2~2</span><br></pre></td></tr></table></figure>

<p><img src="https://p.ipic.vip/tih38w.png" alt="Screenshot 2023-10-01 at 20.20.03"></p>
<h2 id="利用Git进行远程协作"><a href="#利用Git进行远程协作" class="headerlink" title="利用Git进行远程协作"></a>利用Git进行远程协作</h2><h3 id="git-clone"><a href="#git-clone" class="headerlink" title="git clone"></a>git clone</h3><p><img src="https://p.ipic.vip/mbc744.png" alt="Screenshot 2023-09-27 at 19.55.41"></p>
<p>在本地仓库多了一个名为 <code>o/master</code> 的分支, 这种类型的分支就叫<strong>远程分支</strong></p>
<p>例如一个名为 <code>origin/master</code> 的分支，那么这个分支就叫 <code>master</code>，远程仓库的名称就是 <code>origin</code></p>
<p>远程分支反映了远程仓库在你<strong>最后一次与它通信时</strong>的状态</p>
<p>远程分支有一个特别的属性，在<strong>checkout时自动进入分离 HEAD 状态</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git checkout origin/master;</span><br><span class="line">git commit</span><br></pre></td></tr></table></figure>

<p><img src="https://p.ipic.vip/x2xklo.png" alt="Screenshot 2023-09-27 at 20.00.40"></p>
<p>Git 变成了分离 HEAD 状态，当添加新的提交时 <code>o/master</code> 也不会更新。这是因为 <code>o/master</code> 只有在远程仓库中相应的分支更新了以后才会更新。</p>
<h3 id="git-fetch"><a href="#git-fetch" class="headerlink" title="git fetch"></a>git fetch</h3><ul>
<li>从远程仓库下载本地仓库中缺失的提交记录</li>
<li>更新远程分支指针(如 <code>o/master</code>)</li>
</ul>
<p> 实际上将本地仓库中的远程分支更新成了远程仓库相应分支最新的状态</p>
<p><code>git fetch</code> 通常通过互联网（使用 <code>http://</code> 或 <code>git://</code> 协议) 与远程仓库通信</p>
<p><strong>注意：<code>git fetch</code> 并不会改变你本地仓库的状态。它不会更新你的 <code>master</code> 分支，也不会修改你磁盘上的文件。</strong></p>
<p>理解这一点很重要，因为许多开发人员误以为执行了 <code>git fetch</code> 以后，他们本地仓库就与远程仓库同步了。它可能已经将进行这一操作所需的所有数据都下载了下来，但是<strong>并没有</strong>修改你本地的文件。</p>
<p>所以, 你可以将 <code>git fetch</code> 的理解为单纯的下载操作。</p>
<h3 id="git-pull"><a href="#git-pull" class="headerlink" title="git pull"></a>git pull</h3><p>由于先抓取更新再合并到本地分支这个流程很常用，因此 Git 提供了一个专门的命令来完成这两个操作</p>
<p><strong>可以认为 git pull 是 git fetch 和 git merge <code>&lt;just-fetched-branch&gt;</code> 的缩写</strong></p>
<p>git pull 唯一关注的是提交最终合并到哪里（也就是为 git fetch 所提供的 destination 参数）</p>
<h3 id="git-push"><a href="#git-push" class="headerlink" title="git push"></a>git push</h3><p>负责将<strong>你的</strong>变更上传到指定的远程仓库，并在远程仓库上合并你的新提交记录。一旦 <code>git push</code> 完成, 你的朋友们就可以从这个远程仓库下载你分享的成果了</p>
<p><strong>你可以将 <code>git push</code> 想象成发布你成果的命令</strong></p>
<p><strong>注意 —— <code>git push</code> 不带任何参数时的行为与 Git 的一个名为 <code>push.default</code> 的配置有关。它的默认值取决于你正使用的 Git 的版本，*在你的项目中进行推送之前，最好检查一下这个配置。</strong></p>
<h3 id="历史偏离问题"><a href="#历史偏离问题" class="headerlink" title="历史偏离问题"></a>历史偏离问题</h3><p>假设你周一克隆了一个仓库，然后开始研发某个新功能。到周五时，你新功能开发测试完毕，可以发布了。但是 —— 天啊！你的同事这周写了一堆代码，还改了许多你的功能中使用的 API，这些变动会导致你新开发的功能变得不可用。但是他们已经将那些提交推送到远程仓库了，因此你的工作就变成了基于项目<strong>旧版</strong>的代码，与远程仓库最新的代码不匹配了。</p>
<p>这种情况下, <code>git push</code> 就不知道该如何操作了。如果你执行 <code>git push</code>，Git 应该让远程仓库回到星期一那天的状态吗？还是直接在新代码的基础上添加你的代码，异或由于你的提交已经过时而直接忽略你的提交？</p>
<p>因为这情况（历史偏离）有许多的不确定性，Git 是不会允许你 <code>push</code> 变更的。实际上它会强制你先合并远程最新的代码，然后才能分享你的工作。</p>
<p><img src="https://p.ipic.vip/gtwkq9.png" alt="Screenshot 2023-09-28 at 09.09.56"></p>
<p>使用<code>git push</code> 失败是因为你最新提交的 <code>C3</code> 基于远程分支中的 <code>C1</code>。而远程仓库中该分支已经更新到 <code>C2</code> 了，所以 Git 拒绝了你的推送请求。</p>
<p>那该如何解决这个问题呢？很简单，你需要做的就是使你的工作基于最新的远程分支。</p>
<p>有许多方法做到这一点呢，不过最直接的方法就是通过 rebase 调整你的工作。</p>
<h3 id="git-pull-–rebase-git-push"><a href="#git-pull-–rebase-git-push" class="headerlink" title="git pull –rebase; git push"></a>git pull –rebase; git push</h3><p>快速的更新 <code>master</code> 分支并推送到远程。</p>
<p><strong>注意本地master分支在提交前的所在位置</strong></p>
<h3 id="rebase-与-merge"><a href="#rebase-与-merge" class="headerlink" title="rebase 与 merge"></a>rebase 与 merge</h3><p>rebase 的优缺点：</p>
<p>优点:  Rebase 使你的提交树变得很干净, 所有的提交都在一条线上</p>
<p>缺点:Rebase 修改了提交树的历史</p>
<p>比如, 提交 C1 可以被 rebase 到 C3 之后。这看起来 C1 中的工作是在 C3 之后进行的，但实际上是在 C3 之前。</p>
<p>一些开发人员喜欢保留提交历史，因此更偏爱 merge。而其他人可能更喜欢干净的提交树，于是偏爱 rebase。</p>
<h3 id="远程关联"><a href="#远程关联" class="headerlink" title="远程关联"></a>远程关联</h3><ul>
<li>pull 操作时, 提交记录会被先下载到 o&#x2F;master 上，之后再合并到本地的 master 分支。隐含的合并目标由这个关联确定的。</li>
<li>push 操作时, 我们把工作从 <code>master</code> 推到远程仓库中的 <code>master</code> 分支(同时会更新远程分支 <code>o/master</code>) 。这个推送的目的地也是由这种关联确定的。</li>
</ul>
<p>这也解释了为什么会在克隆的时候会看到下面的输出：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">local branch &quot;master&quot; set to track remote branch &quot;o/master&quot;</span><br></pre></td></tr></table></figure>

<p>其实，你可以让任意分支跟踪 <code>o/master</code>, 然后该分支会像 <code>master</code> 分支一样得到隐含的 push 目的地以及 merge 的目标。 这意味着你可以在分支 <code>totallyNotMaster</code> 上执行 <code>git push</code>，将工作推送到远程仓库的 <code>master</code> 分支上。</p>
<p>有两种方法设置这个属性，第一种就是通过远程分支检出一个新的分支，执行:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git checkout -b totallyNotMaster o/master</span><br></pre></td></tr></table></figure>

<p>就可以创建一个名为 <code>totallyNotMaster</code> 的分支，它跟踪远程分支 <code>o/master</code>。</p>
<p>另一种设置远程追踪分支的方法就是使用：<code>git branch -u</code> 命令，执行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git branch -u o/master foo</span><br></pre></td></tr></table></figure>

<p>这样 <code>foo</code> 就会跟踪 <code>o/master</code> 了。如果当前就在 foo 分支上, 还可以省略 foo：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git branch -u o/master</span><br></pre></td></tr></table></figure>





<h3 id="git-push-lt-remote-gt-lt-place-gt-e-g-git-push-origin-master"><a href="#git-push-lt-remote-gt-lt-place-gt-e-g-git-push-origin-master" class="headerlink" title="git push &lt;remote&gt; &lt;place&gt;  e.g. git push origin master"></a>git push <code>&lt;remote&gt;</code> <code>&lt;place&gt;</code>  e.g. git push origin master</h3><p>切到本地仓库中的 master 分支，获取所有的提交，再到远程仓库 origin 中找到 master 分支，将远程仓库中没有的提交记录都添加上去</p>
<p>我们通过 place 参数来告诉 Git 提交记录来自于 master, 要推送到远程仓库中的 master。它实际就是要同步的两个仓库的位置。</p>
<p><strong>注意：因为我们通过指定参数告诉了 Git 所有它需要的信息, 所以它就忽略了我们所检出的分支的属性</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git checkout C0; git push</span><br></pre></td></tr></table></figure>

<p><img src="https://p.ipic.vip/athgnf.png" alt="Screenshot 2023-09-28 at 18.46.46"></p>
<p>失败原因：checkout 的 HEAD 没有跟踪任何分支。</p>
<p>要同时为源和目的地指定 <code>&lt;place&gt;</code> 的话，只需要用冒号 <code>:</code> 将二者连起来就可以了：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git push origin `&lt;source&gt;`:`&lt;destination&gt;`</span><br></pre></td></tr></table></figure>

<p>这个参数实际的值是git可以识别的位置（比如分支 <code>foo</code> 或者 <code>HEAD~1</code>）</p>
<p>一旦你指定了独立的来源和目的地，就可以组织出言简意赅的远程操作命令了，让我们看看演示！</p>
<p>如果你要推送到的目的分支不存在会怎么样呢？</p>
<p>没问题！Git 会在远程仓库中根据你提供的名称帮你创建这个分支！</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git push origin master:newBranch</span><br></pre></td></tr></table></figure>





<h3 id="git-fetch-origin-foo"><a href="#git-fetch-origin-foo" class="headerlink" title="git fetch origin foo"></a>git fetch origin foo</h3><p>Git 会到远程仓库的 <code>foo</code> 分支上，然后获取所有本地不存在的提交，放到本地的 <code>o/foo</code> 上。</p>
<p><img src="https://p.ipic.vip/p8mlz3.png" alt="Screenshot 2023-09-28 at 19.00.04"></p>
<p><strong>注意：为何 Git 会将新提交放到 <code>o/foo</code> 而不是放到我本地的 foo 分支呢？</strong></p>
<p>因为你可能在 foo 分支上的工作还未完成，你也不想弄乱它。 <code>git fetch</code> 不会更新你的本地的非远程分支, 只是下载提交记录（这样, 你就可以对远程分支进行检查或者合并了）。</p>
<p>如果 <code>git fetch</code> 没有参数，它会下载所有的提交记录到各个远程分支</p>
<h3 id="git-push-origin-side-与git-fetch-origin-bugFix"><a href="#git-push-origin-side-与git-fetch-origin-bugFix" class="headerlink" title="git push origin :side 与git fetch origin :bugFix"></a>git push origin :side 与git fetch origin :bugFix</h3><p>Git 有两种关于 <code>&lt;source&gt;</code> 的用法是比较诡异的，即你可以在 git push 或 git fetch 时不指定任何 <code>source</code>，方法就是仅保留冒号和 destination 部分，source 部分留空。</p>
<ul>
<li><code>git push origin :side</code></li>
</ul>
<p>如果 push 空 <code>&lt;source&gt;</code> 到远程仓库，它会删除远程仓库中的分支</p>
<ul>
<li><code>git fetch origin :bugFix</code></li>
</ul>
<p>如果 fetch 空 <code>&lt;source&gt;</code> 到本地，会在本地创建一个新分支。</p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Git</title>
    <url>/2022/05/01/Tool/Git/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>来源：<a href="https://ohshitgit.com/#magic-time-machine">https://ohshitgit.com/#magic-time-machine</a></p>
<p>Git is hard: screwing up is easy, and figuring out how to fix your mistakes is fucking impossible. Git documentation has this chicken and egg problem where you can’t search for how to get yourself out of a mess, unless you already know the name of the thing you need to know about in order to fix your problem.</p>
<p>So here are some bad situations I’ve gotten myself into, and how I eventually got myself out of them in plain english.</p>
<h4 id="I-did-something-terribly-wrong-please-tell-me-git-has-a-magic-time-machine"><a href="#I-did-something-terribly-wrong-please-tell-me-git-has-a-magic-time-machine" class="headerlink" title="I did something terribly wrong, please tell me git has a magic time machine!?!"></a>I did something terribly wrong, please tell me git has a magic time machine!?!</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git reflog</span><br><span class="line"><span class="comment"># you will see a list of every thing you&#x27;ve</span></span><br><span class="line"><span class="comment"># done in git, across all branches!</span></span><br><span class="line"><span class="comment"># each one has an index HEAD@&#123;index&#125;</span></span><br><span class="line"><span class="comment"># find the one before you broke everything</span></span><br><span class="line">git reset HEAD@&#123;index&#125;</span><br><span class="line"><span class="comment"># magic time machine</span></span><br></pre></td></tr></table></figure>

<p>You can use this to get back stuff you accidentally deleted, or just to remove some stuff you tried that broke the repo, or to recover after a bad merge, or just to go back to a time when things actually worked. I use <code>reflog</code> A LOT. Mega hat tip to the many many many many many people who suggested adding it!</p>
<h4 id="I-committed-and-immediately-realized-I-need-to-make-one-small-change"><a href="#I-committed-and-immediately-realized-I-need-to-make-one-small-change" class="headerlink" title="I committed and immediately realized I need to make one small change!"></a>I committed and immediately realized I need to make one small change!</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># make your change</span></span><br><span class="line">git add . <span class="comment"># or add individual files</span></span><br><span class="line">git commit --amend --no-edit</span><br><span class="line"><span class="comment"># now your last commit contains that change!</span></span><br><span class="line"><span class="comment"># WARNING: never amend public commits</span></span><br></pre></td></tr></table></figure>

<p>This usually happens to me if I commit, then run tests&#x2F;linters… and FML, I didn’t put a space after an equals sign. You could also make the change as a new commit and then do <code>rebase -i</code> in order to squash them both together, but this is about a million times faster.</p>
<p><em>Warning: You should never amend commits that have been pushed up to a public&#x2F;shared branch! Only amend commits that only exist in your local copy or you’re gonna have a bad time</em></p>
<h4 id="I-need-to-change-the-message-on-my-last-commit"><a href="#I-need-to-change-the-message-on-my-last-commit" class="headerlink" title="I need to change the message on my last commit!"></a>I need to change the message on my last commit!</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git commit --amend</span><br><span class="line"># follow prompts to change the commit message</span><br></pre></td></tr></table></figure>

<p>Stupid commit message formatting requirements.</p>
<h4 id="I-accidentally-committed-something-to-master-that-should-have-been-on-a-brand-new-branch"><a href="#I-accidentally-committed-something-to-master-that-should-have-been-on-a-brand-new-branch" class="headerlink" title="I accidentally committed something to master that should have been on a brand new branch!"></a>I accidentally committed something to master that should have been on a brand new branch!</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># create a new branch from the current state of master</span><br><span class="line">git branch some-new-branch-name</span><br><span class="line"># remove the last commit from the master branch</span><br><span class="line">git reset HEAD~ --hard</span><br><span class="line">git checkout some-new-branch-name</span><br><span class="line"># your commit lives in this branch now :)</span><br></pre></td></tr></table></figure>

<p>Note: this doesn’t work if you’ve already pushed the commit to a public&#x2F;shared branch, and if you tried other things first, you might need to <code>git reset HEAD@&#123;number-of-commits-back&#125;</code> instead of <code>HEAD~</code>. Infinite sadness. Also, many many many people suggested an awesome way to make this shorter that I didn’t know myself. Thank you all!</p>
<h4 id="I-accidentally-committed-to-the-wrong-branch"><a href="#I-accidentally-committed-to-the-wrong-branch" class="headerlink" title="I accidentally committed to the wrong branch!"></a>I accidentally committed to the wrong branch!</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># undo the last commit, but leave the changes available</span><br><span class="line">git reset HEAD~ --soft</span><br><span class="line">git stash</span><br><span class="line"># move to the correct branch</span><br><span class="line">git checkout name-of-the-correct-branch</span><br><span class="line">git stash pop</span><br><span class="line">git add . # or add individual files</span><br><span class="line">git commit -m &quot;your message here&quot;;</span><br><span class="line"># now your changes are on the correct branch</span><br></pre></td></tr></table></figure>

<p>A lot of people have suggested using <code>cherry-pick</code> for this situation too, so take your pick on whatever one makes the most sense to you!</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git checkout name-of-the-correct-branch</span><br><span class="line"># grab the last commit to master</span><br><span class="line">git cherry-pick master</span><br><span class="line"># delete it from master</span><br><span class="line">git checkout master</span><br><span class="line">git reset HEAD~ --hard</span><br></pre></td></tr></table></figure>

<h4 id="I-tried-to-run-a-diff-but-nothing-happened"><a href="#I-tried-to-run-a-diff-but-nothing-happened" class="headerlink" title="I tried to run a diff but nothing happened?!"></a>I tried to run a diff but nothing happened?!</h4><p>If you know that you made changes to files, but <code>diff</code> is empty, you probably <code>add</code>-ed your files to staging and you need to use a special flag.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git diff --staged</span><br></pre></td></tr></table></figure>

<p>File under ¯_(ツ)_&#x2F;¯ (yes, I know this is a feature, not a bug, but it’s fucking baffling and non-obvious the first time it happens to you!)</p>
<h4 id="I-need-to-undo-a-commit-from-like-5-commits-ago"><a href="#I-need-to-undo-a-commit-from-like-5-commits-ago" class="headerlink" title="I need to undo a commit from like 5 commits ago!"></a>I need to undo a commit from like 5 commits ago!</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># find the commit you need to undo</span><br><span class="line">git log</span><br><span class="line"># use the arrow keys to scroll up and down in history</span><br><span class="line"># once you&#x27;ve found your commit, save the hash</span><br><span class="line">git revert [saved hash]</span><br><span class="line"># git will create a new commit that undoes that commit</span><br><span class="line"># follow prompts to edit the commit message</span><br><span class="line"># or just save and commit</span><br></pre></td></tr></table></figure>

<p>Turns out you don’t have to track down and copy-paste the old file contents into the existing file in order to undo changes! If you committed a bug, you can undo the commit all in one go with <code>revert</code>.</p>
<p>You can also revert a single file instead of a full commit! But of course, in true git fashion, it’s a completely different set of fucking commands…</p>
<h4 id="I-need-to-undo-my-changes-to-a-file"><a href="#I-need-to-undo-my-changes-to-a-file" class="headerlink" title="I need to undo my changes to a file!"></a>I need to undo my changes to a file!</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># find a hash for a commit before the file was changed</span><br><span class="line">git log</span><br><span class="line"># use the arrow keys to scroll up and down in history</span><br><span class="line"># once you&#x27;ve found your commit, save the hash</span><br><span class="line">git checkout [saved hash] -- path/to/file</span><br><span class="line"># the old version of the file will be in your index</span><br><span class="line">git commit -m &quot;Wow, you don&#x27;t have to copy-paste to undo&quot;</span><br></pre></td></tr></table></figure>

<p>When I finally figured this out it was HUGE. HUGE. H-U-G-E. But seriously though, on what fucking planet does <code>checkout --</code> make sense as the best way to undo a file? :shakes-fist-at-linus-torvalds:</p>
<h4 id="I-give-up"><a href="#I-give-up" class="headerlink" title="I give up."></a>I give up.</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd ..</span><br><span class="line">sudo rm -r fucking-git-repo-dir</span><br><span class="line">git clone https://some.github.url/fucking-git-repo-dir.git</span><br><span class="line">cd fucking-git-repo-dir</span><br></pre></td></tr></table></figure>

<p>Thanks to Eric V. for this one. All complaints about the use of <code>sudo</code> in this joke can be directed to him.</p>
<p>For real though, if your branch is sooo borked that you need to reset the state of your repo to be the same as the remote repo in a “git-approved” way, try this, but beware these are destructive and unrecoverable actions!</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># get the lastest state of origin</span><br><span class="line">git fetch origin</span><br><span class="line">git checkout master</span><br><span class="line">git reset --hard origin/master</span><br><span class="line"># delete untracked files and directories</span><br><span class="line">git clean -d --force</span><br><span class="line"># repeat checkout/reset/clean for each borked branch</span><br></pre></td></tr></table></figure>

<p>*Disclaimer: This site is not intended to be an exhaustive reference. And yes, there are other ways to do these same things with more theoretical purity or whatever, but I’ve come to these steps through trial and error and lots of swearing and table flipping, and I had this crazy idea to share them with a healthy dose of levity and profanity. Take it or leave it as you will!</p>
<h2 id="使用git提交代码时报错："><a href="#使用git提交代码时报错：" class="headerlink" title="使用git提交代码时报错："></a>使用git提交代码时报错：</h2><p>remote: error: File: 90b39f4470e405ed852e517a73473b527ac60eaa 362.16 MB, exceeds 100.00 MB.<br>remote: Use command below to see the filename:<br>remote: git rev-list –objects –all | grep 90b39f4470e405ed852e517a73473b527ac60eaa<br>remote: Please remove the file from history and try again.</p>
<p>应该是提交的文件中有超过100MB的。</p>
<p>解决方案：<br>1、按照提示执行命令查看超大的文件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git rev-list --objects --all | grep 90b39f4470e405ed852e517a73473b527ac60eaa</span><br></pre></td></tr></table></figure>

<p>2、执行命令忽略掉超大的文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git rm --cached file_name</span><br></pre></td></tr></table></figure>

<p>如果是文件夹</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git rm -r --cached directory_name</span><br></pre></td></tr></table></figure>

<p>在.gitignore中添加要忽略的文件</p>
<p>然后执行commit。</p>
<p>3、在commit的提交历史里面去除这个超大文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git filter-branch --tree-filter &#x27;rm -f 文件名&#x27; HEAD</span><br></pre></td></tr></table></figure>


<p>如果提示：</p>
<p>WARNING: Ref ‘refs&#x2F;heads&#x2F;master’ is unchanged</p>
<p>表示删除失败。</p>
<p>如果提示：</p>
<p>Ref ‘refs&#x2F;heads&#x2F;master’ was rewritten</p>
<p>表示删除成功。 </p>
<p>然后执行push，OK。</p>
<h2 id="修改-gitignore-文件，如何重新生效"><a href="#修改-gitignore-文件，如何重新生效" class="headerlink" title="修改 .gitignore 文件，如何重新生效"></a>修改 .gitignore 文件，如何重新生效</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git rm -r --cached</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;update .gitignore&quot;</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure>



<h2 id="gitignore-正则表达式"><a href="#gitignore-正则表达式" class="headerlink" title=".gitignore 正则表达式"></a>.gitignore 正则表达式</h2><p><code>#</code> ：将行标记为注释</p>
<p><code>*</code>： 与 0 个或多个字符匹配<br><code>?</code>：与 1 个字符匹配<br><code>[abc]</code> ： 与 a、b 或 c 匹配<br><code>**</code>： 与嵌套目录匹配，比如 a&#x2F;**&#x2F;z 与以下项匹配<br>        a&#x2F;z<br>        a&#x2F;b&#x2F;z<br>        a&#x2F;b&#x2F;c&#x2F;z<br><code>!</code> ：取反</p>
<p>举例：</p>
<p><code>*.xml</code> # 忽略所有 .xml 结尾的文件</p>
<p><code>!beans.xml</code> # 忽略所有 .xml 结尾的文件,但是beans.xml除外</p>
<p><code>build/ </code># 忽略 build&#x2F; 目录下的所有文件</p>
<p><code>doc/*.txt</code> 　# 会忽略 doc&#x2F;y.txt 但不包括 doc&#x2F;xx&#x2F;zzzz.txt</p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Gitee</title>
    <url>/2022/05/01/Tool/Gitee/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Gitee-基本操作"><a href="#Gitee-基本操作" class="headerlink" title="Gitee 基本操作"></a>Gitee 基本操作</h2><p><img src="https://p.ipic.vip/yep0jz.jpg" alt="Screen Shot 2022-05-07 at 15.32.29"></p>
<p><img src="https://p.ipic.vip/yjxm7l.jpg" alt="Screen Shot 2022-05-07 at 15.32.18"></p>
<h2 id="廖雪峰Gitee教程"><a href="#廖雪峰Gitee教程" class="headerlink" title="廖雪峰Gitee教程"></a>廖雪峰Gitee教程</h2><p>使用GitHub时，国内的用户经常遇到的问题是访问速度太慢，有时候还会出现无法连接的情况（原因你懂的）。</p>
<p>如果我们希望体验Git飞一般的速度，可以使用国内的Git托管服务——<a href="https://gitee.com/?utm_source=blog_lxf">Gitee</a>（<a href="https://gitee.com/?utm_source=blog_lxf">gitee.com</a>）。</p>
<p>和GitHub相比，Gitee也提供免费的Git仓库。此外，还集成了代码质量检测、项目演示等功能。对于团队协作开发，Gitee还提供了项目管理、代码托管、文档管理的服务，5人以下小团队免费。</p>
<p> Gitee的免费版本也提供私有库功能，只是有5人的成员上限。</p>
<p>使用Gitee和使用GitHub类似，我们在Gitee上注册账号并登录后，需要先上传自己的SSH公钥。选择右上角用户头像 -&gt; 菜单“修改资料”，然后选择“SSH公钥”，填写一个便于识别的标题，然后把用户主目录下的<code>.ssh/id_rsa.pub</code>文件的内容粘贴进去：</p>
<p><img src="https://p.ipic.vip/16yzsv.jpg" alt="gitee-add-ssh-key"></p>
<p>点击“确定”即可完成并看到刚才添加的Key：</p>
<p><img src="https://p.ipic.vip/rxakmu.jpg" alt="gitee-key"></p>
<p>如果我们已经有了一个本地的git仓库（例如，一个名为learngit的本地库），如何把它关联到Gitee的远程库上呢？</p>
<p>首先，我们在Gitee上创建一个新的项目，选择右上角用户头像 -&gt; 菜单“控制面板”，然后点击“创建项目”：</p>
<p><img src="https://p.ipic.vip/vqc4wc.jpg" alt="gitee-new-repo"></p>
<p>项目名称最好与本地库保持一致：</p>
<p>然后，我们在本地库上使用命令<code>git remote add</code>把它和Gitee的远程库关联：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git remote add origin git@gitee.com:liaoxuefeng/learngit.git</span><br></pre></td></tr></table></figure>

<p>之后，就可以正常地用<code>git push</code>和<code>git pull</code>推送了！</p>
<p>如果在使用命令<code>git remote add</code>时报错：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git remote add origin git@gitee.com:liaoxuefeng/learngit.git</span><br><span class="line">fatal: remote origin already exists.</span><br></pre></td></tr></table></figure>

<p>这说明本地库已经关联了一个名叫<code>origin</code>的远程库，此时，可以先用<code>git remote -v</code>查看远程库信息：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git remote -v</span><br><span class="line">origin	git@github.com:michaelliao/learngit.git (fetch)</span><br><span class="line">origin	git@github.com:michaelliao/learngit.git (push)</span><br></pre></td></tr></table></figure>

<p>可以看到，本地库已经关联了<code>origin</code>的远程库，并且，该远程库指向GitHub。</p>
<p>我们可以删除已有的GitHub远程库：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git remote rm origin</span><br></pre></td></tr></table></figure>

<p>再关联Gitee的远程库（注意路径中需要填写正确的用户名）：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git remote add origin git@gitee.com:liaoxuefeng/learngit.git</span><br></pre></td></tr></table></figure>

<p>此时，我们再查看远程库信息：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git remote -v</span><br><span class="line">origin	git@gitee.com:liaoxuefeng/learngit.git (fetch)</span><br><span class="line">origin	git@gitee.com:liaoxuefeng/learngit.git (push)</span><br></pre></td></tr></table></figure>

<p>现在可以看到，origin已经被关联到Gitee的远程库了。通过<code>git push</code>命令就可以把本地库推送到Gitee上。</p>
<p>有的小伙伴又要问了，一个本地库能不能既关联GitHub，又关联Gitee呢？</p>
<p>答案是肯定的，因为git本身是分布式版本控制系统，可以同步到另外一个远程库，当然也可以同步到另外两个远程库。</p>
<p>使用多个远程库时，我们要注意，git给远程库起的默认名称是<code>origin</code>，如果有多个远程库，我们需要用不同的名称来标识不同的远程库。</p>
<p>仍然以<code>learngit</code>本地库为例，我们先删除已关联的名为<code>origin</code>的远程库：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git remote rm origin</span><br></pre></td></tr></table></figure>

<p>然后，先关联GitHub的远程库：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git remote add github git@github.com:michaelliao/learngit.git</span><br></pre></td></tr></table></figure>

<p>注意，远程库的名称叫<code>github</code>，不叫<code>origin</code>了。</p>
<p>接着，再关联Gitee的远程库：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git remote add gitee git@gitee.com:liaoxuefeng/learngit.git</span><br></pre></td></tr></table></figure>

<p>同样注意，远程库的名称叫<code>gitee</code>，不叫<code>origin</code>。</p>
<p>现在，我们用<code>git remote -v</code>查看远程库信息，可以看到两个远程库：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git remote -v</span><br><span class="line">gitee	git@gitee.com:liaoxuefeng/learngit.git (fetch)</span><br><span class="line">gitee	git@gitee.com:liaoxuefeng/learngit.git (push)</span><br><span class="line">github	git@github.com:michaelliao/learngit.git (fetch)</span><br><span class="line">github	git@github.com:michaelliao/learngit.git (push)</span><br></pre></td></tr></table></figure>

<p>如果要推送到GitHub，使用命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git push github master</span><br></pre></td></tr></table></figure>

<p>如果要推送到Gitee，使用命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git push gitee master</span><br></pre></td></tr></table></figure>

<p>这样一来，我们的本地库就可以同时与多个远程库互相同步：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌─────────┐ ┌─────────┐</span><br><span class="line">│ GitHub  │ │  Gitee  │</span><br><span class="line">└─────────┘ └─────────┘</span><br><span class="line">     ▲           ▲</span><br><span class="line">     └─────┬─────┘</span><br><span class="line">           │</span><br><span class="line">    ┌─────────────┐</span><br><span class="line">    │ Local Repo  │</span><br><span class="line">    └─────────────┘</span><br></pre></td></tr></table></figure>

<p>Gitee也同样提供了Pull request功能，可以让其他小伙伴参与到开源项目中来。你可以通过Fork我的仓库：<a href="https://gitee.com/liaoxuefeng/learngit?utm_source=blog_lxf">https://gitee.com/liaoxuefeng/learngit</a>，创建一个<code>your-gitee-id.txt</code>的文本文件， 写点自己学习Git的心得，然后推送一个pull request给我，这个仓库会在Gitee和GitHub做双向同步。</p>
<h2 id="报错解决方法"><a href="#报错解决方法" class="headerlink" title="报错解决方法"></a>报错解决方法</h2><h3 id="fatal-unable-to-access-‘https-gitee-com-donghai-laboratory-downscaling-git-39-Problem-with-the-SSL-CA-cert-path-access-rights"><a href="#fatal-unable-to-access-‘https-gitee-com-donghai-laboratory-downscaling-git-39-Problem-with-the-SSL-CA-cert-path-access-rights" class="headerlink" title="fatal: unable to access ‘https://gitee.com/donghai-laboratory/downscaling.git/&#39;: Problem with the SSL CA cert (path? access rights?)"></a>fatal: unable to access ‘<a href="https://gitee.com/donghai-laboratory/downscaling.git/&#39;">https://gitee.com/donghai-laboratory/downscaling.git/&#39;</a>: Problem with the SSL CA cert (path? access rights?)</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">参考：https://cloud.tencent.com/developer/article/1895262</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pip config <span class="built_in">set</span> global.cert path/to/ca-bundle.crt</span></span><br></pre></td></tr></table></figure>



<h3 id="仓库嵌套后不能识别"><a href="#仓库嵌套后不能识别" class="headerlink" title="仓库嵌套后不能识别"></a>仓库嵌套后不能识别</h3><p>Git 仓库嵌套使用后，被嵌套的 Git 仓库不能被外层 Git 仓库检测到。</p>
<p>这也就意味着你在被嵌套的 <code>Git</code> 仓库中的更改，外层仓库是无感知的。导致这个问题的原因可能如下：</p>
<ul>
<li>在代码中引入其他 <code>Git</code> 仓库；</li>
<li><code>Clone</code> 别人的 <code>Demo</code> 并做修改；</li>
</ul>
<p>不看场景的解决方案就是耍流氓。</p>
<p>这种情况，需要使用 <code>submodule</code>，过程如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git submodule add https://github.com/chenfengyanyu/fmap-demo.git</span><br><span class="line"></span><br><span class="line"># 或者使用 clone</span><br><span class="line">git clone --recursive https://github.com/chenfengyanyu/fmap-demo.git</span><br></pre></td></tr></table></figure>

<p>这个操作类似于 <code>Clone</code> ，但是会在父仓库下面新建 <code>.gitmodules</code> 文件，我们看一下内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi .gitmodules</span><br></pre></td></tr></table></figure>

<p>大致如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[submodule &quot;fmap-demo&quot;]</span><br><span class="line">        path = fmap-demo</span><br><span class="line">        url = https://github.com/chenfengyanyu/fmap-demo.git</span><br></pre></td></tr></table></figure>

<p>然后做正常提交就可以了。</p>
<h3 id="文件太大导致推送失败"><a href="#文件太大导致推送失败" class="headerlink" title="文件太大导致推送失败"></a>文件太大导致推送失败</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">remote: error: File: 821879b9adc8b8374cc489e51c667065f638c4fb 341.23 MB, exceeds 300.00 MB.</span><br><span class="line"></span><br><span class="line">remote: Use command below to see the filename:</span><br><span class="line"></span><br><span class="line">remote: git rev-list --objects --all | grep 821879b9adc8b8374cc489e51c667065f638c4fb</span><br><span class="line"></span><br><span class="line">remote: Please remove the file from history and try again. (https://gitee.com/help/articles/4232)</span><br></pre></td></tr></table></figure>

<h4 id="方案一："><a href="#方案一：" class="headerlink" title="方案一："></a>方案一：</h4><p>这个方案适用于仅最近的一次提交包含大于100MB的文件, 解决起来也比较简单.<br> <a href="https://link.jianshu.com/?t=https://help.github.com/articles/removing-files-from-a-repository-s-history/">官网解决流程</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git rm --cached giant_file</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Stage our giant file <span class="keyword">for</span> removal, but leave it on disk</span></span><br><span class="line"></span><br><span class="line">git commit --amend -CHEAD</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Amend the previous commit with your change</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Simply making a new commit won<span class="string">&#x27;t work, as you need</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">to remove the file from the unpushed history as well</span></span></span><br><span class="line"></span><br><span class="line">git push</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">Push our rewritten, smaller commit</span></span></span><br></pre></td></tr></table></figure>

<h4 id="方案二："><a href="#方案二：" class="headerlink" title="方案二："></a>方案二：</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git stash</span><br><span class="line"></span><br><span class="line">git filter-branch --force --index-filter  &quot;git rm --cached --ignore-unmatch WRF-4.2.1/run/wrfbdy_d01&quot; --prune-empty --tag-name-filter cat -- --all</span><br><span class="line"></span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure>

<p>提示： Your branch is ahead of ‘origin&#x2F;master’ by 2 commits.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git push origin master -f</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Github</title>
    <url>/2022/05/01/Tool/GitHub/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">git init				<span class="comment"># 在本地初始化git</span></span><br><span class="line">touch README		<span class="comment"># 为该仓库新建一个README文件</span></span><br><span class="line">git add README	<span class="comment"># 将该文件添加到git缓冲区</span></span><br><span class="line">git commit -m <span class="string">&#x27;add readme&#x27;</span>	<span class="comment"># 提交到缓冲区，-m表示message，后面接的是提交信息</span></span><br><span class="line">git remote add origin https://github.com/user_name/epo_name.git <span class="comment"># 添加远程源repo</span></span><br><span class="line">git push origin master	<span class="comment"># 将更新同步到master分支，此处将README文件同步到远程的repo中</span></span><br></pre></td></tr></table></figure>



<h2 id="上传本地代码"><a href="#上传本地代码" class="headerlink" title="上传本地代码"></a>上传本地代码</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">git status <span class="comment"># 显示更改</span></span><br><span class="line">git add * </span><br><span class="line">git commit -m ‘first commit’</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>



<h2 id="小弟获取老大的项目"><a href="#小弟获取老大的项目" class="headerlink" title="小弟获取老大的项目"></a>小弟获取老大的项目</h2><ol>
<li>搜索老大项目</li>
<li>点击Fork将项目复制到小弟的仓库中</li>
<li>进行相应修改</li>
<li>小弟提交修改：Pull request - New pull request : 与原文件进行比对 - create pull request - create pull request</li>
<li>老大审核：pull request - 查看修改 - merge pull request - confirm merge</li>
</ol>
<h2 id="Git-pull失败之refusing-to-merge-unrelated-histories"><a href="#Git-pull失败之refusing-to-merge-unrelated-histories" class="headerlink" title="Git pull失败之refusing to merge unrelated histories"></a>Git pull失败之refusing to merge unrelated histories</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">git reset origin/master --hard</span><br></pre></td></tr></table></figure>



<p>参考：</p>
<p><a href="https://blog.csdn.net/dreamjay1997/article/details/82145461">https://blog.csdn.net/dreamjay1997/article/details/82145461</a><br><a href="https://blog.csdn.net/larry233/article/details/83899797">https://blog.csdn.net/larry233/article/details/83899797</a></p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Hexo</title>
    <url>/2022/05/01/Tool/Hexo/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><h4 id="常用命令及文件地址："><a href="#常用命令及文件地址：" class="headerlink" title="常用命令及文件地址："></a>常用命令及文件地址：</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">部署到本地预览查看三部曲：</span><br><span class="line">hexo clean （清除缓存）</span><br><span class="line">hexo g (生成静态网页)</span><br><span class="line">hexo s (本地启动预览查看)</span><br><span class="line"></span><br><span class="line">部署到git服务器上：</span><br><span class="line">hexo deploy </span><br><span class="line"></span><br><span class="line">博客配置文件地址：</span><br><span class="line">~/blog/_config.yml</span><br><span class="line"></span><br><span class="line">主题配置文件地址</span><br><span class="line">~/blog/themes/next/_config.yml</span><br></pre></td></tr></table></figure>



<h2 id="二、next主题的安装和基本配置"><a href="#二、next主题的安装和基本配置" class="headerlink" title="二、next主题的安装和基本配置"></a>二、next主题的安装和基本配置</h2><h3 id="（一）安装"><a href="#（一）安装" class="headerlink" title="（一）安装"></a>（一）安装</h3><p>首先从github上clone到本地，在终端cd 到blog文件夹（即你通过Hexo init生成的根目录），然后在终端输入命令：</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line">git clone https:<span class="regexp">//gi</span>thub.com/iissnan/hexo-theme-<span class="keyword">next</span> themes/<span class="keyword">next</span></span><br></pre></td></tr></table></figure>

<p>进入blog的全局配置文件：_config.yml （在blog文件夹下 &#x2F;blog&#x2F;_config.yml）</p>
<p>找到theme字段：设置为</p>
<figure class="highlight vbnet"><table><tr><td class="code"><pre><span class="line"><span class="symbol">theme:</span> <span class="keyword">next</span></span><br></pre></td></tr></table></figure>

<p>此时可以查看下主题是否配置成功，执行上面提到的三部曲（ <strong>终端cd到blog文件夹 执行 hexo clean , hexo g , hexo s</strong> ） 然后访问<a href="https://link.juejin.im/?target=http://localhost:4000/">http://localhost:4000/</a>,在本地查看效果，进行预览</p>
<h3 id="（二）-基本信息的配置"><a href="#（二）-基本信息的配置" class="headerlink" title="（二） 基本信息的配置"></a>（二） 基本信息的配置</h3><p>更多的博客和主题的配置可参考 <a href="https://link.juejin.im/?target=https://hexo.io/zh-cn/docs/index.html">hexo官方文档</a> 和 <a href="https://link.juejin.im/?target=http://theme-next.iissnan.com/">next主题文档</a>，如不想那么麻烦，可以继续往下看，下面就是我使用的一些常用的功能，足够自己使用了</p>
<h4 id="1、网站标题、作者、语言"><a href="#1、网站标题、作者、语言" class="headerlink" title="1、网站标题、作者、语言"></a>1、网站标题、作者、语言</h4><p><strong>在博客配置文件_config.yml中进行如下配置</strong></p>
<figure class="highlight vbnet"><table><tr><td class="code"><pre><span class="line"># Site</span><br><span class="line"><span class="symbol">title:</span> </span><br><span class="line"><span class="symbol">subtitle:</span> </span><br><span class="line"><span class="symbol">description:</span> </span><br><span class="line"><span class="symbol">author:</span> </span><br><span class="line"><span class="symbol">language:</span> en</span><br><span class="line"><span class="symbol">timezone:</span> Asia/Shanghai （如不填，则表示默认电脑的时区）</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>这里设置标题作者名字等信息，其中language一项最好配置成zh-Hans（简体中文），（查看next主题支持哪些语言 可查看~&#x2F;blog&#x2F;themes&#x2F;next&#x2F;languages文件夹）</p>
<h4 id="2、next主题的风格设置"><a href="#2、next主题的风格设置" class="headerlink" title="2、next主题的风格设置"></a>2、next主题的风格设置</h4><p><strong>在主题配置文件_config.yml中进行如下配置</strong></p>
<p>next默认有四种风格，可根据自己喜欢的样式去设置查看</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="comment">#scheme: Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line">scheme<span class="operator">:</span> Gemini</span><br></pre></td></tr></table></figure>

<p>我这里使用的是Gemini样式，其中#表示注释，使用哪种去掉前面的#即可，后不再说明</p>
<h4 id="3、设置菜单选项"><a href="#3、设置菜单选项" class="headerlink" title="3、设置菜单选项"></a>3、设置菜单选项</h4><p>打开主题配置文件：</p>
<p>先奉上我的配置方便大家去参考：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  <span class="comment">#home: /home/ || fa fa-home</span></span><br><span class="line">  <span class="comment">#Welcome: /home/Welcome/ || fa fa-home</span></span><br><span class="line">  AtmSci : //categories/AtmSci/ || fa fa-archive</span><br><span class="line">  OcnSci : //categories/OcnSci/ || fa fa-archive </span><br><span class="line">  Tools: //categories/Tools/ || fa fa-archive</span><br><span class="line">  <span class="comment">#about: /about/ || fa fa-user</span></span><br><span class="line">  <span class="comment">#tags: /tags/ || fa fa-tags</span></span><br><span class="line">  <span class="comment">#categories: /categories/ || fa fa-th</span></span><br><span class="line">  <span class="comment">#archives: /archives/ || fa fa-archive</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || fa fa-calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || fa fa-heartbeat</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable / Disable menu icons / item badges.</span></span><br><span class="line">menu_settings:</span><br><span class="line">  icons: <span class="literal">true</span> </span><br><span class="line">  badges: <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>其中menu表示配置菜单内容，menu_icons表示菜单图片，如需使用图片则在menu中设定值的后面加上 || 图片名</p>
<p><strong>（1）常用的默认菜单项，其中home和archives两页是系统默认的就有的，其他的需要自己创建，后面会讲到</strong></p>
<table>
<thead>
<tr>
<th align="left">键值</th>
<th align="left">设定值</th>
<th align="left">显示文本（简体中文）</th>
</tr>
</thead>
<tbody><tr>
<td align="left">home</td>
<td align="left">home: &#x2F;</td>
<td align="left">主页</td>
</tr>
<tr>
<td align="left">archives</td>
<td align="left">archives: &#x2F;</td>
<td align="left">归档页</td>
</tr>
<tr>
<td align="left">categories</td>
<td align="left">categories: &#x2F;categories</td>
<td align="left">分类页</td>
</tr>
<tr>
<td align="left">tags</td>
<td align="left">tags: &#x2F;tags</td>
<td align="left">标签页</td>
</tr>
<tr>
<td align="left">about</td>
<td align="left">about: &#x2F;about</td>
<td align="left">关于页面</td>
</tr>
</tbody></table>
<p><strong>（2）设置菜单项的显示文本。在第一步中设置的菜单的名称并不直接用于界面上的展示。Hexo 在生成的时候将使用 这个名称查找对应的语言翻译，并提取显示文本。这些翻译文本放置在 NexT 主题目录下的 languages&#x2F;{language}.yml （{language} 为你所使用的语言）。</strong></p>
<p><strong>以简体中文为例，若你需要添加一个菜单项，比如 something。那么就需要修改简体中文对应的翻译文件 languages&#x2F;zh-Hans.yml，在 menu 字段下添加一项：</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">menu</span>:</span><br><span class="line">  home: 首页</span><br><span class="line">  archives: 归档</span><br><span class="line">  categories: 分类</span><br><span class="line">  tags: 标签</span><br><span class="line">  about: 关于</span><br></pre></td></tr></table></figure>

<p><strong>（3）设定菜单项的图标，对应的字段是 menu_icons。 此设定格式是 item name: icon name，其中 item name 与上一步所配置的菜单名字对应，icon name 是 <a href="https://link.juejin.im/?target=http://www.bootcss.com/p/font-awesome/%23icons-web-app">Font Awesome</a> 图标的 名字,去掉前缀icon-(或使用<a href="https://link.juejin.im/?target=https://fontawesome.com/icons?d=gallery">图标库</a>中的图片名称)。而 enable 可用于控制是否显示图标，你可以设置成 false 来去掉图标。next主题默认集成了识别<a href="https://link.juejin.im/?target=http://www.bootcss.com/p/font-awesome/%23icons-web-app">Font Awesome</a>图片的方式，只需要在里面找到想要图标的名称，就可以拿过来使用</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Enable/Disable menu icons.</span></span><br><span class="line"></span><br><span class="line">menu_icons:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Icon Mapping.</span></span><br><span class="line">  home: home</span><br><span class="line">  about: user</span><br><span class="line">  categories: th</span><br><span class="line">  tags: tags</span><br><span class="line">  archives: archive</span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>请注意键值（如 home）的大小写要严格匹配</strong></p>
</blockquote>
<h4 id="4、创建上述菜单选项中对应的页面"><a href="#4、创建上述菜单选项中对应的页面" class="headerlink" title="4、创建上述菜单选项中对应的页面"></a>4、创建上述菜单选项中对应的页面</h4><p><strong>（1）分类页面</strong></p>
<p>终端中cd 进入blog文件夹，执行 <code>hexo new page &quot;categories&quot;</code> 然后在~&#x2F;blog&#x2F;source 文件夹中即可看到categories文件夹，打开里面的index.md文件，设置如下（注意：后面要加空格）：</p>
<figure class="highlight haskell"><table><tr><td class="code"><pre><span class="line"><span class="comment">---</span></span><br><span class="line"><span class="title">title</span>: 分类 （title可以自定义）</span><br><span class="line"><span class="class"><span class="keyword">type</span>: categories （记住你写的<span class="keyword">type</span>类型，后面分类文章需要使用）</span></span><br><span class="line"><span class="comment">---</span></span><br></pre></td></tr></table></figure>

<p>这时候上一步中菜单项的配置才会生效</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">    home: /</span><br><span class="line">    archives: /archives</span><br><span class="line">    categories: /categories</span><br></pre></td></tr></table></figure>

<p>这时候如运行本地查看会发现打开后没有任何东西，下面会告诉大家使用方法</p>
<p><strong>（2）标签页面</strong></p>
<p>同分类界面相同，终端中cd 进入blog文件夹，执行 <code>hexo new page &quot;tags&quot;</code> 然后在~&#x2F;blog&#x2F;source 文件夹中即可看到tags文件夹，打开里面的index.md文件，设置如下（注意：后面要加空格）：</p>
<figure class="highlight haskell"><table><tr><td class="code"><pre><span class="line"><span class="comment">---</span></span><br><span class="line"><span class="title">title</span>: 标签 （title可以自定义）</span><br><span class="line"><span class="class"><span class="keyword">type</span>: tags （记住你写的<span class="keyword">type</span>类型，后面分类文章需要使用）</span></span><br><span class="line"><span class="comment">---</span></span><br></pre></td></tr></table></figure>

<p>运行打开后同样什么都不会有</p>
<p><strong>（3）关于页面</strong></p>
<p>同理，打开index.md文件后，只需要配置标题即可</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">---</span></span><br><span class="line">title: 自我介绍</span><br><span class="line"><span class="type">date</span>: <span class="number">2018</span><span class="number">-02</span><span class="number">-28</span> <span class="number">17</span>:<span class="number">11</span>:<span class="number">54</span></span><br><span class="line"><span class="comment">---</span></span><br></pre></td></tr></table></figure>

<p>然后下面填写正文即可（这是我使用的方式，但是“关于”界面也可以使用其他方式配置，如配置个链接等，这里大家自行百度即可）</p>
<h4 id="5、给文章添加分类和标签"><a href="#5、给文章添加分类和标签" class="headerlink" title="5、给文章添加分类和标签"></a>5、给文章添加分类和标签</h4><p>首先创建一个文章，上篇文章末尾有讲到，终端cd 进入blog文件夹，执行 <code>hexo new &quot;文章名字&quot;</code>，打开文章（在~&#x2F;blog&#x2F;source&#x2F;_posts文件夹下）,然后进行如下配置：</p>
<figure class="highlight vbnet"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="symbol">title:</span> 标题</span><br><span class="line"><span class="symbol">date:</span> <span class="number">2018</span>-<span class="number">03</span>-<span class="number">02</span> <span class="number">09</span>:<span class="number">36</span>:<span class="number">14</span></span><br><span class="line"><span class="symbol">tags:</span> [blog] （注意：使用[]，将需要添加的标签写进去，多个标签用,分隔，categories同理）</span><br><span class="line"><span class="symbol">categories:</span> [blog]</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p>保存，此时再去运行查看，点击分类和标签页面就会看到自己的文章了，不再是空的了</p>
<blockquote>
<p>但是经过上述操作，发现每创建一篇文章都要在上面去加标签等字段，如果后期功能多的话，可能会要加很多字段，比较麻烦，这里有个比较相对容易的方式不用每次都去添加那些字段 首先打开文件 ~&#x2F;blog&#x2F;scaffolds&#x2F;post.md ,进行如下配置：</p>
</blockquote>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="comment">---</span></span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line"><span class="built_in">date</span>: &#123;&#123; <span class="built_in">date</span> &#125;&#125;</span><br><span class="line">tags: &#123;&#123; tags &#125;&#125;</span><br><span class="line">categories: </span><br><span class="line"><span class="comment">---</span></span><br></pre></td></tr></table></figure>



<h4 id="6-修改作者头像并旋转"><a href="#6-修改作者头像并旋转" class="headerlink" title="6.修改作者头像并旋转"></a>6.修改作者头像并旋转</h4><p>打开主题配置文件，修改字段 avatar， 值设置成头像的链接地址</p>
<p>将头像放置主题目录下的 source&#x2F;uploads&#x2F; （新建 uploads 目录若不存在） 配置为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">avatar: /uploads/avatar.png</span><br></pre></td></tr></table></figure>

<p>或者 放置在 source&#x2F;images&#x2F; 目录下 配置为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">avatar: /images/avatar.png</span><br></pre></td></tr></table></figure>

<p>或直接放上链接，如： <code>avatar: http://example.com/avatar.png</code></p>
<h4 id="7-头像下方添加自己的github等信息"><a href="#7-头像下方添加自己的github等信息" class="headerlink" title="7.头像下方添加自己的github等信息"></a>7.头像下方添加自己的github等信息</h4><p>打开主题配置文件，找到social字段，配置如下，大家可根据自己情况去配置，图片的使用方法同菜单栏一样</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">social:</span><br><span class="line"></span><br><span class="line">  GitHub: https://github.com/username || github</span><br><span class="line"></span><br><span class="line">  <span class="comment">#E-Mail: </span></span><br><span class="line">  <span class="comment">#Google: https://plus.google.com/yourname || google</span></span><br><span class="line">  <span class="comment">#Twitter: https://twitter.com/yourname || twitter</span></span><br><span class="line">  <span class="comment">#FB Page: https://www.facebook.com/yourname || facebook</span></span><br><span class="line">  <span class="comment">#VK Group: https://vk.com/yourname || vk</span></span><br><span class="line">  <span class="comment">#StackOverflow: https://stackoverflow.com/yourname || stack-overflow</span></span><br><span class="line">  <span class="comment">#YouTube: https://youtube.com/yourname || youtube</span></span><br><span class="line">  <span class="comment">#Instagram: https://instagram.com/yourname || instagram</span></span><br><span class="line">  <span class="comment">#Skype: skype:yourname?call|chat || skype</span></span><br><span class="line"></span><br><span class="line">social_icons:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  <span class="comment">#icons_only: false</span></span><br><span class="line">  <span class="comment">#transition: false</span></span><br><span class="line">  GitHub: github</span><br></pre></td></tr></table></figure>



<h4 id="8-给站点添加友情链接功能"><a href="#8-给站点添加友情链接功能" class="headerlink" title="8.给站点添加友情链接功能"></a>8.给站点添加友情链接功能</h4><p>打开主题配置文件，进行如下配置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">links_title: 友情链接</span><br><span class="line"></span><br><span class="line">links:</span><br><span class="line">    <span class="comment">#百度: http://www.baidu.com/</span></span><br><span class="line">    <span class="comment">#新浪: http://example.com/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="三、next主题的高级配置和一些炫酷的效果"><a href="#三、next主题的高级配置和一些炫酷的效果" class="headerlink" title="三、next主题的高级配置和一些炫酷的效果"></a>三、next主题的高级配置和一些炫酷的效果</h2><h3 id="（一）-增加评论系统"><a href="#（一）-增加评论系统" class="headerlink" title="（一） 增加评论系统"></a>（一） 增加评论系统</h3><p>百度了一下最新的消息，当前版本的next主题中已经内置支持了各种各样的评论系统，但由于政策的原因（需要实名评论），导致大多数的评论插件都已经失效了，而国外的一些加载比较慢。</p>
<p>这里附上gitment的评论集成方式<a href="https://link.juejin.im/?target=https://jingyan.baidu.com/article/2f9b480de2b5b341cb6cc2be.html">集成流程</a></p>
<p><strong>gitment</strong>（依托于github issue，能够自己管理，而且被墙的概率小），不过兼容性不太好（需要chrome内核才行），本人使用的gitment，有一个小问题，就是每次发布文章时需要登录下自己的github账号去初始化一下评论，评论功能才能使用，否则会提示“未开放评论”</p>
<p><strong>Hypercomments</strong> 是国外的一个第三方评论平台</p>
<p><strong>多说</strong> 在2017年06月01日就关闭评论服务了</p>
<p><strong>网易云跟贴</strong> 2017年08月01日也停止服务了</p>
<p><strong>来必力</strong> (韩国人弄的)总是乱码</p>
<p><strong>DISQUS</strong> 外国的，加载慢</p>
<hr>
<h3 id="（二）-隐藏网页底部powered-By-Hexo-x2F-强力驱动"><a href="#（二）-隐藏网页底部powered-By-Hexo-x2F-强力驱动" class="headerlink" title="（二） 隐藏网页底部powered By Hexo &#x2F; 强力驱动"></a>（二） 隐藏网页底部powered By Hexo &#x2F; 强力驱动</h3><p>打开主题配置文件，找到如下图位置，将powered设置为 false，theme下的enable 设置为 false</p>
<hr>
<h3 id="（三）-设置首页文章列表不显示全文-只显示预览"><a href="#（三）-设置首页文章列表不显示全文-只显示预览" class="headerlink" title="（三） 设置首页文章列表不显示全文(只显示预览)"></a>（三） 设置首页文章列表不显示全文(只显示预览)</h3><ul>
<li><p>进入hexo博客项目的themes&#x2F;next目录</p>
</li>
<li><p>打开_config.yml文件</p>
</li>
<li><p>搜索”auto_excerpt”,找到如下部分：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"># Automatically Excerpt. Not recommand.</span><br><span class="line"># Please use <span class="comment">&lt;!-- more --&gt;</span> in the post to control excerpt accurately.</span><br><span class="line">auto_excerpt:</span><br><span class="line">  enable: false</span><br><span class="line">  length: 150</span><br></pre></td></tr></table></figure>
</li>
<li><p>把enable改为对应的false改为true，length设置下，然后hexo d -g，再进主页，问题就解决了！</p>
</li>
</ul>
<hr>
<h3 id="（四）-增加本地搜索功能"><a href="#（四）-增加本地搜索功能" class="headerlink" title="（四） 增加本地搜索功能"></a>（四） 增加本地搜索功能</h3><h4 id="添加百度-x2F-谷歌-x2F-本地-自定义站点内容搜索"><a href="#添加百度-x2F-谷歌-x2F-本地-自定义站点内容搜索" class="headerlink" title="添加百度&#x2F;谷歌&#x2F;本地 自定义站点内容搜索"></a>添加百度&#x2F;谷歌&#x2F;本地 自定义站点内容搜索</h4><ol>
<li><p>安装 hexo-generator-searchdb，在站点的根目录下执行以下命令：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb <span class="attr">--save</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>编辑博客配置文件，新增以下内容到任意位置：</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">search:</span><br><span class="line">	  <span class="built_in">path</span>: search.xml</span><br><span class="line">	  field: post</span><br><span class="line">	  <span class="built_in">format</span>: html</span><br><span class="line">	  limit: <span class="number">10000</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>编辑主题配置文件，启用本地搜索功能：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># <span class="keyword">Local</span> <span class="keyword">search</span></span><br><span class="line"></span><br><span class="line">local_search:</span><br><span class="line">  enable: <span class="literal">true</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="debug"><a href="#debug" class="headerlink" title="debug"></a>debug</h2><p>本地改动更新后无法同步到网站, 出现过一次情况是本地修改后进行<code>hexo deploy</code>却提示</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nothing to commit, working tree clean</span><br><span class="line">Everything up-to-date</span><br></pre></td></tr></table></figure>


<p>意思是它检测不到我的修改，提交失败。我的解决方法是先清除一遍缓存，然后就提交成功了</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo clean</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo deploy</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Google Drive</title>
    <url>/2022/05/01/Tool/Google%20Drive/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Google-Drive-文件下载操作"><a href="#Google-Drive-文件下载操作" class="headerlink" title="Google Drive 文件下载操作"></a>Google Drive 文件下载操作</h1><h2 id="dgown-当文件个数小于50个时"><a href="#dgown-当文件个数小于50个时" class="headerlink" title="dgown (当文件个数小于50个时)"></a>dgown (当文件个数小于50个时)</h2><h3 id="安装-gdown"><a href="#安装-gdown" class="headerlink" title="安装 gdown"></a>安装 gdown</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pip3 install gdown</span></span><br></pre></td></tr></table></figure>

<h3 id="python-脚本"><a href="#python-脚本" class="headerlink" title="python 脚本"></a>python 脚本</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> gdown</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;https://drive.google.com/drive/folders/135hTTURfjn43fo4f?usp=sharing&#x27;</span> </span><br><span class="line">gdown.download_folder(url,remaining_ok=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>





<h2 id="rclone-大量文件数，适用于Linux平台"><a href="#rclone-大量文件数，适用于Linux平台" class="headerlink" title="rclone (大量文件数，适用于Linux平台)"></a>rclone (大量文件数，适用于Linux平台)</h2><h3 id="安装-rclone"><a href="#安装-rclone" class="headerlink" title="安装 rclone"></a>安装 rclone</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pips intall rclone</span></span><br></pre></td></tr></table></figure>

<p><a href="https://rclone.org/downloads/">https://rclone.org/downloads/</a></p>
<h3 id="rclone-配置"><a href="#rclone-配置" class="headerlink" title="rclone 配置"></a>rclone 配置</h3><p><a href="https://www.youtube.com/watch?v=vPs9K_VC-lg">https://www.youtube.com/watch?v=vPs9K_VC-lg</a></p>
<p><a href="https://www.addictivetips.com/ubuntu-linux-tips/set-up-rclone-for-linux/">https://www.addictivetips.com/ubuntu-linux-tips/set-up-rclone-for-linux/</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">rclone config</span></span><br></pre></td></tr></table></figure>
<h4 id="关键步骤"><a href="#关键步骤" class="headerlink" title="关键步骤"></a>关键步骤</h4><ul>
<li>启动 Google Drive API</li>
<li>获取<code>client_id</code>和<code>client secret</code></li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">See https://rclone.org/drive/#making-your-own-client-id for how to create your own.</span><br><span class="line">If you leave this blank, it will use an internal key which is low performance.</span><br><span class="line">Enter a value. Press Enter to leave empty.</span><br><span class="line">client_id&gt; </span><br></pre></td></tr></table></figure>

<p><strong>Here is how to create your own Google Drive client ID for rclone:</strong></p>
<ol>
<li><p>Log into the <a href="https://console.developers.google.com/">Google API Console</a> with your Google account. It doesn’t matter what Google account you use. (It need not be the same account as the Google Drive you want to access)</p>
</li>
<li><p>Select a project or create a new project.</p>
</li>
<li><p>Under “ENABLE APIS AND SERVICES” search for “Drive”, and enable the “Google Drive API”.</p>
</li>
<li><p>Click “Credentials” in the left-side panel (not “Create credentials”, which opens the wizard).</p>
</li>
<li><p>If you already configured an “Oauth Consent Screen”, then skip to the next step; if not, click on “CONFIGURE CONSENT SCREEN” button (near the top right corner of the right panel), then select “External” and click on “CREATE”; on the next screen, enter an “Application name” (“rclone” is OK); enter “User Support Email” (your own email is OK); enter “Developer Contact Email” (your own email is OK); then click on “Save” (all other data is optional). You will also have to add some scopes, including <code>.../auth/docs</code> and <code>.../auth/drive</code> in order to be able to edit, create and delete files with RClone. You may also want to include the <code>../auth/drive.metadata.readonly</code> scope. After adding scopes, click “Save and continue” to add test users. Be sure to add your own account to the test users. Once you’ve added yourself as a test user and saved the changes, click again on “Credentials” on the left panel to go back to the “Credentials” screen.</p>
<p>(PS: if you are a GSuite user, you could also select “Internal” instead of “External” above, but this will restrict API use to Google Workspace users in your organisation).</p>
</li>
<li><p>Click on the “+ CREATE CREDENTIALS” button at the top of the screen, then select “OAuth client ID”.</p>
</li>
<li><p>Choose an application type of “Desktop app” and click “Create”. (the default name is fine)</p>
</li>
<li><p>It will show you a client ID and client secret. Make a note of these.</p>
<p>(If you selected “External” at Step 5 continue to Step 9. If you chose “Internal” you don’t need to publish and can skip straight to Step 10 but your destination drive must be part of the same Google Workspace.)</p>
</li>
<li><p>Go to “Oauth consent screen” and then click “PUBLISH APP” button and confirm. You will also want to add yourself as a test user.</p>
</li>
<li><p>Provide the noted client ID and client secret to rclone.</p>
</li>
</ol>
<h3 id="命令行指令"><a href="#命令行指令" class="headerlink" title="命令行指令"></a>命令行指令</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">rclone listremotes</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">rclone <span class="built_in">sync</span> remote_dir local_dir 	<span class="comment"># 下载文件</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">rclone copy local_dir remote_dir 	<span class="comment"># 上传文件</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">rclone <span class="built_in">mkdir</span> remote_dir 					<span class="comment"># 新建远程文件夹</span></span></span><br></pre></td></tr></table></figure>

<ul>
<li>筛选文件名</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">rclone <span class="built_in">sync</span> <span class="built_in">test</span>:Past_3hourly /Volumes/CMIP/GloH2O/Past/3hourly --include <span class="string">&quot;*.00.nc&quot;</span></span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>HPC-stack</title>
    <url>/2022/05/01/Tool/HPC-stack/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="HPC-stack-安装手册"><a href="#HPC-stack-安装手册" class="headerlink" title="HPC-stack 安装手册"></a>HPC-stack 安装手册</h2><p>参考：</p>
<p><a href="https://github.com/comgsi/documents">https://github.com/comgsi/documents</a></p>
<p><a href="https://hpc-stack.readthedocs.io/en/latest/">https://hpc-stack.readthedocs.io/en/latest/</a></p>
<p><a href="https://hpc-stack.readthedocs.io/en/latest/hpc-install.html">https://hpc-stack.readthedocs.io/en/latest/hpc-install.html</a></p>
<h3 id="pre-requirements-Lmod"><a href="#pre-requirements-Lmod" class="headerlink" title="pre-requirements: Lmod"></a>pre-requirements: Lmod</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install lua5.3 liblua5.3-0 liblua5.3-dev lua-filesystem-dev lua-posix-dev</span><br><span class="line">sudo apt-get install tcl tcl8.6-dev libtcl8.6</span><br><span class="line">which lua</span><br><span class="line">which luac</span><br></pre></td></tr></table></figure>

<p>download tar.bz2 file from: <a href="https://sourceforge.net/projects/lmod/files/">https://sourceforge.net/projects/lmod/files/</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar -jxvf Lmod-8.7.tar.bz2</span><br><span class="line">./configure --with-lua=/usr/bin/lua  --with-luac=/usr/bin/luac --prefix=$&#123;HOME&#125;/software</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>

<p>Add the following to ~&#x2F;.bashrc</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export BASH_ENV=$HOME/software/lmod/lmod/init/profile</span><br><span class="line">source $BASH_ENV</span><br></pre></td></tr></table></figure>



<h3 id="Out-of-container"><a href="#Out-of-container" class="headerlink" title="Out of container"></a>Out of container</h3><p>Please refer to <a href="https://hpc-stack.readthedocs.io/en/latest/hpc-install.html">https://hpc-stack.readthedocs.io/en/latest/hpc-install.html</a> first</p>
<p>Some additional tips are:</p>
<ul>
<li>查看编译器版本</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname -a</span><br><span class="line">more /proc/version</span><br><span class="line">ompi_info</span><br><span class="line">python --version</span><br></pre></td></tr></table></figure>

<ul>
<li><code>vi config_custom.sh</code> 对应修改</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./setup_modules.sh -p /home/ruyanc/WORK/hpc-stack -c  config/config_custom.sh</span><br></pre></td></tr></table></figure>

<ul>
<li>更新CMAKE：<a href="https://zhuanlan.zhihu.com/p/519732843">https://zhuanlan.zhihu.com/p/519732843</a></li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./build_stack.sh -p /home/ruyanc/WORK/hpc-stack -c config/config_custom.sh -y stack/stack_custom.yaml -m</span><br></pre></td></tr></table></figure>

<ul>
<li>只编译其中一个库</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./build_stack.sh -p /home/ruyanc/WORK/hpc-stack -c config/config_custom.sh -y stack/stack_custom.yaml -m -l netcdf</span><br></pre></td></tr></table></figure>





<h4 id="DEBUG-pio-安装出错"><a href="#DEBUG-pio-安装出错" class="headerlink" title="DEBUG: pio 安装出错"></a>DEBUG: pio 安装出错</h4><p><strong>解决方式：</strong> 修改<code>/work/home/acyii6v8kt/hpc-stack/pkg/pio-2.5.10/scripts/genf90.pl</code>中第一行为<code>my @types = qw(text real double int short);</code></p>
<h4 id="DUBUG：网络不好，无法下载安装文件"><a href="#DUBUG：网络不好，无法下载安装文件" class="headerlink" title="DUBUG：网络不好，无法下载安装文件"></a>DUBUG：网络不好，无法下载安装文件</h4><p><strong>解决方式：</strong> 外部下载后上传到<code>hpc-stack/pkg</code>下</p>
<hr>
<h3 id="Another-Choice-Inside-a-container-Singularity"><a href="#Another-Choice-Inside-a-container-Singularity" class="headerlink" title="Another Choice:  Inside a container - Singularity"></a>Another Choice:  Inside a container - Singularity</h3><p><a href="https://docs.sylabs.io/guides/3.2/user-guide/installation.html">https://docs.sylabs.io/guides/3.2/user-guide/installation.html</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo apt-get update &amp;&amp; sudo apt-get install -y \</span></span><br><span class="line"><span class="language-bash">    build-essential \</span></span><br><span class="line"><span class="language-bash">    libssl-dev \</span></span><br><span class="line"><span class="language-bash">    uuid-dev \</span></span><br><span class="line"><span class="language-bash">    libgpgme11-dev \</span></span><br><span class="line"><span class="language-bash">    squashfs-tools \</span></span><br><span class="line"><span class="language-bash">    libseccomp-dev \</span></span><br><span class="line"><span class="language-bash">    wget \</span></span><br><span class="line"><span class="language-bash">    pkg-config \</span></span><br><span class="line"><span class="language-bash">    git</span></span><br></pre></td></tr></table></figure>

<ul>
<li>install go</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">export</span> VERSION=1.20 OS=linux ARCH=amd64 &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    wget https://dl.google.com/go/go<span class="variable">$VERSION</span>.<span class="variable">$OS</span>-<span class="variable">$ARCH</span>.tar.gz &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    sudo tar -C /usr/local -xzvf go<span class="variable">$VERSION</span>.<span class="variable">$OS</span>-<span class="variable">$ARCH</span>.tar.gz &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">rm</span> go<span class="variable">$VERSION</span>.<span class="variable">$OS</span>-<span class="variable">$ARCH</span>.tar.gz</span></span><br><span class="line">    </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">echo</span> <span class="string">&#x27;export GOPATH=$&#123;HOME&#125;/go&#x27;</span> &gt;&gt; ~/.bashrc &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">echo</span> <span class="string">&#x27;export PATH=/usr/local/go/bin:$&#123;PATH&#125;:$&#123;GOPATH&#125;/bin&#x27;</span> &gt;&gt; ~/.bashrc &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">source</span> ~/.bashrc</span></span><br></pre></td></tr></table></figure>

<ul>
<li>install singularity</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">export</span> VERSION=4.1.1 &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    wget https://github.com/sylabs/singularity/releases/download/v4.1.1/singularity-ce-4.1.1.tar.gz &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    tar -xzf singularity-<span class="variable">$&#123;VERSION&#125;</span>.tar.gz &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">cd</span> singularity</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># Check the latest release here: https://github.com/sylabs/singularity/releases</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># also pay attention to the dir loc</span></span></span><br></pre></td></tr></table></figure>

<ul>
<li>add pre-requirements</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo apt-get install libglib2.0-dev</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo apt-get install libfuse-dev</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo apt-get install fuse</span></span><br></pre></td></tr></table></figure>

<ul>
<li>install sinularity</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./mconfig &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    make -C ./builddir &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    sudo make -C ./builddir install</span></span><br><span class="line">    </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./mconfig --prefix=/opt/singularity</span></span><br></pre></td></tr></table></figure>

<ul>
<li>test installation</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">singularity --version</span></span><br></pre></td></tr></table></figure>





<h4 id="Build-and-Run-the-Container"><a href="#Build-and-Run-the-Container" class="headerlink" title="Build and Run the Container"></a>Build and Run the Container</h4><ul>
<li>Pull and build the container</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">singularity pull ubuntu20.04-gnu9.3.sif docker://noaaepic/ubuntu20.04-gnu9.3</span><br><span class="line">singularity build --sandbox ubuntu20.04-gnu9.3 ubuntu20.04-gnu9.3.sif</span><br><span class="line">cd ubuntu20.04-gnu9.3</span><br></pre></td></tr></table></figure>

<ul>
<li>Make a directory (e.g., <code>contrib</code>) in the container if one does not exist:</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir contrib</span><br><span class="line">cd ..</span><br></pre></td></tr></table></figure>

<ul>
<li>From the local working directory, start the container and run an interactive shell within it. This command also binds the local working directory to the container so that data can be shared between them.</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">singularity shell -e --writable --bind /&lt;local_dir&gt;:/contrib ubuntu20.04-gnu9.3</span><br></pre></td></tr></table></figure>



<h4 id="Build-the-HPC-Stack"><a href="#Build-the-HPC-Stack" class="headerlink" title="Build the HPC-Stack"></a>Build the HPC-Stack</h4><ul>
<li>Clone the HPC-Stack repository (from inside the Singularity shell initialized above).</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/NOAA-EMC/hpc-stack</span><br><span class="line">cd hpc-stack</span><br></pre></td></tr></table></figure>

<ul>
<li>Set up the build environment.</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./setup_modules.sh -p /home/ruyanc/WORK/hpc-stack -c config/config_custom.sh</span><br></pre></td></tr></table></figure>

<ul>
<li>Enter YES&#x2F;YES&#x2F;YES when the option is presented. Then modify <code>build_stack.sh</code> with the following commands:</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sed -i &quot;10 a source /usr/share/lmod/6.6/init/bash&quot; ./build_stack.sh</span><br><span class="line">sed -i &quot;10 a export PATH=/usr/local/sbin:/usr/local/bin:$PATH&quot; ./build_stack.sh</span><br><span class="line">sed -i &quot;10 a export LD_LIBRARY_PATH=/usr/local/lib64:/usr/local/lib:$LD_LIBRARY_PATH&quot; ./build_stack.sh</span><br></pre></td></tr></table></figure>

<ul>
<li>Build the environment. This may take up to a couple of hours to complete.</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./build_stack.sh -p /home/ruyanc/WORK/hpc-stack -c config/config_custom.sh -y stack/stack_custom.yaml -m</span><br></pre></td></tr></table></figure>

<ul>
<li>Load the required modules, making sure to change the <code>&lt;prefix&gt;</code> to the location of the module files.</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source /usr/share/lmod/lmod/init/bash</span><br><span class="line">module use &lt;prefix&gt;/hpc-modules/modulefiles/stack</span><br><span class="line">module load hpc hpc-gnu hpc-openmpi</span><br><span class="line">module avail</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>IDL</title>
    <url>/2022/05/01/Tool/IDL/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="http://w.astro.berkeley.edu/~jbloom/IDL/">http://w.astro.berkeley.edu/~jbloom/IDL/</a></p>
<p><code>IDL&gt; .run adpf_plot.pro </code></p>
<p>Oh ok. Yes - this code has a bunch of my own library subroutines in it. You can find these at ~&#x2F;IDL&#x2F;lib_isla and that one in particular is at &#x2F;home&#x2F;islas&#x2F;IDL&#x2F;lib_isla&#x2F;readnetcdfs.</p>
<p>You’ll need to either copy that into the directory you’re running the code in, or make your own library and point to it with commands equivalent to what I have in my .idlenv file </p>
<p>&#x2F;home&#x2F;islas&#x2F;.idlenv</p>
<p>Alternatively, you might want to just translate it into NCL if you’re more comfortable with that. You may come across other library routines that you need, in which case let me know and I can point you toward where they are in my library.</p>
<p>Thanks,</p>
<p>Isla</p>
<p>&#x2F;glade&#x2F;u&#x2F;apps&#x2F;ch&#x2F;opt&#x2F;idl&#x2F;8.7.2&#x2F;idl87&#x2F;lib&#x2F;</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export IDL_DIR=&quot;/glade/u/apps/ch/opt/idl/8.7.2/idl87&quot;</span><br><span class="line"></span><br><span class="line">export IDL_PATH=&quot;+/glade/u/home/islas/IDL/lib_isla:+/glade/u/apps/ch/opt/idl/8.7.2/idl87/lib/&quot;</span><br><span class="line"></span><br><span class="line">export IDL_PATH=&quot;+/glade/u/home/islas/IDL/lib_isla/plotting/withmaps/general/&quot;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>How to publish a paper</title>
    <url>/2022/05/01/Tool/How%20to%20publish%20a%20paper/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="如何发表一份工作"><a href="#如何发表一份工作" class="headerlink" title="如何发表一份工作"></a>如何发表一份工作</h4><p><img src="https://p.ipic.vip/pacf8f.jpg" alt="e99a6986adba1aab072f88c815caa0bf"></p>
<hr>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>JEDI inside</title>
    <url>/2022/05/01/Tool/JEDI%20Inside/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="JEDI-Components"><a href="#JEDI-Components" class="headerlink" title="JEDI Components"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/index.html">JEDI Components</a></h2><h3 id="OOPS"><a href="#OOPS" class="headerlink" title="OOPS"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/oops/index.html">OOPS</a></h3><ul>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/oops/introduction.html">OOPS Introduction</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/oops/applications/index.html">OOPS Applications</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/oops/algorithmic_details/index.html">OOPS Algorithmic details</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/oops/interfaces/index.html">OOPS Interfaces</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/oops/generic-implementations/index.html">OOPS generic implementations of the interfaces</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/oops/toy-models/index.html">OOPS Toy Models</a></li>
</ul>
<h3 id="SABER"><a href="#SABER" class="headerlink" title="SABER"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/saber/index.html">SABER</a></h3><ul>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/saber/index.html#saber-error-covariance-model">SABER Error Covariance Model</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/saber/index.html#saber-blocks">SABER blocks</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/saber/index.html#saber-applications">SABER applications</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/saber/index.html#calibration-of-saber-error-covariance">Calibration of SABER error covariance</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/saber/index.html#saber-testing">SABER testing</a></li>
</ul>
<h3 id="IODA"><a href="#IODA" class="headerlink" title="IODA"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/ioda/index.html">IODA</a></h3><ul>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/ioda/introduction.html">IODA Introduction</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/ioda/details.html">IODA Details</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/ioda/interface.html">IODA Interfaces</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/ioda/file-formats.html">IODA File Formats</a></li>
</ul>
<h3 id="UFO"><a href="#UFO" class="headerlink" title="UFO"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/ufo/index.html">UFO</a></h3><ul>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/ufo/dataflow.html">Observation Processing Flow</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/ufo/obsops.html">Observation Operators in UFO</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/ufo/newobsop.html">Creating a new Observation Operator in UFO</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/ufo/qcfilters/index.html">Quality Control in UFO</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/ufo/variabletransforms/index.html">Variable transforms</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/ufo/obserrors.html">Observation uncertainties in the UFO</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/ufo/obserrors.html#observation-error-covariances-in-ufo">Observation error covariances in UFO</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/ufo/varbc.html">Variational Bias Correction in UFO</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/ufo/varbc.html#static-bias-correction-in-ufo">Static Bias Correction in UFO</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/ufo/varbc.html#available-predictors">Available Predictors</a></li>
</ul>
<h3 id="VADER"><a href="#VADER" class="headerlink" title="VADER"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/vader/index.html">VADER</a></h3><ul>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/vader/how_to_use_vader.html">High-Level Overview of VADER</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/vader/how_to_use_vader.html#how-to-use-vader">How To Use VADER</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/vader/recipe_naming.html">Recipe Naming Standard</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/vader/VariableChanges/index.html">Vader Variable Changes</a></li>
</ul>
<h3 id="FV3-JEDI"><a href="#FV3-JEDI" class="headerlink" title="FV3-JEDI"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/fv3-jedi/index.html">FV3-JEDI</a></h3><ul>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/fv3-jedi/introduction.html">Introduction</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/fv3-jedi/build.html">Building FV3-JEDI</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/fv3-jedi/classes.html">Classes and Configuration</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/fv3-jedi/data.html">Data files</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/fv3-jedi/testing.html">Testing</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/fv3-jedi/visualization.html">Visualization with FV3-JEDI</a></li>
</ul>
<h3 id="MPAS-JEDI"><a href="#MPAS-JEDI" class="headerlink" title="MPAS-JEDI"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/mpas-jedi/index.html">MPAS-JEDI</a></h3><ul>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/mpas-jedi/introduction.html">Introduction</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/mpas-jedi/build.html">Building and Testing MPAS-JEDI</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/mpas-jedi/classes.html">Classes and Configuration</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/mpas-jedi/staticB.html">Static Background Error Covariance</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/mpas-jedi/data.html">Test files</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/mpas-jedi/testing.html">More on Testing</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/mpas-jedi/diagnostics.html">Diagnostics</a></li>
</ul>
<h3 id="SOCA"><a href="#SOCA" class="headerlink" title="SOCA"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/soca/index.html">SOCA</a></h3><ul>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/soca/introduction.html">Introduction</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/soca/build.html">Building SOCA in Singularity</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/soca/classes.html">Classes and Configuration</a></li>
</ul>
<h3 id="Configuring-JEDI"><a href="#Configuring-JEDI" class="headerlink" title="Configuring JEDI"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/configuration/index.html">Configuring JEDI</a></h3><ul>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/configuration/configuration.html">JEDI Configuration Files: Implementation</a><ul>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/configuration/configuration.html#file-format">File Format</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/configuration/configuration.html#c-usage">C++ Usage</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/configuration/configuration.html#summary-of-c-configuration-methods">Summary of C++ Configuration Methods</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/configuration/configuration.html#fortran-usage">Fortran Usage</a></li>
</ul>
</li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/configuration/parameters.html">Parameter Classes</a><ul>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/configuration/parameters.html#introduction">Introduction</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/configuration/parameters.html#more-complex-types">More Complex Types</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/configuration/parameters.html#parameter-nesting">Parameter Nesting</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/configuration/parameters.html#optional-parameters">Optional Parameters</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/configuration/parameters.html#constraints">Constraints</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/configuration/parameters.html#polymorphic-parameters">Polymorphic Parameters</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/configuration/parameters.html#parameter-composition">Parameter Composition</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/configuration/parameters.html#conversion-to-configuration-objects">Conversion to <code>Configuration</code> Objects</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/configuration/parameters.html#copying-parameters-objects">Copying <code>Parameters</code> Objects</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/configuration/parameters.html#validation">Validation</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/configuration/parameters.html#oops-interfaces-supporting-parameters">OOPS Interfaces Supporting <code>Parameters</code></a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/configuration/parameters.html#headers-to-include-adding-support-for-new-parameter-types">Headers to Include; Adding Support for New Parameter Types</a></li>
</ul>
</li>
</ul>
<h3 id="Skylab-components"><a href="#Skylab-components" class="headerlink" title="Skylab components"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/skylab/index.html">Skylab components</a></h3><ul>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/skylab/skylab_description.html">SkyLab experiments: Parameters and description</a><ul>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/skylab/skylab_description.html#experiment-configuration">Experiment configuration</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/skylab/skylab_description.html#retrieving-experiment-configuration">Retrieving experiment configuration</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/skylab/skylab_description.html#plots-configuration">Plots configuration</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/skylab/skylab_description.html#existing-experiments-and-adding-new-experiments">Existing experiments and adding new experiments</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/skylab/skylab_description.html#skylab-aero-yaml">1. skylab-aero.yaml</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/skylab/skylab_description.html#skylab-atm-land-yaml">2. skylab-atm-land.yaml</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/skylab/skylab_description.html#skylab-marine-yaml">3. skylab-marine.yaml</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/jedi-components/skylab/skylab_description.html#skylab-trace-gas-yaml">4. skylab-trace-gas.yaml</a></li>
</ul>
</li>
</ul>
<h2 id="JEDI-Data-Conventions"><a href="#JEDI-Data-Conventions" class="headerlink" title="JEDI Data Conventions"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/conventions/index.html">JEDI Data Conventions</a></h2><h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/conventions/intro.html">Introduction</a></h3><ul>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/conventions/intro.html#goals">Goals</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/conventions/intro.html#how-to-read-this-document">How to read this document</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/conventions/intro.html#procedure-for-updating-these-conventions">Procedure for updating these conventions</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/conventions/intro.html#credits">Credits</a></li>
</ul>
<h3 id="Convention-Tables"><a href="#Convention-Tables" class="headerlink" title="Convention Tables"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/conventions/tbls.html">Convention Tables</a></h3><h3 id="Files-and-Components"><a href="#Files-and-Components" class="headerlink" title="Files and Components"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/conventions/files_and_components.html">Files and Components</a></h3><ul>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/conventions/files_and_components.html#files">Files</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/conventions/files_and_components.html#groups">Groups</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/conventions/files_and_components.html#data-types">Data types</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/conventions/files_and_components.html#variables">Variables</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/conventions/files_and_components.html#attributes">Attributes</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/conventions/files_and_components.html#dimension-scales">Dimension scales</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/conventions/files_and_components.html#links-future-ioda-release">Links (future IODA release)</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/conventions/files_and_components.html#mount-points-future-ioda-release">Mount points (future IODA release)</a></li>
</ul>
<h3 id="Objects-and-Layouts"><a href="#Objects-and-Layouts" class="headerlink" title="Objects and Layouts"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/conventions/objects_and_layouts.html">Objects and Layouts</a></h3><ul>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/conventions/objects_and_layouts.html#obsgroups-obsspaces">ObsGroups &amp; ObsSpaces</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/conventions/objects_and_layouts.html#global-attributes">Global attributes</a><ul>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/conventions/objects_and_layouts.html#global-attributes-added-by-r2d2-upon-ingest">Global attributes added by R2D2 upon ingest</a></li>
</ul>
</li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/conventions/objects_and_layouts.html#group-based-data-organization">Group-based data organization</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/conventions/objects_and_layouts.html#variable-names">Variable names</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/conventions/objects_and_layouts.html#variable-properties-and-attributes">Variable properties and attributes</a><ul>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/conventions/objects_and_layouts.html#storage-type-and-missing-values">Storage type and missing values</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/conventions/objects_and_layouts.html#attributes-and-units">Attributes and Units</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/conventions/objects_and_layouts.html#using-dimensions-properly">Using dimensions properly</a></li>
</ul>
</li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/conventions/objects_and_layouts.html#other-data-organizational-structures">Other Data Organizational Structures</a><ul>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/conventions/objects_and_layouts.html#bias-related-data">Bias-related data</a></li>
</ul>
</li>
</ul>
<h2 id="JEDI-Testing"><a href="#JEDI-Testing" class="headerlink" title="JEDI Testing"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/testing/index.html">JEDI Testing</a></h2><h3 id="JEDI-Testing-1"><a href="#JEDI-Testing-1" class="headerlink" title="JEDI Testing"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/testing/unit_testing.html">JEDI Testing</a></h3><ul>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/testing/unit_testing.html#running-ctest">Running ctest</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/testing/unit_testing.html#manual-execution">Manual Execution</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/testing/unit_testing.html#the-jedi-test-suite">The JEDI test suite</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/testing/unit_testing.html#tests-as-applications">Tests as Applications</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/testing/unit_testing.html#initialization-and-execution-of-unit-tests">Initialization and Execution of Unit Tests</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/testing/unit_testing.html#anatomy-of-a-unit-test">Anatomy of a Unit Test</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/testing/unit_testing.html#integration-and-system-application-testing">Integration and System (Application) Testing</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/testing/unit_testing.html#jedi-testing-framework">JEDI Testing Framework</a></li>
</ul>
<h3 id="Adding-a-New-Test"><a href="#Adding-a-New-Test" class="headerlink" title="Adding a New Test"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/testing/adding_a_test.html">Adding a New Test</a></h3><ul>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/testing/adding_a_test.html#step-1-create-a-file-for-your-test-application">Step 1: Create a File for your Test Application</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/testing/adding_a_test.html#step-2-define-a-test-fixture">Step 2: Define A Test Fixture</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/testing/adding_a_test.html#step-3-define-your-unit-tests">Step 3: Define Your Unit Tests</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/testing/adding_a_test.html#step-4-register-your-unit-tests-with-eckit">Step 4: Register your Unit Tests with eckit</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/testing/adding_a_test.html#step-6-create-an-executable">Step 6: Create an Executable</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/testing/adding_a_test.html#step-7-create-a-configuration-file">Step 7: Create a Configuration File</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/testing/adding_a_test.html#step-8-register-all-files-with-cmake-and-ctest">Step 8: Register all files with CMake and CTest</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/testing/adding_a_test.html#adding-an-application-test">Adding an Application Test</a></li>
</ul>
<h2 id="Best-Practices-for-Developers"><a href="#Best-Practices-for-Developers" class="headerlink" title="Best Practices for Developers"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/practices/index.html">Best Practices for Developers</a></h2><h3 id="Create-PLEATED-Issues-to-let-your-team-know-what-you-are-working-on"><a href="#Create-PLEATED-Issues-to-let-your-team-know-what-you-are-working-on" class="headerlink" title="Create PLEATED Issues to let your team know what you are working on"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/practices/issues.html">Create PLEATED Issues to let your team know what you are working on</a></h3><h3 id="Follow-the-Git-flow-Paradigm"><a href="#Follow-the-Git-flow-Paradigm" class="headerlink" title="Follow the Git flow Paradigm"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/practices/gitflow.html">Follow the Git flow Paradigm</a></h3><h3 id="TRIPLE-the-impact-of-your-GitHub-Pull-Requests"><a href="#TRIPLE-the-impact-of-your-GitHub-Pull-Requests" class="headerlink" title="TRIPLE the impact of your GitHub Pull Requests"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/practices/pullrequest.html">TRIPLE the impact of your GitHub Pull Requests</a></h3><h3 id="Document-your-code"><a href="#Document-your-code" class="headerlink" title="Document your code"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/practices/document.html">Document your code</a></h3><h3 id="Treat-ECMWF-Forks-as-Forks"><a href="#Treat-ECMWF-Forks-as-Forks" class="headerlink" title="Treat ECMWF Forks as Forks"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/practices/ecmwf_forks.html">Treat ECMWF Forks as Forks</a></h3><h3 id="OpenMP-Safety-in-JEDI-and-UFO"><a href="#OpenMP-Safety-in-JEDI-and-UFO" class="headerlink" title="OpenMP Safety in JEDI and UFO"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/practices/openmp.html">OpenMP Safety in JEDI and UFO</a></h3><h2 id="Developer-Tools"><a href="#Developer-Tools" class="headerlink" title="Developer Tools"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/developer_tools/index.html">Developer Tools</a></h2><h3 id="Homebrew-Mac-only"><a href="#Homebrew-Mac-only" class="headerlink" title="Homebrew (Mac only)"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/developer_tools/homebrew.html">Homebrew (Mac only)</a></h3><h3 id="Git-flow-Application"><a href="#Git-flow-Application" class="headerlink" title="Git flow (Application)"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/developer_tools/getting-started-with-gitflow.html">Git flow (Application)</a></h3><ul>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/developer_tools/getting-started-with-gitflow.html#installing-git-flow">Installing git flow</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/developer_tools/getting-started-with-gitflow.html#initializing-your-local-repository">Initializing your local repository</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/developer_tools/getting-started-with-gitflow.html#working-with-git-flow-branches">Working with git-flow branches</a></li>
</ul>
<h3 id="Git-LFS"><a href="#Git-LFS" class="headerlink" title="Git-LFS"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/developer_tools/gitlfs.html">Git-LFS</a></h3><ul>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/developer_tools/gitlfs.html#installing-git-lfs">Installing git-lfs</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/developer_tools/gitlfs.html#using-git-lfs">Using git-lfs</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/developer_tools/gitlfs.html#adding-large-files-to-a-jedi-repository">Adding large files to a JEDI repository</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/developer_tools/gitlfs.html#activating-git-lfs-for-a-jedi-repository">Activating Git-LFS for a JEDI repository</a></li>
</ul>
<h3 id="Sphinx"><a href="#Sphinx" class="headerlink" title="Sphinx"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/developer_tools/getting-started-with-sphinx.html">Sphinx</a></h3><ul>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/developer_tools/getting-started-with-sphinx.html#installing-sphinx">Installing Sphinx</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/developer_tools/getting-started-with-sphinx.html#initial-configuration-for-using-sphinx">Initial Configuration for Using Sphinx</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/developer_tools/getting-started-with-sphinx.html#writing-your-document">Writing Your Document</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/developer_tools/getting-started-with-sphinx.html#more-help-with-getting-started">More Help with Getting Started</a></li>
</ul>
<h3 id="Doxygen"><a href="#Doxygen" class="headerlink" title="Doxygen"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/developer_tools/doxygen.html">Doxygen</a></h3><ul>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/developer_tools/doxygen.html#installing-doxygen">Installing Doxygen</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/developer_tools/doxygen.html#documenting-c-source-code">Documenting C++ source code</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/developer_tools/doxygen.html#documenting-fortran-source-code">Documenting Fortran source code</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/developer_tools/doxygen.html#running-doxygen-and-viewing-the-results">Running Doxygen and Viewing the Results</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/developer_tools/doxygen.html#doxywizard-and-customizing-the-doxygen-build">Doxywizard and Customizing the Doxygen Build</a></li>
</ul>
<h3 id="CMake-CTest-and-ecbuild"><a href="#CMake-CTest-and-ecbuild" class="headerlink" title="CMake, CTest, and ecbuild"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/developer_tools/cmake.html">CMake, CTest, and ecbuild</a></h3><ul>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/developer_tools/cmake.html#cmake-and-ctest">CMake and CTest</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/developer_tools/cmake.html#id1">ecbuild</a></li>
</ul>
<h3 id="Debugging-Tools"><a href="#Debugging-Tools" class="headerlink" title="Debugging Tools"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/developer_tools/debuggers.html">Debugging Tools</a></h3><ul>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/developer_tools/debuggers.html#building-with-debug-flags">Building with Debug flags</a></li>
</ul>
<h3 id="gcov"><a href="#gcov" class="headerlink" title="gcov"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/developer_tools/gcov.html">gcov</a></h3><h3 id="GPTL"><a href="#GPTL" class="headerlink" title="GPTL"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/developer_tools/gptl.html">GPTL</a></h3><h3 id="OOPS-ENVIRONMENT-VARIABLES"><a href="#OOPS-ENVIRONMENT-VARIABLES" class="headerlink" title="OOPS ENVIRONMENT VARIABLES"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/developer_tools/oops-env-variables.html">OOPS ENVIRONMENT VARIABLES</a></h3><ul>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/developer_tools/oops-env-variables.html#more-prints-for-pe-0">More prints for PE 0</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/developer_tools/oops-env-variables.html#more-info-prints-for-all-pes">More info prints for all PEs</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/developer_tools/oops-env-variables.html#more-prints-for-all-pes">More prints for all PEs</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/developer_tools/oops-env-variables.html#redirect-output-to-log-files-for-each-pe">Redirect output to log files for each PE</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/inside/developer_tools/oops-env-variables.html#turn-on-parameter-validation">Turn on Parameter validation</a></li>
</ul>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>JEDI Working Principles</title>
    <url>/2022/05/01/Tool/JEDI%20Working%20Principles/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>来源：<a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/working-practices/index.html">https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/working-practices/index.html</a></p>
<h2 id="Branching-and-merging-code"><a href="#Branching-and-merging-code" class="headerlink" title="Branching and merging code"></a>Branching and merging code</h2><p>按照 git flow 的结构，仓库设有两个特殊分支：  </p>
<ul>
<li><strong>main 分支</strong>：存放已发布的正式版本代码；  </li>
<li><strong>develop 分支</strong>：存放即将进入下一版本的新功能与改进。</li>
</ul>
<p>除此之外，模型还定义了三种临时分支：  </p>
<ol>
<li><strong>feature 分支</strong>（功能分支）：用于开发新功能；  </li>
<li><strong>release 分支</strong>（发布分支）：用于准备新版本发布；  </li>
<li><strong>hotfix 分支</strong>（热修分支）：用于修复已发布版本中的紧急缺陷。</li>
</ol>
<p>这与过去“主干开发”模式不同——过去 main、develop、发布准备和缺陷修复都集中在同一条主干（trunk）上完成。</p>
<p>一次典型的功能开发流程如下：  </p>
<ol>
<li>从 develop 分支拉出 feature 分支（例如命名为 <code>feature/great_new_stuff</code>），在此进行开发。  </li>
<li>功能开发并自测完成后，把该分支合并回 develop。</li>
</ol>
<p>由于仓库内并行开发，期间可能有其他功能已先并入 develop。原则上，<strong>责任在于当前开发者</strong>：  </p>
<ul>
<li>先把自己的 feature 分支与最新 develop 合并；  </li>
<li>解决所有冲突后再向 develop 提 PR。</li>
</ul>
<p>若冲突简单，开发者可自行处理；若冲突复杂，则需与引入冲突的开发者协作解决，或由代码守门人（gatekeeper）最终裁定。</p>
<p>为尽早发现冲突、降低合并难度，应养成<strong>双向高频合并</strong>的习惯：  </p>
<ul>
<li>经常把 develop 合入 feature，保持功能分支“最新”；  </li>
<li>功能完成一段落就及时合回 develop。</li>
</ul>
<p>比起“闭关”开发数周后再一次性解决巨型冲突，<strong>逐个小冲突逐个解决</strong>效率更高，也促使开发者提前沟通后续改动计划。</p>
<p>当需要正式发布时，流程转入专门的 <strong>release 分支</strong>：  </p>
<ol>
<li>在 release 分支完成发布前的最终测试、文档更新与版本号调整；  </li>
<li>发布就绪后，把 release 分支同时合并到 main 与 develop，并在 main 上打标签（如 <code>2.0</code> 表示大版本，<code>2.1</code> 表示小版本）。  </li>
<li>此时 main 指向新的官方发布版，后续日常开发继续基于 develop 进行。</li>
</ol>
<p>即便测试再充分，已发布版本仍可能（且总会）出现需紧急修复的缺陷。此时：  </p>
<ol>
<li>从 main 的对应标签拉出 <strong>hotfix 分支</strong>；  </li>
<li>在 hotfix 分支上实现并验证修复；  </li>
<li>修复完成后，同时合并回 main 与 develop；  </li>
<li>在 main 上升级修订号并打新标签（例如从 <code>2.1.0</code> → <code>2.1.1</code>）。</li>
</ol>
<p><strong>注意</strong>：为保证可重现性，<strong>已有标签绝不允许移动</strong>。</p>
<p>更多 git-flow 细节与入门操作，请参考官方指南。</p>
<h2 id="Forking-and-cloning-repositories"><a href="#Forking-and-cloning-repositories" class="headerlink" title="Forking and cloning repositories"></a>Forking and cloning repositories</h2><p>GitHub 及同类工具支持两种获取仓库的方式：<strong>克隆（clone）</strong>与<strong>复刻（fork）</strong>。  </p>
<ul>
<li><strong>克隆</strong>：适用于对官方仓库拥有推送权限的开发者。此时需严格遵循 git-flow 工作流。  </li>
<li><strong>复刻（fork）</strong>：适用于无推送权限的开发者。他们可自由选择工作流，但仍推荐沿用 git-flow。</li>
</ul>
<p>在“协同统一资料同化与预报系统”这类多机构协作项目中，<strong>最佳实践是统一采用 fork 模式</strong>：</p>
<ol>
<li>所有合作方先共同认定一个<strong>中央官方仓库</strong>。  </li>
<li>各合作方在此中央仓库的基础上创建自己的 <strong>organization fork</strong>，并开启<strong>自动同步</strong>（auto-sync），确保随时与官方保持最新。  </li>
<li>在各合作方内部，每位开发者再对“本机构的 fork”做一次个人 fork，作为自己日常工作的“中央”远程库。  <ul>
<li>若机构庞大，还可按<strong>团队&#x2F;小组&#x2F;部门</strong>再嵌套一层 fork，实现多级管理。</li>
</ul>
</li>
</ol>
<p>日常开发流程：  </p>
<ul>
<li>开发者从自己的个人 fork 克隆到本地进行编码，可<strong>随时、频繁地向自己的 fork 推送</strong>。  </li>
<li>功能完成后，通过 <strong>Pull Request（PR）</strong> 将贡献提交至上一层仓库（最终汇聚到中央官方仓库）。  </li>
<li>开发者之间也可<strong>互相拉取对方 fork 中的分支</strong>，便于多人协作开发同一功能；若需更大范围协同，可由有权限者将分支推到中央仓库，供多人共同操作。</li>
</ul>
<p>对于<strong>业务（operational）用户</strong>：  </p>
<ul>
<li>同样为自己所需的仓库创建个人 fork。  </li>
<li>编译前，在本地磁盘克隆该 fork；  <ul>
<li>若采用<strong>手动同步</strong>，则只有用户主动拉取时才会更新；  </li>
<li>若开启<strong>自动同步</strong>，仍可通过<strong>打标签</strong>或<strong>指定某 commit</strong> 锁定版本，防止意外升级。</li>
</ul>
</li>
<li>业务克隆可置于防火墙内、受备份策略保护的磁盘，满足运行安全规范。  </li>
<li>GitHub 提供云端服务，也可在机构内部部署 <strong>GitHub Enterprise</strong>，于是整个 fork 链条都能留在受控网络中。</li>
</ul>
<h2 id="Reviewing-Code"><a href="#Reviewing-Code" class="headerlink" title="Reviewing Code"></a>Reviewing Code</h2><p>审查流程的作用是管控各分支（尤其是仓库的 develop 与 main 分支）的内容，确保仓库中的所有代码都能正常运行且保持高质量。凡是具有科学性质的讨论与决策，应在进入拉取请求（PR）与代码审查之前，先在 ZenHub 层面完成。</p>
<h3 id="What-is-a-Code-Review"><a href="#What-is-a-Code-Review" class="headerlink" title="What is a Code Review?"></a>What is a Code Review?</h3><p>代码审查是指对软件源代码进行系统性检查，旨在发现潜在缺陷、验证逻辑正确性，并提升代码库的整体健康度。代码审查在提交拉取请求（PR）时进行。</p>
<h3 id="Creating-a-Good-Pull-Request"><a href="#Creating-a-Good-Pull-Request" class="headerlink" title="Creating a Good Pull Request"></a>Creating a Good Pull Request</h3><p>拉取请求（PR）是一份关于“做了什么更改以及为何做此更改”的公开记录，它会成为仓库版本控制历史的永久组成部分。</p>
<p>对开发者和审查者而言，通常最好频繁地以小幅增量进行代码审查与合并，而非一次性合并巨量更改。这样可以让其他可能受影响的开发者更早接触到新代码，并简化合并流程；实现这一点的方法之一就是先创建一个草稿 PR。</p>
<p>当 PR 准备就绪、可以提交审查时，JEDI 开发者会按照规定流程创建并提交 PR，随后进入代码审查阶段。</p>
<h3 id="The-Standard-of-Code-Review"><a href="#The-Standard-of-Code-Review" class="headerlink" title="The Standard of Code Review"></a>The Standard of Code Review</h3><p>评审流程是开发工作的有机组成部分，从一开始就应纳入考虑。代码评审的首要目的，是确保代码库的整体健康状况与质量随时间不断提升，即在代码清晰度、功能性、效率、可移植性和可扩展性等方面持续进步。这需要权衡：</p>
<ul>
<li>开发者需要推进工作；及时的评审有助于他们快速前进。  </li>
<li>评审者必须确保 PR 的质量能让整体代码库变得更好，并对所评审的代码承担长期责任，以保证一致性与可维护性。</li>
</ul>
<p>代码评审的<strong>预期标准</strong>是：只要 PR <strong>确实</strong>提升了整体代码健康度，即使不完美，也应倾向于批准。没有“完美”的代码，只有“更好”的代码。评审者需在“推动进展”与“建议改进”的重要性之间取得平衡，追求持续改进。只要 PR 在功能、可维护性、可读性和可理解性方面带来改善，就适合合并到代码库中。</p>
<h3 id="Benefits-of-Code-Reviews"><a href="#Benefits-of-Code-Reviews" class="headerlink" title="Benefits of Code Reviews"></a>Benefits of Code Reviews</h3><p><strong>共享知识 &#x2F; 提升知识传递</strong>： 当更多人既了解“大局”也掌握细节时，团队在软件开发上的协作会更加顺畅。</p>
<p><strong>改进开发流程</strong>：  评审者通过代码审查接触到产品的复杂度、已知痛点与隐患区域，整个团队因此拥有多位“知情贡献者”，开发者与团队的速度自然加快。</p>
<p><strong>全员指导</strong>：  代码审查促成围绕代码的持续对话，常能把隐性知识“挖”出来，并让新观点与老经验碰撞、融合。</p>
<p><strong>持续进步</strong>：  审查过程不断让开发者接触新思路、新技术，代码质量随之水涨船高。</p>
<p><strong>融入现有流程</strong>：  代码审查必须与团队既定工作流无缝衔接。例如采用“任务分支”模式时，应在<strong>代码写完、本地测试套件手动跑通之后、合并回上游之前</strong>发起审查。这样既能把评审者的时间花在机器查不出的问题上，也能防止低质量代码污染主干。</p>
<h3 id="What-to-look-for-in-a-Code-Review"><a href="#What-to-look-for-in-a-Code-Review" class="headerlink" title="What to look for in a Code Review"></a>What to look for in a Code Review</h3><p>设计（Design）  </p>
<ul>
<li>代码交互是否合理？  </li>
<li>是否存在逻辑错误？  </li>
<li>需求是否被完整实现？一句话：该 issue 的“完成定义”（Definition of Done）达成了吗？</li>
</ul>
<p>功能（Functionality）  </p>
<ul>
<li>PR 是否真正实现了预期目标？  </li>
<li>这些改动对终端用户和开发者都有利吗？</li>
</ul>
<p>复杂度（Complexity）  </p>
<ul>
<li>代码是否足够清晰，让评审者一次就能看懂？</li>
</ul>
<p>测试（Testing）  </p>
<ul>
<li>单元 &#x2F; 集成 &#x2F; 端到端测试是否针对本次改动合理覆盖？  </li>
<li>代码一旦出错，测试会失败吗？  </li>
<li>底层实现再变，测试也不会误报（false positive）吗？  </li>
<li>既有测试是否继续全部通过？</li>
</ul>
<p>注释（Comments）  </p>
<ul>
<li>注释是否既清晰又“有必要”？  </li>
<li>注释只解释“为什么”，而不是“在做什么”。</li>
</ul>
<p>风格与一致性（Style &amp; Consistency）  </p>
<ul>
<li>若项目有 Style Guide，本次改动是否完全遵循？</li>
</ul>
<p>文档（Documentation）  </p>
<ul>
<li>只要 PR 改变了行为或使用方式，对应文档必须同步更新，保持信息一致。</li>
</ul>
<h3 id="How-Fast-Should-Code-Reviews-Be"><a href="#How-Fast-Should-Code-Reviews-Be" class="headerlink" title="How Fast Should Code Reviews Be?"></a>How Fast Should Code Reviews Be?</h3><p>代码审查“耗时”——却能“很快”！  </p>
<p>这一看似矛盾的说法，其实指向的是：<strong>优化产品交付速度，而非个人写码速度</strong>。团队整体开发速率才是核心，<strong>及时的审查正能加速这一过程</strong>。一旦审查不及时，就会：</p>
<ul>
<li><strong>拖慢团队速率</strong>——每份 PR 都在排队，新功能与缺陷修复被迫延期；  </li>
<li><strong>引发抵触情绪</strong>——开发者最反感的就是“石沉大海”的 PR；只要 reviewer 响应够快，90% 的抱怨会消失；  </li>
<li><strong>损害代码健康</strong>——慢审查会打击人做清理、重构、持续改进的积极性。</li>
</ul>
<p>要做到“既快又稳”，只需把握以下平衡点：</p>
<ol>
<li><p>速度 vs. 打断  </p>
<ul>
<li>若你<strong>不在深度专注区</strong>，看到 PR 就尽快审；  </li>
<li>若你<strong>正沉浸式写码</strong>，别硬切上下文，先把手头任务完成。</li>
</ul>
</li>
<li><p>先给“响应”，再给“完整”  </p>
<ul>
<li>我们看重的是<strong>响应时间</strong>，而非从提出到合并的总时长；  </li>
<li>实在忙不过来，先回一句“我周三前处理，可先找 @XX 看”或给些<strong>初步大方向</strong>，也能让作者继续推进。</li>
</ul>
</li>
<li><p>分担负荷  </p>
<ul>
<li>很多团队要求<strong>至少两票</strong>才能合并，听起来重？其实不；  </li>
<li>作者发起 PR 时<strong>把网撒大</strong>，@ 整个小组；任意两人即可 Review，<strong>去中心化</strong>自然消除单点瓶颈，也让代码审查覆盖度最大化。</li>
</ul>
</li>
</ol>
<h3 id="Comments-in-a-code-review"><a href="#Comments-in-a-code-review" class="headerlink" title="Comments in a code review"></a>Comments in a code review</h3><p>代码评审中的评论旨在帮助 PR 作者进一步打磨代码，从而提升整个项目的代码健康度。高质量的评论应包含以下要素：</p>
<ol>
<li><strong>礼貌尊重</strong>：在指出问题的同时保持客气与尊重，语气清晰且具有建设性，让作者感受到帮助而非指责。</li>
<li><strong>阐述理由</strong>：不仅指出“哪里有问题”，更要说明“为什么”——这条建议如何提升代码可维护性、可读性或性能，让作者理解背后的意图。</li>
<li><strong>适度引导</strong>：平衡“指出问题”与“直接给答案”的度：  <ul>
<li>把修复的具体实现留给作者，避免事无巨细地发号施令；  </li>
<li>同时肯定代码中的亮点，并说明“好在哪里”，促使好的实践被持续复用。</li>
</ul>
</li>
</ol>
<h3 id="Give-and-Take-in-a-Code-Review"><a href="#Give-and-Take-in-a-Code-Review" class="headerlink" title="Give and Take in a Code Review"></a>Give and Take in a Code Review</h3><p>代码评审出现“修改建议 → 作者回应 → 再修改”的往复，看似“顶撞”，实则是健康的开发环节。以下几点可帮助把“拉锯”转化为“共赢”。</p>
<ol>
<li><p>谁对谁错？  </p>
<p>开发者与评审者都应先问：这条建议合理吗？  </p>
<ul>
<li>任何意见都要给出<strong>技术理由</strong>；  </li>
<li>只要能让代码<strong>更健康</strong>，多一次改动就值得；  </li>
<li>代码健康的提升从来都是<strong>小步快跑</strong>。</li>
</ul>
</li>
<li><p>“以后再清理”是陷阱  </p>
<p>想把功能赶紧落地可以理解，但<strong>立即相关的收尾工作不能拖</strong>。  </p>
<p>时间越久，补救概率越低，“以后清理”&#x3D; 代码库逐步腐烂。</p>
</li>
<li><p>冲突解决原则  </p>
<p>记住评审的底线：<strong>只要 PR 让系统整体更健康，就值得通过</strong>——没有完美代码，只有更好代码。  </p>
<ul>
<li>技术事实 &gt; 个人偏好；  </li>
<li>有 Style Guide 就以它为<strong>绝对权威</strong>；  </li>
<li>软件设计问题绝非“风格”或“喜好”，而是<strong>基本设计原则</strong>。</li>
</ul>
</li>
<li><p>与敏捷共生  </p>
<p>好的代码评审天然贴合敏捷精神：  </p>
<ul>
<li><p>快速、持续交付可用软件 → 客户满意；  </p>
</li>
<li><p>客户与开发者紧密协作；  </p>
</li>
<li><p>追求卓越与良好设计；  </p>
</li>
<li><p>随时适应变化。  </p>
<p>结果：团队速率↑、容量↑、规划与估算能力↑，最终交付更多功能。</p>
</li>
</ul>
</li>
<li><p>多级 fork 模型下的“层层评审”  </p>
<ul>
<li>每级 fork → 每级 PR → 每级评审，<strong>一个都不能少</strong>；  </li>
<li>开发者向合作方仓库提 PR → 对方评审；  </li>
<li>合作方再向中央仓库提 PR → 再次评审；  </li>
<li>发布前，release 分支上的任何改动仍需评审；  </li>
<li>全程讨论与文档对所有层级可见，<strong>知识不丢失</strong>。</li>
</ul>
</li>
<li><p>复杂系统需要“分域评审”  </p>
<p>现代资料同化与预报系统极其复杂，耦合系统时代更甚。<strong>没人能单刷全图</strong>。  </p>
<p>把评审任务按** expertise 分散**给不同领域专家：  </p>
<ul>
<li><p>workload 均摊，  </p>
</li>
<li><p>评审效率提升，  </p>
</li>
<li><p>系统质量才有保障。</p>
</li>
</ul>
</li>
</ol>
<h2 id="Testing"><a href="#Testing" class="headerlink" title="Testing"></a>Testing</h2><p>测试是开发流程的<strong>强制环节</strong>，任何分支在未通过测试前<strong>不得合并</strong>。</p>
<p>为帮助开发者与评审人，JEDI 生态内置了一整套测试设施，核心目标只有两个：  </p>
<ol>
<li>方便<strong>编写</strong>测试；  </li>
<li>方便<strong>运行</strong>测试。</li>
</ol>
<p>现有测试覆盖率再高，<strong>“加测试”仍是开发任务的一部分</strong>。  </p>
<ul>
<li>开发者最了解自己的代码，<strong>每个重大功能必须附带对应测试</strong>；  </li>
<li>测试代码跟功能代码一样要走评审流程；  </li>
<li>任何绕过或放宽测试标准的行为，必须<strong>充分论证并记录在案</strong>（详见“Adding a New Test”章节）。</li>
</ul>
<p>敏捷时代强调“小步快跑”，<strong>高频自动化测试</strong>成为刚需。  </p>
<p>JEDI 的自动化框架与 GitHub 深度集成，通过 <strong>webhook</strong> 触发事件驱动测试：  </p>
<ul>
<li>每次对 <code>develop</code> 分支新建 PR → 自动构建 + 全量测试；  </li>
<li>同一 PR 后续每次 push → 再次触发测试；  </li>
<li>测试结果实时回写在 PR 页面，<strong>绿灯全亮才允许合并</strong>；  </li>
<li>早期就能捕获兼容性&#x2F;回归错误，显著缩短评审周期，加速新功能落地。</li>
</ul>
<p><strong>多环境并行跑</strong>：  </p>
<p>使用 <strong>Docker 容器</strong>预装三套编译器-MP I组合：  </p>
<ol>
<li>GNU + OpenMPI  </li>
<li>CLANG + MPICH  </li>
<li>Intel + impi  （GNU 与 CLANG 镜像已公开托管在 JCSDA DockerHub）</li>
</ol>
<p><strong>两套构建模式</strong>：  </p>
<p>A. <strong>bundle 构建</strong>（推荐，普通用户直接用）  </p>
<p>B. <strong>jedi-build-package</strong>（CI 专用，可把编译缓存写到 S3，二次构建秒级完成，详见其 README）</p>
<p><strong>云资源</strong>：  </p>
<p>当前核心仓库已接入 <strong>Travis-CI + AWS CodeBuild</strong>，每次 commit 自动并行跑测试：  </p>
<ol>
<li>云端拉取最新代码 →  </li>
<li>启动对应 Docker 容器 →  </li>
<li>容器内编译 + 运行测试 →  </li>
<li>结果回传 PR 页面</li>
</ol>
<p>框架脚本几乎全放在 <code>CI/</code> 目录，仅 <code>.travis.yml</code> 置于根目录，方便统一维护。</p>
<h3 id="GitHub-Automated-Testing"><a href="#GitHub-Automated-Testing" class="headerlink" title="GitHub Automated Testing"></a>GitHub Automated Testing</h3><p>JEDI Bundle 的大部分仓库现采用 <strong>AWS Batch</strong> 作为自动化测试后端：  </p>
<ul>
<li>每次触发时，系统<strong>随机</strong>为你拉起一套全新环境（Clang | GNU | Intel 容器三选一）。  </li>
<li>想<strong>指定环境</strong>？在 PR 描述里加一行<strong>注解</strong>即可；完整注解列表与 CI 配置说明，都在 PR 页面 <strong>check run 的 “details” 链接</strong>里，点一下就能看到。</li>
</ul>
<p><strong>草稿 PR 默认不跑 CI</strong>  </p>
<p>如果希望草稿阶段也测，请在 PR 描述里加一行：  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">run-ci-on-draft=true</span><br></pre></td></tr></table></figure>

<p><strong>手动重跑测试</strong><br>只需推送一个<strong>空提交</strong>即可重新触发：  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git commit --allow-empty -m <span class="string">&#x27;trigger CI&#x27;</span> &amp;&amp; git push</span><br></pre></td></tr></table></figure>

<h3 id="Testing-Development-across-Multiple-Repositories"><a href="#Testing-Development-across-Multiple-Repositories" class="headerlink" title="Testing Development across Multiple Repositories"></a>Testing Development across Multiple Repositories</h3><p>当一条新特性需要<strong>跨多个仓库联动</strong>时，可在主 PR 的描述里用 <code>build-group=</code> 注解把相关 PR“串”起来，让 JEDI CI 一次性拉取所有配套分支进行联编联测。</p>
<p>模板示例（直接复制到 PR 描述即可）：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">This is my generic pull request description. My change requires coordinated changes in oops and saber. My tests won&#x27;t pass unless your bundle contains the matching changes.</span><br><span class="line"></span><br><span class="line">build-group=https://github.com/JCSDA-internal/oops/pull/123</span><br><span class="line">build-group=https://github.com/JCSDA-internal/saber/pull/456</span><br></pre></td></tr></table></figure>

<p>要点  </p>
<ol>
<li>每行一个 <code>build-group=</code>，URL 指向 <strong>JCSDA-internal</strong> 仓库的对应 PR。  </li>
<li>注解必须放在 PR 描述里，标题或评论无效。  </li>
<li>CI 会在<strong>同一批容器</strong>里先把这些 PR 全部合并，再跑测试，确保跨库兼容性。</li>
</ol>
<h3 id="Tips-on-How-to-Use-Automated-Testing-Tools"><a href="#Tips-on-How-to-Use-Automated-Testing-Tools" class="headerlink" title="Tips on How to Use Automated Testing Tools"></a>Tips on How to Use Automated Testing Tools</h3><p>自动化测试 <strong>不是调试工具</strong>，请务必先在本地<strong>完整编译并通过测试</strong>，再提交 PR。</p>
<p>为避免占用 CI 资源，请<strong>减少推送次数</strong>：</p>
<ul>
<li>每 push 一次，AWS Batch 就会重新全量编译 + 测试；  </li>
<li><strong>逐个 commit 猛推</strong>会堵塞队列，拖慢所有人。</li>
</ul>
<p><strong>省 CI 妙招</strong>  </p>
<ol>
<li><p>把 PR 切成 <strong>Draft</strong> 状态，改完一堆 commit 再转 Ready；  </p>
</li>
<li><p>或者本地 <code>git rebase</code> 整理好多个 commit，<strong>一次性 push</strong>。</p>
</li>
</ol>
<h2 id="Creating-documentation"><a href="#Creating-documentation" class="headerlink" title="Creating documentation"></a>Creating documentation</h2><p>文档写作工具链</p>
<ol>
<li><p>指南与手册 → Sphinx（Python 静态文档生成器）  </p>
<p>快速入门点这里：Getting Started with Sphinx</p>
</li>
<li><p>代码级文档 → Doxygen  </p>
</li>
<li><p>自动生成继承图、调用树、man 页等。</p>
</li>
</ol>
<p>文档仓库<br>所有文档统一放到 <strong>JCSDA&#x2F;jedi-docs</strong> 仓库，并按 Git Flow 管理。</p>
<p>完整步骤（一次搞定）</p>
<ol>
<li>更新本地  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout develop</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure></li>
<li>新建功能分支  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout -b feature/my-branch</span><br><span class="line">git branch <span class="comment"># 确认当前分支</span></span><br></pre></td></tr></table></figure></li>
<li>编辑&#x2F;新增文档  <ul>
<li>改已有内容 → 直接编辑对应的 <code>.rst</code> 文件；  </li>
<li>新增章节 → 新建 <code>.rst</code> 文件，并在同一级 <code>index.rst</code> 里把新文件注册进去（<code>toctree</code> 里加一行即可）。</li>
</ul>
</li>
<li>提交推送  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;add: xxx 用户指南&quot;</span></span><br><span class="line">git push origin feature/my-branch</span><br></pre></td></tr></table></figure></li>
<li>创建 PR → 评审合并到 <code>develop</code>，后续按 Git Flow 发布。</li>
</ol>
<p>小提示  </p>
<ul>
<li>若第一次用 git-flow，请先执行 <code>git flow init -d</code> 初始化。</li>
</ul>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>JEDI overview</title>
    <url>/2022/05/01/Tool/JEDI%20overview/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>来源：<a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/overview/index.html">https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/overview/index.html</a></p>
<h2 id="What-is-JEDI"><a href="#What-is-JEDI" class="headerlink" title="What is JEDI"></a>What is JEDI</h2><p>准确的天气预报离不开两大“原料”：一是对当前和过去大气、海洋状态的全面观测；二是能把这些观测“吃进”去、并算出未来几分钟到几天变化的可靠计算机模式。</p>
<p>JEDI（Joint Effort for Data assimilation Integration）正是把这两样原料放到“数据同化”这口大锅里翻炒的系统。它的长远目标，是给研究和业务提供“一套通用、不挑模式、不挑分量”的数据同化框架，让社区少做重复活儿，把“研究→业务”的跑道缩到最短。</p>
<p>JEDI 是社区共建的开源项目，代码托管公开，欢迎全球科研力量“拎包入住”。<br>项目组织里，开发者、评审员、治理机构各负其责，互动流程有章可循，保证大家并行不悖、持续高效地往前滚代码。</p>
<h3 id="Who-Uses-JEDI"><a href="#Who-Uses-JEDI" class="headerlink" title="Who Uses JEDI?"></a>Who Uses JEDI?</h3><p>一个可靠高效的数据同化系统，是任何“地球系统预测”框架的标配；因此，JEDI 的潜在用户远不止业务中心——</p>
<ul>
<li>政府机构</li>
<li>大学</li>
<li>私营公司</li>
</ul>
<p>凡是做天气预报的，都是它的“客户群”，其中就包括 JCSDA 的“老搭档”：美国国家海洋和大气管理局（NOAA）、美国国家航空航天局（NASA）、美国海军和美国空军。</p>
<p>不过，JEDI 可不只是预报员的“专利”。现代科学的一条铁律是：“观测说了算”。任何理论、任何新模型，都得靠“预测 vs 观测”的 PK 来验真。于是，数据同化也成了科研“试金石”——</p>
<ul>
<li>新的物理、化学、生物模型</li>
<li>新的同化算法</li>
<li>新的观测算子</li>
</ul>
<p>都要在这里过一遍秤。JEDI 因此成了全球科研人员的大试验场，不管你是高校、政府还是企业，都能进来“搭台唱戏”。</p>
<p>更妙的是，JEDI 天然自带“双向八车道”：</p>
<ul>
<li><strong>研究→业务（R2O）</strong>：学者在同一份代码里验证新模块，业务中心直接拿来用，无需“二次搬家”</li>
<li><strong>业务→研究（O2R）</strong>：业务里跑出更准的算法，学术界马上拿回去拆解成功秘诀</li>
</ul>
<p><strong>硬件方面</strong>，JEDI 同样“上不封顶、下不挑嘴”：</p>
<ul>
<li>世界顶尖超算 + 最复杂的大气-海洋模式：能跑</li>
<li>笔记本：也能跑（自带理想化模型、低分辨率配置，教学&#x2F;玩票都够用）</li>
</ul>
<p><strong>人才培养</strong>方面：<br>天气与海洋研究的未来，握在今天研究生手里；而数据同化这门“微妙手艺”，必须边玩边学才能精通。JEDI 提供了交互式环境，让学生和老师在动手实践中：</p>
<ul>
<li>拆解同化原理</li>
<li>体验地球系统预测的完整流程</li>
</ul>
<p>把课堂直接搬进“预报一线”。</p>
<h3 id="Why-Should-I-Use-JEDI"><a href="#Why-Should-I-Use-JEDI" class="headerlink" title="Why Should I Use JEDI?"></a>Why Should I Use JEDI?</h3><p>现代软件开发是“团战”：  </p>
<ul>
<li>分散在不同城市、时区的开发者先各自写功能，再合流集成  </li>
<li>成员可能素未谋面，却必须把“撞车”和“返工”降到最低</li>
</ul>
<p>过去二十年，软件行业靠两大法宝搞定这一难题：  </p>
<ol>
<li><p><strong>敏捷方法（如 Scrum）</strong>  </p>
<ul>
<li>早交付、常交付  </li>
<li>团队自组织  </li>
<li>随时响应用户需求</li>
</ul>
</li>
<li><p><strong>云平台（如 GitHub）</strong>  </p>
<ul>
<li>让代码跨洲托管、秒级同步  </li>
<li>合并、回滚、评论一条龙</li>
</ul>
</li>
</ol>
<p>JEDI 直接把这套“工业级标配”搬进天气预报圈：  </p>
<ul>
<li><p><strong>开发环境 &#x3D; GitHub 全家桶</strong>  </p>
<ul>
<li>git：版本控制  </li>
<li>GitHub：在线协作与分发  </li>
<li>ZenHub：敏捷看板 + 需求&#x2F;缺陷跟踪  </li>
<li>三者连成闭环，新人五分钟即可上手，权限依旧可层层把关</li>
</ul>
</li>
<li><p><strong>代码设计 &#x3D; 面向对象 + 泛型编程</strong>  </p>
<ul>
<li>用抽象类、模板搭骨架  </li>
<li>新模式、新算法、新观测往里插，无需大动干戈</li>
</ul>
</li>
</ul>
<p>结果：  </p>
<ul>
<li>一套框架同时服务研究侧与业务侧  </li>
<li>全球开发者并行开干，却共用同一条“主线”  </li>
<li>系统永不过时，持续为大气与海洋科学界输出统一、创新、可扩展的预报能力</li>
</ul>
<h2 id="JEDI-High-Level-Requirements"><a href="#JEDI-High-Level-Requirements" class="headerlink" title="JEDI High Level Requirements"></a>JEDI High Level Requirements</h2><p>地球观测系统一直在升级，新卫星、新仪器接连上天，要想“吃干榨尽”这些数据，就得让软件也跟着“常换常新”。数据量年年翻倍，同化算法必须越跑越快、越省越巧；而新一套观测系统动辄几亿甚至几十亿美元，谁都不想等五年十年才用上。JEDI 的其中一个目标，就是给研究人员搭一条“快车道”，新点子一出，就能迅速从实验室滑进业务值班室。</p>
<p>天气预报和环境预报也不再只盯着大气，还要把海洋、陆面、海冰、大气化学、生物圈统统拉进来，做成真正的“地球系统模式”。JEDI 必须能跟这些“新成员”打交道，让模式从“单打独斗”变成“全队配合”。</p>
<p>观测和模式在变，同化算法自己也在“卷”。JEDI 会把当今业务里最好用的算法先搬进来，再留好“插座”，谁有新想法——机器学习、多尺度混合、非高斯处理——都能随时插上去试。注意，“统一框架”可不是“一刀切”；各家机构照样可以在里面做自己的“私房菜”，互不耽误。</p>
<p>后台的超算越来越“豪华”，CPU、GPU、众核、异构一起上，可要是跑不满，电费照样烧。社区里大家都在琢磨怎么让模式和同化系统“能伸能缩”，把几十万核用到极致。JEDI 从第一天就把“可扩展性”写进蓝图，换了新机器也能快速“拎包入住”。</p>
<p>研究要“灵活”，业务要“皮实”，JEDI 得两头顾：一边让学生、老师能在笔记本上玩得起、学得会；一边让值班员能在巨型机上 7×24 小时稳、准、快地跑，还要符合编码规范、好维护、好交接。</p>
<h2 id="JEDI-General-Methodology"><a href="#JEDI-General-Methodology" class="headerlink" title="JEDI General Methodology"></a>JEDI General Methodology</h2><p>JEDI 要满足的需求五花八门，而且很多本身就够复杂，合在一起更是“难上加难”。现代软件工程对付这种庞然大物的核心办法是“分而治之”——把大问题拆成小块，让不同团队各管各的，互不干扰、互不踩脚。科学家也省心，只盯自己那一亩三分地，不用把整个系统都啃下来。面向对象等现代技术不仅把“分”做成自动强制执行，还保证全球分布的团队能在同一份代码上并行开工，就像在一个办公室一样。</p>
<p>为了把这场“跨国接力”跑顺，JEDI 把现代工具全套配齐：版本控制、需求&#x2F;缺陷跟踪、自动化回归测试，一条龙到位；信息怎么提交、怎么同步、怎么回溯，都有现成脚本和模板，跨机构开发、长期维护都能用得上。</p>
<p>工具和人就位后，第一件事就是“画插座”——给各模块定义通用、抽象的接口。这套接口长什么样，会充分借鉴 ECMWF 的 OOPS 等前辈经验。接口一旦定版，就能在上面搭“万能插头”式的高层应用，先不管底层是大气模式还是海洋模式，都能插进来用。</p>
<p>接口有了，老代码也不用“一刀切”重写。哪部分ready，就把哪部分先包上新接口；老程序改几行调用语句，就能继续跑，系统始终“不断电”。当然，会先挑一批“最急缺”的接口优先落地，让部分应用提前尝鲜，不用等全部完工。</p>
<p>最后一条底线：对业务中心来说，换上这套新框架不能“卡脖子”，也不能让跑分掉速——该快的还得快，该稳的还得稳。</p>
<h2 id="Governance-of-a-Community-System"><a href="#Governance-of-a-Community-System" class="headerlink" title="Governance of a Community System"></a>Governance of a Community System</h2><p>要不要把一段代码收进“社区大仓库”，首先看它对社区有没有用——“有用”是硬杠杠，科学和技术质量只是门槛。<br>在 JEDI 这种社区同化-预报系统里，谁拍板、怎么拍板，必须写得明明白白：项目内部负责人、JCSDA 管理层、社区监督委员会，各投什么票、负什么责，都在治理章程里写清楚。</p>
<p>评审环节只管“质量够不够”；万一最后没让进，不代表你的科学不优秀，只说明它暂时只有你自己用。这样的“私家定制”代码可以留在独立仓库里，构建系统会自动按需捞取，绝不拖累别人。要做到这点，全靠现代软件架构——老 Fortran 时代根本玩不转。</p>
<p>当年用 F77 写大系统，想把“私人补丁”摘出去，就得留一堆空壳子哑函数，全局变量还常常“掉线”。代码越攒越多，空壳子四处飞，很快就成“蜘蛛网”。最后大家索性“一把梭”全塞进主仓库，结果系统臃肿、编译巨慢、人人喊打。</p>
<p>如今有了模块化、泛型编程、关注点分离这些“新式武器”，想带就带、想甩就甩，既不会掉链子，也不会把公共仓库撑成“胖子”。私人代码、社区代码各回各家，构建系统一键搞定，干净利索。</p>
<h3 id="Structure-of-JEDI"><a href="#Structure-of-JEDI" class="headerlink" title="Structure of JEDI"></a>Structure of JEDI</h3><p>在老式代码里，继承树上的一个专用子类被删掉时，就像撕掉一页便利贴——撕完不留痕；而在另一极端，由一堆对象拼成的高层应用，也不会因为别的应用用了同样的对象就“踩到脚”。软件包有的只让底层“打补丁”（像浏览器或 Photoshop 的插件），有的只让高层“搭积木”（如系统库、MPI），也有的两头都开放——JEDI 就属于这种“两头通吃”的类型。</p>
<p>但这一切有个大前提：中间层的接口必须“稳如老狗”。  </p>
<ul>
<li>一旦基类接口改一行，所有子类都得跟着动；  </li>
<li>一旦高层应用依赖的对象接口变脸，所有相关应用都要返工。</li>
</ul>
<p>如果这种“拆东墙”的事年年有、月月有，系统立刻就会被人嫌弃。因此，社区统一同化-预报系统的治理框架第二件事就是：  </p>
<ol>
<li>让接口变动“少而精”，每次改都必须“师出有名”；  </li>
<li>改之前写清楚理由，改之后广而告之，谁受影响一目了然。</li>
</ol>
<p>第三件事是“谁有钥匙”。  </p>
<ul>
<li>代码每一层，尤其是发版前的“临门一脚”，必须明确谁能审、谁能拍板。  </li>
<li>通常做法是给每个核心模块设一个小型“守门员”池，并规定 PR（Pull Request）至少被几位守门员点赞才能合进去。  </li>
<li>人数既要够“挑刺”，又不能多到“拖堂”；守门员可信，就能临时拉人助阵或把接力棒递出去——小修小改不必兴师动众。</li>
</ul>
<h3 id="JEDI-Roles-and-Responsibilities-Our-Governance-Framework"><a href="#JEDI-Roles-and-Responsibilities-Our-Governance-Framework" class="headerlink" title="JEDI Roles and Responsibilities: Our Governance Framework"></a>JEDI Roles and Responsibilities: Our Governance Framework</h3><h4 id="Management-Oversight-Board-MOB"><a href="#Management-Oversight-Board-MOB" class="headerlink" title="Management Oversight Board (MOB)"></a>Management Oversight Board (MOB)</h4><p>JCSDA 的管理与监督委员会（MOB）由 JCSDA 各伙伴机构以及更广泛社区的代表组成。<br>它的“权力清单”包括：</p>
<ol>
<li>拍板 JCSDA 的大政方针、目标、优先级，推荐哪些观测系统将来可以上业务；</li>
<li>确保各赞助机构、高校、公司之间“不拆台、多补台”；</li>
<li>万一社区正常讨论“翻车”达不成共识，MOB 出面一锤定音，避免项目卡壳。</li>
</ol>
<p>日常层面，MOB 负责把握项目的“大方向、大愿景”——跟谁战略合作、立什么规矩、钱和人怎么管，都属于他们的望远镜范围。只要社区扯皮太久没结果，MOB 就升级成“最终裁判”，把高阶决策迅速落地。</p>
<h4 id="Executive-Team-ET"><a href="#Executive-Team-ET" class="headerlink" title="Executive Team (ET)"></a>Executive Team (ET)</h4><p>JCSDA 执行团队（ET）由几位副主任组成，与 JCSDA 主任一起办公。<br>他们的核心任务：  </p>
<ul>
<li>让 JEDI 项目“活得久、活得好”，技术上不掉链子，社区里不掉人气。  </li>
<li>给主任和 MOB 当“参谋”，一起划定项目的大方向、大合作、大政策。  </li>
<li>凭借对软件与服务的“老司机”级理解，给新上路的贡献者当“导航”，少走弯路。</li>
</ul>
<h4 id="Project-Leads"><a href="#Project-Leads" class="headerlink" title="Project Leads"></a>Project Leads</h4><p>JEDI 项目的“一线掌柜”是各位项目负责人（Project Leads），包括：</p>
<ul>
<li>总项目负责人（JEDI Project Leader）  </li>
<li>下设四条线的小组长：软件基础设施、模式-观测接口、数据同化、云基础设施</li>
</ul>
<p>他们得按《JCSDA 软件治理与监督文件 Rev 1》的“家规”办事，和 JCSDA 主任、副主任以及“投了真金白银”的伙伴机构保持同频。</p>
<p><strong>具体活儿清单：</strong>  </p>
<ol>
<li>把 JEDI 软件按时按点交到各方“甲方”手里；  </li>
<li>统筹“正规军”（核心团队）和“志愿军”（贡献代码的伙伴）的力量，依据 JCSDA 年度运行计划（AOP）和各自任务书干活；  </li>
<li>写需求、回邮件、拉合作、找重复、减冗余、拉新伙伴、帮旧伙伴——一条龙；  </li>
<li>每季度向 MOB 和 ET 交“作业”，并组织代码冲刺、培训营。</li>
</ol>
<p><strong>在代码层面，</strong>他们同时兼三职：  </p>
<ul>
<li><strong>贡献者</strong>——自己写代码；  </li>
<li><strong>评审者</strong>——给别人挑刺；  </li>
<li><strong>管理员</strong>——管钥匙、合并 PR。</li>
</ul>
<p><strong>合并红线：</strong>  </p>
<ul>
<li>必须有人背书的科学质量、技术质量；  </li>
<li>必须通过所有测试；  </li>
<li>必须符合编码规范和文档要求；  </li>
<li>遵循“do-no-harm”——不踩坏主干。</li>
</ul>
<p><strong>一句话：</strong>代码没拿到“合格章”，谁也不能合进主分支。</p>
<h3 id="Contributors"><a href="#Contributors" class="headerlink" title="Contributors"></a>Contributors</h3><ul>
<li><p><strong>贡献者</strong>：只要交过代码、文档、设计或其他成果，都算；一旦 PR 被合并，就升级为“开发者”。  </p>
<ul>
<li>包括：JCSDA 核心员工、合作方“抵现”人员、外部个人或承包商。  </li>
<li>做事方式：在 GitHub 上提 PR、审 PR、开 issue、公开讨论，全程透明。</li>
</ul>
</li>
<li><p><strong>开发者义务</strong>：  </p>
<ol>
<li>写清楚文档；  </li>
<li>保证自己的分支跟 develop 分支同步；  </li>
<li>自测通过再提 PR；  </li>
<li>互相 code review，没人能“只写不看”。</li>
</ol>
</li>
<li><p><strong>用户</strong>：人数最多的群体。<br>贡献者归根到底是为用户打工，因此我们尽量把“提 PR”的门槛踩平——今天你会用，明天你就能改，后天你就是开发者。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>LaTex Notes</title>
    <url>/2022/05/01/Tool/LaTex%20Notes/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="Journal-Abbreviation"><a href="#Journal-Abbreviation" class="headerlink" title="Journal Abbreviation"></a>Journal Abbreviation</h4><figure class="highlight latex"><table><tr><td class="code"><pre><span class="line">&#123;Geophys.<span class="keyword">\ </span>Res.<span class="keyword">\ </span>Lett.&#125;</span><br><span class="line"></span><br><span class="line">&#123;Environ.<span class="keyword">\ </span>Res.<span class="keyword">\ </span>Lett.&#125;</span><br><span class="line"></span><br><span class="line">&#123;Mon.<span class="keyword">\ </span>Wea.<span class="keyword">\ </span>Rev.&#125;</span><br><span class="line"></span><br><span class="line">&#123;J.<span class="keyword">\ </span>Atmos.<span class="keyword">\ </span>Sci.&#125;</span><br><span class="line"></span><br><span class="line">&#123;J.<span class="keyword">\ </span>Climate&#125;</span><br><span class="line"></span><br><span class="line">&#123;Climate Dyn.&#125;</span><br><span class="line"></span><br><span class="line">&#123;J.<span class="keyword">\ </span>Geophys.<span class="keyword">\ </span>Res.&#125;</span><br><span class="line"></span><br><span class="line">&#123;Bull.<span class="keyword">\ </span>Amer.<span class="keyword">\ </span>Meteor.<span class="keyword">\ </span>Soc.&#125;</span><br><span class="line"></span><br><span class="line">&#123;Quart.<span class="keyword">\ </span>J.<span class="keyword">\ </span>Roy.<span class="keyword">\ </span>Meteor.<span class="keyword">\ </span>Soc.&#125;</span><br><span class="line"></span><br><span class="line">&#123;Taylor <span class="built_in">&amp;</span> Francis&#125;</span><br><span class="line"></span><br><span class="line">&#123;Theor.<span class="keyword">\ </span>Appl.<span class="keyword">\ </span>Climatol.&#125;</span><br><span class="line"></span><br><span class="line">&#123;J.<span class="keyword">\ </span>Phys.<span class="keyword">\ </span>Oceanogr.&#125;</span><br><span class="line"></span><br><span class="line">&#123;Int.<span class="keyword">\ </span>J.<span class="keyword">\ </span>Climatol.&#125;</span><br></pre></td></tr></table></figure>



<h4 id="Special-Symbol"><a href="#Special-Symbol" class="headerlink" title="Special Symbol"></a>Special Symbol</h4><figure class="highlight latex"><table><tr><td class="code"><pre><span class="line">El Ni<span class="keyword">\~</span>&#123;n&#125;o</span><br><span class="line"></span><br><span class="line">165<span class="built_in">$</span><span class="built_in">^</span>&#123;<span class="keyword">\circ</span>&#125;<span class="built_in">$</span>E</span><br><span class="line"></span><br><span class="line"><span class="built_in">$</span><span class="built_in">^</span>&#123;<span class="keyword">\circ</span>&#125;<span class="built_in">$</span>C</span><br><span class="line"></span><br><span class="line"><span class="keyword">\textcelsius</span></span><br></pre></td></tr></table></figure>



<h4 id="count"><a href="#count" class="headerlink" title="count"></a>count</h4><p><code>texcount file-name1.tex file-name2.tex</code></p>
<h4 id="Include-Figures"><a href="#Include-Figures" class="headerlink" title="Include Figures"></a>Include Figures</h4><figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;figure&#125;[H]</span><br><span class="line"></span><br><span class="line"> <span class="keyword">\centering</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">\includegraphics</span>[width=0.5<span class="keyword">\textwidth</span>,angle=90]&#123;R1-Asymetry.pdf&#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">\caption</span>&#123;XXXX&#125;<span class="keyword">\label</span>&#123;R-AsySig&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\end</span>&#123;figure&#125;</span><br></pre></td></tr></table></figure>



<h4 id="latexdiff功能"><a href="#latexdiff功能" class="headerlink" title="latexdiff功能"></a>latexdiff功能</h4><p>在使用latex编辑完成一版tex文件后，如果后续进行了修改，并且想知道修改的具体位置，可以使用latexdiff命令产生一个新的tex文件，通过编译该文件就能得到一个新的包含具体改动的pdf文件。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">latexdiff oldFile.tex newFile.tex &gt; diff.tex</span><br></pre></td></tr></table></figure>

<p>这里生成diff.tex的时候最好先手动验证一下新旧两个tex文件在对方的文件夹内都能正常编译，否则无法正常编译产生的diff.tex</p>
<h5 id="newFile-tex文件中新增了参考文献时，编译时报错"><a href="#newFile-tex文件中新增了参考文献时，编译时报错" class="headerlink" title="newFile.tex文件中新增了参考文献时，编译时报错"></a>newFile.tex文件中新增了参考文献时，编译时报错</h5><p>这里我参考了这位大神的方法，成功解决了问题。大神给出了三种解决方法，我使用的是第三种，也就是删除文中所有的\hspace{0pt}，当然，只需要删除编译时报错部分的\hspace{0pt}就行了。<br>应该是\DIFadd中使用的花括号{}和\hspace{0pt}中的花括号起了冲突，删除了就没问题了。<br>这里这总结一下这位大神推荐的三种方法</p>
<p>在latexdiff中加入-t CFONT，我没有尝试这种方法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">latexdiff -t CFONT temp.tex temp2.tex &gt; diff.tex</span><br></pre></td></tr></table></figure>


<p>在diff.tex文件的开头手动添加一下代码，我仍然没有尝试这种方法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">\RequirePackage[2019/11/18]&#123;latexrelease&#125;</span><br></pre></td></tr></table></figure>


<p>删除文中所有的\hspace{0pt}，亲测能解决问题，YYDS</p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>LaTex Sheet</title>
    <url>/2022/05/01/Tool/LaTex%20Sheet/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="pdfobject-container" data-target="https://docs.qq.com/pdf/DSk9IanVmY01KY2x4" data-height="1000px"></div>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Large Model Env</title>
    <url>/2022/05/01/Tool/Large%20Model%20Env/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="如何在本地部署现有气象大模型"><a href="#如何在本地部署现有气象大模型" class="headerlink" title="如何在本地部署现有气象大模型"></a>如何在本地部署现有气象大模型</h2><p>来源：<a href="https://mp.weixin.qq.com/s/7l2R4LLSlhRjEshKPyW3zQ">https://mp.weixin.qq.com/s/7l2R4LLSlhRjEshKPyW3zQ</a> &#x2F; <a href="https://github.com/ecmwf-lab/ai-models">https://github.com/ecmwf-lab/ai-models</a></p>
<p>今年涌现了诸如Pangu、Fuxi、Fengwu、GraphCast、FourCastNet等诸多气象大模型，本文介绍如何用EC开发的ai-models在本地部署以上模型。</p>
<p>本文测试环境系统为：</p>
<p>Ubuntu 18.04.6 LTS + Anaconda 3 + Cuda 11.8 + libcudnn 8</p>
<p>1、创建并启动虚拟环境</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda create -n large python=3.10</span><br><span class="line">source activate large</span><br></pre></td></tr></table></figure>

<p>2、按照<a href="https://github.com/ecmwf-lab/ai-models%E5%AE%89%E8%A3%85%E6%89%80%E9%9C%80%E5%BA%93">https://github.com/ecmwf-lab/ai-models安装所需库</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install ai-models</span><br></pre></td></tr></table></figure>

<p>3、添加EC封装好的各种大模型，目前支持的包括GraphCast、FourCastNet、Pangu等，直接pip安装即可</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install ai-models-panguweather</span><br><span class="line">pip install ai-models-fourcastnet</span><br><span class="line">pip install ai-models-graphcast  # Install details at https://github.com/ecmwf-lab/ai-models-graphcast</span><br><span class="line">pip install ai-models-fourcastnetv2</span><br></pre></td></tr></table></figure>

<p>注：如果GraphCast用pip一键安装不成功（大概率是），可以按照<a href="https://github.com/ecmwf-lab/ai-models-graphcast%E6%8F%90%E5%88%B0%E7%9A%84%E6%96%B9%E5%BC%8F%EF%BC%8C%E9%A6%96%E5%85%88%E5%AE%89%E8%A3%85jax%EF%BC%8C%E5%86%8D%E6%89%8B%E5%8A%A8%E5%AE%89%E8%A3%85GraphCast">https://github.com/ecmwf-lab/ai-models-graphcast提到的方式，首先安装jax，再手动安装GraphCast</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install -r requirements-gpu.txt -f https://storage.googleapis.com/jax-releases/jax_cuda_releases.html</span><br></pre></td></tr></table></figure>

<p>4、添加Fuxi大模型，当前ai-models支持Fuxi，但貌似还不支持pip一键安装，可以按如下方式手动添加</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/tpys/ai-models-fuxi.git</span><br><span class="line">cd ai-models-fuxi</span><br><span class="line">python setup.py install</span><br></pre></td></tr></table></figure>

<p>5、添加Fengwu大模型，Fengwu目前还未对ai-models做适配，这个需要手动添加。可以按照EC或Fuxi的风格修改一下，也可以直接从如下链接下载编译好的whl文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">链接: https://pan.baidu.com/s/1WCwJ4ptLXHeNHHO3xw_L4A?pwd=tzyu 提取码: tzyu 复制这段内容后打开百度网盘手机App，操作更方便哦</span><br><span class="line">链接: https://pan.baidu.com/s/1sOFN501Q-pKbUBiowZU0Ng?pwd=tzyu 提取码: tzyu 复制这段内容后打开百度网盘手机App，操作更方便哦</span><br></pre></td></tr></table></figure>

<p>下载好whl后，直接pip 安装即可</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install ai_models_fengwu-0.0.1-py3-none-any.whl</span><br><span class="line">pip install ai_models_fengwuv2-0.0.1-py3-none-any.whl</span><br></pre></td></tr></table></figure>

<p>上述两个whl分别对应Fengwu模型中提到的without Transfer和with Transfer</p>
<p>6、至此，ai-models支持的大模型全部安装完成，可以通过如下命令查看是否安装成功</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ai-models --models</span><br></pre></td></tr></table></figure>

<p>如全部安装成功，则出现如下结果</p>
<p><img src="https://p.ipic.vip/pz7mns.png" alt="Image"></p>
<p>如有未安装成功的（即未显示的，考虑重新安装一下）</p>
<p>7、关于预训练模型，ai-models对FourCastNet、GraphCast、Pangu、Fuxi均支持自动下载，按如下方式即可</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ai-models --download-assets &lt;model_name&gt;</span><br></pre></td></tr></table></figure>

<p>model_name即上图里的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fourcastnet</span><br><span class="line">fourcastnetv2-small</span><br><span class="line">fuxi</span><br><span class="line">graphcast</span><br><span class="line">panguweather</span><br></pre></td></tr></table></figure>



<p>FourCastNet遇到没有mars权限，无法下载assests，更换为去原网站下载：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://github.com/NVlabs/FourCastNet?tab=readme-ov-file</span><br><span class="line"></span><br><span class="line">https://portal.nersc.gov/project/m4134/FCN_weights_v0/</span><br></pre></td></tr></table></figure>



<p>fuxi 下载 short 较慢，更换为去原网站下载：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://github.com/tpys/ai-models-fuxi</span><br><span class="line">https://drive.google.com/drive/folders/1CXxv-s4DdIHVxSCGsDLMn38n8Shk3fRs</span><br></pre></td></tr></table></figure>

<p>发现没有google网盘权限，提取网页链接后去本地下载：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://get.ecmwf.int/repository/test-data/ai-models/fuxi/short</span><br></pre></td></tr></table></figure>



<p>graphcast 报错1：No module named ‘haiku’</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install git+https://github.com/deepmind/dm-haiku</span><br></pre></td></tr></table></figure>

<p>graphcast 报错2：No module named ‘graphcast’</p>
<p>打开README，提示<code>pip intall graphcast</code>  之后还需配置jax和GPU</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install -r requirements-gpu.txt -f https://storage.googleapis.com/jax-releases/jax_cuda_releases.html</span><br></pre></td></tr></table></figure>

<p>graphcast 报错3：User ‘<a href="mailto:&#99;&#x68;&#101;&#x6e;&#114;&#x75;&#121;&#x61;&#x6e;&#x40;&#115;&#99;&#115;&#105;&#111;&#46;&#x61;&#99;&#x2e;&#99;&#110;">&#99;&#x68;&#101;&#x6e;&#114;&#x75;&#121;&#x61;&#x6e;&#x40;&#115;&#99;&#115;&#105;&#111;&#46;&#x61;&#99;&#x2e;&#99;&#110;</a>‘ has no access to services&#x2F;mars”</p>
<p>Fengwu，需要手动下载，下载链接：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://github.com/OpenEarthLab/FengWu</span><br></pre></td></tr></table></figure>











<p>8、接入输入数据。目前测试了通过CDS访问ERA5的方式，具体来说，首先到如下链接注册账号，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://cds.climate.copernicus.eu/</span><br></pre></td></tr></table></figure>

<p>然后点击自己的用户名，找到如下</p>
<p><img src="https://p.ipic.vip/4st8m0.png" alt="Image"></p>
<p>在本地用户根目录下创建文件.cdsapirc，将</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">url: https://cds.climate.copernicus.eu/api/v2key: 对应的API Key</span><br></pre></td></tr></table></figure>

<p>添加并保存即可。</p>
<p>9、如何运行？如采用上述步骤8提到的CDS数据输入，按如下方式运行即可</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ai-models --input cds --date 20230110 --time 0000 fuxi --assets fuxi</span><br></pre></td></tr></table></figure>

<p>其中，input指定了数据输入方式为CDS，程序会自动下载date和time指定时次的文件，并保存至本地。fuxi即模型名，也可替换为上述步骤6提到的任意模型，assets为下载预训练模型对应的目录。</p>
<p>其他如指定输入文件的运行方式待后续更新。</p>
<p>默认做未来10天240小时逐6小时的预报，如无需太多预报时次，可通过lead_time参数传递指定，更多参数可通过ai-models –help命令获取。</p>
<p>10、效果如何？见下图</p>
<p><img src="https://p.ipic.vip/i429kh.png" alt="Image"></p>
<p><img src="https://p.ipic.vip/gmnaig.png" alt="Image"></p>
<p>单从模型结构的角度看，个人还是特别喜欢GraphCast的设计。</p>
<p>11、关于安装过程可能遇到的问题：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1、pangu、fuxi、fengwu等模型无法调用gpu</span><br><span class="line">解决方案：注意看提示的问题，一般是cuda、libcudnn版本不对应，按本文开始提到的环境配置亲测可用。</span><br><span class="line">此外，如采用CPU，单模型运行时间一般为8小时左右不等，采用单卡GPU，一般不超过5分钟。</span><br><span class="line"></span><br><span class="line">2、GraphCast提示ptx问题</span><br><span class="line">解决方案：也是版本问题</span><br><span class="line"></span><br><span class="line">3、单模型运行一般占用10G左右的显存，对pangu，因为有6和24两个模型，可能无法实现单卡运行</span><br><span class="line">解决方案：用空间换算力，将6和24两个模型分别指定至两个GPU，需要修改源码，</span><br><span class="line">找到~/anaconda3/envs/large/lib/python3.10/site-packages/ai-models-panguweather/model.py文件，</span><br><span class="line">第81、88行，分别增加 </span><br><span class="line">ort_session_*.set_providers([&#x27;CUDAExecutionProvider&#x27;],  provider_options=[&#123;&#x27;device_id&#x27;: *&#125;])</span><br><span class="line"></span><br><span class="line">4、其他问题？欢迎交流！如有不当之处，欢迎指正！</span><br></pre></td></tr></table></figure>









]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Latex Book</title>
    <url>/2022/05/01/Tool/Latex%20Book/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="pdfobject-container" data-target="https://docs.qq.com/pdf/DSlNhVlJZSEdGdFVm" data-height="1000px"></div>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Latex Symbols</title>
    <url>/2022/05/01/Tool/Latex%20Symbols/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="pdfobject-container" data-target="https://docs.qq.com/pdf/DSlJ4QWZxYnFlaUdV" data-height="1000px"></div>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Linux CMD</title>
    <url>/2022/05/01/Tool/Linux%20CMD/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="pdfobject-container" data-target="https://docs.qq.com/pdf/DSm11RU5Udk56UUxa" data-height="1000px"></div>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>NPJ</title>
    <url>/2022/05/01/ReadCube/NPJ/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Sharma-S-Ha-K-J-Cai-W-Chung-E-S-amp-Bodai-T-Local-meridional-circulation-changes-contribute-to-a-projected-slowdown-of-the-Indian-Ocean-Walker-circulation-Npj-Clim-Atmospheric-Sci-5-15-2022"><a href="#Sharma-S-Ha-K-J-Cai-W-Chung-E-S-amp-Bodai-T-Local-meridional-circulation-changes-contribute-to-a-projected-slowdown-of-the-Indian-Ocean-Walker-circulation-Npj-Clim-Atmospheric-Sci-5-15-2022" class="headerlink" title="Sharma, S., Ha, K.-J., Cai, W., Chung, E.-S. &amp; Bódai, T. Local meridional circulation changes contribute to a projected slowdown of the Indian Ocean Walker circulation. Npj Clim Atmospheric Sci 5, 15 (2022)."></a><span style="color:red">Sharma, S., Ha, K.-J., Cai, W., Chung, E.-S. &amp; Bódai, T. Local meridional circulation changes contribute to a projected slowdown of the Indian Ocean Walker circulation. <em>Npj Clim Atmospheric Sci</em> <strong>5</strong>, 15 (2022).</span></h2><p><img src="https://p.ipic.vip/pkhkvf.jpg" alt="Screen Shot 2022-09-05 at 15.34.59"></p>
<ul>
<li><span style="color:green">IOD-like warming pattern 和 weakening of IWC 之间的因果关系： IWC weakening is partly driven by the anomalous local meridional circultion linked to enhacned land-sea thermal contrast. </span></li>
</ul>
]]></content>
      <categories>
        <category>ReadCube</category>
      </categories>
  </entry>
  <entry>
    <title>Linux-debug</title>
    <url>/2022/05/01/Tool/Linux-debug/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="openCV-与-QT版本不兼容"><a href="#openCV-与-QT版本不兼容" class="headerlink" title="openCV 与 QT版本不兼容"></a>openCV 与 QT版本不兼容</h2><p>**报错信息：QObject::moveToThread: Current thread (0x1d2c9cf0) is not the object’s thread (0x1d347b20).<br>Cannot move to target thread (0x1d2c9cf0)</p>
<p><strong>解决方法：</strong> <code>pip install opencv-python-headless</code></p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Linux</title>
    <url>/2022/05/01/Tool/Linux/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="ssh-Automatic-Login"><a href="#ssh-Automatic-Login" class="headerlink" title="ssh Automatic Login"></a>ssh Automatic Login</h2><ol>
<li><p>Linux下生成密钥</p>
<p>生成linux下的密钥要用到 ssh-keygen 命令，一般执行完这个命令公钥和私钥会生成到 .ssh 的隐藏目录。在执行这个命令之前我们先检查一下这个目录是否存在，因为有些linux如果没有这个目录的话是不会生成key的。<br>然后我们再执行 ssh-keygen -t rsa，进入“.ssh”会生成以下几个文件：<br>id_rsa : 生成的私钥文件<br>id_rsa.pub ： 生成的公钥文件 </p>
</li>
<li><p>远程免密登录<br>现在我们就需要把key文件复制到其它几台服务器了，而复制的方式主要有两种：</p>
<ul>
<li><p>通过ssh-copy-id的方式，最后一个参数是我们要免密钥登录的服务器 ip 地址。<br>　<br> <code>ssh-copy-id -i ~/.ssh/id_rsa.pub 192.168.1.100</code></p>
</li>
<li><p>手工复制</p>
<p>通过 scp 命令直接将该文件远程复制过去，<code>scp -p ~/.ssh/id_rsa.pub root@&lt;ip&gt;:/root/.ssh/authorized_keys</code></p>
<p><strong>注意：</strong> 如果你之前已经配置了其它服务器上的密钥，这是使用这种方法，就会覆盖掉你原来的密钥，这时候是不建议使用这种方式的。建议你是先将该文件复制到服务器上的一个目录下，然后在使用追加的方式，将密钥追加到 authorized_keys。</p>
<p>如果你只有两台服务器也是可以直接复制到文件</p>
</li>
</ul>
</li>
</ol>
<p>参考：<a href="https://www.cnblogs.com/hanwen1014/p/9048717.html">https://www.cnblogs.com/hanwen1014/p/9048717.html</a></p>
<p><strong>乌镇超算密码失效</strong>：</p>
<p>把<code>id_rsa.pub</code>中的内容copy到WZCS的<code>~/.ssh/authorized_keys</code></p>
<p>如果出现报错：<code>identity_sign: private key /Users/ruyanc/.ssh/id_rsa contents do not match public</code></p>
<p>本地执行<code>ssh-keygen -t rsa</code></p>
<h2 id="防止rm误删"><a href="#防止rm误删" class="headerlink" title="防止rm误删"></a>防止rm误删</h2><p>建立回收站机制</p>
<p>它并不真正执行删除操作，而是将文件移动到一个特定目录，可以设置定时清楚回收站，或者在回收站里面的文件大小达到一定容量时（或者用时间做判断）执行删除操作以腾出空间。</p>
<p>可以写个Shell脚本替换rm命令，或者在需要删除文件的时候使用mv命令将文件移动到回收站。</p>
<p>1）在&#x2F;home&#x2F;username&#x2F;目录下新建一个目录，命名为：.trash</p>
<p>2）在&#x2F;home&#x2F;username&#x2F;tools&#x2F;目录下，新建一个Shell文件，命名为：remove.shell</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">TRASH_DIR=&quot;/home/username/.trash&quot;</span><br><span class="line">for i in $*; do</span><br><span class="line">STAMP=`date +%s`</span><br><span class="line">fileName=`basename $i`</span><br><span class="line">mv $i $TRASH_DIR/$fileName.$STAMP</span><br><span class="line">done</span><br></pre></td></tr></table></figure>

<p>3）修改~&#x2F;.bashrc</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">alias rm=&quot;sh /home/username/tools/remove.sh&quot;   # 用我们自建的remove.sh替代rm命令</span><br><span class="line">alias delete=&quot;/usr/bin/rm&quot; # 用delete命令代替系统rm命令</span><br></pre></td></tr></table></figure>

<p>4）crontab -e 设置&#x2F;etc&#x2F;crontab，定期清空垃圾箱，如：</p>
<p>0 0 * * * delete -rf &#x2F;home&#x2F;username&#x2F;.trash&#x2F;*</p>
<p>每天0点清空垃圾箱</p>
<p>5）source ~&#x2F;.bashrc 使替换立即生效</p>
<h2 id="SCP-报错"><a href="#SCP-报错" class="headerlink" title="SCP 报错"></a>SCP 报错</h2><p><strong>scp: Received message too long 537541178</strong></p>
<p><strong>scp: Ensure the remote shell produces no output for non-interactive sessions.</strong></p>
<p>source  ~.bashrc的程序会输出大量的显示信息如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">:: initializing oneAPI environment ...</span><br><span class="line">   -bash: BASH_VERSION = 4.2.46(2)-release</span><br><span class="line">   args: Using &quot;$@&quot; for setvars.sh arguments: </span><br><span class="line">:: compiler -- latest</span><br><span class="line">:: debugger -- latest</span><br><span class="line">:: dev-utilities -- latest</span><br><span class="line">:: inspector -- latest</span><br><span class="line">:: itac -- latest</span><br><span class="line">:: mpi -- latest</span><br><span class="line">:: tbb -- latest</span><br><span class="line">:: oneAPI environment initialized ::</span><br></pre></td></tr></table></figure>

<p>根据SFTP中的相关说明，输出字符的前4个字节”Copy”每个字母按照ASCII值拼接在一起被翻译成32位整数，16进制是436F7079，10进制就是1131376761， 在传输协议中是作为包长度字段的，因此这是一个非常大的数字，导致连接出错，把这些输出去掉就好了。</p>
<p><code>vi ~/.bashrc</code></p>
<p>将最后一个程序改为</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source /home/rychen/intel/oneapi/setvars.sh &gt;/dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure>

<p>然后<code>source ~/.bashrc</code>就可以登录了。</p>
<h2 id="vscode-无法登录显示-Remote-SSH-XHR-failed"><a href="#vscode-无法登录显示-Remote-SSH-XHR-failed" class="headerlink" title="vscode 无法登录显示 Remote-SSH XHR failed"></a>vscode 无法登录显示 Remote-SSH XHR failed</h2><p>重新从其他可联网服务器上拷贝 .vscode-server 到根目录下</p>
<h2 id="源代码软件安装命令"><a href="#源代码软件安装命令" class="headerlink" title="源代码软件安装命令"></a>源代码软件安装命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./configure --prefix=/usr/local/test</span></span><br></pre></td></tr></table></figure>



<h2 id="恢复成系统缺省的-bashrc"><a href="#恢复成系统缺省的-bashrc" class="headerlink" title="恢复成系统缺省的.bashrc"></a>恢复成系统缺省的.bashrc</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cp /etc/skel/.bashrc ~</span><br></pre></td></tr></table></figure>



<h2 id="wget"><a href="#wget" class="headerlink" title="wget"></a>wget</h2><p><code>wget -r -c —timestamping ftp://ftp_hermes:hermes%@ftp.hermes.acri.fr/828378130</code></p>
<p>如果时间戳更新则下载，否则不下载</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget --user=ifenty --password=ABCD -r -nc -np -nH --cut-dirs=2 https://ecco.jpl.nasa.gov/drive/files/ECCO2/cube92_latlon_quart_90S90N/SALT.nc</span><br></pre></td></tr></table></figure>

<h3 id="下载网页目录下所有文件"><a href="#下载网页目录下所有文件" class="headerlink" title="下载网页目录下所有文件"></a>下载网页目录下所有文件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget -r --level=0 -np -E --ignore-length -x -k -p -erobots=off -np -N https://www.nco.ncep.noaa.gov/pmb/codes/nwprod/hafs.v1.0.6/</span><br></pre></td></tr></table></figure>

<h3 id="排除特定目录"><a href="#排除特定目录" class="headerlink" title="排除特定目录"></a>排除特定目录</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">--exclude-directories=list expects absolute paths</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">This means with host.org/fu/bar/ you have to write --exclude-directories=/fu/bar.</span></span><br></pre></td></tr></table></figure>

<p>This can be a problem, if you always want to exclude a folder with a specific name, no matter where it is exactly (for example a ‘thumbs’ folder).</p>
<p>For this we can use </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">--reject-regex=&quot;/thumbs/&quot;</span><br></pre></td></tr></table></figure>

<p>Given this is now regex and not a comma-separated string list, we can exclude multiple folders via regex1|regex2|regex3: –reject-regex&#x3D;”&#x2F;thumbs&#x2F;|&#x2F;css&#x2F;“. </p>
<p>Keep in mind that certain characters like <code>.</code> have a special meaning in regex and need to be escaped to be part of a folder name: “&#x2F;.svn&#x2F;“.</p>
<h2 id="只复制目录结构不复制数据"><a href="#只复制目录结构不复制数据" class="headerlink" title="只复制目录结构不复制数据"></a>只复制目录结构不复制数据</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">find . -type d -exec mkdir -p demo/\&#123;\&#125; \;</span><br></pre></td></tr></table></figure>



<h2 id="需要的文件为单一类型，带目录结构复制"><a href="#需要的文件为单一类型，带目录结构复制" class="headerlink" title="需要的文件为单一类型，带目录结构复制"></a>需要的文件为单一类型，带目录结构复制</h2><p>这种情况下可以使用tar命令将指定类型的文件打包，然后解包，同样需要组合使用find和xargs</p>
<p>Step1 建立目录 demo</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir demo</span><br></pre></td></tr></table></figure>

<p>Step2 将指定类型文件带目录结构打包</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">find ./ -name &#x27;*.sh&#x27; -o -name &#x27;*.py&#x27;|xargs tar czf demo.tgz</span><br></pre></td></tr></table></figure>

<p>Step3 解包到目录demo</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar zxvf demo.tgz -C demo</span><br></pre></td></tr></table></figure>







<h2 id="查看文件个数"><a href="#查看文件个数" class="headerlink" title="查看文件个数"></a>查看文件个数</h2><p><code>ls -l | grep &quot;^-&quot; | wc -l</code></p>
<h2 id="查看目录个数"><a href="#查看目录个数" class="headerlink" title="查看目录个数"></a>查看目录个数</h2><p><code>ls -l ./|grep &quot;^d&quot;|wc -l</code></p>
<h2 id="按文件大小排序"><a href="#按文件大小排序" class="headerlink" title="按文件大小排序"></a>按文件大小排序</h2><p><code>du -sh * | sort -n | head -566</code></p>
<h2 id="查看服务器ip地址"><a href="#查看服务器ip地址" class="headerlink" title="查看服务器ip地址"></a>查看服务器ip地址</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ip addr</span><br></pre></td></tr></table></figure>



<h2 id="数字范围"><a href="#数字范围" class="headerlink" title="数字范围"></a>数字范围</h2><p><code>&#123;10..20&#125; or [10-20]</code></p>
<h2 id="安装CDO"><a href="#安装CDO" class="headerlink" title="安装CDO"></a>安装CDO</h2><p><code>conda create --prefix=/home/rychen/cdo -c conda-forge cdo</code></p>
<h2 id="安装NCO"><a href="#安装NCO" class="headerlink" title="安装NCO"></a>安装NCO</h2><p><code>conda install -c conda-forge nco</code></p>
<p>安装顺序：conda - NCL - NCO</p>
<h2 id="解压文件"><a href="#解压文件" class="headerlink" title="解压文件"></a>解压文件</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">tar -xf XXX.tar</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">unzip XXX.zip</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">gunzip XXX.gz</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">tar -xvf XXX.tar</span></span><br></pre></td></tr></table></figure>



<h2 id="压缩包命令"><a href="#压缩包命令" class="headerlink" title="压缩包命令"></a>压缩包命令</h2><p><a href="https://www.jb51.net/LINUXjishu/43356.html">https://www.jb51.net/LINUXjishu/43356.html</a></p>
<p> <a href="https://www.cnblogs.com/yuandonghua/p/10254288.html">https://www.cnblogs.com/yuandonghua/p/10254288.html</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar -zxv -f filename.tar.gz -c directory  </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">将压缩包解压在directory文件夹下</span></span><br><span class="line">tar -jxv -f filename.tar.bz2 -c directory </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">将压缩包解压在directory文件夹下</span></span><br><span class="line">tar –xZv -f file.tar.Z # 解压 tar.Z 包</span><br><span class="line">tar –xv -f file.tar  # 解压tar包</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tar参数 -x 表示解压，-c 表示压缩，-t 表示查看内容，-r 表示向压缩归档文件末尾追加文件，-u 表示更新原压缩包中的文件</span></span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将所有.jpg的文件打成一个tar包，并用bzip2压缩</span></span><br><span class="line">tar -cjf all.tar.bz2 *.jpg  </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">更新原来tar包中logo.gif文件</span></span><br><span class="line">tar -uf all.tar logo.gif</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rar包只能用 unrar解压，据说RAR <span class="keyword">for</span> Linux不是免费的</span></span><br><span class="line">unrar e file.rar  </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">zip包只能用 unzip解压</span></span><br><span class="line">unzip file.zip    </span><br></pre></td></tr></table></figure>



<h2 id="查看内存使用"><a href="#查看内存使用" class="headerlink" title="查看内存使用"></a>查看内存使用</h2><p><code>ps aux | sort -rnk 4 | head -5</code></p>
<h2 id="查看内存剩余"><a href="#查看内存剩余" class="headerlink" title="查看内存剩余"></a>查看内存剩余</h2><p><code>free -h</code></p>
<h2 id="循环切割图片"><a href="#循环切割图片" class="headerlink" title="循环切割图片"></a>循环切割图片</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">for i in `ls ./`</span><br><span class="line">	do pdfcrop $i $i</span><br><span class="line">done</span><br></pre></td></tr></table></figure>



<h2 id="循环remap"><a href="#循环remap" class="headerlink" title="循环remap"></a>循环remap</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">do cdo remapbil,r36x19 $i ../Remap/Control/$i</span><br></pre></td></tr></table></figure>



<h2 id="循环显示文件数量"><a href="#循环显示文件数量" class="headerlink" title="循环显示文件数量"></a>循环显示文件数量</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">for i in &#123;1988..2020&#125;</span><br><span class="line"> do ls *$i* -l | grep &quot;^-&quot; | wc -l</span><br><span class="line">done </span><br></pre></td></tr></table></figure>



<h2 id="sh-loop"><a href="#sh-loop" class="headerlink" title="sh loop"></a>sh loop</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Declare an array of string with <span class="built_in">type</span></span></span><br><span class="line">declare -a StringArray=(&quot;Linux Mint&quot; &quot;Fedora&quot; &quot;Red Hat Linux&quot; &quot;Ubuntu&quot; &quot;Debian&quot; )</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Iterate the string array using <span class="keyword">for</span> loop</span></span><br><span class="line">for val in $&#123;StringArray[@]&#125;; do</span><br><span class="line">   echo $val</span><br><span class="line">done</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">for i in &#123;1961..2013&#125; </span><br><span class="line">do</span><br><span class="line">  ncl  year_select=$i 1_cal_divQ_JRA55_trans.ncl</span><br><span class="line">done</span><br></pre></td></tr></table></figure>

<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">for i <span class="keyword">in</span> `ls ./`</span><br><span class="line"><span class="keyword">do</span> pdfcrop $i $i</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">for i <span class="keyword">in</span> `ls ./`</span><br><span class="line"><span class="keyword">do</span> cdo remapbil,r4500x3600 $i ../tos_remap/$i</span><br><span class="line">done</span><br></pre></td></tr></table></figure>



<h2 id="移动前5个文件到相应目录下"><a href="#移动前5个文件到相应目录下" class="headerlink" title="移动前5个文件到相应目录下"></a>移动前5个文件到相应目录下</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">for i in `ls|head -n 5`</span><br><span class="line">do</span><br><span class="line">mv $i ./dir</span><br><span class="line">done</span><br></pre></td></tr></table></figure>



<h2 id="显示当前所在目录"><a href="#显示当前所在目录" class="headerlink" title="显示当前所在目录"></a>显示当前所在目录</h2><p>修改 .bashrc</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export PS1=&#x27;[\u@\h $PWD]\$ &#x27; # 显示绝对路径</span><br><span class="line">export PS1=&#x27;[\u@\h \W]\$ &#x27;   # 仅显示当前目录</span><br></pre></td></tr></table></figure>



<h2 id="切割图片"><a href="#切割图片" class="headerlink" title="切割图片"></a>切割图片</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">convert -density 216 -trim +repage -border 8 -bordercolor white -flatten fig1.eps fig1.png</span><br></pre></td></tr></table></figure>



<h2 id="动图制作"><a href="#动图制作" class="headerlink" title="动图制作"></a>动图制作</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew install imagemagick</span><br><span class="line">convert -delay 20 `ls|head -n 20` -loop 0 ~/finerainy.gif</span><br><span class="line">convert -density 200x200 -dispose previous -quality 100 -delay 40 `ls|head -n 9` -loop 0 ./test.gif</span><br><span class="line">convert -delay 20 `ls|head -n 20` -loop 0 ~/finerainy.gif</span><br></pre></td></tr></table></figure>

<p><a href="https://www.imagemagick.org/script/download.php#macosx">https://www.imagemagick.org/script/download.php#macosx</a></p>
<h2 id="查看文件个数-1"><a href="#查看文件个数-1" class="headerlink" title="查看文件个数"></a>查看文件个数</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ls -l | grep &quot;^-&quot; | wc -l</span><br></pre></td></tr></table></figure>



<h2 id="标准错误输出重定向到标准输出"><a href="#标准错误输出重定向到标准输出" class="headerlink" title="标准错误输出重定向到标准输出"></a>标准错误输出重定向到标准输出</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">1&gt; </span><span class="language-bash">Get-BoM-Temp.out 2&gt;&amp;1</span></span><br></pre></td></tr></table></figure>



<h2 id="按文件大小排序-1"><a href="#按文件大小排序-1" class="headerlink" title="按文件大小排序"></a>按文件大小排序</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">du -s * | sort -n | head -10</span><br></pre></td></tr></table></figure>



<h2 id="查看存储空间"><a href="#查看存储空间" class="headerlink" title="查看存储空间"></a>查看存储空间</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">df -h #将以人类可以阅读的容量格式显示各挂载点的存储空间使用情况</span><br><span class="line">du -h --max-depth=1 /path # 表示显示 path 路径下只深入到第一层子目录的各文件夹大小</span><br><span class="line">free -h #将以人类可以阅读的容量格式显示内存使用情况</span><br><span class="line">fdisk -l #查看硬盘及分区情况</span><br></pre></td></tr></table></figure>



<h2 id="linux中文件名有空格"><a href="#linux中文件名有空格" class="headerlink" title="linux中文件名有空格"></a>linux中文件名有空格</h2><p>在空格前加反斜杠,例如文件名为“software package”，在Linux中可表示为“software\ package”</p>
<h2 id="批量替换文件名中特定字符"><a href="#批量替换文件名中特定字符" class="headerlink" title="批量替换文件名中特定字符"></a>批量替换文件名中特定字符</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">for file in `ls | grep .nc`; do newfile=`echo $file | sed &#x27;s/pt/pt_S2S/g&#x27;`; mv $file $newfile; done</span><br></pre></td></tr></table></figure>



<h2 id="Linux-文件基本属性"><a href="#Linux-文件基本属性" class="headerlink" title="Linux 文件基本属性"></a>Linux 文件基本属性</h2><p>Linux 系统是一种典型的多用户系统，不同的用户处于不同的地位，拥有不同的权限。</p>
<p>为了保护系统的安全性，Linux 系统对不同的用户访问同一文件（包括目录文件）的权限做了不同的规定。</p>
<p>在 Linux 中我们通常使用以下两个命令来修改文件或目录的所属用户与权限：</p>
<ul>
<li>chown (change owner) ： 修改所属用户与组。</li>
<li>chmod (change mode) ： 修改用户的权限。</li>
</ul>
<p>下图中通过 chown 来授权用户，通过 chmod 为用户设置可以开门的权限。</p>
<p><img src="https://p.ipic.vip/8x0h7v.png" alt="img"></p>
<p>在 Linux 中我们可以使用 <strong>ll</strong> 或者 <strong>ls –l</strong> 命令来显示一个文件的属性以及文件所属的用户和组，如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@www /]# ls -l</span><br><span class="line">total 64</span><br><span class="line">dr-xr-xr-x   2 root root 4096 Dec 14  2012 bin</span><br><span class="line">dr-xr-xr-x   4 root root 4096 Apr 19  2012 boot</span><br><span class="line">……</span><br></pre></td></tr></table></figure>

<p>实例中，<strong>bin</strong> 文件的第一个属性用 <strong>d</strong> 表示。<strong>d</strong> 在 Linux 中代表该文件是一个目录文件。</p>
<p>在 Linux 中第一个字符代表这个文件是目录、文件或链接文件等等。</p>
<ul>
<li>当为 <strong>d</strong> 则是目录</li>
<li>当为 <strong>-</strong> 则是文件；</li>
<li>若是 <strong>l</strong> 则表示为链接文档(link file)；</li>
<li>若是 <strong>b</strong> 则表示为装置文件里面的可供储存的接口设备(可随机存取装置)；</li>
<li>若是 <strong>c</strong> 则表示为装置文件里面的串行端口设备，例如键盘、鼠标(一次性读取装置)。</li>
</ul>
<p>接下来的字符中，以三个为一组，且均为 <strong>rwx</strong> 的三个参数的组合。其中， <strong>r</strong> 代表可读(read)、 <strong>w</strong> 代表可写(write)、 <strong>x</strong> 代表可执行(execute)。 要注意的是，这三个权限的位置不会改变，如果没有权限，就会出现减号 <strong>-</strong> 而已。</p>
<p><img src="https://p.ipic.vip/han22i.png" alt="img"></p>
<p>每个文件的属性由左边第一部分的 10 个字符来确定（如下图）。</p>
<p><img src="https://p.ipic.vip/r0f5xd.jpg" alt="363003_1227493859FdXT"></p>
<p>从左至右用 <strong>0-9</strong> 这些数字来表示。</p>
<p>第 <strong>0</strong> 位确定文件类型，第 <strong>1-3</strong> 位确定属主（该文件的所有者）拥有该文件的权限。</p>
<p>第4-6位确定属组（所有者的同组用户）拥有该文件的权限，第7-9位确定其他用户拥有该文件的权限。</p>
<p>其中，第 <strong>1、4、7</strong> 位表示读权限，如果用 <strong>r</strong> 字符表示，则有读权限，如果用 <strong>-</strong> 字符表示，则没有读权限；</p>
<p>第 <strong>2、5、8</strong> 位表示写权限，如果用 <strong>w</strong> 字符表示，则有写权限，如果用 <strong>-</strong> 字符表示没有写权限；第 <strong>3、6、9</strong> 位表示可执行权限，如果用 <strong>x</strong> 字符表示，则有执行权限，如果用 <strong>-</strong> 字符表示，则没有执行权限。</p>
<hr>
<h3 id="Linux文件属主和属组"><a href="#Linux文件属主和属组" class="headerlink" title="Linux文件属主和属组"></a>Linux文件属主和属组</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@www /]# ls -l</span><br><span class="line">total 64</span><br><span class="line">drwxr-xr-x 2 root  root  4096 Feb 15 14:46 cron</span><br><span class="line">drwxr-xr-x 3 mysql mysql 4096 Apr 21  2014 mysql</span><br><span class="line">……</span><br></pre></td></tr></table></figure>

<p>对于文件来说，它都有一个特定的所有者，也就是对该文件具有所有权的用户。</p>
<p>同时，在Linux系统中，用户是按组分类的，一个用户属于一个或多个组。</p>
<p>文件所有者以外的用户又可以分为文件所属组的同组用户和其他用户。</p>
<p>因此，Linux系统按文件所有者、文件所有者同组用户和其他用户来规定了不同的文件访问权限。</p>
<p>在以上实例中，mysql 文件是一个目录文件，属主和属组都为 mysql，属主有可读、可写、可执行的权限；与属主同组的其他用户有可读和可执行的权限；其他用户也有可读和可执行的权限。</p>
<p>对于 root 用户来说，一般情况下，文件的权限对其不起作用。</p>
<hr>
<h3 id="更改文件属性"><a href="#更改文件属性" class="headerlink" title="更改文件属性"></a>更改文件属性</h3><h4 id="chgrp：更改文件属组"><a href="#chgrp：更改文件属组" class="headerlink" title="chgrp：更改文件属组"></a>chgrp：更改文件属组</h4><p>语法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chgrp [-R] 属组名 文件名</span><br></pre></td></tr></table></figure>

<p>参数选项</p>
<ul>
<li>-R：递归更改文件属组，就是在更改某个目录文件的属组时，如果加上-R的参数，那么该目录下的所有文件的属组都会更改。</li>
</ul>
<h4 id="chown：更改文件属主，也可以同时更改文件属组"><a href="#chown：更改文件属主，也可以同时更改文件属组" class="headerlink" title="chown：更改文件属主，也可以同时更改文件属组"></a>chown：更改文件属主，也可以同时更改文件属组</h4><p>语法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chown [–R] 属主名 文件名</span><br><span class="line">chown [-R] 属主名：属组名 文件名</span><br></pre></td></tr></table></figure>

<p>进入 &#x2F;root 目录（~）将install.log的拥有者改为bin这个账号：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@www ~] cd ~</span><br><span class="line">[root@www ~]# chown bin install.log</span><br><span class="line">[root@www ~]# ls -l</span><br><span class="line">-rw-r--r--  1 bin  users 68495 Jun 25 08:53 install.log</span><br></pre></td></tr></table></figure>

<p>将install.log的拥有者与群组改回为root：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@www ~]# chown root:root install.log</span><br><span class="line">[root@www ~]# ls -l</span><br><span class="line">-rw-r--r--  1 root root 68495 Jun 25 08:53 install.log</span><br></pre></td></tr></table></figure>

<h4 id="chmod：更改文件9个属性"><a href="#chmod：更改文件9个属性" class="headerlink" title="chmod：更改文件9个属性"></a>chmod：更改文件9个属性</h4><p>Linux文件属性有两种设置方法，一种是数字，一种是符号。</p>
<p>Linux 文件的基本权限就有九个，分别是 <strong>owner&#x2F;group&#x2F;others(拥有者&#x2F;组&#x2F;其他)</strong> 三种身份各有自己的 <strong>read&#x2F;write&#x2F;execute</strong> 权限。</p>
<p>先复习一下刚刚上面提到的数据：文件的权限字符为： <strong>-rwxrwxrwx</strong> ， 这九个权限是三个三个一组的！其中，我们可以使用数字来代表各个权限，各权限的分数对照表如下：</p>
<ul>
<li>r:4</li>
<li>w:2</li>
<li>x:1</li>
</ul>
<p>每种身份(owner&#x2F;group&#x2F;others)各自的三个权限(r&#x2F;w&#x2F;x)分数是需要累加的，例如当权限为： <strong>-rwxrwx—</strong> 分数则是：</p>
<ul>
<li>owner &#x3D; rwx &#x3D; 4+2+1 &#x3D; 7</li>
<li>group &#x3D; rwx &#x3D; 4+2+1 &#x3D; 7</li>
<li>others&#x3D; — &#x3D; 0+0+0 &#x3D; 0</li>
</ul>
<p>所以等一下我们设定权限的变更时，该文件的权限数字就是 <strong>770</strong>。变更权限的指令 chmod 的语法是这样的：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod [-R] xyz 文件或目录</span><br></pre></td></tr></table></figure>

<p>选项与参数：</p>
<ul>
<li><strong>xyz</strong> : 就是刚刚提到的数字类型的权限属性，为 <strong>rwx</strong> 属性数值的相加。</li>
<li><strong>-R</strong> : 进行递归(recursive)的持续变更，以及连同次目录下的所有文件都会变更</li>
</ul>
<p>举例来说，如果要将 <strong>.bashrc</strong> 这个文件所有的权限都设定启用，那么命令如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@www ~]# ls -al .bashrc</span><br><span class="line">-rw-r--r--  1 root root 395 Jul  4 11:45 .bashrc</span><br><span class="line">[root@www ~]# chmod 777 .bashrc</span><br><span class="line">[root@www ~]# ls -al .bashrc</span><br><span class="line">-rwxrwxrwx  1 root root 395 Jul  4 11:45 .bashrc</span><br></pre></td></tr></table></figure>

<p>那如果要将权限变成 <em>-rwxr-xr–</em> 呢？那么权限的分数就成为 [4+2+1][4+0+1][4+0+0]&#x3D;754。</p>
<h3 id="符号类型改变文件权限"><a href="#符号类型改变文件权限" class="headerlink" title="符号类型改变文件权限"></a>符号类型改变文件权限</h3><p>还有一个改变权限的方法，从之前的介绍中我们可以发现，基本上就九个权限分别是：</p>
<ul>
<li>user：用户</li>
<li>group：组</li>
<li>others：其他</li>
</ul>
<p>那么我们就可以使用 <strong>u, g, o</strong> 来代表三种身份的权限。</p>
<p>此外， <strong>a</strong> 则代表 <strong>all</strong>，即全部的身份。读写的权限可以写成 <strong>r, w, x</strong>，也就是可以使用下表的方式来看：</p>
<table>
<thead>
<tr>
<th>chmod</th>
<th>u g o a</th>
<th>+(加入) -(除去) &#x3D;(设定)</th>
<th>r w x</th>
<th>文件或目录</th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<p>如果我们需要将文件权限设置为 <strong>-rwxr-xr–</strong> ，可以使用 <strong>chmod u&#x3D;rwx,g&#x3D;rx,o&#x3D;r 文件名</strong> 来设定:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#  touch test1    // 创建 test1 文件</span><br><span class="line"># ls -al test1    // 查看 test1 默认权限</span><br><span class="line">-rw-r--r-- 1 root root 0 Nov 15 10:32 test1</span><br><span class="line"># chmod u=rwx,g=rx,o=r  test1    // 修改 test1 权限</span><br><span class="line"># ls -al test1</span><br><span class="line">-rwxr-xr-- 1 root root 0 Nov 15 10:32 test1</span><br></pre></td></tr></table></figure>

<p>而如果是要将权限去掉而不改变其他已存在的权限呢？例如要拿掉全部人的可执行权限，则：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#  chmod  a-x test1</span><br><span class="line"># ls -al test1</span><br><span class="line">-rw-r--r-- 1 root root 0 Nov 15 10:32 test1</span><br></pre></td></tr></table></figure>





<h2 id="Linux记录程序交互过程"><a href="#Linux记录程序交互过程" class="headerlink" title="Linux记录程序交互过程"></a>Linux记录程序交互过程</h2><p><a href="https://www.ibm.com/developerworks/cn/aix/library/au-screenshots1/index.html">https://www.ibm.com/developerworks/cn/aix/library/au-screenshots1/index.html</a></p>
<p>平时安装或调试一个软件时，总会需要记录程序输出信息或交互过程以便后期查看学习。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ls ./ &gt; ./file1   #将ls程序的标准输出写到file1文件中</span><br><span class="line">ls ./ 2&gt; ./file1  #将ls程序的错误输出写到file1文件中</span><br><span class="line">ls ./ &amp;&gt; ./file1  #将ls程序的标准输出和错误输出都写到file1文件中</span><br><span class="line">ls ./ 1&gt; ./file1 2&gt; ./file2 #将ls程序的标准输出写到file1文件中，将错误输出写到file2文件中</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">单箭头&gt;，表示以覆盖的方式输出到文件中</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">双箭头&gt;&gt;，表示以追加的方式输出到文件中，不会覆盖之前的内容</span></span><br></pre></td></tr></table></figure>

<p>然而常用的重定向功能只能记录程序的标准输出或错误输出，不能记录用户与程序的交互过程，此时发现一个比较好用的命令 <code>script output_file.txt</code> 。加入参数<code>-a</code>会把会话记录附加到<code>output_file.txt</code>文件后面，保留先前的内容。<br>该命令会启动一个子shell，并将用户键入的所有内容、运行的任何程序的所有输出以及这些程序产生的任何错误保存到一个输出文件中。最后通过键入exit命令退出 script 模式并关闭输出文件。<br>script 命令产生的文件通常包含控制字符，即退格、回车、用于显示某些提示的特殊字符以及您编辑前一个 shell 命令时使用的字符等等。可以使用文本编辑器清理script输出文件，网上有各种清理脚本可用。</p>
<h2 id="jobs"><a href="#jobs" class="headerlink" title="jobs"></a>jobs</h2><p>ctrl+z 暂停任务； jobs 查看任务序号； bg 任务序号 把任务放到后台；fg 任务序号 把任务放到前台；ctrl+c 停止任务</p>
<h2 id="搜索工具"><a href="#搜索工具" class="headerlink" title="搜索工具"></a>搜索工具</h2><h2 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h2><p><a href="http://blog.sina.com.cn/s/blog_65e13da00100of1f.html">http://blog.sina.com.cn/s/blog_65e13da00100of1f.html</a></p>
<ul>
<li><p>或操作</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">grep -E &#x27;123|abc&#x27; filename   # 找出文件（filename）中包含123或者包含abc的行，-E指用正则表达式来描述关键词</span><br><span class="line">egrep &#x27;123|abc&#x27; filename     # 用egrep同样可以实现</span><br><span class="line">awk &#x27;/123|abc/&#x27; filename     # awk 的实现方式</span><br></pre></td></tr></table></figure>
</li>
<li><p>与操作</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">grep pattern1 files | grep pattern2  </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示既匹配 pattern1 又匹配 pattern2 的行。</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>其他操作</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">grep -i pattern files   # 不区分大小写地搜索。默认情况区分大小写，</span><br><span class="line">grep -r pattern ./*     # 可以搜索次级目录下的文件</span><br><span class="line">grep -l pattern files   # 只列出匹配的文件名，</span><br><span class="line">grep -L pattern files   # 列出不匹配的文件名，</span><br><span class="line">grep -w pattern files   # 只匹配整个单词，而不是字符串的一部分（如匹配‘magic’，而不是‘magical’），</span><br><span class="line">grep -C number pattern files //匹配的上下文分别显示[number]行，</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="find"><a href="#find" class="headerlink" title="find"></a>find</h2><p>该命令可以用于查找文件名中带有某字符的文件，也可查找近期更新或读取过的文件等等。个人最常用的还是下面的这个命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">find ./ -name &quot;*.txt&quot; | xargs grep  &quot;Hello&quot;  </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">找出后缀为txt的文件，再次基础上再筛选出文件内容中有Hello的</span></span><br><span class="line">find ./ -name &quot;*.txt&quot; | grep  &quot;Hello&quot;     </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">类似于find ./ -name <span class="string">&quot;*Hello*.txt&quot;</span></span></span><br></pre></td></tr></table></figure>



<h2 id="Linux进程管理与后台运行"><a href="#Linux进程管理与后台运行" class="headerlink" title="Linux进程管理与后台运行"></a>Linux进程管理与后台运行</h2><p>常用任务管理命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">jobs      # 查看任务，返回任务编号n和进程号</span><br><span class="line">bg  %n    # 将编号为n的任务转后台运行</span><br><span class="line">fg  %n    # 将编号为n的任务转前台运行</span><br><span class="line">ctrl+z    # 挂起当前任务</span><br><span class="line">ctrl+c    # 结束当前任务</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kill -9  进程号 # 立即强制删除一个工作   </span><br><span class="line">kill -15 %n  # 以正常的程序方式终止一项工作</span><br></pre></td></tr></table></figure>

<p>不受HUP影响的后台运行<br>在Linux中，如果要让进程在后台运行，一般情况下，我们在命令后面加上&amp;即可。 但这样是将命令放入到一个作业队列中了，但当网络断开或本地终端断开连接后，终端会发送hangup（HUP）信号来通知其关闭所有子进程，因此该任务也会终止。 为了使任务不受HUP（hangup）信号影响，该博文 记录了好几种方法。 本人觉得最好用的是以下两种，记录如下。</p>
<ul>
<li>nohup</li>
</ul>
<p>在正常命令前加入nohup，就可以让提交的命令忽略 hangup 信号。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nohup mpirun –np 8 ./wrf.exe</span><br><span class="line">nohup command &gt; myout.file 2&gt;&amp;1 &amp;  </span><br></pre></td></tr></table></figure>

<p>指定了输出信息的文件，缺省情况下该作业的所有输出都被重定向到一个名为<code>nohup.out</code>的文件中</p>
<p>用 nohup 后，可以用 <code>jobs</code> 来查看任务， 再次登录查看任务可以用 <code>top</code> 或者 <code>ps –a</code> <code>ps -ef</code> 可以查看主机所有运行的进程 <code>ps -ef | grep</code> 过滤条件 但是，请注意，以上两个命令都只能查看单个节点的运行情况。对于并行运行、集群系统、天河等电脑，则无法使用上述命令来查看任务提交情况，而应该使用 qstat（四期）, yhq(tianhe)</p>
<ul>
<li>screen</li>
</ul>
<p>通过screen来创建新的虚拟终端，在该终端中运行作业。 </p>
<p><a href="https://www.ibm.com/developerworks/cn/linux/l-cn-screen/">https://www.ibm.com/developerworks/cn/linux/l-cn-screen/</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">最好给每个会话命名，便于区分</span></span><br><span class="line">screen -dmS session_name # 建立一个一开始便处于断开模式下的会话（-S 表示创建screen会话时为会话指定一个名字）</span><br><span class="line">screen -r session_name # 重新连接指定会话</span><br><span class="line">screen -d session_name # 断开其他正在运行的screen会话</span><br><span class="line">screen -S session_name -X quit # 删除一个会话</span><br><span class="line"></span><br><span class="line">screen -list # 列出所有会话名、状态</span><br><span class="line">screen -wipe # 会清除会话状态为 dead 的会话</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入会话后，可用快捷键CTRL-a CTRL-d 来暂时断开当前会话，任务不会中断</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入会话后，CTRL-c CTRL-d，任务被中断并删除</span></span><br><span class="line"></span><br><span class="line">screen -h num	 # 可以指定历史回滚缓冲区大小为num行</span><br></pre></td></tr></table></figure>



<h2 id="cheyenne"><a href="#cheyenne" class="headerlink" title="cheyenne"></a>cheyenne</h2><p>You can either copy things over to our local machines or you could work directly on cheyenne. If you want to do something that is memory intensive on cheyenne you need to open up a session on the processing nodes. This can be done using the following….</p>
<p><code>execdav -a P04010022 -m 3G -t 12:00:00</code></p>
<p>You can replace 3G with whatever memory allocation you want. It’s often hard to know but if you can go as low as you think, you’ll get in the queue faster. You can change 12:00:00 to however long you want to open the session for. Again, the lower the time, the quicker you’ll go through the queue. It doesn’t matter if you have a session open and it’s idle. P04010022 is the project number. You’ll have to load the modules you want to use e.g., </p>
<p><code>module load ncl</code></p>
<p><a href="https://www2.cisl.ucar.edu/resources/storage-and-file-systems/glade/recovering-files-snapshots">https://www2.cisl.ucar.edu/resources/storage-and-file-systems/glade/recovering-files-snapshots</a></p>
<p>To see if your current directory is present in any snapshots, just run <strong>snapls</strong> on your command line. You can also specify a directory by executing <strong>snapls -ldhtr directory_name</strong>.</p>
<p><img src="https://p.ipic.vip/soh84s.jpg" alt="File space"></p>
<h2 id="shell"><a href="#shell" class="headerlink" title="shell"></a>shell</h2><p><a href="https://explainshell.com/">https://explainshell.com/</a></p>
<h2 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h2><p>- 添加 Homebrew 到 &#x2F;home&#x2F;rychen&#x2F;.bash_profile 文件的 PATH 中，执行下面命令即可:</p>
 <figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">echo <span class="string">&#x27;eval &quot;$(/home/rychen/.linuxbrew/bin/brew shellenv)&quot;&#x27;</span> &gt;&gt; /home/rychen/.bash_profile</span><br><span class="line"></span><br><span class="line">eval <span class="string">&quot;$(/home/rychen/.linuxbrew/bin/brew shellenv)</span></span><br></pre></td></tr></table></figure>



<h2 id="安装homebrew"><a href="#安装homebrew" class="headerlink" title="安装homebrew"></a>安装homebrew</h2><p><code>/bin/bash -c &quot;**$(**curl -fsSL https://cdn.jsdelivr.net/gh/ineo6/homebrew-install/install.sh**)**&quot;</code></p>
<p><a href="https://zhuanlan.zhihu.com/p/90508170">https://zhuanlan.zhihu.com/p/90508170</a></p>
<h2 id="Wrong-with-git-and-curl-verison"><a href="#Wrong-with-git-and-curl-verison" class="headerlink" title="Wrong with git and curl verison"></a>Wrong with git and curl verison</h2><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">export HOMEBREW_GIT_PATH=/usr/<span class="keyword">local</span>/bin/git</span><br><span class="line">export HOMEBREW_NO_ENV_FILTERING=<span class="number">1</span></span><br><span class="line">export HOMEBREW_CURL_PATH=<span class="string">&quot;$HOME/bin/curl&quot;</span></span><br></pre></td></tr></table></figure>



<h2 id="文件夹目录没有颜色"><a href="#文件夹目录没有颜色" class="headerlink" title="文件夹目录没有颜色"></a>文件夹目录没有颜色</h2><p>打开环境变量文件<br>如果没有该文件就直接创建</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim ~/.bashrc</span><br></pre></td></tr></table></figure>

<p>添加内容</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">alias ls=&#x27;ls --color=auto&#x27;</span><br></pre></td></tr></table></figure>

<p>使得修改后的环境变量生效</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure>



<h2 id="Linux-中文文件名乱码"><a href="#Linux-中文文件名乱码" class="headerlink" title="Linux 中文文件名乱码"></a>Linux 中文文件名乱码</h2><blockquote>
<p>以下全文代码和数据均已发布至和鲸社区，阅读原文前往，可一键fork跑通 <a href="https://www.heywhale.com/mw/project/64a5070970567260f84b505c">https://www.heywhale.com/mw/project/64a5070970567260f84b505c</a></p>
</blockquote>
<p>windows下生成的中文文件上传到linux后，默认编码utf-8识别文件名可能有问题，可以尝试使用convmv命令进行转换</p>
<p>centos7 系统下可以直接使用yum进行安装：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install convmv</span><br></pre></td></tr></table></figure>

<p>也可以访问<a href="https://www.j3e.de/linux/convmv/">https://www.j3e.de/linux/convmv/</a> 下载安装包，解压后的预编译可执行文件可以直接使用。</p>
<p>使用方法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">USAGE: convmv [options] FILE(S)</span><br><span class="line">-f enc     encoding *from* which should be converted</span><br><span class="line">-t enc     encoding *to* which should be converted</span><br><span class="line">-r         recursively go through directories</span><br><span class="line">-i         interactive mode (ask for each action)</span><br><span class="line">--nfc      target files will be normalization form C for UTF-8 (Linux etc.)</span><br><span class="line">--nfd      target files will be normalization form D for UTF-8 (OS X etc.)</span><br><span class="line">--qfrom    be quiet about the &quot;from&quot; of a rename (if it screws up your terminal e.g.)</span><br><span class="line">--qto      be quiet about the &quot;to&quot; of a rename (if it screws up your terminal e.g.)</span><br><span class="line">--exec c   execute command instead of rename (use #1 and #2 and see man page)</span><br><span class="line">--list     list all available encodings</span><br><span class="line">--lowmem   keep memory footprint low (see man page)</span><br><span class="line">--map m    apply an additional character mapping</span><br><span class="line">--nosmart  ignore if files already seem to be UTF-8 and convert if posible</span><br><span class="line">--notest   actually do rename the files</span><br><span class="line">--replace  will replace files if they are equal</span><br><span class="line">--unescape convert%20ugly%20escape%20sequences</span><br><span class="line">--upper    turn to upper case</span><br><span class="line">--lower    turn to lower case</span><br><span class="line">--parsable write a parsable todo list (see man page)</span><br><span class="line">--help     print this help</span><br></pre></td></tr></table></figure>

<p>这里我们经常使用的几个选项包括：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-f  原始编码格式</span><br><span class="line">-t  目标编码格式</span><br><span class="line">-r  递归</span><br><span class="line">--notest  直接修改原文件</span><br></pre></td></tr></table></figure>

<p>例如有一个目录 <code>mydir</code>，其中包含一些乱码的中文文件名，你可以使用以下命令将文件名编码转换为 UTF-8：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">convmv -f gbk -t utf-8 -r --notest **mydir**</span><br></pre></td></tr></table></figure>

<p>上述命令会递归地将 <strong><code>mydir</code></strong> 目录及其子目录中的文件名从 GBK 编码转换为 UTF-8 编码。</p>
<p>需要注意的是，在使用 <strong><code>convmv</code></strong> 进行文件名转换之前，确保你已经设置了正确的目标编码。通常情况下，UTF-8 是一个较为通用的字符编码，适合处理中文文件名。</p>
<p>注意：在使用 <strong><code>convmv</code></strong> 进行文件名转换之前，建议先备份重要的文件，以免意外操作导致数据丢失。</p>
<h2 id="linux编译参数CPPFLAGS、CFLAGS、LDFLAGS参数的理解"><a href="#linux编译参数CPPFLAGS、CFLAGS、LDFLAGS参数的理解" class="headerlink" title="linux编译参数CPPFLAGS、CFLAGS、LDFLAGS参数的理解"></a>linux编译参数CPPFLAGS、CFLAGS、LDFLAGS参数的理解</h2><p>CPPFLAGS : 预处理器需要的选项 如：-I (大写i指定头文件路径)<br>CFLAGS：编译的时候使用的参数 –Wall –g -c<br>LDFLAGS ：链接库使用的选项 –L -l (大写L指定动态库的路径，小写L指定动态库的名称)</p>
<h2 id="libxml常见错误：fatal-error-libxml-x2F-parser-h-No-such-file-or-directory解决方法"><a href="#libxml常见错误：fatal-error-libxml-x2F-parser-h-No-such-file-or-directory解决方法" class="headerlink" title="libxml常见错误：fatal error: libxml&#x2F;parser.h: No such file or directory解决方法"></a>libxml常见错误：fatal error: libxml&#x2F;parser.h: No such file or directory解决方法</h2><p>在&#x2F;usr 下查找</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">find /usr -name parser.h</span></span><br></pre></td></tr></table></figure>

<p>&#x2F;src&#x2F;kernels&#x2F;2.6.32-696.el6.x86_64&#x2F;include&#x2F;linux&#x2F;parser.h<br>&#x2F;include&#x2F;libxml2&#x2F;libxml&#x2F;parser.h</p>
<p>发现安装到了&#x2F;usr&#x2F;include&#x2F;下了 但是出现这个错误一般情况下都是查找 &#x2F;usr&#x2F;lib在这个下面的库</p>
<p>解决方案：在include下建一个软连接libxml</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">ln</span> -s /usr/include/libxml2/libxml   /usr/include/libxml</span></span><br></pre></td></tr></table></figure>





<h2 id="Linux无法联网无gcc怎么安装软件"><a href="#Linux无法联网无gcc怎么安装软件" class="headerlink" title="Linux无法联网无gcc怎么安装软件?"></a>Linux无法联网无gcc怎么安装软件?</h2><p>来源：<a href="https://blog.csdn.net/mlsama/article/details/106002277">https://blog.csdn.net/mlsama/article/details/106002277</a></p>
<p>以前在Linux上一直使用yum安装软件,非常舒服.最近老大搞了个虚拟机,叫我装下环境,我很开心地接受,不就是yum安装,再配下环境变量吗!结果这台虚拟机不允许联网,我懵逼了.</p>
<p>没办法,只能去下tar包老老实实手动安装,结果编译的时候报错说没有编译器,然后我就傻傻去下了个gcc.tar,下完就傻了,装这个不也要编译器吗!</p>
<p>百度一波,发现了rpm这种好东西!</p>
<p>tar包: 跟zip相似,是一种传输格式.tar包是软件源码的压缩包,安装时需要编译再进行安装,编译需要编译器,如:gcc</p>
<p>rpm包: Redhat Package Management,是红帽子公司开发的包管理器,是源码编译后的结果</p>
<p>如果你的虚拟机无法联网无gcc,你可以去网上找对应的rmp包,再进行安装!</p>
<p>rpm常用命令:</p>
<p>安装: <code>rpm -ivh --prefix=path xxx.rpm</code></p>
<p>–prefix: 指定安装路径,注意有的rpm包不允许指定路径,这时候大多要求root权限(不是root用户需要配置sudo),因为会使用到root用户的文件夹</p>
<p>如果软件的依赖包太多,可以下好全部的依赖包,使用如下命令一起安装:</p>
<p><code>rpm -ivh  *.rpm --nodeps --force</code></p>
<p>查询软件路径: <code>whereis xxx</code></p>
<p>卸载: <code>rpm -e xxx</code></p>
<p>如果其它软件包依赖于您要卸载的软件包，卸载时则会产生错误信息,可以增加参数 –nodeps ,就可以强制删除</p>
<p><code>rpm -e --nodeps xxx</code></p>
<h2 id="Vimium-chrome-插件"><a href="#Vimium-chrome-插件" class="headerlink" title="Vimium chrome 插件"></a>Vimium chrome 插件</h2><p><a href="https://chrome.google.com/extensions/detail/dbepggeogbaibhgnhhndojpepiihcmeb">https://chrome.google.com/extensions/detail/dbepggeogbaibhgnhhndojpepiihcmeb</a></p>
<ul>
<li>向下滚动页面：j</li>
<li>向上滚动页面：k</li>
<li>上翻一页：d</li>
<li>下翻一页：u</li>
<li>滚到最顶部：gg</li>
<li>滚动最底部：G</li>
<li>访问上级页面：H</li>
<li>访问下级页面：L</li>
<li>刷新当前页面：r</li>
<li>关闭当前页面：x</li>
<li>打开新标签页：t</li>
<li>查看页面可点击链接：f</li>
</ul>
<h2 id="Linux-输出重定向"><a href="#Linux-输出重定向" class="headerlink" title="Linux 输出重定向"></a>Linux 输出重定向</h2><p>输出即把相关对象通过输出设备（显示器等）显示出来，输出又分正确输出和错误输出<br>一般情况下标准输出设备为显示器，标准输入设备为键盘。</p>
<p><img src="https://p.ipic.vip/b17x18.jpg" alt="在这里插入图片描述"></p>
<p>linux中用0代表标准输入，1代表标准正确输出，2代表标准错误输出。<br><strong>输出重定向：</strong> 正常输出是把内容输出到显示器上，而输出重定向是把内容输出到文件中</p>
<p><img src="https://p.ipic.vip/brj7wn.png" alt="在这里插入图片描述"></p>
<p>例如：<code>ifconfig &gt; test.log</code> 即把ifconfig执行显示的内容写入test.log.当前页面不再显示执行结果。<br>注意：错误输出重定向&gt;&#x2F;&gt;&gt;后边没有空格</p>
<p><img src="https://p.ipic.vip/zwtrdq.png" alt="在这里插入图片描述"></p>
<p><code>命令 &gt;&gt; 文件 2&gt;&amp;1 </code>和 <code>命令 &amp;&gt;&gt;文件</code> 两个命令作用相同<br>系统有个常见用法<code>ls &amp;&gt;/dev/null</code>正确输出或错误输出结果都不要。（null可以理解为黑洞或垃圾站）<br><code>命令&gt;&gt;文件1 2&gt;&gt;文件2 </code>正确日志和错误日志分开保存</p>
<p>例：<code>nohup java -jar /usr/sbin/lb-agent.jar &gt;&gt;/var/log/lb-agent.log 2&gt;&amp;1 &amp;</code><br>将jar执行的结果写入到lb-agent.log中<br>在命令最后加上&amp;符号，表示让这个进程到后台去执行，这样立刻返回到提示符状态，我们可以接着做下面的事。如：<code>command &amp;</code><br>这种“后台”进程在shell一直打开的情况下是没有问题的，如果我们关了shell窗口甚至退出ssh登录或vnc登录，那么进程自动就结束了。所以如果想退出窗口乃至退出登录仍然保持程序运行，再加上nohup，形如：<code>nohup command 1&gt;output 2&gt;&amp;1 &amp;</code></p>
<h2 id="NCAR-Tutorial"><a href="#NCAR-Tutorial" class="headerlink" title="NCAR Tutorial"></a>NCAR Tutorial</h2><p><a href="https://www.meted.ucar.edu/ucar/unix/">https://www.meted.ucar.edu/ucar/unix/</a> </p>
<p><a href="https://www.meted.ucar.edu/ucar/fortran/">https://www.meted.ucar.edu/ucar/fortran/</a></p>
<p><a href="https://www.meted.ucar.edu/ucar/unix/navmenu.php?tab=1&amp;page=3-3-0&amp;type=flash">https://www.meted.ucar.edu/ucar/unix/navmenu.php?tab=1&amp;page=3-3-0&amp;type=flash</a></p>
<h2 id="菜鸟教程"><a href="#菜鸟教程" class="headerlink" title="菜鸟教程"></a>菜鸟教程</h2><p><a href="https://www.runoob.com/linux/linux-file-attr-permission.html">https://www.runoob.com/linux/linux-file-attr-permission.html</a></p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>MAC</title>
    <url>/2022/05/01/Tool/MAC/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="Mac-装机"><a href="#Mac-装机" class="headerlink" title="Mac 装机"></a>Mac 装机</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">基础：Chrome*</span><br><span class="line"></span><br><span class="line">通讯：微信+QQ+网易邮箱大师</span><br><span class="line"></span><br><span class="line">会议：腾讯会议+ZOOM</span><br><span class="line"></span><br><span class="line">科研：Omnigraffle+Panoply+Mathpix Snip+MacTex+VSCode+Typora+Sublime Tex+PDF Reader Pro+XQuartz+Global Protect+有道词典+字体拷贝</span><br><span class="line"></span><br><span class="line">娱乐：爱奇艺+网易云音乐 </span><br><span class="line"></span><br><span class="line">解压：The Unarchiver</span><br><span class="line"></span><br><span class="line">其他：字体迁移（/Library/Fonts）+ SoundFlower</span><br></pre></td></tr></table></figure>

<p>vscode 登录乌镇超算有版本限制 - 1.97.2 </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew install chrome</span><br><span class="line">brew install panoply</span><br><span class="line">brew install MacTex</span><br><span class="line">brew install XQuartz</span><br><span class="line">brew install --cask mathpix-snipping-tool</span><br><span class="line">brew install --cask archiver</span><br><span class="line"></span><br><span class="line">【pdfcrop】</span><br><span class="line">* brew install --cask basictex</span><br><span class="line">* brew install --cask tex-live-utility</span><br><span class="line">* brew install ghostscript</span><br><span class="line">* Open TeX Live Utility, go to packages and install pdfcrop</span><br><span class="line">* Open new terminal window - you now have pdfcrop</span><br></pre></td></tr></table></figure>





<h4 id="查找文件或文件夹路径"><a href="#查找文件或文件夹路径" class="headerlink" title="查找文件或文件夹路径"></a>查找文件或文件夹路径</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mdfind filename</span><br></pre></td></tr></table></figure>



<h4 id="GlobalProtect"><a href="#GlobalProtect" class="headerlink" title="GlobalProtect"></a>GlobalProtect</h4><p><a href="https://docs.paloaltonetworks.com/globalprotect/4-1/globalprotect-app-user-guide/globalprotect-app-for-mac/download-and-install-the-globalprotect-app-for-mac">https://docs.paloaltonetworks.com/globalprotect/4-1/globalprotect-app-user-guide/globalprotect-app-for-mac/download-and-install-the-globalprotect-app-for-mac</a></p>
<h4 id="读取移动硬盘"><a href="#读取移动硬盘" class="headerlink" title="读取移动硬盘"></a>读取移动硬盘</h4><p><a href="https://tieba.baidu.com/p/7105079883">https://tieba.baidu.com/p/7105079883</a></p>
<p>sudo nano &#x2F;etc&#x2F;fstab</p>
<p>LABEL&#x3D;你的硬盘名字 none ntfs rw,auto,nobrowse</p>
<p>然后就把移动硬盘拔出再插入就好了</p>
<p>不过这样设置之后插入移动硬盘就不会在桌面出现了</p>
<p>所以需要打开finder，在屏幕顶部的选项中选择前往-前往文件夹，输入&#x2F;Volumes&#x2F;，回车</p>
<h4 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- 光标左移：Ctrl + B</span><br><span class="line">- 光标右移：Ctrl + F</span><br><span class="line">- 光标至行首：Ctrl + A</span><br><span class="line">- 光标至行尾：Ctrl + E</span><br><span class="line">- 删除至行首：Ctrl + U</span><br><span class="line">- 删除至行尾：Ctrl + K</span><br><span class="line">- 删除至单词开始：Ctrl + W</span><br><span class="line">- 清屏：Ctrl + L</span><br><span class="line">- 插入最近删除：Ctrl + Y</span><br><span class="line">- 历史命令：↑ 或 ↓箭头，或 ⌃ + P、Ctrl + N</span><br><span class="line">- 搜索历史命令：Ctrl + R</span><br><span class="line">- 中止执行：Ctrl + C</span><br><span class="line">- 选中即复制，单击滚轮粘贴</span><br><span class="line">- 按住 ⌘，单击路径可以在 Finder 中打开</span><br></pre></td></tr></table></figure>



<h4 id="Mac-软件下载"><a href="#Mac-软件下载" class="headerlink" title="Mac 软件下载"></a>Mac 软件下载</h4><p><a href="https://www.52mac.com/">https://www.52mac.com/</a></p>
<h4 id="xcrun-error-invalid-active-developer-path"><a href="#xcrun-error-invalid-active-developer-path" class="headerlink" title="xcrun: error: invalid active developer path"></a>xcrun: error: invalid active developer path</h4><p>发现crontab无法自动提交代码至gitee，但手动提交命令无误，输出了下log文件显示xcrun: error: invalid active developer path报错，网上搜了一下解决方法如下：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">$ xcode-select --install</span><br><span class="line">xcode-select: note: install requested for command line developer tools</span><br></pre></td></tr></table></figure>

<p>回车之后会出现如下的弹窗，点击”安装”即可</p>
<p><img src="https://p.ipic.vip/rxp3om.png" alt="img"></p>
<p>原因是升级 macOS后需要重新安装 <code>Xcode command line tools</code></p>
<h4 id="macOS-Ventura-写入-NTFS-格式移动硬盘的方法"><a href="#macOS-Ventura-写入-NTFS-格式移动硬盘的方法" class="headerlink" title="macOS Ventura 写入 NTFS 格式移动硬盘的方法"></a>macOS Ventura 写入 NTFS 格式移动硬盘的方法</h4><p><a href="https://link.zhihu.com/?target=https://techsviewer.com/how-to-write-ntfs-drives-on-macos-ventura/">How to Write NTFS Drives on macOS Ventura (techsviewer.com)</a></p>
<p>大概看了下，用的是另外提到的一种方法，不是系统自带的 mount_ntfs 而是 NTFS-3G 的 mount_ntfs 来实现的方法。</p>
<p><strong>1、先用 brew tap 扩展访问的库（我不确定是否必须，没有做 a&#x2F;b 试验）</strong></p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">brew tap gromgit/homebrew-fuse</span><br></pre></td></tr></table></figure>

<p><strong>2、然后安装 macfuse，要安装 NTFS-3G 必须 FUSE 的支持</strong></p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">brew install --cask macfuse</span><br></pre></td></tr></table></figure>

<p><strong>3、下面理论是安装 NTFS-3G</strong></p>
<p>但是这里出问题了。</p>
<p>见图，这个时候提示用的系统是 macOS 13，ntfs-3g-mac 不支持</p>
<p><img src="https://p.ipic.vip/c89rpm.png" alt="img"></p>
<p>网上没有找到方法来解决，后来我死马当活马医，试着用了其他命令行命令常见的参数 「– force」，居然可以继续安装了。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">brew install --force ntfs-3g-mac</span><br></pre></td></tr></table></figure>

<p><strong>4、安装后， 下面基本条件就满足了，先卸载移动硬盘，因为默认的装载是只读模式。</strong></p>
<p>首先找到移动硬盘的设备号，用下面命令。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">diskutil list</span><br></pre></td></tr></table></figure>

<p>下面是我的移动硬盘的设备好，是 &#x2F;dev&#x2F;disk6 ，标识符是 disk6s1。</p>
<p><img src="https://p.ipic.vip/ml4o1x.png" alt="img"></p>
<p>因此卸载的命令是下面的，注意把黑色部分替换为你自己的设备标识符</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">sudo umount /dev/disk6s1</span><br></pre></td></tr></table></figure>

<p><strong>然后新建一个硬盘挂载的目录，安全期间，可以新建一个，比如下面命令是在桌面上建一个目录 MobileDisk。</strong></p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">sudo mkrir ~/Desktop/MobileDisk/</span><br></pre></td></tr></table></figure>

<p>然后再用新的 mount_ntfs 命令把硬盘挂上，黑色部分同样是替换为你自己的</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">sudo /usr/local/sbin/mount_ntfs /dev/disk6s1 ~/Desktop/MobileDisk/</span><br></pre></td></tr></table></figure>

<p>理论上，这个时候会弹出来一个窗口提示你需要权限。</p>
<p><img src="https://p.ipic.vip/uqdkqi.png" alt="img"></p>
<p>根据提示，在「隐私与安全性」的页面，超下翻，在「安全性」的大标题下面，会有一个类似「<strong>部分系统软件需要你注意才能使用</strong>」，上面的第一个就是上图提示需要权限的软件，打开授权。</p>
<p><img src="https://p.ipic.vip/zcvgoe.png" alt="img"></p>
<p>然后会提示你重启，重启后，重复第 4 步，注意重启后设备标识可能改变，然后到了 mount 那一步，就不会提示你授权了（刚刚重启就是为了授权成功），随后，你会发现 Finder 里面的移动硬盘，可以拷贝东西进去了。</p>
<p><img src="https://p.ipic.vip/ijtn41.png" alt="img"></p>
<h3 id="2-2-一个问题"><a href="#2-2-一个问题" class="headerlink" title="2.2 一个问题"></a>2.2 一个问题</h3><p>你会发现东西能拷贝进去了，但是删不掉，删除会提示，这可不行啊，拷贝错了就麻烦了。</p>
<p><img src="https://p.ipic.vip/zrfr6h.jpg" alt="img"></p>
<p>当前发现删除方法还是进命令行，然后用「rm」命令删除。</p>
<p>这个可能和废纸篓的使用有一些兼容问题。</p>
<p>目前没有找到更便捷的方法，但总比没有方法的好。</p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Lmod</title>
    <url>/2022/05/01/Tool/Lmod/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="安装lua"><a href="#安装lua" class="headerlink" title="安装lua"></a>安装lua</h3><ul>
<li>无root权限</li>
</ul>
<p>download <code>lua-5.4.7.tar.gz</code> from <a href="https://www.lua.org/download.html">https://www.lua.org/download.html</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">tar -zxvf lua-5.4.7.tar.gz</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make all <span class="built_in">test</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">which</span> lua</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">which</span> lua</span></span><br></pre></td></tr></table></figure>
<ul>
<li>有root 权限<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install lua5.3 liblua5.3-0 liblua5.3-dev lua-filesystem-dev lua-posix-dev</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="安装tcl"><a href="#安装tcl" class="headerlink" title="安装tcl"></a>安装tcl</h3><ul>
<li>无root权限</li>
</ul>
<p>download <code>tcl9.0.0-src.tar.gz</code> from <a href="https://sourceforge.net/projects/tcl/">https://sourceforge.net/projects/tcl/</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">tar -zxvf tcl9.0.0-src.tar.gz</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> tcl9.0.0-src.tar.gz/unix</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./configure --prefix=/home/rychen/software/</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make install</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">whereis tcl</span></span><br></pre></td></tr></table></figure>
<ul>
<li>有root权限</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo apt-get install tcl tcl8.6-dev libtcl8.6</span></span><br></pre></td></tr></table></figure>



<p>download <code>Lmod-8.7.tar.bz2</code> from: <a href="https://sourceforge.net/projects/lmod/files/">https://sourceforge.net/projects/lmod/files/</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar -jxvf Lmod-8.7.tar.bz2</span><br><span class="line">./configure --with-lua=/usr/bin/lua  --with-luac=/usr/bin/luac --prefix=/home/rychen/software/</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>

<p>Add the following to ~&#x2F;.bashrc</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export BASH_ENV=$HOME/software/lmod/lmod/init/profile</span><br><span class="line">source $BASH_ENV</span><br></pre></td></tr></table></figure>







<p>参考：</p>
<p><a href="https://www.cnblogs.com/yeungchie/p/16268954.html">https://www.cnblogs.com/yeungchie/p/16268954.html</a></p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>JEDI using</title>
    <url>/2022/05/01/Tool/JEDI%20using/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="JEDI-Portability"><a href="#JEDI-Portability" class="headerlink" title="JEDI Portability"></a>JEDI Portability</h2><p>正如我们在其他章节所强调的，JEDI 的核心愿景之一，是让它足够通用、强大且高效，从而能够支撑从教学实验性质的“玩具模型”到面向前沿研究与业务预报的耦合数值天气预报（NWP）系统等各类应用。这意味着 JEDI 用户所使用的计算平台将千差万别——从笔记本电脑、工作站到云环境，再到国家级中心的超级计算机。</p>
<p>然而，JEDI 并非孤立存在。与任何现代复杂软件包一样，它依赖大量第三方库和工具来扩展功能与提升性能。例如：</p>
<ul>
<li>读写 NetCDF 数据文件的库（NetCDF、HDF5、PNetCDF）</li>
<li>线性代数计算库（LAPACK、Eigen3）</li>
<li>通过消息传递接口（MPI）实现进程间通信</li>
<li>甚至包括构建工具本身（C++&#x2F;C&#x2F;Fortran 编译器、cmake、ecbuild）</li>
</ul>
<p>对于只想快速投入科研的用户来说，梳理这些依赖关系往往令人头疼。</p>
<p>为了帮助 JEDI 用户和开发者迅速搭建一致且高效的计算环境，JEDI 团队提供了一套“可移植性工具”，包括：</p>
<ol>
<li><p><strong>spack-stack 完整软件栈</strong>  </p>
<p>基于开源包管理器 Spack（由劳伦斯利弗莫尔国家实验室 LLNL 最初开发），涵盖已编译依赖与 Python 环境，并提供在 HPC、云、通用 macOS&#x2F;Linux 上的构建与使用指南。</p>
</li>
<li><p><strong>云机器镜像</strong>  </p>
<p>例如适用于 Amazon Web Services 的 AMI 镜像。</p>
</li>
<li><p><strong>选定 HPC 系统的环境模块</strong>（Environment Modules）</p>
</li>
<li><p><strong>Docker &amp; Singularity 软件容器</strong></p>
</li>
</ol>
<p>spack-stack 仓库内含详细说明和 Spack 配置文件，指定目标平台、软件包、版本及构建选项，用于构建和运行 JEDI（及其他应用）。spack-stack 的标签版本将与 JEDI 的公开发行版保持同步。我们利用 spack-stack 在云镜像（如 AMI）、HPC 系统以及通用 macOS&#x2F;Linux 上生成环境模块。</p>
<p>同样的 spack 配置也用于构建 Docker 和 Singularity 容器，这些容器可在笔记本、工作站、云平台及 HPC 上运行，并借助 Amazon CodeBuild 与 Travis-CI 服务于持续集成测试。</p>
<p>本节后续将介绍如何使用 spack-stack 软件环境来构建和运行 JEDI 应用。</p>
<h3 id="Building-spack-stack-modules-for-JEDI"><a href="#Building-spack-stack-modules-for-JEDI" class="headerlink" title="Building spack-stack modules for JEDI"></a>Building spack-stack modules for JEDI</h3><p>本节内容仅针对 <strong>支持 JEDI 应用（Skylab v8 版本）</strong> 的 spack-stack 环境构建；通用操作请查阅 <a href="https://spack-stack.readthedocs.io/">最新 spack-stack 文档</a>。  </p>
<p>务必先对照 <strong>JEDI &#x2F; spack-stack 版本对应表</strong> 确认兼容组合，再开始安装。下文仅列出与通用文档<strong>差异点</strong>，未提及步骤请按官方流程执行。</p>
<p><strong>一、本版本支持平台</strong></p>
<ul>
<li><strong>macOS</strong> + clang（ewok 图形依赖无法用 gcc 构建）  </li>
<li><strong>Red Hat</strong> + gcc  </li>
<li><strong>Ubuntu</strong> + gcc  </li>
<li><strong>Ubuntu</strong> + intel</li>
</ul>
<p><strong>二、macOS 前置准备</strong></p>
<ol>
<li>安装 <a href="https://brew.sh/">Homebrew</a>（建议全新安装）  </li>
<li>按<a href="https://docs.brew.sh/FAQ#how-do-i-uninstall-homebrew">官方 FAQ</a> 卸旧版本  </li>
<li>阅读 spack-stack 文档中 <strong>macOS &#x2F; Apple Silicon (M1&#x2F;M2)</strong> 专项说明</li>
</ol>
<p><strong>三、安装系统依赖</strong></p>
<table>
<thead>
<tr>
<th>平台</th>
<th>入口</th>
</tr>
</thead>
<tbody><tr>
<td>macOS</td>
<td><a href="https://spack-stack.readthedocs.io/en/1.7.0/NewSiteConfigs.html#homebrew-notes">spack-stack macOS 章节</a></td>
</tr>
<tr>
<td>Red Hat</td>
<td>同一文档后续 <strong>Red Hat 前置安装</strong> 小节</td>
</tr>
</tbody></table>
<p><strong>四、获取代码</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b release/1.9.0 --recursive https://github.com/JCSDA/spack-stack spack-stack-1.9.0</span><br><span class="line"><span class="built_in">cd</span> spack-stack-1.9.0</span><br><span class="line"><span class="built_in">source</span> setup.sh</span><br></pre></td></tr></table></figure>

<p><strong>五、创建并激活环境</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Linux 示例；macOS 请换 --site=macos.default</span></span><br><span class="line">spack stack create <span class="built_in">env</span> --site=linux.default --template=skylab-dev --name=skylab-8.0.0</span><br><span class="line"></span><br><span class="line">spack <span class="built_in">env</span> activate -p envs/skylab-8.0.0</span><br><span class="line"><span class="built_in">export</span> SPACK_SYSTEM_CONFIG_PATH=<span class="string">&quot;<span class="variable">$PWD</span>/envs/skylab-8.0.0/site&quot;</span></span><br></pre></td></tr></table></figure>

<p><strong>六、开始构建</strong></p>
<p>从 <strong>Step 3</strong> 起继续遵循  </p>
<p><a href="https://spack-stack.readthedocs.io/en/latest/NewSiteConfigs.html#creating-a-new-environment">Creating a new environment</a> 官方步骤即可完成编译。</p>
<p>下一节将详细介绍如何在不同平台<strong>使用已装好的 spack-stack 模块</strong>来构建与运行 JEDI。</p>
<h3 id="Using-spack-stack-modules-to-build-and-run-JEDI"><a href="#Using-spack-stack-modules-to-build-and-run-JEDI" class="headerlink" title="Using spack-stack modules to build and run JEDI"></a>Using spack-stack modules to build and run JEDI</h3><p>本节专门介绍如何使用 <strong>spack-stack 环境模块（lmod&#x2F;lua 或 tcl&#x2F;tk）</strong> 来编译与运行 JEDI 应用；通用操作仍请参考 spack-stack 官方文档。</p>
<p><strong>一、模块优势</strong></p>
<p>spack-stack 会自动为所有编译包及 Python 包生成模块，<strong>HPC、云、个人电脑</strong>上用法完全一致。<br>主流两种实现：</p>
<ul>
<li><strong>lmod&#x2F;lua</strong>（推荐，功能更强）  </li>
<li><strong>tcl&#x2F;tk</strong>（旧版）</li>
</ul>
<p>常用命令（两者通用）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">module list                    <span class="comment"># 已加载模块</span></span><br><span class="line">module spider &lt;关键字&gt;         <span class="comment"># 搜索含关键字的模块</span></span><br><span class="line">module avail                   <span class="comment"># 列出与当前环境兼容的模块</span></span><br><span class="line">module load &lt;包1&gt; &lt;包2&gt; ...    <span class="comment"># 加载</span></span><br><span class="line">module unload &lt;包1&gt; &lt;包2&gt; ...  <span class="comment"># 卸载</span></span><br><span class="line">module purge                   <span class="comment"># 清空所有</span></span><br></pre></td></tr></table></figure>

<p>lmod 额外便利：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">module swap &lt;包A&gt; &lt;包B&gt;        <span class="comment"># 一键替换</span></span><br></pre></td></tr></table></figure>
<p>并自动处理依赖、冲突与加载顺序。</p>
<p><strong>二、通用三步法（任意 HPC 均适用）</strong></p>
<ol>
<li><p><strong>先清环境</strong>  </p>
<p>不要在 <code>.bashrc</code> &#x2F; <code>.bash_profile</code> 里预加载其他模块或改搜索路径，保持“干净”启动。</p>
</li>
<li><p><strong>加载 spack-stack 站点模块</strong>  </p>
<p>参考 <a href="https://spack-stack.readthedocs.io/">spack-stack 预配置站点文档</a> 里对应 HPC 的段落。</p>
</li>
<li><p><strong>加载 JEDI &#x2F; Skylab v8 专用模块</strong>  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">module load jedi-fv3-env</span><br><span class="line">module load ewok-env</span><br><span class="line">module load soca-env</span><br><span class="line">module load sp</span><br></pre></td></tr></table></figure>
<p>完成后即可按需编译、运行任意 JEDI bundle。</p>
</li>
</ol>
<p><strong>三、一键脚本：jedi-tools（推荐）</strong></p>
<p>仓库已封装好设置脚本，可自动完成模块加载与路径配置。</p>
<ol>
<li><p><strong>先确认 git-lfs</strong>  </p>
<p>在 Hercules、Discover 等机器需先加载：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">module show git-lfs   <span class="comment"># 查看是否存在</span></span><br><span class="line">module load git-lfs   <span class="comment"># 存在则加载</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>若系统已自带 git-lfs，可跳过。</p>
</blockquote>
</li>
<li><p><strong>创建 JEDI_ROOT 并克隆工具</strong>  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$JEDI_ROOT</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$JEDI_ROOT</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/JCSDA-internal/jedi-tools</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>配置并生效</strong>  </p>
<p>编辑 <code>jedi-tools/buildscripts/setup.sh</code> 头部，填写：</p>
<ul>
<li><p><code>JEDI_ROOT</code> 路径</p>
</li>
<li><p><code>HOST</code> 机器名</p>
</li>
<li><p><code>COMPILER</code> 编译器</p>
</li>
<li><p><code>USER</code> 用户名</p>
</li>
<li><p><code>API_KEY</code>（部分平台需要）  </p>
<p>保存后执行：</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> jedi-tools</span><br><span class="line">vi buildscripts/setup.sh      <span class="comment"># 按提示填写</span></span><br><span class="line"><span class="built_in">source</span> buildscripts/setup.sh</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>验证 &amp; 继续</strong>  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">module list   <span class="comment"># 确认模块已加载</span></span><br></pre></td></tr></table></figure>
<p>随后即可进入「Building and compiling JEDI」步骤。</p>
</li>
</ol>
<p><strong>四、HPC 专用补充</strong></p>
<p>各机器作业提交、队列策略等细节请查阅  </p>
<p><a href="https://jedi-docs.readthedocs.io/">Skylab HPC 用户指南</a>。</p>
<h3 id="JEDI-Containers"><a href="#JEDI-Containers" class="headerlink" title="JEDI Containers"></a>JEDI Containers</h3><ul>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/using/jedi_environment/containers/container_overview.html">Software Containers</a><ul>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/using/jedi_environment/containers/container_overview.html#docker">Docker</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/using/jedi_environment/containers/container_overview.html#available-containers">Available Containers</a></li>
</ul>
</li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/using/jedi_environment/containers/singularity.html">Singularity</a><ul>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/using/jedi_environment/containers/singularity.html#installing-singularity">Installing Singularity</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/using/jedi_environment/containers/singularity.html#using-the-jedi-singularity-container">Using the JEDI Singularity Container</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/using/jedi_environment/containers/singularity.html#working-with-singularity">Working with Singularity</a></li>
</ul>
</li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/using/jedi_environment/containers/vagrant.html">Vagrant (for Mac and Windows)</a><ul>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/using/jedi_environment/containers/vagrant.html#installing-and-configuring-vagrant">Installing and Configuring Vagrant</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/using/jedi_environment/containers/vagrant.html#customizing-the-vagrantfile-optional">Customizing the Vagrantfile (optional)</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/using/jedi_environment/containers/vagrant.html#working-with-vagrant-and-the-jedi-container">Working with Vagrant and the JEDI Container</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/using/jedi_environment/containers/vagrant.html#deleting-a-vagrant-vm">Deleting a Vagrant VM</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/using/jedi_environment/containers/vagrant.html#tunneling-to-host-from-singularity-jupyter-lab-example">Tunneling to Host from Singularity: jupyter-lab Example</a></li>
</ul>
</li>
</ul>
<h3 id="JEDI-on-AWS"><a href="#JEDI-on-AWS" class="headerlink" title="JEDI on AWS"></a>JEDI on AWS</h3><ul>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/using/jedi_environment/cloud/overview.html">AWS Overview</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/using/jedi_environment/cloud/singlenode.html">Running JEDI on a Single Compute Node</a><ul>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/using/jedi_environment/cloud/singlenode.html#launching-instance">Launching instance</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/using/jedi_environment/cloud/singlenode.html#logging-in">Logging in</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/using/jedi_environment/cloud/singlenode.html#suspending-or-terminating-your-compute-node">Suspending or terminating your compute node</a></li>
<li><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/using/jedi_environment/cloud/singlenode.html#choosing-a-different-ec2-instance-type">Choosing a different EC2 Instance Type</a></li>
</ul>
</li>
</ul>
<h2 id="Building-and-Running-JEDI"><a href="#Building-and-Running-JEDI" class="headerlink" title="Building and Running JEDI"></a>Building and Running JEDI</h2><h3 id="Building-and-Running-JEDI-1"><a href="#Building-and-Running-JEDI-1" class="headerlink" title="Building and Running JEDI"></a>Building and Running JEDI</h3><p>如《CMake、CTest 与 ecbuild》一节所述，JEDI 的构建流程主要依托 <strong>CMake</strong> 与 <strong>ecbuild</strong>，可大幅简化操作。典型工作流分为以下步骤（后文逐一详解）：</p>
<ol start="0">
<li>配置系统：设置 Git 与加载 spack-stack 环境（若尚未完成）  </li>
<li>克隆所需的 JEDI bundle，并基于 spack-stack 的 Python 创建并激活 Python3 虚拟环境（venv）  </li>
<li>（可选）编辑 bundle 中的 CMakeLists.txt，指定要使用的代码分支  </li>
<li>进入构建目录，运行 ecbuild 生成 Makefile 等基础设施  </li>
<li>执行 <code>make update</code>（可选，拉取最新代码）与 <code>make</code> 进行编译  </li>
<li>运行 <code>ctest</code> 验证 bundle 是否正常工作</li>
</ol>
<p>对应的命令示例如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> &lt;src-directory&gt;</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/JCSDA/jedi-bundle.git</span><br><span class="line"><span class="built_in">cd</span> &lt;build-directory&gt;</span><br><span class="line"><span class="comment"># 详见构建步骤 3，了解如何在 ecbuild 命令中指定正确的 Python3 解释器</span></span><br><span class="line">ecbuild &lt;src-directory&gt;/jedi-bundle</span><br><span class="line">make update</span><br><span class="line">make -j4</span><br><span class="line">ctest</span><br></pre></td></tr></table></figure>

<p>本文将分步讲解 0–4 步的各类选项；第 5 步（测试）详见 <strong>JEDI Testing</strong> 页面。</p>
<ul>
<li><p><strong>步骤 0 与 1</strong> 通常只需执行一次。  </p>
</li>
<li><p>若你是开发者，需要频繁修改代码，则 <strong>步骤 2–5</strong> 会反复进行，且频率逐渐升高：  </p>
<p>– 仅涉及单个仓库时，<strong>步骤 2</strong>（告诉 ecbuild 使用本地分支）可能只需一次；  </p>
<p>– <strong>步骤 3</strong>（ecbuild）仅在目录结构或依赖关系发生显著变化时才需重新执行；  </p>
<p>– <strong>步骤 4 与 5</strong>（编译与测试）将随代码修改而高频率运行。</p>
</li>
</ul>
<h4 id="Step-0-System-Configuration"><a href="#Step-0-System-Configuration" class="headerlink" title="Step 0: System Configuration"></a>Step 0: System Configuration</h4><p>在正式构建 JEDI 之前，请先完成以下一次性系统配置。完成后，整个开发周期内无需再次设置。</p>
<p><strong>一、加载 spack-stack 环境</strong>  </p>
<ol>
<li>各支持的超算平台已预装近一年的 spack-stack 发布版本，直接 <code>module load</code> 即可（用法见《使用 spack-stack 模块构建与运行 JEDI》）。  </li>
<li>若使用 <strong>公开发行的 JEDI</strong>，务必匹配对应版本：</li>
</ol>
<table>
<thead>
<tr>
<th>发布日期</th>
<th>JEDI-bundle 标签</th>
<th>spack-stack 版本</th>
</tr>
</thead>
<tbody><tr>
<td>2025-03</td>
<td>develop</td>
<td>1.9.0</td>
</tr>
<tr>
<td>2024-10</td>
<td>develop</td>
<td>1.8.0</td>
</tr>
<tr>
<td>2024-04</td>
<td>skylab-v8.0.0</td>
<td>1.7.0</td>
</tr>
<tr>
<td>2024-01</td>
<td>skylab-v7.0.0</td>
<td>1.6.0</td>
</tr>
</tbody></table>
<ol start="3">
<li>本地机或非支持平台需<strong>自行编译 spack-stack</strong>（见前文构建指南）。</li>
</ol>
<p><strong>二、Git 全局配置（一次即可）</strong></p>
<ol>
<li><p>用户身份  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name  <span class="string">&quot;你的GitHub用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;注册GitHub的邮箱&quot;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>缓存 GitHub 凭证（避免 ecbuild 多次克隆时反复输密码）  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global credential.helper <span class="string">&#x27;cache --timeout=3600&#x27;</span>   <span class="comment"># 3600秒=1小时，可酌情加大</span></span><br></pre></td></tr></table></figure>
<p>某些高安全超算可能要求<strong>明文落盘</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global --add credential.helper <span class="string">&#x27;store&#x27;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>在 HPC 上你的 home 目录已受系统级保护，风险可控；笔记本或公共桌面环境请谨慎使用。</p>
</blockquote>
</li>
<li><p>初始化 Git LFS（容器内外均需一次）  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git lfs install --skip-repo</span><br></pre></td></tr></table></figure></li>
</ol>
<p><strong>三、Open MPI 超订设置（≤ 4 核笔记本必备）</strong></p>
<p>JEDI 大量测试最少需要 <strong>6 个 MPI 任务</strong>。若 CPU 线程数 &lt; 6，请允许单核运行多任务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p ~/.openmpi</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;rmaps_base_oversubscribe = 1&quot;</span> &gt; ~/.openmpi/mca-params.conf</span><br></pre></td></tr></table></figure>

<p>完成以上三步后，即可进入 <strong>克隆 → 构建 → 测试</strong> 流程。</p>
<h4 id="Step-1-Clone-the-Desired-JEDI-Bundle"><a href="#Step-1-Clone-the-Desired-JEDI-Bundle" class="headerlink" title="Step 1: Clone the Desired JEDI Bundle"></a>Step 1: Clone the Desired JEDI Bundle</h4><p>JEDI 应用采用“<strong>高阶 bundle</strong>”形式组织，把运行所需的所有 Git 仓库一次性汇集到位。  </p>
<ul>
<li>个别 bundle 与特定模式（如 FV3、MPAS）绑定；  </li>
<li><strong>绝大多数场景推荐使用通用 jedi-bundle</strong>。</li>
</ul>
<p><strong>一、准备 JEDI_ROOT</strong></p>
<p>任选路径创建根目录（可叫任意名字，示例用 <code>jedi</code>），并导出环境变量：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p &lt;path-to-root&gt;/jedi</span><br><span class="line"><span class="built_in">export</span> JEDI_ROOT=&lt;path-to-root&gt;/jedi</span><br></pre></td></tr></table></figure>

<blockquote>
<p>后文所有文档均以 <code>$JEDI_ROOT</code> 指代该目录。</p>
</blockquote>
<p><strong>二、一次性创建并激活 Python 虚拟环境</strong></p>
<p>（基于 spack-stack 的 python3，带系统库）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 首次创建</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$JEDI_ROOT</span></span><br><span class="line"><span class="variable">$python_ROOT</span>/bin/python3 -m venv --system-site-packages venv</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每次编译/运行前务必激活</span></span><br><span class="line"><span class="built_in">source</span> venv/bin/activate</span><br></pre></td></tr></table></figure>

<p><strong>三、获取 bundle</strong></p>
<table>
<thead>
<tr>
<th>用户类型</th>
<th>仓库地址</th>
<th>推荐分支</th>
</tr>
</thead>
<tbody><tr>
<td><strong>公开用户</strong></td>
<td><a href="https://github.com/JCSDA/jedi-bundle">https://github.com/JCSDA/jedi-bundle</a></td>
<td>最新发行版，如 <code>-b 8.0.0</code></td>
</tr>
<tr>
<td><strong>内部开发者</strong></td>
<td><a href="https://github.com/jcsda-internal/jedi-bundle">https://github.com/jcsda-internal/jedi-bundle</a></td>
<td>默认 <code>develop</code>（无需 <code>-b</code>）</td>
</tr>
</tbody></table>
<p>示例命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$JEDI_ROOT</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 公开用户</span></span><br><span class="line">git <span class="built_in">clone</span> -b 8.0.0 https://github.com/JCSDA/jedi-bundle.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 内部开发者</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/jcsda-internal/jedi-bundle.git</span><br></pre></td></tr></table></figure>

<p>克隆完成后即可进入后续 <strong>ecbuild → make → ctest</strong> 流程。</p>
<h4 id="Step-2-Choose-your-Repos"><a href="#Step-2-Choose-your-Repos" class="headerlink" title="Step 2: Choose your Repos"></a>Step 2: Choose your Repos</h4><ol>
<li><strong>设定 <code>JEDI_SRC</code></strong></li>
</ol>
<p>克隆完成后，bundle 目录即为<strong>源码根目录</strong>，建议导出为环境变量：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> JEDI_SRC=<span class="variable">$JEDI_ROOT</span>/jedi-bundle</span><br></pre></td></tr></table></figure>
<p>下文默认已 <code>cd $JEDI_SRC</code>。</p>
<ol start="2">
<li><strong>文件结构</strong></li>
</ol>
<p>目录内容很少，关键文件：</p>
<ul>
<li><code>README</code>： bundle 专用说明  </li>
<li><code>CMakeLists.txt</code>：定义 ecbuild 要拉取&#x2F;编译的所有仓库和分支</li>
</ul>
<ol start="3">
<li><strong>默认片段示例（jedi-bundle）</strong></li>
</ol>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">ecbuild_bundle(<span class="keyword">PROJECT</span> gsw   GIT <span class="string">&quot;https://github.com/jcsda-internal/GSW-Fortran.git&quot;</span> BRANCH develop UPDATE)</span><br><span class="line">ecbuild_bundle(<span class="keyword">PROJECT</span> oops  GIT <span class="string">&quot;https://github.com/jcsda-internal/oops.git&quot;</span>        BRANCH develop UPDATE)</span><br><span class="line">ecbuild_bundle(<span class="keyword">PROJECT</span> vader GIT <span class="string">&quot;https://github.com/jcsda-internal/vader.git&quot;</span>       BRANCH develop UPDATE)</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<ul>
<li><code>BRANCH</code>：指定要检出的分支  </li>
<li><code>UPDATE</code>：允许 <code>make update</code> 时强制拉取最新提交  </li>
<li>若本地<strong>不存在</strong>该仓库，ecbuild 会自动克隆；<strong>存在</strong>则不再拉取，除非带 <code>UPDATE</code> 并执行 <code>make update</code></li>
</ul>
<ol start="4">
<li><strong>开发者常用改动</strong></li>
</ol>
<p><strong>场景</strong>：你已在本地创建并切换到功能分支，例如  </p>
<p><code>ufo/feature/newstuff</code></p>
<p><strong>做法</strong>：</p>
<ol>
<li><p>把 <code>CMakeLists.txt</code> 对应行改为  </p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">ecbuild_bundle(<span class="keyword">PROJECT</span> ufo</span><br><span class="line">               GIT <span class="string">&quot;$&#123;JEDI_SRC&#125;/ufo&quot;</span>   <span class="comment"># 指向本地副本</span></span><br><span class="line">               BRANCH feature/newstuff) <span class="comment"># 移除 UPDATE</span></span><br></pre></td></tr></table></figure></li>
<li><p>之后 ecbuild 会<strong>直接使用</strong>你的本地分支，不会尝试远程更新。</p>
</li>
<li><p><strong>拉取特定标签或commit</strong></p>
</li>
</ol>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">ecbuild_bundle(<span class="keyword">PROJECT</span> eckit</span><br><span class="line">               GIT <span class="string">&quot;https://github.com/ECMWF/eckit.git&quot;</span></span><br><span class="line">               TAG <span class="number">0.18</span>.<span class="number">5</span>)   <span class="comment"># 或 HASH &lt;sha&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="6">
<li><strong>更多选项</strong></li>
</ol>
<p>参见 ECMWF ecbuild 仓库：  </p>
<p><code>cmake/ecbuild_bundle.cmake</code></p>
<h4 id="Step-3-Run-ecbuild-from-the-build-directory"><a href="#Step-3-Run-ecbuild-from-the-build-directory" class="headerlink" title="Step 3: Run ecbuild (from the build directory)"></a>Step 3: Run ecbuild (from the build directory)</h4><ol>
<li><strong>创建并导出构建目录</strong></li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$JEDI_ROOT</span></span><br><span class="line"><span class="built_in">mkdir</span> build</span><br><span class="line"><span class="built_in">export</span> JEDI_BUILD=<span class="variable">$JEDI_ROOT</span>/build</span><br></pre></td></tr></table></figure>

<ol start="2">
<li><strong>基本 ecbuild 命令</strong></li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$JEDI_BUILD</span></span><br><span class="line">ecbuild <span class="variable">$JEDI_SRC</span>          <span class="comment"># 源码目录 = $JEDI_SRC</span></span><br></pre></td></tr></table></figure>
<ul>
<li><strong>源码与构建目录必须分开</strong>  </li>
<li>在已配置好的 HPC 或 AWS 实例上，上述命令通常可直接使用  </li>
<li>首次运行需几分钟，请耐心等待</li>
</ul>
<ol start="3">
<li><strong>显式指定 Python3 解释器（可选）</strong></li>
</ol>
<p>若系统存在多个 Python3，使用 spack-stack 提供的版本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ecbuild -DPython3_EXECUTABLE=<span class="variable">$&#123;python_ROOT&#125;</span>/bin/python3 <span class="variable">$JEDI_SRC</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>同理可指向其他 Python3 安装路径</p>
</blockquote>
<ol start="4">
<li><strong>警告：部分 bundle 需先运行专用脚本</strong></li>
</ol>
<p>某些 HPC 环境<strong>要求先执行 bundle 提供的构建脚本</strong>，而非直接 <code>ecbuild</code>。<br>→ 务必先阅读 <code>&lt;JEDI_SRC&gt;/README</code>，确认是否需要额外步骤。</p>
<ol start="5">
<li><strong>ecbuild 常用选项与传参给 CMake</strong></li>
</ol>
<p>ecbuild 是 CMake 的封装，语法：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ecbuild [ecbuild-选项] [--] [CMake-选项] &lt;src-directory&gt;</span><br></pre></td></tr></table></figure>

<p><strong>实用示例</strong>  </p>
<p>① <strong>Debug 模式</strong>（开启调试符号 + 额外运行时检查）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ecbuild --build=debug <span class="variable">$JEDI_SRC</span></span><br></pre></td></tr></table></figure>

<p>② <strong>指定编译器及额外标志</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ecbuild -- \</span><br><span class="line">        -DCMAKE_CXX_COMPILER=/usr/bin/g++ \</span><br><span class="line">        -DCMAKE_CXX_FLAGS=<span class="string">&quot;-Wfloat-equal -Wcast-align&quot;</span> \</span><br><span class="line">        <span class="variable">$JEDI_SRC</span></span><br></pre></td></tr></table></figure>

<ol start="6">
<li><strong>平台相关提示</strong></li>
</ol>
<ul>
<li><strong>已支持 HPC</strong>：先加载对应 spack-stack 模块（见《使用 spack-stack 模块》），即可直接使用 ecbuild、eckit 等全部依赖  </li>
<li><strong>未被支持的系统</strong>：参考 spack-stack 文档，自行生成 site-config 并安装软件栈，再执行 ecbuild</li>
</ul>
<p>完成 ecbuild 后，构建目录将生成 <code>Makefile</code> 及相关配置文件，接下来即可：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make update &amp;&amp; make -j&lt;x&gt; &amp;&amp; ctest</span><br></pre></td></tr></table></figure>

<h4 id="Step-4-Run-make-from-the-build-directory"><a href="#Step-4-Run-make-from-the-build-directory" class="headerlink" title="Step 4: Run make (from the build directory)"></a>Step 4: Run make (from the build directory)</h4><ol>
<li><strong>更新源码（可选但强烈建议）</strong></li>
</ol>
<p>在构建目录执行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make update</span><br></pre></td></tr></table></figure>
<ul>
<li>仅会拉取 <code>CMakeLists.txt</code> 中带有 <code>UPDATE</code> 参数的仓库  </li>
<li><strong>若本地有未推送的改动</strong>，可能产生合并冲突，需先手工解决</li>
</ul>
<ol start="2">
<li><strong>并行编译</strong></li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make -j4          <span class="comment"># 4 进程并行，可视 CPU 核数提高</span></span><br></pre></td></tr></table></figure>
<ul>
<li>台式机&#x2F;笔记本&#x2F;HPC 均适用；典型提速 2–4 倍  </li>
<li>编译耗时 ≥10 min，请耐心等待</li>
</ul>
<ol start="3">
<li><strong>调试&#x2F;排错常用选项</strong></li>
</ol>
<table>
<thead>
<tr>
<th>目的</th>
<th>命令</th>
</tr>
</thead>
<tbody><tr>
<td>显示完整编译命令</td>
<td><code>make VERBOSE=1 -j4</code></td>
</tr>
<tr>
<td>单进程重编（定位真实报错）</td>
<td><code>make VERBOSE=1</code> 或 <code>make -j1</code></td>
</tr>
<tr>
<td>查看所有可用目标</td>
<td><code>make --help</code></td>
</tr>
</tbody></table>
<blockquote>
<p>并行失败时，末行输出<strong>不一定</strong>是根本原因；改单进程重跑即可看清第一条错误。</p>
</blockquote>
<ol start="4">
<li><strong>下一步</strong></li>
</ol>
<p>编译成功后，按 <strong><a href="https://jedi-docs.readthedocs.io/en/latest/testing/index.html">JEDI Testing</a></strong> 页面运行 <code>ctest</code> 验证功能。</p>
<h3 id="Running-JEDI-applications"><a href="#Running-JEDI-applications" class="headerlink" title="Running JEDI applications"></a>Running JEDI applications</h3><p>运行 JEDI 可执行文件时有四种常用模式，均通过命令行开关控制：</p>
<ol>
<li><p><strong>业务运行模式</strong>（最常用）  </p>
<p>以下示例用 FV3 变分系统读取 <code>myconfig.yaml</code> 并输出结果；<code>N</code> 为 MPI 进程数，按平台将 <code>mpiexec -n N</code> 换成 <code>srun -n N</code> 等对应启动器，并放入作业脚本或交互会话执行：  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mpiexec -n N fv3jedi-var.x myconfig.yaml [output-file]</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>仅验证配置模式</strong>  </p>
<p>不真正跑同化，只检查 <code>myconfig.yaml</code> 是否符合 JSON Schema，给出友好报错：  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fv3jedi-var.x --validate-only myconfig.yaml</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>跳过验证模式</strong>  </p>
<p>直接运行，不做配置合法性检查。仅建议在“同配置已先通过 <code>--validate-only</code>”时使用，否则出错信息可能晦涩难懂：  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fv3jedi-var.x --no-validate myconfig.yaml [output-file]</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>生成 JSON 模式模式</strong>  </p>
<p>导出变分应用的 JSON Schema，可供 IDE 实现配置键自动补全与实时校验：  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fv3jedi-var.x --output-json-schema=myschema.schema</span><br></pre></td></tr></table></figure></li>
</ol>
<blockquote>
<p>其余 JEDI 应用（<code>mpasjedi-var.x</code>、<code>soca-var.x</code> 等）命令格式完全相同，只需替换可执行文件名。</p>
</blockquote>
<h3 id="JEDI-Configuration-Files-Content"><a href="#JEDI-Configuration-Files-Content" class="headerlink" title="JEDI Configuration Files: Content"></a>JEDI Configuration Files: Content</h3><p>这份文档并非“终极参考手册”，它只是用通俗语言带你快速看懂 JEDI 配置文件里常见字段的用途与玩法。不同模式、不同观测类型对同一功能的实现往往名字不同、参数也不同，所以这里列出的只是“通用套路”，而非“死规矩”。</p>
<p>欢迎用户和开发者随时往配置里加自己的“新花样”，并顺手把配套代码也补上。想少走弯路？直接把 saber、ioda、ufo、fv3-jedi 这几个官方仓库的配置文件当“模板”抄作业就行——结构、内容、命名风格都给你示范好了。</p>
<p>本文唯一目标：让你拿到一份 YAML&#x2F;JSON 配置后，能秒懂顶层字段在干嘛，并随心所欲地改它、跑应用；顺便也能给开发者提供写新测试的灵感。  </p>
<p>如果你想“让 JEDI 认新字段”——也就是改源码去解析配置——请移步姊妹篇《JEDI 配置文件：实战实现指南》，那里全是干活代码。</p>
<p>下面各节就按 YAML&#x2F;JSON 的顶层 key 逐一拆解，告诉你它们各自管哪片天。</p>
<h4 id="geometry"><a href="#geometry" class="headerlink" title="geometry"></a>geometry</h4><p><strong>功能</strong>：一次性定义“模式网格”+“并行剖分”。</p>
<ul>
<li>水平&#x2F;垂直分辨率、层数、格点分布；</li>
<li>计算节点如何分块（tile、MPI-rank、io-group）。<br><strong>特殊场景</strong>：FV3 等模式不内嵌网格，而从 git-LFS 提供的二进制文件读取；同时可附带 1 个或多个 Fortran namelist，供模式启动时完成剖分与初始化。</li>
</ul>
<h4 id="state"><a href="#state" class="headerlink" title="state"></a>state</h4><p><strong>功能</strong>：为“模式状态”批量注册单元测试。<br>覆盖范围：文件 I&#x2F;O、空间插值、变量增删、增量（increment）运算、背景误差协方差矩阵构造等。<br><strong>用途</strong>：开发者快速回归测试；用户验证新编译或新机器环境。</p>
<h4 id="model-linear-model"><a href="#model-linear-model" class="headerlink" title="model, linear model"></a>model, linear model</h4><p><strong>功能</strong>：分别给“全量模式”与“切线&#x2F;伴随模式”开参数表。<br>可含：</p>
<ul>
<li>物理过程开关、时间步长、扩散系数；</li>
<li>物理包选项（微物理、对流、辐射等）；</li>
<li>任意 Fortran namelist 文件路径，模式启动时自动 ingest。</li>
</ul>
<h4 id="background-error"><a href="#background-error" class="headerlink" title="background error"></a>background error</h4><p><strong>功能</strong>：规定背景误差协方差矩阵（B 矩阵）的构造方案。<br>首关键字 <strong>covariance model</strong> 决定算法：</p>
<ul>
<li><strong>BUMP</strong>（默认流行项）：非结构化网格背景误差协方差包，由 JCSDA &#x2F; Météo-France 的 B. Menetrier 开发，已集成于 saber；</li>
<li><strong>static</strong>：部分模式提供预计算的静态 B 矩阵，直接加载即可。</li>
</ul>
<h4 id="model-aux-control-model-aux-error"><a href="#model-aux-control-model-aux-error" class="headerlink" title="model aux control, model aux error"></a>model aux control, model aux error</h4><p><strong>功能</strong>：分别定义“模式偏差估计”与“偏差误差协方差”。</p>
<ul>
<li>偏差项可含：卫星辐射度扫描偏差、探空仪系统误差、海温漂移等；</li>
<li>协方差形式目前多设为对角或分块对角，也可通过 saber 插件扩展。</li>
</ul>
<h4 id="initial-condition"><a href="#initial-condition" class="headerlink" title="initial condition"></a>initial condition</h4><p>本条目用于定义一次预报或资料同化（DA）循环的初始条件。  </p>
<p>其典型做法是给出模型启动时需读取的重启文件路径及相应的 Fortran namelist 列表；亦可直接指定某种理想化的解析初始场。  </p>
<p>JEDI 目前内置多套解析初始场方案，均源于 2012 年由 NOAA、NSF、DOE、NCAR 与密歇根大学联合主导的 Dynamical Core Intercomparison Project（DCMIP）所提出的理想化基准试验。  </p>
<p>未来可视需求扩展更多解析模型选项。</p>
<h4 id="observations"><a href="#observations" class="headerlink" title="observations"></a>observations</h4><p>本节通常是配置文件中篇幅最大的一部分，用于：</p>
<ol>
<li>在 HofX 应用中指定要计算的观测，  </li>
<li>或在一次资料同化（DA）循环中指定要同化的观测，  </li>
<li>同时给出观测扰动（perturbation）设定。</li>
</ol>
<p>在顶层，<code>obs perturbations</code>（YAML 关键字）控制是否对观测加扰动，默认值为 <code>false</code>。</p>
<p><code>observers</code> 是一个列表，每个元素对应一种观测类型，其常用子项如下（均为 YAML 键）：</p>
<ul>
<li><p><strong>obs space</strong>（必需）：观测空间相关配置  </p>
<ul>
<li><strong>name</strong>（必需）：便于日志识别的描述性名称  </li>
<li><strong>obsdatain</strong>（必需）：输入引擎  <ul>
<li><strong>engine</strong>（必需）  <ul>
<li><strong>type</strong>：后端类型（<code>H5File</code>、<code>ODB</code> 等）  </li>
<li><strong>obsfile</strong>：输入文件名</li>
</ul>
</li>
</ul>
</li>
<li><strong>obsdataout</strong>（可选）：输出引擎（格式同 <code>obsdatain</code>）  </li>
<li><strong>observed variables</strong>（可选）：需由 UFO 滤波器处理、且其观测值可从输入文件直接载入的变量列表。  <ul>
<li>若省略，则默认使用输入文件中所有 <code>ObsValue</code> 变量；  </li>
<li>若同时给出 <code>channels</code>，则该列表对“观测变量”和“模拟变量”均生效。</li>
</ul>
</li>
<li><strong>derived variables</strong>（可选）：观测值无法直接载入、必须由滤波器生成的变量列表。  </li>
<li><strong>simulated variables</strong>（必需，可为空列表）：需要由观测算子模拟的变量列表。</li>
</ul>
</li>
<li><p><strong>obs operator</strong>（必需）：观测算子及其选项  </p>
<ul>
<li><strong>name</strong>（必需）：<code>ObsOperator</code> 与 <code>LinearObsOperator</code> 工厂注册名（C++ 代码中定义）。  </li>
<li>其余选项视具体算子而定（参见各算子文档）。</li>
</ul>
</li>
<li><p><strong>obs error</strong>（DA 必需）：观测误差协方差矩阵配置  </p>
<ul>
<li>首项通常为 <strong>covariance model</strong>，指定构造方法；目前仅支持 <code>diagonal</code>（对角），这也是缺省行为。  </li>
<li>初始误差标准差优先从 <code>ObsError</code> 组读取；缺失的变量将被置为缺测值，用户必须通过滤波器（通常用 <code>assign error</code> 动作）在后续流程中补全，否则最终会被剔除。</li>
</ul>
</li>
<li><p><strong>obs filters</strong>（可选）：质量控制（QC）滤波器列表（参见现有滤波器文档）。</p>
</li>
<li><p><strong>obs bias</strong>（可选）：偏差校正方案。</p>
</li>
<li><p><strong>geovals</strong>（可选，仅 UFO 测试使用）：指定模拟输出文件及其他测试参数。</p>
</li>
</ul>
<p><strong>典型示例</strong></p>
<ol>
<li><p>探空仪（radiosonde）  </p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">obs space:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">Radiosonde</span></span><br><span class="line">  <span class="attr">obsdatain:</span></span><br><span class="line">    <span class="attr">engine:</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">H5File</span></span><br><span class="line">      <span class="attr">obsfile:</span> <span class="string">Data/sondes_obs_2018041500.nc4</span></span><br><span class="line">  <span class="attr">simulated variables:</span> [<span class="string">airTemperature</span>, <span class="string">windEastward</span>, <span class="string">windNorthward</span>]</span><br></pre></td></tr></table></figure>
</li>
<li><p>AMSU-A 辐射率（含通道选择）  </p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">obs space:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">amsua_n19</span></span><br><span class="line">  <span class="attr">obsdatain:</span></span><br><span class="line">    <span class="attr">engine:</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">H5File</span></span><br><span class="line">      <span class="attr">obsfile:</span> <span class="string">Data/amsua_n19_obs_2018041500.nc4</span></span><br><span class="line">  <span class="attr">obsdataout:</span></span><br><span class="line">    <span class="attr">engine:</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">H5File</span></span><br><span class="line">      <span class="attr">obsfile:</span> <span class="string">Data/amsua_n19_obs_2018041500_out.nc4</span></span><br><span class="line">  <span class="attr">simulated variables:</span> [<span class="string">brightnessTemperature</span>]</span><br><span class="line">  <span class="attr">channels:</span> <span class="number">1</span><span class="number">-10</span><span class="string">,15</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>派生风分量（输入为风速&#x2F;风向，需滤波转换）  </p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">obs space:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">Radiosonde</span></span><br><span class="line">  <span class="attr">obsdatain:</span></span><br><span class="line">    <span class="attr">engine:</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">H5File</span></span><br><span class="line">      <span class="attr">obsfile:</span> <span class="string">Data/sondes_obs_2018041500.nc4</span></span><br><span class="line">  <span class="attr">simulated variables:</span> [<span class="string">airTemperature</span>, <span class="string">windEastward</span>, <span class="string">windNorthward</span>]</span><br><span class="line">  <span class="attr">derived variables:</span> [<span class="string">windEastward</span>, <span class="string">windNorthward</span>]</span><br></pre></td></tr></table></figure>
</li>
<li><p>观测+派生变量混合（先质控再派生气压）  </p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">obs space:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">Surface</span></span><br><span class="line">  <span class="attr">obsdatain:</span></span><br><span class="line">    <span class="attr">engine:</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">H5File</span></span><br><span class="line">      <span class="attr">obsfile:</span> <span class="string">Data/ufo/testinput_tier_1/PStar_obs_20210521T1200Z.nc4</span></span><br><span class="line">  <span class="attr">observed variables:</span> [<span class="string">station_pressure</span>, <span class="string">mean_sea_level_pressure</span>]</span><br><span class="line">  <span class="attr">derived variables:</span> [<span class="string">stationPressure</span>]</span><br><span class="line">  <span class="attr">simulated variables:</span> [<span class="string">stationPressure</span>]</span><br></pre></td></tr></table></figure></li>
</ol>
<p><strong>观测空间扩展（companion records）</strong></p>
<p>当原始数据已按记录（record）分组时，可为每条记录自动生成一条“伴随记录”（companion record），并赋予固定层数。用法示例：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">observations:</span></span><br><span class="line">  <span class="attr">observers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">obs space:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">Sonde</span></span><br><span class="line">      <span class="attr">obsdatain:</span></span><br><span class="line">        <span class="attr">engine:</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">ODB</span></span><br><span class="line">          <span class="attr">obsfile:</span> <span class="string">sonde.odb</span></span><br><span class="line">        <span class="attr">obsgrouping:</span></span><br><span class="line">          <span class="attr">group variables:</span> [ <span class="string">&quot;stationIdentification&quot;</span> ]</span><br><span class="line">      <span class="attr">extension:</span></span><br><span class="line">        <span class="attr">allocate companion records with length:</span> <span class="number">10</span></span><br><span class="line">        <span class="attr">variables filled with non-missing values:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;latitude&quot;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;longitude&quot;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;dateTime&quot;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;pressure&quot;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;air_pressure_levels&quot;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;stationIdentification&quot;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><code>allocate companion records with length</code> 控制每条伴随记录的层数（&gt;0 的整数；非法值则跳过扩展）。  </li>
<li>仅当 <code>obsgrouping.group variables</code> 已设置时才生效。  </li>
<li>设原始数据有 <code>nlocs</code> 个位置、<code>nrecs</code> 条记录，每条伴随记录含 <code>ncomplocs</code> 层，则观测空间总共增加 <code>ncomplocs * nrecs</code> 个位置。  </li>
<li>伴随记录与原记录位于同一 MPI 进程；原记录索引为 <code>k</code> 时，其伴随记录索引为 <code>k + nrecs</code>。  </li>
<li>默认把 <code>MetaData</code> 组内列出的变量首值复制到伴随记录各层，其余变量填缺测；用户可在后续滤波器中再用 <code>FillAveragedProfileData</code> 或 <code>ProfileAverageObsPressure</code> 等函数细化。  </li>
<li>扩展后会自动新增 <code>MetaData/extendedObsSpace</code> 变量：0 表示原始数据，1 表示扩展数据，可供 <code>where</code> 语句筛选。</li>
</ul>
<p>附：通过 IODA 写出结果的完整 YAML 片段</p>
<p>（此处可继续给出示例，略）</p>
<h4 id="time-window"><a href="#time-window" class="headerlink" title="time window"></a>time window</h4><p><strong>用途</strong>：为变分（Variational）、集合变分（EDA）、局地集合 DA（LocalEnsembleDA）、造观测（MakeObs）、观测算子（HofX&#x2F;EnsHofX）等应用统一划定“同化时间窗”。</p>
<p><strong>子项</strong>（ISO-8601 格式）：</p>
<ul>
<li><strong>begin</strong>：窗口起始时刻</li>
<li><strong>length</strong>：窗口长度（如 <code>PT6H</code>）</li>
<li><strong>end</strong>：窗口结束时刻</li>
</ul>
<p><strong>约束</strong>：只能填 <strong>length</strong> 或 <strong>end</strong> 之一，否则抛异常。</p>
<ul>
<li><strong>bound to include</strong>：指定哪一侧闭区间，可选 <code>begin</code>&#x2F;<code>end</code>（默认 <code>end</code>）。</li>
</ul>
<h4 id="cost-function"><a href="#cost-function" class="headerlink" title="cost function"></a>cost function</h4><p><strong>用途</strong>：列出计算代价函数所需的全部参数、控制变量与开关。<br>（具体可扩展项参见“现有代价函数”文档。）</p>
<h4 id="minimizer"><a href="#minimizer" class="headerlink" title="minimizer"></a>minimizer</h4><p><strong>用途</strong>：告诉 OOPS 采用哪种迭代算法最小化上述代价函数。<br><strong>algorithm</strong> 可选值：<br><code>DRGMRESR</code>, <code>DRIPCG</code>, <code>GMRESR</code>, <code>IPCG</code>, <code>SaddlePoint</code>, <code>RPCG</code>, <code>DRPCG</code>, <code>DRPFOM</code>, <code>LBGMRESR</code>, <code>DRPLanczos</code>, <code>PCG</code>, <code>PLanczos</code>, <code>RPLanczos</code>, <code>MINRES</code>, <code>FGMRES</code><br>（算法细节参见“minimizers”专页。）</p>
<h4 id="output"><a href="#output" class="headerlink" title="output"></a>output</h4><p><strong>用途</strong>：统一描述所有输出文件的<strong>文件名、存储路径、格式、输出频率</strong>等属性。<br>支持一次性为多个模块（状态、观测、诊断）分别设定输出规则。</p>
<h4 id="top-level-variables"><a href="#top-level-variables" class="headerlink" title="top-level variables"></a>top-level variables</h4><p>JEDI 配置采用层级 YAML&#x2F;JSON，除上述高频段外，其余字段均可视为独立 <code>Configuration</code> 对象，按需插入即可。</p>
<h2 id="Running-Skylab"><a href="#Running-Skylab" class="headerlink" title="Running Skylab"></a>Running Skylab</h2><h3 id="Building-and-running-SkyLab"><a href="#Building-and-running-SkyLab" class="headerlink" title="Building and running SkyLab"></a>Building and running SkyLab</h3><h4 id="List-of-spack-software-and-AMIs"><a href="#List-of-spack-software-and-AMIs" class="headerlink" title="List of spack, software, and AMIs"></a>List of spack, software, and AMIs</h4><p>使用版本</p>
<ul>
<li>spack-stack-1.9.1（2025 年 3 月发布）</li>
</ul>
<p> <br> 源码：<a href="https://github.com/JCSDA/spack-stack/tree/release/1.9.0">https://github.com/JCSDA/spack-stack/tree/release/1.9.0</a>  </p>
<p> 文档：<a href="https://spack-stack.readthedocs.io/en/1.9.1">https://spack-stack.readthedocs.io/en/1.9.1</a>  
 </p>
<ul>
<li>公开 AMI（美国东部 2 区，Ohio）</li>
</ul>
<p> <br> 系统：Ubuntu 24.04，已预装 gcc 与 oneAPI  </p>
<p> AMI ID：ami-0e1056b9bfde93698<br> <br> 控制台链接：<a href="https://us-east-2.console.aws.amazon.com/ec2/v2/home?region=us-east-2#ImageDetails:imageId=ami-0e1056b9bfde93698">https://us-east-2.console.aws.amazon.com/ec2/v2/home?region=us-east-2#ImageDetails:imageId=ami-0e1056b9bfde93698</a>  </p>
<p>实例选型提示  </p>
<ul>
<li>最低要求：c6i.4xlarge 及以上规格  </li>
<li>运行 skylab-atm-land-small 实验推荐：c6i.8xlarge</li>
</ul>
<p>更多 AWS 使用说明请参考官方文档《JEDI on AWS》。</p>
<h4 id="Developer-Section"><a href="#Developer-Section" class="headerlink" title="Developer Section"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/using/running_skylab/running_skylab.html#developer-section">Developer Section</a></h4><h3 id="Skylab-HPC-users-guide"><a href="#Skylab-HPC-users-guide" class="headerlink" title="Skylab HPC users guide"></a>Skylab HPC users guide</h3><h4 id="General-Tips-for-HPC-Systems"><a href="#General-Tips-for-HPC-Systems" class="headerlink" title="General Tips for HPC Systems"></a>General Tips for HPC Systems</h4><p>下面给出一份“即拷即用”的中文版 HPC 使用摘要，保留所有关键命令与脚本，方便贴进终端或作业脚本。</p>
<p>通用 HPC 提醒</p>
<ol>
<li>登录节点禁止直接跑 MPI：  <ul>
<li>编译完 JEDI 后，务必通过作业调度器（Slurm&#x2F;PBS）提交，或用 <code>salloc</code> 申请交互节点。</li>
</ul>
</li>
<li>提交队列的好处：  <ul>
<li>可断线走人，作业仍在后台跑；结果写进 <code>slurm-&lt;作业号&gt;.out</code>（或 PBS 的 <code>*.o*</code>）。</li>
</ul>
</li>
</ol>
<p>交互式快速测试（Slurm 系统）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1. 申请资源（以 4 任务为例，10 分钟）</span></span><br><span class="line">salloc --ntasks=4 --cpus-per-task=1 --time=00:10:00</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 进入分配节点后，重新加载模块（路径自行替换）</span></span><br><span class="line">module purge</span><br><span class="line">module use /path/to/spack-stack/modulefiles</span><br><span class="line">module load jedi-stack</span><br><span class="line"><span class="built_in">ulimit</span> -s unlimited</span><br><span class="line"><span class="built_in">ulimit</span> -v unlimited</span><br><span class="line"><span class="built_in">export</span> HDF5_USE_FILE_LOCKING=FALSE</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 跑测试</span></span><br><span class="line"><span class="built_in">cd</span> &lt;bundle-build-dir&gt;</span><br><span class="line">ctest 2&gt;&amp;1 | <span class="built_in">tee</span> ctest.log</span><br></pre></td></tr></table></figure>
<p>退出交互即释放资源。</p>
<p>一键提交 ctest（Slurm：Orion、Discover、Hera、S4）<br>保存为 <code>run_ctest.slurm</code>，改尖括号内字段：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"><span class="comment">#SBATCH --job-name=jedi_ctest</span></span><br><span class="line"><span class="comment">#SBATCH --nodes=1               # 整节点，ctest 内部自动拆分任务</span></span><br><span class="line"><span class="comment">#SBATCH --account=&lt;account&gt;</span></span><br><span class="line"><span class="comment">#SBATCH --partition=&lt;partition&gt;</span></span><br><span class="line"><span class="comment">#SBATCH --qos=&lt;qos&gt;</span></span><br><span class="line"><span class="comment">#SBATCH --time=0:10:00</span></span><br><span class="line"><span class="comment">#SBATCH --mail-user=&lt;email&gt;</span></span><br><span class="line"><span class="comment">#SBATCH --mail-type=ALL</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> /etc/bashrc</span><br><span class="line">module purge</span><br><span class="line"><span class="comment"># ===== 在这里插入 spack-stack 的 module load 语句 =====</span></span><br><span class="line">module list</span><br><span class="line"></span><br><span class="line"><span class="built_in">ulimit</span> -s unlimited</span><br><span class="line"><span class="built_in">ulimit</span> -v unlimited</span><br><span class="line"><span class="built_in">export</span> SLURM_EXPORT_ENV=ALL</span><br><span class="line"><span class="built_in">export</span> HDF5_USE_FILE_LOCKING=FALSE</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> &lt;path-to-bundle-build-directory&gt;</span><br><span class="line">ctest</span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure>
<p>提交与查看：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sbatch run_ctest.slurm</span><br><span class="line">squeue -u <span class="variable">$USER</span>          <span class="comment"># 看状态</span></span><br><span class="line">scancel &lt;JOBID&gt;          <span class="comment"># 若要删作业</span></span><br></pre></td></tr></table></figure>

<p>单独跑某个可执行（节省核时）<br>脚本改为按任务数计费，<strong>不</strong>占满整节点：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#SBATCH --ntasks=4          # 只申请 4 核，节点数由调度自动算</span></span><br><span class="line"><span class="comment">#SBATCH --cpus-per-task=1</span></span><br><span class="line"><span class="comment">#SBATCH --time=0:10:00</span></span><br><span class="line">...</span><br><span class="line">srun --ntasks=4 --cpu_bind=core --distribution=block:block \</span><br><span class="line">     test_ufo_radiosonde_opr testinput/radiosonde.yaml</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意：JEDI 内存占用较高，若出现 OOM，可改回 <code>--nodes=1</code> 并减少 <code>--ntasks</code>。</p>
</blockquote>
<p>PBS 系统（Derecho、Casper、Narwhal）<br>保存为 <code>run_ctest.pbs</code>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#PBS -N jedi_ctest</span></span><br><span class="line"><span class="comment">#PBS -A &lt;account&gt;</span></span><br><span class="line"><span class="comment">#PBS -l walltime=00:20:00</span></span><br><span class="line"><span class="comment">#PBS -l select=1:ncpus=24:mpiprocs=24</span></span><br><span class="line"><span class="comment">#PBS -q regular</span></span><br><span class="line"><span class="comment">#PBS -j oe</span></span><br><span class="line"><span class="comment">#PBS -k eod</span></span><br><span class="line"><span class="comment">#PBS -m abe</span></span><br><span class="line"><span class="comment">#PBS -M &lt;your-email&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ===== 在这里插入 module purge / module load =====</span></span><br><span class="line"><span class="built_in">cd</span> &lt;build-directory&gt;</span><br><span class="line">ctest</span><br></pre></td></tr></table></figure>
<p>提交与查看：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">qsub run_ctest.pbs</span><br><span class="line">qstat -u <span class="variable">$USER</span></span><br><span class="line">qdel &lt;JOBID&gt;      <span class="comment"># 删作业</span></span><br></pre></td></tr></table></figure>

<p>常见排错</p>
<ul>
<li><code>OOM killed</code> → 增加节点或整节点申请，减少单节点任务数。  </li>
<li><code>File locking</code> 报错 → 确认 <code>export HDF5_USE_FILE_LOCKING=FALSE</code> 已写入脚本。  </li>
<li>模块冲突 → 先用 <code>module purge</code>，再按 spack-stack 文档顺序加载。</li>
</ul>
<p>祝跑图顺利，测试全绿！</p>
<h4 id="System-Specific-Information"><a href="#System-Specific-Information" class="headerlink" title="System Specific Information"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/using/running_skylab/HPC_users_guide.html#system-specific-information">System Specific Information</a></h4><h4 id="Casper"><a href="#Casper" class="headerlink" title="Casper"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/using/running_skylab/HPC_users_guide.html#casper">Casper</a></h4><h4 id="Derecho"><a href="#Derecho" class="headerlink" title="Derecho"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/using/running_skylab/HPC_users_guide.html#derecho">Derecho</a></h4><h4 id="Discover"><a href="#Discover" class="headerlink" title="Discover"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/using/running_skylab/HPC_users_guide.html#discover">Discover</a></h4><h4 id="Hera"><a href="#Hera" class="headerlink" title="Hera"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/using/running_skylab/HPC_users_guide.html#hera">Hera</a></h4><h4 id="Hercules-amp-Orion"><a href="#Hercules-amp-Orion" class="headerlink" title="Hercules &amp; Orion"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/using/running_skylab/HPC_users_guide.html#hercules-orion">Hercules &amp; Orion</a></h4><h4 id="Narwhal"><a href="#Narwhal" class="headerlink" title="Narwhal"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/using/running_skylab/HPC_users_guide.html#narwhal">Narwhal</a></h4><h4 id="S4"><a href="#S4" class="headerlink" title="S4"></a><a href="https://jointcenterforsatellitedataassimilation-jedi-docs.readthedocs-hosted.com/en/latest/using/running_skylab/HPC_users_guide.html#s4">S4</a></h4>]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title></title>
    <url>/2025/05/07/Tool/METADA-Lorenz/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="METADA-Lorenz"><a href="#METADA-Lorenz" class="headerlink" title="METADA-Lorenz"></a>METADA-Lorenz</h2><h3 id="applications-x2F-forecast"><a href="#applications-x2F-forecast" class="headerlink" title="applications&#x2F;forecast"></a>applications&#x2F;forecast</h3><h4 id="forecast-hpp"><a href="#forecast-hpp" class="headerlink" title="forecast.hpp"></a>forecast.hpp</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 将metada::traits::WRFBackendTag这个较长的类型名称简化为BackendTag。这样在后续代码中，可以直接使用BackendTag来代替metada::traits::WRFBackendTag</span></span><br><span class="line"><span class="keyword">using</span> BackendTag = metada::traits::WRFBackendTag;  </span><br><span class="line"><span class="comment">// 在当前作用域中，可以直接使用metada命名空间中的所有成员（如类、函数、变量等），而无需再写metada::前缀</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> metada;</span><br><span class="line"><span class="comment">// 与上一条类似，它允许在当前作用域中直接使用metada::framework命名空间中的所有成员，而无需写metada::framework::前缀。</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> metada::framework;</span><br></pre></td></tr></table></figure>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// argc表示参数数量, argv是一个字符串数组，包含所有参数的值。</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>** argv)</span></span></span><br></pre></td></tr></table></figure>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 可能会抛出异常的代码</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">catch</span> (ExceptionType1&amp; e1) &#123;</span><br><span class="line">    <span class="comment">// 处理 ExceptionType1 类型的异常</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">catch</span> (ExceptionType2&amp; e2) &#123;</span><br><span class="line">    <span class="comment">// 处理 ExceptionType2 类型的异常</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">catch</span> (...) &#123;</span><br><span class="line">    <span class="comment">// 捕获所有其他类型的异常</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Initialize application context</span></span><br><span class="line"># 通过ApplicationContext集中管理应用程序的初始化和配置，使得代码更加模块化和易于维护。</span><br><span class="line">    <span class="function">ApplicationContext&lt;BackendTag&gt; <span class="title">context</span><span class="params">(argc, argv)</span></span>;</span><br><span class="line">		<span class="meta"># context是ApplicationContext对象，getLogger()是其成员函数</span></span><br><span class="line">		<span class="meta"># auto是C++11引入的自动类型推导关键字, logger的类型由getLogger()的返回值决定</span></span><br><span class="line">		# &amp;表示获取引用，这样logger是一个引用，可以直接操作日志记录器对象，而无需复制它</span><br><span class="line">    <span class="keyword">auto</span>&amp; logger = context.<span class="built_in">getLogger</span>();</span><br><span class="line">		# 获取配置对象（config）的引用，用于访问和修改应用程序的配置信息。</span><br><span class="line">    <span class="keyword">auto</span>&amp; config = context.<span class="built_in">getConfig</span>();</span><br></pre></td></tr></table></figure>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建一个Geometry对象，命名为geometry。</span></span><br><span class="line"><span class="comment">// Geometry的构造函数接受一个配置子部分作为参数，用于初始化几何对象。这意味着几何对象的设置将根据配置文件中的&quot;geometry&quot;部分进行配置。</span></span><br><span class="line"><span class="function">Geometry&lt;BackendTag&gt; <span class="title">geometry</span><span class="params">(config.GetSubsection(<span class="string">&quot;geometry&quot;</span>))</span></span>;</span><br></pre></td></tr></table></figure>



<h4 id="CMakeLists-txt"><a href="#CMakeLists-txt" class="headerlink" title="CMakeLists.txt"></a>CMakeLists.txt</h4><ol>
<li>定义一个名为 <code>letkf</code> 的可执行文件，从 <code>letkf.cpp</code> 源文件编译生成。</li>
<li>指定 <code>letkf</code> 需要链接的后端库，这些库提供了日志记录、配置管理等功能。</li>
<li>设置生成的可执行文件的输出目录为构建目录下的 <code>bin</code> 文件夹。</li>
<li>添加一个格式化目标，用于确保代码风格在整个项目中保持一致。</li>
</ol>
<h3 id="src-x2F-backends-x2F-interfaces-x2F-geometry-x2F-lorenz63-x2F"><a href="#src-x2F-backends-x2F-interfaces-x2F-geometry-x2F-lorenz63-x2F" class="headerlink" title="src&#x2F;backends&#x2F;interfaces&#x2F;geometry&#x2F;lorenz63&#x2F;"></a>src&#x2F;backends&#x2F;interfaces&#x2F;geometry&#x2F;lorenz63&#x2F;</h3><h4 id="CMakeLists-txt-1"><a href="#CMakeLists-txt-1" class="headerlink" title="CMakeLists.txt"></a>CMakeLists.txt</h4><p><strong>这段CMake脚本的主要功能是</strong></p>
<p><strong>1. 创建一个名为 <code>lorenz63_geometry</code> 的静态库，包含两个Fortran源文件。</strong></p>
<p><strong>2. 设置库的属性，包括启用位置无关代码和指定Fortran模块文件的存放目录。</strong></p>
<p><strong>3. 链接到另一个库 <code>lorenz63_state</code>。</strong></p>
<p><strong>4. 指定包含目录，确保Fortran模块文件可以被正确找到。</strong></p>
<p><strong>5. 创建一个别名 <code>metada::backends::lorenz63::geometry</code>，方便其他目标引用。</strong></p>
<p><strong>6. 添加代码格式化任务（如果 <code>AddFormatTarget</code> 是一个自定义函数）。</strong></p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Create the Lorenz 63 geometry library  创建静态库</span></span><br><span class="line"><span class="keyword">add_library</span>(lorenz63_geometry STATIC </span><br><span class="line">  geometry.f90</span><br><span class="line">  geometry_c_bindings.f90)</span><br></pre></td></tr></table></figure>

<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Set properties for the target  设置目标属性</span></span><br><span class="line"><span class="keyword">set_target_properties</span>(lorenz63_geometry PROPERTIES</span><br><span class="line">  POSITION_INDEPENDENT_CODE <span class="keyword">ON</span>  <span class="comment"># 启用位置无关代码</span></span><br><span class="line">  Fortran_MODULE_DIRECTORY <span class="variable">$&#123;CMAKE_BINARY_DIR&#125;</span>/modules) <span class="comment">#指定Fortran模块文件（.mod）的存放目录</span></span><br></pre></td></tr></table></figure>

<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Link to required libraries 链接依赖库</span></span><br><span class="line"><span class="keyword">target_link_libraries</span>(lorenz63_geometry </span><br><span class="line">  PUBLIC </span><br><span class="line">    lorenz63_state)</span><br></pre></td></tr></table></figure>

<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Make include directories available 设置包含目录</span></span><br><span class="line"><span class="keyword">target_include_directories</span>(lorenz63_geometry </span><br><span class="line">  PUBLIC</span><br><span class="line">    <span class="variable">$&#123;CMAKE_BINARY_DIR&#125;</span>/modules)</span><br></pre></td></tr></table></figure>

<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Add library alias 创建库别名</span></span><br><span class="line"><span class="keyword">add_library</span>(metada::backends::lorenz63::geometry</span><br><span class="line">  ALIAS lorenz63_geometry)</span><br></pre></td></tr></table></figure>

<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">AddFormatTarget(lorenz63_geometry <span class="variable">$&#123;CMAKE_CURRENT_SOURCE_DIR&#125;</span>) <span class="comment"># 添加格式化目标</span></span><br></pre></td></tr></table></figure>



<h4 id="geometry-c-api-h"><a href="#geometry-c-api-h" class="headerlink" title="geometry_c_api.h"></a>geometry_c_api.h</h4><p><strong>这段代码定义了一个几何功能模块的接口，提供了创建、销毁几何对象，判断点是否在几何对象内，以及获取几何对象范围的功能。它适用于需要处理三维空间几何对象的场景，例如游戏开发、科学计算等。</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//这是一个预处理器指令，用于防止头文件被多次包含。它是一种现代的替代方案，比传统的 #ifndef、#define 和 #endif 的组合更简洁，且在大多数现代编译器中被广泛支持。</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> __cplusplus</span></span><br><span class="line"><span class="comment">// extern &quot;C&quot; 告诉C++编译器，这些函数是用C语言编写的，其名称不会被C++的名称修饰规则改变。</span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> &#123;   </span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Geometry functions</span></span><br><span class="line"><span class="comment">// 创建一个几何对象,返回一个指向几何对象的指针（void*）</span></span><br><span class="line"><span class="comment">// 由于返回值是 void*，调用者需要确保正确地管理内存，并在不再需要时调用 geometry_destroy</span></span><br><span class="line"><span class="type">void</span>* <span class="title function_">geometry_create</span><span class="params">(<span class="type">float</span> x_min, <span class="type">float</span> x_max, <span class="type">float</span> y_min, <span class="type">float</span> y_max,</span></span><br><span class="line"><span class="params">                      <span class="type">float</span> z_min, <span class="type">float</span> z_max)</span>;</span><br><span class="line"><span class="comment">// 销毁一个几何对象</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">geometry_destroy</span><span class="params">(<span class="type">void</span>* geometry_ptr)</span>;</span><br><span class="line"><span class="comment">// 判断几何对象是否包含某个点，返回一个整数，表示是否包含该点（通常返回 1 表示包含，0 表示不包含）。</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">geometry_contains_point</span><span class="params">(<span class="type">void</span>* geometry_ptr, <span class="type">void</span>* state_ptr)</span>;</span><br><span class="line"><span class="comment">// 获取几何对象在X轴方向的范围，输出参数：min_val 存储X轴的最小值，max_val 存储X轴的最大值</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">geometry_get_x_range</span><span class="params">(<span class="type">void</span>* geometry_ptr, <span class="type">float</span>* min_val, <span class="type">float</span>* max_val)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">geometry_get_y_range</span><span class="params">(<span class="type">void</span>* geometry_ptr, <span class="type">float</span>* min_val, <span class="type">float</span>* max_val)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">geometry_get_z_range</span><span class="params">(<span class="type">void</span>* geometry_ptr, <span class="type">float</span>* min_val, <span class="type">float</span>* max_val)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> __cplusplus</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>



<h4 id="Geometry-hpp"><a href="#Geometry-hpp" class="headerlink" title="Geometry.hpp"></a>Geometry.hpp</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span>  <span class="comment">// 标准库头文件，用于格式化输入输出流</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span> <span class="comment">// 标准库头文件，用于输入输出流操作</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;memory&gt;</span> <span class="comment">// 标准库头文件，用于智能指针和其他内存管理工具</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;../../state/lorenz63/State.hpp&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;geometry_c_api.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 命名空间声明</span></span><br><span class="line"><span class="comment">// 这段代码定义了一个嵌套的命名空间 metada::backends::lorenz63。</span></span><br><span class="line"><span class="comment">// metada：顶级命名空间，可能是项目的主命名空间。</span></span><br><span class="line"><span class="comment">// backends：子命名空间，可能用于组织不同的后端实现。</span></span><br><span class="line"><span class="comment">// lorenz63：进一步细分的命名空间，专门用于 Lorenz 63 相关的功能。</span></span><br><span class="line"><span class="keyword">namespace</span> metada::backends::lorenz63 &#123;</span><br></pre></td></tr></table></figure>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 这段代码是一个C++类 Geometry 的实现，它封装了之前提到的C语言风格的几何接口（geometry_c_api.h），并提供了一个更现代的C++接口。这个类的作用是为 Lorenz 63 系统的相空间定义边界。</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Geometry</span> &#123;</span><br><span class="line"> <span class="keyword">public</span>:</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * @brief Construct a new Geometry with given boundaries</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * @param x_min Minimum x value</span></span><br><span class="line"><span class="comment">   * @param x_max Maximum x value</span></span><br><span class="line"><span class="comment">   * @param y_min Minimum y value</span></span><br><span class="line"><span class="comment">   * @param y_max Maximum y value</span></span><br><span class="line"><span class="comment">   * @param z_min Minimum z value</span></span><br><span class="line"><span class="comment">   * @param z_max Maximum z value</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="built_in">Geometry</span>(<span class="type">float</span> x_min = <span class="number">-30.0f</span>, <span class="type">float</span> x_max = <span class="number">30.0f</span>, <span class="type">float</span> y_min = <span class="number">-30.0f</span>,</span><br><span class="line">           <span class="type">float</span> y_max = <span class="number">30.0f</span>, <span class="type">float</span> z_min = <span class="number">0.0f</span>, <span class="type">float</span> z_max = <span class="number">60.0f</span>)</span><br><span class="line">      : <span class="built_in">ptr_</span>(<span class="built_in">geometry_create</span>(x_min, x_max, y_min, y_max, z_min, z_max),</span><br><span class="line">             geometry_deleter) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!ptr_) &#123;</span><br><span class="line">      <span class="keyword">throw</span> std::<span class="built_in">runtime_error</span>(<span class="string">&quot;Failed to create Lorenz63 geometry&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">// 构造函数用于创建一个几何对象，并初始化其边界。</span></span><br><span class="line"><span class="comment">// 如果 geometry_create 返回 nullptr，表示创建几何对象失败，构造函数会抛出一个 std::runtime_error 异常。</span></span><br></pre></td></tr></table></figure>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"> <span class="comment">// 检查一个状态是否在几何边界内，返回一个布尔值</span></span><br><span class="line"> <span class="function"><span class="type">bool</span> <span class="title">containsPoint</span><span class="params">(<span class="type">const</span> State&amp; state)</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="built_in">geometry_contains_point</span>(ptr_.<span class="built_in">get</span>(), state.<span class="built_in">getPtr</span>()) != <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 获取几何对象的X轴范围，调用底层的C语言函数 geometry_get_x_range</span></span><br><span class="line"> <span class="comment">// 传入几何对象的指针（ptr_.get()）和两个输出参数的地址（&amp;min_val 和 &amp;max_val）。</span></span><br><span class="line"> <span class="function"><span class="type">void</span> <span class="title">getXRange</span><span class="params">(<span class="type">float</span>&amp; min_val, <span class="type">float</span>&amp; max_val)</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">   <span class="built_in">geometry_get_x_range</span>(ptr_.<span class="built_in">get</span>(), &amp;min_val, &amp;max_val);</span><br><span class="line"> &#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">getYRange</span><span class="params">(<span class="type">float</span>&amp; min_val, <span class="type">float</span>&amp; max_val)</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">   <span class="built_in">geometry_get_y_range</span>(ptr_.<span class="built_in">get</span>(), &amp;min_val, &amp;max_val);</span><br><span class="line"> &#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">getZRange</span><span class="params">(<span class="type">float</span>&amp; min_val, <span class="type">float</span>&amp; max_val)</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">   <span class="built_in">geometry_get_z_range</span>(ptr_.<span class="built_in">get</span>(), &amp;min_val, &amp;max_val);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 提供了一个公共接口，用于获取底层几何对象的指针。这个方法允许外部代码访问底层的几何对象指针</span></span><br><span class="line"><span class="function"><span class="type">void</span>* <span class="title">getPtr</span><span class="params">()</span> <span class="type">const</span> </span>&#123; <span class="keyword">return</span> ptr_.<span class="built_in">get</span>(); &#125;</span><br><span class="line">	<span class="comment">// 友元函数声明，用于重载流输出运算符 &lt;&lt;</span></span><br><span class="line">  <span class="comment">// 允许 Geometry 类的对象直接通过 std::ostream 输出，例如 std::cout</span></span><br><span class="line">  <span class="keyword">friend</span> std::ostream&amp; <span class="keyword">operator</span>&lt;&lt;(std::ostream&amp; os, <span class="type">const</span> Geometry&amp; geometry);</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">private</span>:</span><br><span class="line">  <span class="comment">// 自定义删除器，避免内存泄漏</span></span><br><span class="line">  <span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">geometry_deleter</span><span class="params">(<span class="type">void</span>* ptr)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (ptr) &#123;</span><br><span class="line">      <span class="built_in">geometry_destroy</span>(ptr);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">  <span class="comment">// 它定义了一个流输出运算符 &lt;&lt; 的实现，用于将 Geometry 对象的边界信息格式化并输出到标准输出流</span></span><br><span class="line">  <span class="comment">// 使用 std::shared_ptr 来管理底层几何对象的生命周期。std::shared_ptr 是一个智能指针，允许多个指针实例共享同一个对象的所有权。当最后一个 std::shared_ptr 被销毁时，底层对象才会被释放</span></span><br><span class="line">  std::shared_ptr&lt;<span class="type">void</span>&gt; ptr_;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 流输出运算符的实现，重载流输出运算符 &lt;&lt;，用于将 Geometry 对象的边界信息格式化并输出到流中</span></span><br><span class="line"><span class="comment">// os：输出流对象，通常是 std::cout。geometry：需要输出的 Geometry 对象。</span></span><br><span class="line"><span class="keyword">inline</span> std::ostream&amp; <span class="keyword">operator</span>&lt;&lt;(std::ostream&amp; os, <span class="type">const</span> Geometry&amp; geometry) &#123;</span><br><span class="line">  <span class="type">float</span> x_min, x_max, y_min, y_max, z_min, z_max;</span><br><span class="line">  geometry.<span class="built_in">getXRange</span>(x_min, x_max);</span><br><span class="line">  geometry.<span class="built_in">getYRange</span>(y_min, y_max);</span><br><span class="line">  geometry.<span class="built_in">getZRange</span>(z_min, z_max);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 输出格式</span></span><br><span class="line">  os &lt;&lt; <span class="string">&quot;Geometry(X:[&quot;</span> &lt;&lt; x_min &lt;&lt; <span class="string">&quot;, &quot;</span> &lt;&lt; x_max &lt;&lt; <span class="string">&quot;], &quot;</span></span><br><span class="line">     &lt;&lt; <span class="string">&quot;Y:[&quot;</span> &lt;&lt; y_min &lt;&lt; <span class="string">&quot;, &quot;</span> &lt;&lt; y_max &lt;&lt; <span class="string">&quot;], &quot;</span></span><br><span class="line">     &lt;&lt; <span class="string">&quot;Z:[&quot;</span> &lt;&lt; z_min &lt;&lt; <span class="string">&quot;, &quot;</span> &lt;&lt; z_max &lt;&lt; <span class="string">&quot;])&quot;</span>;</span><br><span class="line">  <span class="keyword">return</span> os;</span><br><span class="line">&#125;</span><br><span class="line">&#125;  <span class="comment">// namespace metada::backends::lorenz63</span></span><br></pre></td></tr></table></figure>



<h4 id="Geometry-f90"><a href="#Geometry-f90" class="headerlink" title="Geometry.f90"></a>Geometry.f90</h4><p><strong>这段代码实现了一个几何边界检查的功能，通过面向对象的方式定义了几何边界和状态点，并提供了初始化和检查点是否在边界内的方法。</strong></p>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">! 定义了一个名为 geometry 的模块。</span></span><br><span class="line"><span class="keyword">module</span> geometry</span><br><span class="line">  <span class="comment">! 使用了另一个模块 state，并从中引入了 state_type 类型。</span></span><br><span class="line">  <span class="comment">! only: state_type 表示只从 state 模块中引入 state_type 类型，避免引入其他不必要的内容。</span></span><br><span class="line">  <span class="keyword">use</span> state, <span class="keyword">only</span>: state_type</span><br><span class="line">  <span class="keyword">implicit</span> <span class="keyword">none</span></span><br><span class="line">  <span class="keyword">private</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">! 这意味着外部代码可以通过 geometry 模块访问 geometry_type 类型。</span></span><br><span class="line">  <span class="keyword">public</span> :: geometry_type</span><br><span class="line">  </span><br><span class="line">  <span class="comment">! 定义了一个名为 geometry_type 的派生类型（类似于面向对象编程中的类）。</span></span><br><span class="line">  <span class="keyword">type</span> :: geometry_type</span><br><span class="line">    <span class="keyword">private</span></span><br><span class="line">    <span class="keyword">real</span> :: x_min, x_max  <span class="comment">!&lt; X-axis boundaries</span></span><br><span class="line">    <span class="keyword">real</span> :: y_min, y_max  <span class="comment">!&lt; Y-axis boundaries</span></span><br><span class="line">    <span class="keyword">real</span> :: z_min, z_max  <span class="comment">!&lt; Z-axis boundaries</span></span><br><span class="line">  <span class="keyword">contains</span> <span class="comment">! 表示以下内容是类型绑定的过程（方法）</span></span><br><span class="line">    <span class="keyword">procedure</span> :: init =&gt; geometry_init <span class="comment">! 调用 geometry_init</span></span><br><span class="line">    <span class="keyword">procedure</span> :: contains_point =&gt; geometry_contains_point <span class="comment">! 调用 geometry_contains_point</span></span><br><span class="line">    <span class="keyword">procedure</span> :: get_x_range =&gt; geometry_get_x_range 	<span class="comment">! 调用 geometry_get_x_range</span></span><br><span class="line">    <span class="keyword">procedure</span> :: get_y_range =&gt; geometry_get_y_range	<span class="comment">! 调用 geometry_get_y_range</span></span><br><span class="line">    <span class="keyword">procedure</span> :: get_z_range =&gt; geometry_get_z_range	<span class="comment">! 调用 geometry_get_z_range</span></span><br><span class="line">  <span class="keyword">end</span> <span class="keyword">type</span> geometry_type</span><br></pre></td></tr></table></figure>

<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">  <span class="comment">! 这里声明了一个模块，但没有明确绑定到某个特定的类型。</span></span><br><span class="line">  <span class="keyword">public</span> :: compute_distance</span><br><span class="line">  </span><br><span class="line"><span class="keyword">contains</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">!&gt; 用于初始化几何边界，将指定的边界值赋给 geometry_type 类型的对象。</span></span><br><span class="line">  <span class="function"><span class="keyword">subroutine</span></span> geometry_init(this, x_min, x_max, y_min, y_max, z_min, z_max)</span><br><span class="line">    <span class="keyword">class</span>(geometry_type), <span class="keyword">intent</span>(inout) :: this <span class="comment">!this:geometry_type 类型的对象，用于存储边界值</span></span><br><span class="line">    <span class="keyword">real</span>, <span class="keyword">intent</span>(<span class="keyword">in</span>) :: x_min, x_max, y_min, y_max, z_min, z_max</span><br><span class="line">    </span><br><span class="line">    this%x_min = x_min</span><br><span class="line">    this%x_max = x_max</span><br><span class="line">    this%y_min = y_min</span><br><span class="line">    this%y_max = y_max</span><br><span class="line">    this%z_min = z_min</span><br><span class="line">    this%z_max = z_max</span><br><span class="line">  <span class="keyword">end</span> <span class="function"><span class="keyword">subroutine</span></span> geometry_init</span><br><span class="line">  </span><br><span class="line">  <span class="comment">!&gt; 用于检查一个状态点是否在几何边界内</span></span><br><span class="line">  <span class="keyword">logical</span> <span class="function"><span class="keyword">function</span></span> geometry_contains_point(this, state)</span><br><span class="line">    <span class="keyword">class</span>(geometry_type), <span class="keyword">intent</span>(<span class="keyword">in</span>) :: this</span><br><span class="line">    <span class="keyword">type</span>(state_type), <span class="keyword">intent</span>(<span class="keyword">in</span>) :: state  <span class="comment">! state: state_type 类型的对象，表示状态点</span></span><br><span class="line">    </span><br><span class="line">    geometry_contains_point = .false.</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (state%get_x() &gt;= this%x_min .and. state%get_x() &lt;= this%x_max .and. &amp;</span><br><span class="line">        state%get_y() &gt;= this%y_min .and. state%get_y() &lt;= this%y_max .and. &amp;</span><br><span class="line">        state%get_z() &gt;= this%z_min .and. state%get_z() &lt;= this%z_max) <span class="keyword">then</span></span><br><span class="line">      geometry_contains_point = .true.</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line">  <span class="keyword">end</span> <span class="function"><span class="keyword">function</span></span> geometry_contains_point</span><br></pre></td></tr></table></figure>



<h4 id="geometry-c-bindings-f90"><a href="#geometry-c-bindings-f90" class="headerlink" title="geometry_c_bindings.f90"></a>geometry_c_bindings.f90</h4><p><strong>这个模块提供了一组C语言绑定接口，使得C语言程序能够调用Fortran代码中定义的几何操作功能。通过这些接口，C语言程序可以方便地与Fortran代码进行交互，实现复杂的几何计算和数据管理。</strong></p>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">!</span></span><br><span class="line"><span class="comment">! geometry_c_bindings.f90</span></span><br><span class="line"><span class="comment">! C bindings for Lorenz 63 geometry module</span></span><br><span class="line"><span class="comment">!</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">module</span> geometry_c_bindings</span><br><span class="line">  <span class="keyword">use</span>, <span class="keyword">intrinsic</span> :: <span class="keyword">iso_c_binding</span> <span class="comment">!引入了Fortran的iso_c_binding模块，该模块提供了与C语言进行交互的接口，例如数据类型映射和C语言调用约定等。</span></span><br><span class="line">  <span class="keyword">use</span> geometry, <span class="keyword">only</span>: geometry_type, compute_distance</span><br><span class="line">  <span class="keyword">use</span> state, <span class="keyword">only</span>: state_type</span><br><span class="line">  <span class="keyword">implicit</span> <span class="keyword">none</span></span><br><span class="line">  <span class="keyword">private</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">! 这些声明将一些子程序（函数或子例程）设置为公共接口，使得它们可以通过C语言调用。</span></span><br><span class="line">  <span class="keyword">public</span> :: c_geometry_create, c_geometry_destroy</span><br><span class="line">  <span class="keyword">public</span> :: c_geometry_contains_point, c_geometry_get_x_range</span><br><span class="line">  <span class="keyword">public</span> :: c_geometry_get_y_range, c_geometry_get_z_range</span><br></pre></td></tr></table></figure>

<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="keyword">contains</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">! 该函数的主要功能是创建一个新的几何对象，并将其初始化为指定的边界值</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span></span> c_geometry_create(x_min, x_max, y_min, y_max, z_min, z_max) <span class="keyword">bind</span>(C, <span class="keyword">name</span>=<span class="string">&quot;geometry_create&quot;</span>) result(ptr)</span><br><span class="line">  <span class="comment">! 将这个函数绑定到C语言接口，并指定在C语言中它的名称为geometry_create</span></span><br><span class="line">    <span class="comment">! 参数类型为C语言中的float类型</span></span><br><span class="line">    <span class="keyword">real</span>(<span class="keyword">c_float</span>), <span class="keyword">value</span>, <span class="keyword">intent</span>(<span class="keyword">in</span>) :: x_min, x_max, y_min, y_max, z_min, z_max</span><br><span class="line">    <span class="keyword">type</span>(<span class="keyword">c_ptr</span>) :: ptr  <span class="comment">! 返回值类型为C语言中的指针类型。</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">type</span>(geometry_type), <span class="keyword">pointer</span> :: geom</span><br><span class="line">    </span><br><span class="line">    <span class="comment">! Allocate new geometry object</span></span><br><span class="line">    <span class="built_in">allocate</span>(geom)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">! Initialize with provided bounds</span></span><br><span class="line">    <span class="keyword">call</span> geom%init(x_min, x_max, y_min, y_max, z_min, z_max)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">! c_loc是iso_c_binding模块中的一个函数，用于获取Fortran对象的地址，并将其转换为C语言中的指针。</span></span><br><span class="line">    ptr = <span class="keyword">c_loc</span>(geom)</span><br><span class="line">  <span class="keyword">end</span> <span class="function"><span class="keyword">function</span></span> c_geometry_create</span><br></pre></td></tr></table></figure>

<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">!&gt; Destroy a geometry object</span></span><br><span class="line"><span class="function"><span class="keyword">subroutine</span></span> c_geometry_destroy(geom_ptr) <span class="keyword">bind</span>(C, <span class="keyword">name</span>=<span class="string">&quot;geometry_destroy&quot;</span>)</span><br><span class="line">  <span class="keyword">type</span>(<span class="keyword">c_ptr</span>), <span class="keyword">value</span>, <span class="keyword">intent</span>(<span class="keyword">in</span>) :: geom_ptr</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">type</span>(geometry_type), <span class="keyword">pointer</span> :: geom</span><br><span class="line">  </span><br><span class="line">  <span class="comment">! c_f_pointer是iso_c_binding模块中的一个函数，用于将C语言中的指针转换为Fortran中的指针。</span></span><br><span class="line">  <span class="keyword">call</span> <span class="keyword">c_f_pointer</span>(geom_ptr, geom)</span><br><span class="line">  </span><br><span class="line">  <span class="comment">! 使用deallocate语句释放geom指向的几何对象占用的内存。</span></span><br><span class="line">  <span class="built_in">deallocate</span>(geom)</span><br><span class="line"><span class="keyword">end</span> <span class="function"><span class="keyword">subroutine</span></span> c_geometry_destroy</span><br></pre></td></tr></table></figure>

<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">!&gt; Check if a state is within the geometry bounds</span></span><br><span class="line"><span class="function"><span class="keyword">function</span></span> c_geometry_contains_point(geom_ptr, state_ptr) <span class="keyword">bind</span>(C, <span class="keyword">name</span>=<span class="string">&quot;geometry_contains_point&quot;</span>) result(result)</span><br><span class="line">  <span class="keyword">type</span>(<span class="keyword">c_ptr</span>), <span class="keyword">value</span>, <span class="keyword">intent</span>(<span class="keyword">in</span>) :: geom_ptr, state_ptr</span><br><span class="line">  <span class="keyword">integer</span>(<span class="keyword">c_int</span>) :: result</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">type</span>(geometry_type), <span class="keyword">pointer</span> :: geom</span><br><span class="line">  <span class="keyword">type</span>(state_type), <span class="keyword">pointer</span> :: state</span><br><span class="line">  </span><br><span class="line">  <span class="comment">! Convert C pointers to Fortran pointers</span></span><br><span class="line">  <span class="keyword">call</span> <span class="keyword">c_f_pointer</span>(geom_ptr, geom)</span><br><span class="line">  <span class="keyword">call</span> <span class="keyword">c_f_pointer</span>(state_ptr, state)</span><br><span class="line">  </span><br><span class="line">  <span class="comment">! Check if state is within bounds</span></span><br><span class="line">  <span class="keyword">if</span> (geom%contains_point(state)) <span class="keyword">then</span></span><br><span class="line">    result = <span class="number">1</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">  <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"><span class="keyword">end</span> <span class="function"><span class="keyword">function</span></span> c_geometry_contains_point</span><br></pre></td></tr></table></figure>

<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">!&gt; Get the x-axis range</span></span><br><span class="line"><span class="function"><span class="keyword">subroutine</span></span> c_geometry_get_x_range(geom_ptr, min_val, max_val) <span class="keyword">bind</span>(C, <span class="keyword">name</span>=<span class="string">&quot;geometry_get_x_range&quot;</span>)</span><br><span class="line">  <span class="keyword">type</span>(<span class="keyword">c_ptr</span>), <span class="keyword">value</span>, <span class="keyword">intent</span>(<span class="keyword">in</span>) :: geom_ptr</span><br><span class="line">  <span class="keyword">real</span>(<span class="keyword">c_float</span>), <span class="keyword">intent</span>(<span class="keyword">out</span>) :: min_val, max_val</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">type</span>(geometry_type), <span class="keyword">pointer</span> :: geom</span><br><span class="line">  </span><br><span class="line">  <span class="comment">! Convert C pointer to Fortran pointer</span></span><br><span class="line">  <span class="keyword">call</span> <span class="keyword">c_f_pointer</span>(geom_ptr, geom)</span><br><span class="line">  </span><br><span class="line">  <span class="comment">! Get the range</span></span><br><span class="line">  <span class="keyword">call</span> geom%get_x_range(min_val, max_val)</span><br><span class="line"><span class="keyword">end</span> <span class="function"><span class="keyword">subroutine</span></span> c_geometry_get_x_range</span><br><span class="line"></span><br><span class="line"><span class="comment">!&gt; Get the y-axis range</span></span><br><span class="line"><span class="function"><span class="keyword">subroutine</span></span> c_geometry_get_y_range(geom_ptr, min_val, max_val) <span class="keyword">bind</span>(C, <span class="keyword">name</span>=<span class="string">&quot;geometry_get_y_range&quot;</span>)</span><br><span class="line">  <span class="keyword">type</span>(<span class="keyword">c_ptr</span>), <span class="keyword">value</span>, <span class="keyword">intent</span>(<span class="keyword">in</span>) :: geom_ptr</span><br><span class="line">  <span class="keyword">real</span>(<span class="keyword">c_float</span>), <span class="keyword">intent</span>(<span class="keyword">out</span>) :: min_val, max_val</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">type</span>(geometry_type), <span class="keyword">pointer</span> :: geom</span><br><span class="line">  </span><br><span class="line">  <span class="comment">! Convert C pointer to Fortran pointer</span></span><br><span class="line">  <span class="keyword">call</span> <span class="keyword">c_f_pointer</span>(geom_ptr, geom)</span><br><span class="line">  </span><br><span class="line">  <span class="comment">! Get the range</span></span><br><span class="line">  <span class="keyword">call</span> geom%get_y_range(min_val, max_val)</span><br><span class="line"><span class="keyword">end</span> <span class="function"><span class="keyword">subroutine</span></span> c_geometry_get_y_range</span><br><span class="line"></span><br><span class="line"><span class="comment">!&gt; Get the z-axis range</span></span><br><span class="line"><span class="function"><span class="keyword">subroutine</span></span> c_geometry_get_z_range(geom_ptr, min_val, max_val) <span class="keyword">bind</span>(C, <span class="keyword">name</span>=<span class="string">&quot;geometry_get_z_range&quot;</span>)</span><br><span class="line">  <span class="keyword">type</span>(<span class="keyword">c_ptr</span>), <span class="keyword">value</span>, <span class="keyword">intent</span>(<span class="keyword">in</span>) :: geom_ptr</span><br><span class="line">  <span class="keyword">real</span>(<span class="keyword">c_float</span>), <span class="keyword">intent</span>(<span class="keyword">out</span>) :: min_val, max_val</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">type</span>(geometry_type), <span class="keyword">pointer</span> :: geom</span><br><span class="line">  </span><br><span class="line">  <span class="comment">! Convert C pointer to Fortran pointer</span></span><br><span class="line">  <span class="keyword">call</span> <span class="keyword">c_f_pointer</span>(geom_ptr, geom)</span><br><span class="line">  </span><br><span class="line">  <span class="comment">! Get the range</span></span><br><span class="line">  <span class="keyword">call</span> geom%get_z_range(min_val, max_val)</span><br><span class="line"><span class="keyword">end</span> <span class="function"><span class="keyword">subroutine</span></span> c_geometry_get_z_range</span><br></pre></td></tr></table></figure>



<h3 id="src-x2F-backends-x2F-interfaces-x2F-model-x2F-lorenz63-x2F"><a href="#src-x2F-backends-x2F-interfaces-x2F-model-x2F-lorenz63-x2F" class="headerlink" title="src&#x2F;backends&#x2F;interfaces&#x2F;model&#x2F;lorenz63&#x2F;"></a>src&#x2F;backends&#x2F;interfaces&#x2F;model&#x2F;lorenz63&#x2F;</h3><h4 id="CMakeLists-txt-2"><a href="#CMakeLists-txt-2" class="headerlink" title="CMakeLists.txt"></a>CMakeLists.txt</h4><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Create the Lorenz 63 model library</span></span><br><span class="line"><span class="keyword">add_library</span>(lorenz63_model STATIC </span><br><span class="line">  model.f90</span><br><span class="line">  model_c_bindings.f90)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set properties for the target</span></span><br><span class="line"><span class="keyword">set_target_properties</span>(lorenz63_model PROPERTIES</span><br><span class="line">  POSITION_INDEPENDENT_CODE <span class="keyword">ON</span></span><br><span class="line">  Fortran_MODULE_DIRECTORY <span class="variable">$&#123;CMAKE_BINARY_DIR&#125;</span>/modules)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Link to required libraries</span></span><br><span class="line"><span class="keyword">target_link_libraries</span>(lorenz63_model </span><br><span class="line">  PUBLIC </span><br><span class="line">    lorenz63_state)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Make include directories available</span></span><br><span class="line"><span class="keyword">target_include_directories</span>(lorenz63_model </span><br><span class="line">  PUBLIC</span><br><span class="line">    <span class="variable">$&#123;CMAKE_BINARY_DIR&#125;</span>/modules)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add library alias</span></span><br><span class="line"><span class="keyword">add_library</span>(metada::backends::lorenz63::model</span><br><span class="line">  ALIAS lorenz63_model)</span><br><span class="line"></span><br><span class="line">AddFormatTarget(lorenz63_model <span class="variable">$&#123;CMAKE_CURRENT_SOURCE_DIR&#125;</span>)</span><br></pre></td></tr></table></figure>



<h4 id="model-f90"><a href="#model-f90" class="headerlink" title="model.f90"></a>model.f90</h4><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">!</span></span><br><span class="line"><span class="comment">! model.f90</span></span><br><span class="line"><span class="comment">! Object-oriented implementation for the Lorenz 63 dynamical system</span></span><br><span class="line"><span class="comment">!</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">module</span> model</span><br><span class="line">  <span class="keyword">use</span> state, <span class="keyword">only</span>: state_type</span><br><span class="line">  <span class="keyword">implicit</span> <span class="keyword">none</span></span><br><span class="line">  <span class="keyword">private</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">! 这些声明将一些类型设置为公共接口，使得它们可以通过模块外部访问。</span></span><br><span class="line">  <span class="keyword">public</span> :: model_type, integrator_type, rk4_integrator_type, lorenz63_model_type</span><br><span class="line">  </span><br><span class="line">  <span class="comment">! 抽象基类model_type</span></span><br><span class="line">  <span class="keyword">type</span>, <span class="keyword">abstract</span> :: model_type</span><br><span class="line">    <span class="keyword">private</span></span><br><span class="line">    <span class="keyword">real</span> :: dt = <span class="number">0.01</span>  <span class="comment">!&lt; Time step for integration</span></span><br><span class="line">  <span class="keyword">contains</span></span><br><span class="line">    <span class="comment">! Type-bound procedures (methods)</span></span><br><span class="line">    <span class="comment">! 声明了一个延迟绑定的类型绑定过程compute_derivatives，它需要在派生类中实现。</span></span><br><span class="line">    <span class="keyword">procedure</span>(compute_derivatives_interface), <span class="keyword">deferred</span> :: compute_derivatives</span><br><span class="line">    <span class="comment">! 声明了一个类型绑定过程</span></span><br><span class="line">    <span class="keyword">procedure</span> :: set_time_step =&gt; model_set_time_step</span><br><span class="line">    <span class="comment">! 声明了一个类型绑定过程</span></span><br><span class="line">    <span class="keyword">procedure</span> :: get_time_step =&gt; model_get_time_step</span><br><span class="line">  <span class="keyword">end</span> <span class="keyword">type</span> model_type</span><br></pre></td></tr></table></figure>

<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">!&gt; Specific Lorenz63 model implementation</span></span><br><span class="line"><span class="comment">! 定义了一个派生类型lorenz63_model_type，它继承自model_type。</span></span><br><span class="line"><span class="keyword">type</span>, <span class="keyword">extends</span>(model_type) :: lorenz63_model_type</span><br><span class="line">  <span class="keyword">private</span></span><br><span class="line">  <span class="keyword">real</span> :: sigma = <span class="number">10.0</span>  <span class="comment">!&lt; Prandtl number</span></span><br><span class="line">  <span class="keyword">real</span> :: rho = <span class="number">28.0</span>    <span class="comment">!&lt; Rayleigh number</span></span><br><span class="line">  <span class="keyword">real</span> :: beta = <span class="number">8.0</span>/<span class="number">3.0</span> <span class="comment">!&lt; Geometric factor</span></span><br><span class="line"><span class="keyword">contains</span></span><br><span class="line">  <span class="comment">! Type-bound procedures (methods)</span></span><br><span class="line">  <span class="comment">! 定义了一个初始化方法init，具体实现为lorenz63_init</span></span><br><span class="line">  <span class="keyword">procedure</span> :: init =&gt; lorenz63_init</span><br><span class="line">  <span class="comment">! 定义了一个计算导数的方法compute_derivatives，具体实现为lorenz63_derivatives</span></span><br><span class="line">  <span class="keyword">procedure</span> :: compute_derivatives =&gt; lorenz63_derivatives</span><br><span class="line">  <span class="keyword">procedure</span> :: get_sigma =&gt; lorenz63_get_sigma</span><br><span class="line">  <span class="keyword">procedure</span> :: get_rho =&gt; lorenz63_get_rho</span><br><span class="line">  <span class="keyword">procedure</span> :: get_beta =&gt; lorenz63_get_beta</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">type</span> lorenz63_model_type</span><br></pre></td></tr></table></figure>

<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">!&gt; Abstract integrator class</span></span><br><span class="line">  <span class="comment">! 定义了一个抽象类型integrator_type</span></span><br><span class="line">  <span class="keyword">type</span>, <span class="keyword">abstract</span> :: integrator_type</span><br><span class="line">  <span class="keyword">contains</span></span><br><span class="line">    <span class="keyword">procedure</span>(step_interface), <span class="keyword">deferred</span> :: step</span><br><span class="line">    <span class="keyword">procedure</span>(initialize_interface), <span class="keyword">deferred</span> :: init</span><br><span class="line">  <span class="keyword">end</span> <span class="keyword">type</span> integrator_type</span><br><span class="line"><span class="comment">!&gt; RK4 integrator implementation</span></span><br><span class="line">  <span class="keyword">type</span>, <span class="keyword">extends</span>(integrator_type) :: rk4_integrator_type</span><br><span class="line">    <span class="keyword">private</span></span><br><span class="line">    <span class="keyword">class</span>(model_type), <span class="keyword">pointer</span> :: model =&gt; null()</span><br><span class="line">  <span class="keyword">contains</span></span><br><span class="line">    <span class="keyword">procedure</span> :: init =&gt; rk4_init</span><br><span class="line">    <span class="keyword">procedure</span> :: step =&gt; rk4_step</span><br><span class="line">    <span class="keyword">procedure</span> :: cleanup =&gt; rk4_cleanup</span><br><span class="line">    <span class="keyword">final</span> :: rk4_finalize</span><br><span class="line">  <span class="keyword">end</span> <span class="keyword">type</span> rk4_integrator_type</span><br></pre></td></tr></table></figure>

<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">! Abstract interface definitions</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="keyword">interface</span></span><br><span class="line">  <span class="comment">! 定义了一个抽象子程序接口，用于计算导数。</span></span><br><span class="line">  <span class="function"><span class="keyword">subroutine</span></span> compute_derivatives_interface(this, state, dxdt, dydt, dzdt)</span><br><span class="line">    <span class="keyword">import</span> :: model_type, state_type</span><br><span class="line">    <span class="comment">! 定义了一个model_type类型的输入参数this，表示当前模型实例</span></span><br><span class="line">    <span class="keyword">class</span>(model_type), <span class="keyword">intent</span>(<span class="keyword">in</span>) :: this</span><br><span class="line">    <span class="keyword">type</span>(state_type), <span class="keyword">intent</span>(<span class="keyword">in</span>) :: state</span><br><span class="line">    <span class="comment">! 定义了三个输出参数dxdt、dydt和dzdt，分别表示状态变量的导数</span></span><br><span class="line">    <span class="keyword">real</span>, <span class="keyword">intent</span>(<span class="keyword">out</span>) :: dxdt, dydt, dzdt</span><br><span class="line">  <span class="keyword">end</span> <span class="function"><span class="keyword">subroutine</span></span> compute_derivatives_interface</span><br><span class="line">  </span><br><span class="line">  <span class="comment">! 定义了一个抽象子程序接口，用于执行单步积分</span></span><br><span class="line">  <span class="function"><span class="keyword">subroutine</span></span> step_interface(this, state)</span><br><span class="line">    <span class="keyword">import</span> :: integrator_type, state_type</span><br><span class="line">    <span class="comment">! 定义了一个integrator_type类型的输入参数this，表示当前积分器实例</span></span><br><span class="line">    <span class="keyword">class</span>(integrator_type), <span class="keyword">intent</span>(<span class="keyword">in</span>) :: this</span><br><span class="line">    <span class="comment">! 定义了一个state_type类型的输入输出参数state，表示积分器操作的状态变量</span></span><br><span class="line">    <span class="keyword">type</span>(state_type), <span class="keyword">intent</span>(inout) :: state</span><br><span class="line">  <span class="keyword">end</span> <span class="function"><span class="keyword">subroutine</span></span> step_interface</span><br><span class="line">  </span><br><span class="line">  <span class="comment">! 定义了一个Fortran抽象接口initialize_interface，用于初始化积分器</span></span><br><span class="line">  <span class="function"><span class="keyword">subroutine</span></span> initialize_interface(this, model)</span><br><span class="line">    <span class="keyword">import</span> :: integrator_type, model_type</span><br><span class="line">    <span class="keyword">class</span>(integrator_type), <span class="keyword">intent</span>(inout) :: this</span><br><span class="line">    <span class="keyword">class</span>(model_type), <span class="keyword">target</span>, <span class="keyword">intent</span>(<span class="keyword">in</span>) :: model</span><br><span class="line">  <span class="keyword">end</span> <span class="function"><span class="keyword">subroutine</span></span> initialize_interface</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">interface</span></span><br></pre></td></tr></table></figure>

<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">  <span class="comment">! 声明了一个公共接口step，这可能是为了向后兼容，确保旧代码可以继续使用step接口</span></span><br><span class="line">  <span class="keyword">public</span> :: step</span><br><span class="line">  </span><br><span class="line"><span class="keyword">contains</span></span><br><span class="line">  <span class="comment">! 设置时间步长</span></span><br><span class="line">  <span class="function"><span class="keyword">subroutine</span></span> model_set_time_step(this, dt)</span><br><span class="line">    <span class="keyword">class</span>(model_type), <span class="keyword">intent</span>(inout) :: this</span><br><span class="line">    <span class="keyword">real</span>, <span class="keyword">intent</span>(<span class="keyword">in</span>) :: dt</span><br><span class="line">    </span><br><span class="line">    this%dt = dt <span class="comment">! 将模型实例的时间步长成员变量this%dt赋值给函数的返回值dt</span></span><br><span class="line">  <span class="keyword">end</span> <span class="function"><span class="keyword">subroutine</span></span> model_set_time_step</span><br><span class="line">  </span><br><span class="line">  <span class="comment">! 获取时间步长</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span></span> model_get_time_step(this) result(dt)</span><br><span class="line">    <span class="keyword">class</span>(model_type), <span class="keyword">intent</span>(<span class="keyword">in</span>) :: this</span><br><span class="line">    <span class="keyword">real</span> :: dt</span><br><span class="line">    </span><br><span class="line">    dt = this%dt <span class="comment">! 将模型实例的时间步长成员变量this%dt赋值给函数的返回值dt</span></span><br><span class="line">  <span class="keyword">end</span> <span class="function"><span class="keyword">function</span></span> model_get_time_step</span><br></pre></td></tr></table></figure>

<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">!&gt; Initialize Lorenz 63 model with given parameters</span></span><br><span class="line"><span class="function"><span class="keyword">subroutine</span></span> lorenz63_init(this, sigma, rho, beta, dt)</span><br><span class="line">	<span class="comment">! this：表示当前Lorenz 63模型实例，intent(inout)表示这个参数既可以读取也可以修改。</span></span><br><span class="line">  <span class="keyword">class</span>(lorenz63_model_type), <span class="keyword">intent</span>(inout) :: this</span><br><span class="line">  <span class="keyword">real</span>, <span class="keyword">intent</span>(<span class="keyword">in</span>) :: sigma, rho, beta, dt</span><br><span class="line">  </span><br><span class="line">  this%sigma = sigma</span><br><span class="line">  this%rho = rho</span><br><span class="line">  this%beta = beta</span><br><span class="line">  <span class="keyword">call</span> this%set_time_step(dt)</span><br><span class="line"><span class="keyword">end</span> <span class="function"><span class="keyword">subroutine</span></span> lorenz63_init</span><br></pre></td></tr></table></figure>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">!&gt; 从模型中获取 sigma 参数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span></span> lorenz63_get_sigma(this) result(sigma)</span><br><span class="line">  <span class="keyword">class</span>(lorenz63_model_type), <span class="keyword">intent</span>(<span class="keyword">in</span>) :: this</span><br><span class="line">  <span class="keyword">real</span> :: sigma</span><br><span class="line">  </span><br><span class="line">  sigma = this%sigma</span><br><span class="line"><span class="keyword">end</span> <span class="function"><span class="keyword">function</span></span> lorenz63_get_sigma</span><br><span class="line"></span><br><span class="line"><span class="comment">!&gt; 从模型中获取 rho 参数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span></span> lorenz63_get_rho(this) result(rho)</span><br><span class="line">  <span class="keyword">class</span>(lorenz63_model_type), <span class="keyword">intent</span>(<span class="keyword">in</span>) :: this</span><br><span class="line">  <span class="keyword">real</span> :: rho</span><br><span class="line">  </span><br><span class="line">  rho = this%rho</span><br><span class="line"><span class="keyword">end</span> <span class="function"><span class="keyword">function</span></span> lorenz63_get_rho</span><br><span class="line"></span><br><span class="line"><span class="comment">!&gt; 从模型中获取 beta 参数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span></span> lorenz63_get_beta(this) result(beta)</span><br><span class="line">  <span class="keyword">class</span>(lorenz63_model_type), <span class="keyword">intent</span>(<span class="keyword">in</span>) :: this</span><br><span class="line">  <span class="keyword">real</span> :: beta</span><br><span class="line">  </span><br><span class="line">  beta = this%beta</span><br><span class="line"><span class="keyword">end</span> <span class="function"><span class="keyword">function</span></span> lorenz63_get_beta</span><br></pre></td></tr></table></figure>
<p>$$<br>\frac{d x}{d t}&#x3D;\sigma(y-x) \\frac{d y}{d t}&#x3D;x(\rho-z)-y  \\frac{d z}{d t}&#x3D;x y-\beta z<br>$$</p>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">!&gt; 计算Lorenz 63系统的导数</span></span><br><span class="line"><span class="function"><span class="keyword">subroutine</span></span> lorenz63_derivatives(this, state, dxdt, dydt, dzdt)</span><br><span class="line">  <span class="keyword">class</span>(lorenz63_model_type), <span class="keyword">intent</span>(<span class="keyword">in</span>) :: this</span><br><span class="line">  <span class="keyword">type</span>(state_type), <span class="keyword">intent</span>(<span class="keyword">in</span>) :: state</span><br><span class="line">  <span class="keyword">real</span>, <span class="keyword">intent</span>(<span class="keyword">out</span>) :: dxdt, dydt, dzdt</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">real</span> :: x, y, z</span><br><span class="line">  </span><br><span class="line">  <span class="comment">! 调用state对象的get_x、get_y和get_z方法，获取当前状态的x、y和z值</span></span><br><span class="line">  x = state%get_x()</span><br><span class="line">  y = state%get_y()</span><br><span class="line">  z = state%get_z()</span><br><span class="line">  </span><br><span class="line">  dxdt = this%sigma * (y - x)</span><br><span class="line">  dydt = x * (this%rho - z) - y</span><br><span class="line">  dzdt = x * y - this%beta * z</span><br><span class="line"><span class="keyword">end</span> <span class="function"><span class="keyword">subroutine</span></span> lorenz63_derivatives</span><br></pre></td></tr></table></figure>

<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">! 接受一个模型实例model，并将其与积分器关联起来，积分器可以使用模型的导数计算方法进行数值积分</span></span><br><span class="line"><span class="function"><span class="keyword">subroutine</span></span> rk4_init(this, model)</span><br><span class="line">  <span class="keyword">class</span>(rk4_integrator_type), <span class="keyword">intent</span>(inout) :: this</span><br><span class="line">  <span class="keyword">class</span>(model_type), <span class="keyword">target</span>, <span class="keyword">intent</span>(<span class="keyword">in</span>) :: model</span><br><span class="line">  </span><br><span class="line">  <span class="comment">! 检查this%model是否已经关联到一个模型实例。如果已经关联，使用nullify将其解关联。</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">associated</span>(this%model)) <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">nullify</span>(this%model)</span><br><span class="line">  <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line">  </span><br><span class="line">  this%model =&gt; model</span><br><span class="line"><span class="keyword">end</span> <span class="function"><span class="keyword">subroutine</span></span> rk4_init</span><br><span class="line"></span><br><span class="line"><span class="comment">! 解关联与积分器关联的模型实例，以确保资源的正确释放</span></span><br><span class="line"><span class="function"><span class="keyword">subroutine</span></span> rk4_cleanup(this)</span><br><span class="line">  <span class="keyword">class</span>(rk4_integrator_type), <span class="keyword">intent</span>(inout) :: this</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">associated</span>(this%model)) <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">nullify</span>(this%model)</span><br><span class="line">  <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"><span class="keyword">end</span> <span class="function"><span class="keyword">subroutine</span></span> rk4_cleanup</span><br><span class="line"></span><br><span class="line"><span class="comment">! 在对象销毁时执行必要的清理操作，确保资源的正确释放</span></span><br><span class="line"><span class="function"><span class="keyword">subroutine</span></span> rk4_finalize(this)</span><br><span class="line">  <span class="keyword">type</span>(rk4_integrator_type), <span class="keyword">intent</span>(inout) :: this</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">call</span> this%cleanup()</span><br><span class="line"><span class="keyword">end</span> <span class="function"><span class="keyword">subroutine</span></span> rk4_finalize</span><br></pre></td></tr></table></figure>

<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">!&gt; Advance the system one time step using 4th-order Runge-Kutta</span></span><br><span class="line"><span class="function"><span class="keyword">subroutine</span></span> rk4_step(this, state)</span><br><span class="line">  <span class="keyword">class</span>(rk4_integrator_type), <span class="keyword">intent</span>(<span class="keyword">in</span>) :: this</span><br><span class="line">  <span class="keyword">type</span>(state_type), <span class="keyword">intent</span>(inout) :: state</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">real</span> :: k1x, k1y, k1z</span><br><span class="line">  <span class="keyword">real</span> :: k2x, k2y, k2z</span><br><span class="line">  <span class="keyword">real</span> :: k3x, k3y, k3z</span><br><span class="line">  <span class="keyword">real</span> :: k4x, k4y, k4z</span><br><span class="line">  <span class="keyword">type</span>(state_type) :: temp_state</span><br><span class="line">  <span class="keyword">real</span> :: dt</span><br><span class="line">  </span><br><span class="line">  <span class="comment">! Check if model is associated</span></span><br><span class="line">  <span class="keyword">if</span> (.not. <span class="built_in">associated</span>(this%model)) <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">print</span> *, <span class="string">&quot;Error: Model not initialized in RK4 integrator&quot;</span></span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">! 获取时间步长</span></span><br><span class="line">  dt = this%model%get_time_step()</span><br><span class="line">  </span><br><span class="line">  <span class="comment">! k1 = f(y_n)</span></span><br><span class="line">  <span class="comment">! 调用模型的compute_derivatives方法，计算当前状态state的导数k1x、k1y和k1z</span></span><br><span class="line">  <span class="keyword">call</span> this%model%compute_derivatives(state, k1x, k1y, k1z)</span><br><span class="line">  </span><br><span class="line">  <span class="comment">! k2 = f(y_n + dt/2 * k1)</span></span><br><span class="line">  <span class="comment">! 使用k1计算中间状态temp_state，并调用模型的compute_derivatives方法，计算k2x、k2y和k2z</span></span><br><span class="line">  <span class="keyword">call</span> temp_state%init(state%get_x() + dt/<span class="number">2.0</span> * k1x, &amp;</span><br><span class="line">                      state%get_y() + dt/<span class="number">2.0</span> * k1y, &amp;</span><br><span class="line">                      state%get_z() + dt/<span class="number">2.0</span> * k1z)</span><br><span class="line">  <span class="keyword">call</span> this%model%compute_derivatives(temp_state, k2x, k2y, k2z)</span><br><span class="line">  </span><br><span class="line">  <span class="comment">! k3 = f(y_n + dt/2 * k2)</span></span><br><span class="line">  <span class="comment">! 使用k2计算中间状态temp_state，并调用模型的compute_derivatives方法，计算k3x、k3y和k3z。</span></span><br><span class="line">  <span class="keyword">call</span> temp_state%init(state%get_x() + dt/<span class="number">2.0</span> * k2x, &amp;</span><br><span class="line">                      state%get_y() + dt/<span class="number">2.0</span> * k2y, &amp;</span><br><span class="line">                      state%get_z() + dt/<span class="number">2.0</span> * k2z)</span><br><span class="line">  <span class="keyword">call</span> this%model%compute_derivatives(temp_state, k3x, k3y, k3z)</span><br><span class="line">  </span><br><span class="line">  <span class="comment">! k4 = f(y_n + dt * k3)</span></span><br><span class="line">  <span class="comment">! 使用k3计算中间状态temp_state，并调用模型的compute_derivatives方法，计算k4x、k4y和k4z</span></span><br><span class="line">  <span class="keyword">call</span> temp_state%init(state%get_x() + dt * k3x, &amp;</span><br><span class="line">                      state%get_y() + dt * k3y, &amp;</span><br><span class="line">                      state%get_z() + dt * k3z)</span><br><span class="line">  <span class="keyword">call</span> this%model%compute_derivatives(temp_state, k4x, k4y, k4z)</span><br><span class="line">  </span><br><span class="line">  <span class="comment">! y_&#123;n+1&#125; = y_n + dt/6 * (k1 + 2*k2 + 2*k3 + k4)</span></span><br><span class="line">  <span class="comment">! 使用RK4公式更新状态state</span></span><br><span class="line">  <span class="keyword">call</span> state%set_x(state%get_x() + dt/<span class="number">6.0</span> * (k1x + <span class="number">2.0</span>*k2x + <span class="number">2.0</span>*k3x + k4x))</span><br><span class="line">  <span class="keyword">call</span> state%set_y(state%get_y() + dt/<span class="number">6.0</span> * (k1y + <span class="number">2.0</span>*k2y + <span class="number">2.0</span>*k3y + k4y))</span><br><span class="line">  <span class="keyword">call</span> state%set_z(state%get_z() + dt/<span class="number">6.0</span> * (k1z + <span class="number">2.0</span>*k2z + <span class="number">2.0</span>*k3z + k4z))</span><br><span class="line"><span class="keyword">end</span> <span class="function"><span class="keyword">subroutine</span></span> rk4_step</span><br></pre></td></tr></table></figure>

<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">  <span class="comment">!&gt; Legacy step procedure for backward compatibility</span></span><br><span class="line">  <span class="function"><span class="keyword">subroutine</span></span> step(model, state)</span><br><span class="line">    <span class="keyword">class</span>(lorenz63_model_type), <span class="keyword">intent</span>(<span class="keyword">in</span>) :: model</span><br><span class="line">    <span class="keyword">type</span>(state_type), <span class="keyword">intent</span>(inout) :: state</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">type</span>(rk4_integrator_type) :: integrator</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">call</span> integrator%init(model)</span><br><span class="line">    <span class="keyword">call</span> integrator%step(state)</span><br><span class="line">    <span class="keyword">call</span> integrator%cleanup()</span><br><span class="line">  <span class="keyword">end</span> <span class="function"><span class="keyword">subroutine</span></span> step</span><br><span class="line">  </span><br><span class="line"><span class="keyword">end</span> <span class="keyword">module</span> model </span><br></pre></td></tr></table></figure>



<h4 id="model-c-bindings-f90"><a href="#model-c-bindings-f90" class="headerlink" title="model_c_bindings.f90"></a>model_c_bindings.f90</h4><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">! 定义了一个Fortran模块model_c_bindings，它为Lorenz 63模型及其RK4积分器提供了C语言的绑定接口。这些绑定允许C语言程序调用Fortran代码中定义的模型和积分器功能。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">module</span> model_c_bindings</span><br><span class="line">  <span class="keyword">use</span>, <span class="keyword">intrinsic</span> :: <span class="keyword">iso_c_binding</span></span><br><span class="line">  <span class="keyword">use</span> model, <span class="keyword">only</span>: lorenz63_model_type, rk4_integrator_type</span><br><span class="line">  <span class="keyword">use</span> state, <span class="keyword">only</span>: state_type</span><br><span class="line">  <span class="keyword">implicit</span> <span class="keyword">none</span></span><br><span class="line">  <span class="keyword">private</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">! 这些声明将一些子程序设置为公共接口，使得它们可以通过C语言调用</span></span><br><span class="line">  <span class="keyword">public</span> :: c_lorenz63_model_create, c_lorenz63_model_destroy</span><br><span class="line">  <span class="keyword">public</span> :: c_lorenz63_model_get_params, c_lorenz63_model_set_params</span><br><span class="line">  <span class="keyword">public</span> :: c_rk4_integrator_create, c_rk4_integrator_destroy, c_rk4_integrator_step</span><br><span class="line">  </span><br><span class="line"><span class="keyword">contains</span></span><br></pre></td></tr></table></figure>

<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">!---------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">! C-Fortran interoperability bindings</span></span><br><span class="line"><span class="comment">!---------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">! 创建一个新的Lorenz 63模型实例，并初始化为指定的参数。返回一个指向新创建模型实例的C语言指针。</span></span><br><span class="line"><span class="function"><span class="keyword">function</span></span> c_lorenz63_model_create(sigma, rho, beta, dt) <span class="keyword">bind</span>(C, <span class="keyword">name</span>=<span class="string">&quot;lorenz63_model_create&quot;</span>) result(ptr_result)</span><br><span class="line">  <span class="keyword">real</span>(<span class="keyword">c_float</span>), <span class="keyword">value</span>, <span class="keyword">intent</span>(<span class="keyword">in</span>) :: sigma, rho, beta, dt</span><br><span class="line">  <span class="keyword">type</span>(<span class="keyword">c_ptr</span>) :: ptr_result</span><br><span class="line">  <span class="keyword">type</span>(lorenz63_model_type), <span class="keyword">pointer</span> :: f_ptr</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">allocate</span>(f_ptr)</span><br><span class="line">  <span class="keyword">call</span> f_ptr%init(sigma, rho, beta, dt)</span><br><span class="line">  ptr_result = <span class="keyword">c_loc</span>(f_ptr)</span><br><span class="line"><span class="keyword">end</span> <span class="function"><span class="keyword">function</span></span> c_lorenz63_model_create</span><br></pre></td></tr></table></figure>

<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">! 销毁一个Lorenz 63模型实例，释放其占用的内存。</span></span><br><span class="line"><span class="function"><span class="keyword">subroutine</span></span> c_lorenz63_model_destroy(model_ptr) <span class="keyword">bind</span>(C, <span class="keyword">name</span>=<span class="string">&quot;lorenz63_model_destroy&quot;</span>)</span><br><span class="line">  <span class="keyword">type</span>(<span class="keyword">c_ptr</span>), <span class="keyword">value</span>, <span class="keyword">intent</span>(<span class="keyword">in</span>) :: model_ptr</span><br><span class="line">  <span class="keyword">type</span>(lorenz63_model_type), <span class="keyword">pointer</span> :: f_ptr</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">call</span> <span class="keyword">c_f_pointer</span>(model_ptr, f_ptr)</span><br><span class="line">  <span class="built_in">deallocate</span>(f_ptr)</span><br><span class="line"><span class="keyword">end</span> <span class="function"><span class="keyword">subroutine</span></span> c_lorenz63_model_destroy</span><br><span class="line"></span><br><span class="line"><span class="comment">! 获取Lorenz 63模型的参数，并将它们存储在输出参数中</span></span><br><span class="line"><span class="function"><span class="keyword">subroutine</span></span> c_lorenz63_model_get_params(model_ptr, sigma, rho, beta, dt) <span class="keyword">bind</span>(C, <span class="keyword">name</span>=<span class="string">&quot;lorenz63_model_get_params&quot;</span>)</span><br><span class="line">  <span class="keyword">type</span>(<span class="keyword">c_ptr</span>), <span class="keyword">value</span>, <span class="keyword">intent</span>(<span class="keyword">in</span>) :: model_ptr</span><br><span class="line">  <span class="keyword">real</span>(<span class="keyword">c_float</span>), <span class="keyword">intent</span>(<span class="keyword">out</span>) :: sigma, rho, beta, dt</span><br><span class="line">  <span class="keyword">type</span>(lorenz63_model_type), <span class="keyword">pointer</span> :: f_ptr</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">call</span> <span class="keyword">c_f_pointer</span>(model_ptr, f_ptr)</span><br><span class="line">  sigma = f_ptr%get_sigma()</span><br><span class="line">  rho = f_ptr%get_rho()</span><br><span class="line">  beta = f_ptr%get_beta()</span><br><span class="line">  dt = f_ptr%get_time_step()</span><br><span class="line"><span class="keyword">end</span> <span class="function"><span class="keyword">subroutine</span></span> c_lorenz63_model_get_params</span><br><span class="line"></span><br><span class="line"><span class="comment">! 设置Lorenz 63模型的参数</span></span><br><span class="line"><span class="function"><span class="keyword">subroutine</span></span> c_lorenz63_model_set_params(model_ptr, sigma, rho, beta, dt) <span class="keyword">bind</span>(C, <span class="keyword">name</span>=<span class="string">&quot;lorenz63_model_set_params&quot;</span>)</span><br><span class="line">  <span class="keyword">type</span>(<span class="keyword">c_ptr</span>), <span class="keyword">value</span>, <span class="keyword">intent</span>(<span class="keyword">in</span>) :: model_ptr</span><br><span class="line">  <span class="keyword">real</span>(<span class="keyword">c_float</span>), <span class="keyword">value</span>, <span class="keyword">intent</span>(<span class="keyword">in</span>) :: sigma, rho, beta, dt</span><br><span class="line">  <span class="keyword">type</span>(lorenz63_model_type), <span class="keyword">pointer</span> :: f_ptr</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">call</span> <span class="keyword">c_f_pointer</span>(model_ptr, f_ptr)</span><br><span class="line">  <span class="keyword">call</span> f_ptr%init(sigma, rho, beta, dt)</span><br><span class="line"><span class="keyword">end</span> <span class="function"><span class="keyword">subroutine</span></span> c_lorenz63_model_set_params</span><br></pre></td></tr></table></figure>

<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">! 创建一个新的RK4积分器实例，并将其与指定的模型实例关联。返回一个指向新创建积分器实例的C语言指针</span></span><br><span class="line"><span class="function"><span class="keyword">function</span></span> c_rk4_integrator_create(model_ptr) <span class="keyword">bind</span>(C, <span class="keyword">name</span>=<span class="string">&quot;rk4_integrator_create&quot;</span>) result(ptr_result)</span><br><span class="line">  <span class="keyword">type</span>(<span class="keyword">c_ptr</span>), <span class="keyword">value</span>, <span class="keyword">intent</span>(<span class="keyword">in</span>) :: model_ptr</span><br><span class="line">  <span class="keyword">type</span>(<span class="keyword">c_ptr</span>) :: ptr_result</span><br><span class="line">  <span class="keyword">type</span>(rk4_integrator_type), <span class="keyword">pointer</span> :: integrator_ptr</span><br><span class="line">  <span class="keyword">type</span>(lorenz63_model_type), <span class="keyword">pointer</span> :: model_f_ptr</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">call</span> <span class="keyword">c_f_pointer</span>(model_ptr, model_f_ptr)</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">allocate</span>(integrator_ptr)</span><br><span class="line">  <span class="keyword">call</span> integrator_ptr%init(model_f_ptr)</span><br><span class="line">  ptr_result = <span class="keyword">c_loc</span>(integrator_ptr)</span><br><span class="line"><span class="keyword">end</span> <span class="function"><span class="keyword">function</span></span> c_rk4_integrator_create</span><br></pre></td></tr></table></figure>

<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">  <span class="comment">! 销毁一个RK4积分器实例，释放其占用的内存</span></span><br><span class="line">  <span class="function"><span class="keyword">subroutine</span></span> c_rk4_integrator_destroy(integrator_ptr) <span class="keyword">bind</span>(C, <span class="keyword">name</span>=<span class="string">&quot;rk4_integrator_destroy&quot;</span>)</span><br><span class="line">    <span class="keyword">type</span>(<span class="keyword">c_ptr</span>), <span class="keyword">value</span>, <span class="keyword">intent</span>(<span class="keyword">in</span>) :: integrator_ptr</span><br><span class="line">    <span class="keyword">type</span>(rk4_integrator_type), <span class="keyword">pointer</span> :: f_ptr</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">call</span> <span class="keyword">c_f_pointer</span>(integrator_ptr, f_ptr)</span><br><span class="line">    <span class="keyword">call</span> f_ptr%cleanup()</span><br><span class="line">    <span class="built_in">deallocate</span>(f_ptr)</span><br><span class="line">  <span class="keyword">end</span> <span class="function"><span class="keyword">subroutine</span></span> c_rk4_integrator_destroy</span><br><span class="line">  </span><br><span class="line">  <span class="comment">! 执行RK4积分器的一个时间步，更新状态变量。</span></span><br><span class="line">  <span class="function"><span class="keyword">subroutine</span></span> c_rk4_integrator_step(integrator_ptr, state_ptr) <span class="keyword">bind</span>(C, <span class="keyword">name</span>=<span class="string">&quot;rk4_integrator_step&quot;</span>)</span><br><span class="line">    <span class="keyword">type</span>(<span class="keyword">c_ptr</span>), <span class="keyword">value</span>, <span class="keyword">intent</span>(<span class="keyword">in</span>) :: integrator_ptr, state_ptr</span><br><span class="line">    <span class="keyword">type</span>(rk4_integrator_type), <span class="keyword">pointer</span> :: integrator_f_ptr</span><br><span class="line">    <span class="keyword">type</span>(state_type), <span class="keyword">pointer</span> :: state_f_ptr</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">call</span> <span class="keyword">c_f_pointer</span>(integrator_ptr, integrator_f_ptr)</span><br><span class="line">    <span class="keyword">call</span> <span class="keyword">c_f_pointer</span>(state_ptr, state_f_ptr)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">call</span> integrator_f_ptr%step(state_f_ptr)</span><br><span class="line">  <span class="keyword">end</span> <span class="function"><span class="keyword">subroutine</span></span> c_rk4_integrator_step</span><br><span class="line">  </span><br><span class="line"><span class="keyword">end</span> <span class="keyword">module</span> model_c_bindings </span><br></pre></td></tr></table></figure>



<h4 id="model-c-api-hpp"><a href="#model-c-api-hpp" class="headerlink" title="model_c_api.hpp"></a>model_c_api.hpp</h4><p><strong>这段代码定义了一个C语言接口，用于操作Lorenz 63模型及其RK4积分器。它提供了创建和销毁模型及积分器的函数，以及获取和设置模型参数的函数。通过使用<code>extern &quot;C&quot;</code>，这些函数可以在C和C++代码中无缝使用，确保了跨语言的兼容性。这种设计使得C++代码可以方便地调用Fortran实现的模型和积分器功能，同时保持了代码的清晰和可维护性。</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> __cplusplus</span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> &#123;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Model functions</span></span><br><span class="line"><span class="type">void</span>* <span class="title function_">lorenz63_model_create</span><span class="params">(<span class="type">float</span> sigma, <span class="type">float</span> rho, <span class="type">float</span> beta, <span class="type">float</span> dt)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">lorenz63_model_destroy</span><span class="params">(<span class="type">void</span>* model_ptr)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">lorenz63_model_get_params</span><span class="params">(<span class="type">void</span>* model_ptr, <span class="type">float</span>* sigma, <span class="type">float</span>* rho,</span></span><br><span class="line"><span class="params">                               <span class="type">float</span>* beta, <span class="type">float</span>* dt)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">lorenz63_model_set_params</span><span class="params">(<span class="type">void</span>* model_ptr, <span class="type">float</span> sigma, <span class="type">float</span> rho,</span></span><br><span class="line"><span class="params">                               <span class="type">float</span> beta, <span class="type">float</span> dt)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Integrator functions</span></span><br><span class="line"><span class="type">void</span>* <span class="title function_">rk4_integrator_create</span><span class="params">(<span class="type">void</span>* model_ptr)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">rk4_integrator_destroy</span><span class="params">(<span class="type">void</span>* integrator_ptr)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">rk4_integrator_step</span><span class="params">(<span class="type">void</span>* integrator_ptr, <span class="type">void</span>* state_ptr)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> __cplusplus</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>





<h4 id="Model-hpp"><a href="#Model-hpp" class="headerlink" title="Model.hpp"></a>Model.hpp</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;memory&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unordered_map&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;IModel.hpp&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;IState.hpp&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;State.hpp&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;model_c_api.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> metada::backends::lorenz63 &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 前向声明了Integrator类。这允许在当前头文件中引用Integrator类，而不需要包含其完整的定义。完整的定义通常在另一个头文件或源文件中提供。</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Integrator</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 一个简单的结构，用于包装void*指针，以便与std::shared_ptr一起使用。</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">VoidPointerWrapper</span> &#123;</span><br><span class="line">  <span class="type">void</span>* ptr;</span><br><span class="line">  <span class="function"><span class="keyword">explicit</span> <span class="title">VoidPointerWrapper</span><span class="params">(<span class="type">void</span>* p)</span> : ptr(p) &#123;</span>&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// class Model：定义了一个名为Model的类。</span></span><br><span class="line"><span class="comment">// public framework::IModel：Model类继承自framework::IModel接口，这意味着它必须实现IModel接口中定义的所有纯虚函数。</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Model</span> : <span class="keyword">public</span> framework::IModel &#123;</span><br><span class="line"> <span class="keyword">public</span>:</span><br><span class="line">  <span class="comment">// 这是一个模板构造函数，允许Model类接受不同类型的配置对象config</span></span><br><span class="line">  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line">  <span class="comment">// 构造函数的声明，接受一个framework::Config&lt;T&gt;类型的配置对象config</span></span><br><span class="line">  <span class="function"><span class="keyword">explicit</span> <span class="title">Model</span><span class="params">(<span class="type">const</span> framework::Config&lt;T&gt;&amp; config)</span></span></span><br><span class="line"><span class="function">  		<span class="comment">// 初始化列表，用于初始化基类和成员变量</span></span></span><br><span class="line"><span class="function">      : framework::IModel(config), initialized_(false), ptr_(nullptr) &#123;</span></span><br><span class="line">    <span class="comment">// 构造函数的实现，调用initializeFromConfig方法来初始化模型</span></span><br><span class="line">    <span class="built_in">initializeFromConfig</span>(config);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief Initialize the model with the given configuration</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param config Configuration object with model parameters</span></span><br><span class="line"><span class="comment">  * @throws std::runtime_error if initialization fails</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="comment">// 接受一个framework::IConfig类型的常量引用config，表示配置对象。</span></span><br><span class="line"><span class="comment">// override:C++11关键字，表示这个方法覆盖了基类framework::IModel中的虚函数</span></span><br><span class="line"> <span class="function"><span class="type">void</span> <span class="title">initialize</span><span class="params">(<span class="type">const</span> framework::IConfig&amp; config)</span> <span class="keyword">override</span> </span>&#123;</span><br><span class="line">   <span class="keyword">try</span> &#123;</span><br><span class="line">     <span class="comment">// 从配置对象config中提取模型参数sigma、rho、beta和dt</span></span><br><span class="line">     <span class="comment">// std::get&lt;float&gt;：从配置对象中获取指定键的值，并将其转换为float类型。</span></span><br><span class="line">     <span class="type">float</span> sigma = std::<span class="built_in">get</span>&lt;<span class="type">float</span>&gt;(config.<span class="built_in">Get</span>(<span class="string">&quot;model.parameters.sigma&quot;</span>));</span><br><span class="line">     <span class="type">float</span> rho = std::<span class="built_in">get</span>&lt;<span class="type">float</span>&gt;(config.<span class="built_in">Get</span>(<span class="string">&quot;model.parameters.rho&quot;</span>));</span><br><span class="line">     <span class="type">float</span> beta = std::<span class="built_in">get</span>&lt;<span class="type">float</span>&gt;(config.<span class="built_in">Get</span>(<span class="string">&quot;model.parameters.beta&quot;</span>));</span><br><span class="line">     <span class="type">float</span> dt = std::<span class="built_in">get</span>&lt;<span class="type">float</span>&gt;(config.<span class="built_in">Get</span>(<span class="string">&quot;model.integrator.dt&quot;</span>));</span><br><span class="line"></span><br><span class="line">     <span class="comment">// 调用lorenz63_model_create函数创建Lorenz 63模型的Fortran实例</span></span><br><span class="line">     <span class="type">void</span>* model_ptr = <span class="built_in">lorenz63_model_create</span>(sigma, rho, beta, dt);</span><br><span class="line">     <span class="keyword">if</span> (!model_ptr) &#123;</span><br><span class="line">       <span class="keyword">throw</span> std::<span class="built_in">runtime_error</span>(<span class="string">&quot;Failed to create Lorenz63 model&quot;</span>);</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">// 自定义删除器确保在std::shared_ptr析构时调用lorenz63_model_destroy函数释放Fortran模型</span></span><br><span class="line">     ptr_ = std::<span class="built_in">shared_ptr</span>&lt;VoidPointerWrapper&gt;(</span><br><span class="line">         <span class="keyword">new</span> <span class="built_in">VoidPointerWrapper</span>(model_ptr), [](VoidPointerWrapper* w) &#123;</span><br><span class="line">           <span class="keyword">if</span> (w &amp;&amp; w-&gt;ptr) <span class="built_in">lorenz63_model_destroy</span>(w-&gt;ptr);</span><br><span class="line">           <span class="keyword">delete</span> w;</span><br><span class="line">         &#125;);</span><br><span class="line"></span><br><span class="line">     <span class="comment">// 将模型参数存储在parameters_哈希表中，以便后续访问</span></span><br><span class="line">     parameters_[<span class="string">&quot;sigma&quot;</span>] = std::<span class="built_in">to_string</span>(sigma);</span><br><span class="line">     parameters_[<span class="string">&quot;rho&quot;</span>] = std::<span class="built_in">to_string</span>(rho);</span><br><span class="line">     parameters_[<span class="string">&quot;beta&quot;</span>] = std::<span class="built_in">to_string</span>(beta);</span><br><span class="line">     parameters_[<span class="string">&quot;dt&quot;</span>] = std::<span class="built_in">to_string</span>(dt);</span><br><span class="line">     parameters_[<span class="string">&quot;num_steps&quot;</span>] = std::<span class="built_in">to_string</span>(<span class="built_in">static_cast</span>&lt;<span class="type">int</span>&gt;(</span><br><span class="line">         std::<span class="built_in">get</span>&lt;<span class="type">int</span>&gt;(config.<span class="built_in">Get</span>(<span class="string">&quot;model.integrator.num_steps&quot;</span>))));</span><br><span class="line"></span><br><span class="line">     initialized_ = <span class="literal">true</span>; <span class="comment">// 将initialized_设置为true，表示模型已成功初始化。</span></span><br><span class="line">   &#125; <span class="built_in">catch</span> (<span class="type">const</span> std::exception&amp; e) &#123;</span><br><span class="line">     <span class="keyword">throw</span> std::<span class="built_in">runtime_error</span>(</span><br><span class="line">         std::<span class="built_in">string</span>(<span class="string">&quot;Failed to initialize Lorenz63 model: &quot;</span>) + e.<span class="built_in">what</span>());</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 这段代码定义了Model类的两个方法：initializeFromConfig和reset。</span></span><br><span class="line">	<span class="comment">// initializeFromConfig方法是一个模板方法，它只是将调用转发到非模板版本的initialize方法。</span></span><br><span class="line">  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line">  <span class="function"><span class="type">void</span> <span class="title">initializeFromConfig</span><span class="params">(<span class="type">const</span> framework::Config&lt;T&gt;&amp; config)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Just delegate to the non-template version</span></span><br><span class="line">    <span class="built_in">initialize</span>(config);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">// reset方法用于将模型的参数重置为其初始值。它从内部存储的参数值中获取初始参数，并调用Fortran函数lorenz63_model_set_params来更新模型的参数。</span></span><br><span class="line">  <span class="function"><span class="type">void</span> <span class="title">reset</span><span class="params">()</span> <span class="keyword">override</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!initialized_) &#123;</span><br><span class="line">      <span class="keyword">throw</span> std::<span class="built_in">runtime_error</span>(<span class="string">&quot;Cannot reset uninitialized model&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Reset parameters to their initial values</span></span><br><span class="line">    <span class="type">float</span> sigma = std::<span class="built_in">stof</span>(parameters_[<span class="string">&quot;sigma&quot;</span>]);</span><br><span class="line">    <span class="type">float</span> rho = std::<span class="built_in">stof</span>(parameters_[<span class="string">&quot;rho&quot;</span>]);</span><br><span class="line">    <span class="type">float</span> beta = std::<span class="built_in">stof</span>(parameters_[<span class="string">&quot;beta&quot;</span>]);</span><br><span class="line">    <span class="type">float</span> dt = std::<span class="built_in">stof</span>(parameters_[<span class="string">&quot;dt&quot;</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">lorenz63_model_set_params</span>(<span class="built_in">getPtr</span>(), sigma, rho, beta, dt);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">// 这两个方法都提供了对模型初始化和重置的控制，确保模型的状态可以被正确管理。</span></span><br></pre></td></tr></table></figure>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"> <span class="comment">// finalize方法用于释放模型资源并标记模型为未初始化状态。</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">finalize</span><span class="params">()</span> <span class="keyword">override</span> </span>&#123;</span><br><span class="line">   ptr_.<span class="built_in">reset</span>();</span><br><span class="line">   initialized_ = <span class="literal">false</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 返回initialized_的值，表示模型是否已经初始化</span></span><br><span class="line"> <span class="function"><span class="type">bool</span> <span class="title">isInitialized</span><span class="params">()</span> <span class="type">const</span> <span class="keyword">override</span> </span>&#123; <span class="keyword">return</span> initialized_; &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 使用parameters_哈希表的find方法查找参数name。</span></span><br><span class="line"> <span class="comment">// 如果参数不存在，抛出std::out_of_range异常。</span></span><br><span class="line"> <span class="comment">// 如果参数存在，返回参数的值。</span></span><br><span class="line"> <span class="function">std::string <span class="title">getParameter</span><span class="params">(<span class="type">const</span> std::string&amp; name)</span> <span class="type">const</span> <span class="keyword">override</span> </span>&#123;</span><br><span class="line">   <span class="keyword">auto</span> it = parameters_.<span class="built_in">find</span>(name);</span><br><span class="line">   <span class="keyword">if</span> (it == parameters_.<span class="built_in">end</span>()) &#123;</span><br><span class="line">     <span class="keyword">throw</span> std::<span class="built_in">out_of_range</span>(<span class="string">&quot;Parameter not found: &quot;</span> + name);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> it-&gt;second;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 这段代码实现了Model类的setParameter方法，用于设置模型的参数。它首先检查模型是否已经初始化，然后将参数值存储在内部的哈希表中，并更新Fortran模型的参数。通过这种方式，代码确保了模型的参数可以被正确设置，同时提供了异常处理机制，以应对无效参数值或未知参数名称的情况。</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setParameter</span><span class="params">(<span class="type">const</span> std::string&amp; name,</span></span></span><br><span class="line"><span class="params"><span class="function">                  <span class="type">const</span> std::string&amp; value)</span> <span class="keyword">override</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 检查模型是否已经初始化</span></span><br><span class="line">  <span class="keyword">if</span> (!initialized_) &#123;</span><br><span class="line">    <span class="keyword">throw</span> std::<span class="built_in">runtime_error</span>(<span class="string">&quot;Cannot set parameter on uninitialized model&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="type">float</span> floatValue = std::<span class="built_in">stof</span>(value);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将参数名称name和值value存储在内部的哈希表parameters_中</span></span><br><span class="line">    parameters_[name] = value;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update model parameters</span></span><br><span class="line">    <span class="type">float</span> sigma, rho, beta, dt;</span><br><span class="line">    <span class="built_in">getParameters</span>(sigma, rho, beta, dt);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (name == <span class="string">&quot;sigma&quot;</span>)</span><br><span class="line">      sigma = floatValue;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (name == <span class="string">&quot;rho&quot;</span>)</span><br><span class="line">      rho = floatValue;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (name == <span class="string">&quot;beta&quot;</span>)</span><br><span class="line">      beta = floatValue;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (name == <span class="string">&quot;dt&quot;</span>)</span><br><span class="line">      dt = floatValue;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (name != <span class="string">&quot;num_steps&quot;</span>) &#123;</span><br><span class="line">      <span class="keyword">throw</span> std::<span class="built_in">invalid_argument</span>(<span class="string">&quot;Unknown parameter: &quot;</span> + name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">lorenz63_model_set_params</span>(<span class="built_in">getPtr</span>(), sigma, rho, beta, dt);</span><br><span class="line">  &#125; <span class="built_in">catch</span> (<span class="type">const</span> std::invalid_argument&amp;) &#123;</span><br><span class="line">    <span class="keyword">throw</span> std::<span class="built_in">invalid_argument</span>(<span class="string">&quot;Invalid value for parameter: &quot;</span> + name);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//  run方法用于运行模型，从初始状态到最终状态。</span></span><br><span class="line"><span class="comment">// getParameters方法用于获取模型的当前参数。</span></span><br><span class="line"><span class="comment">// setParameters方法用于设置模型的参数，并更新内部的参数存储。</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">run</span><span class="params">(<span class="type">const</span> framework::IState&amp; initialState, framework::IState&amp; finalState,</span></span></span><br><span class="line"><span class="params"><span class="function">         <span class="type">double</span> startTime, <span class="type">double</span> endTime)</span> <span class="keyword">override</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief Get the parameters of the model</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param sigma Output Prandtl number</span></span><br><span class="line"><span class="comment"> * @param rho Output Rayleigh number</span></span><br><span class="line"><span class="comment"> * @param beta Output Geometric factor</span></span><br><span class="line"><span class="comment"> * @param dt Output Time step</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">getParameters</span><span class="params">(<span class="type">float</span>&amp; sigma, <span class="type">float</span>&amp; rho, <span class="type">float</span>&amp; beta, <span class="type">float</span>&amp; dt)</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!initialized_) &#123;</span><br><span class="line">    <span class="keyword">throw</span> std::<span class="built_in">runtime_error</span>(<span class="string">&quot;Cannot get parameters of uninitialized model&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">lorenz63_model_get_params</span>(<span class="built_in">getPtr</span>(), &amp;sigma, &amp;rho, &amp;beta, &amp;dt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief Set the parameters of the model</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param sigma Prandtl number</span></span><br><span class="line"><span class="comment"> * @param rho Rayleigh number</span></span><br><span class="line"><span class="comment"> * @param beta Geometric factor</span></span><br><span class="line"><span class="comment"> * @param dt Time step</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setParameters</span><span class="params">(<span class="type">float</span> sigma, <span class="type">float</span> rho, <span class="type">float</span> beta, <span class="type">float</span> dt)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!initialized_) &#123;</span><br><span class="line">    <span class="keyword">throw</span> std::<span class="built_in">runtime_error</span>(<span class="string">&quot;Cannot set parameters of uninitialized model&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">lorenz63_model_set_params</span>(<span class="built_in">getPtr</span>(), sigma, rho, beta, dt);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Update parameter store</span></span><br><span class="line">  parameters_[<span class="string">&quot;sigma&quot;</span>] = std::<span class="built_in">to_string</span>(sigma);</span><br><span class="line">  parameters_[<span class="string">&quot;rho&quot;</span>] = std::<span class="built_in">to_string</span>(rho);</span><br><span class="line">  parameters_[<span class="string">&quot;beta&quot;</span>] = std::<span class="built_in">to_string</span>(beta);</span><br><span class="line">  parameters_[<span class="string">&quot;dt&quot;</span>] = std::<span class="built_in">to_string</span>(dt);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">  <span class="comment">// getPtr方法用于获取底层Fortran模型的原始指针，确保模型已经初始化。</span></span><br><span class="line">  <span class="comment">// 私有成员变量ptr_、initialized_和parameters_用于管理Fortran模型的指针、跟踪模型的初始化状态以及存储模型的参数。</span></span><br><span class="line">  <span class="function"><span class="type">void</span>* <span class="title">getPtr</span><span class="params">()</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!initialized_) &#123;</span><br><span class="line">      <span class="keyword">throw</span> std::<span class="built_in">runtime_error</span>(<span class="string">&quot;Cannot get pointer to uninitialized model&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ptr_-&gt;ptr;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">private</span>:</span><br><span class="line">  <span class="comment">// Smart pointer to manage Fortran model using the wrapper</span></span><br><span class="line">  std::shared_ptr&lt;VoidPointerWrapper&gt; ptr_;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Tracking initialization state</span></span><br><span class="line">  <span class="type">bool</span> initialized_;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Store for model parameters</span></span><br><span class="line">  std::unordered_map&lt;std::string, std::string&gt; parameters_;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Integrator类封装了Lorenz 63模型的Fortran RK4积分器。</span></span><br><span class="line"><span class="comment">// 提供了创建积分器、执行单步积分和运行多步积分的功能。</span></span><br><span class="line"><span class="comment">// 使用std::shared_ptr和自定义删除器管理Fortran积分器的指针，确保资源的正确管理和释放。</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Integrator</span> &#123;</span><br><span class="line"> <span class="keyword">public</span>:</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * @brief Construct a new Integrator with given model</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * @param model Reference to Model</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="built_in">Integrator</span>(<span class="type">const</span> Model&amp; model)</span><br><span class="line">      : <span class="built_in">ptr_</span>(<span class="built_in">rk4_integrator_create</span>(model.<span class="built_in">getPtr</span>()), integrator_deleter) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!ptr_) &#123;</span><br><span class="line">      <span class="keyword">throw</span> std::<span class="built_in">runtime_error</span>(<span class="string">&quot;Failed to create RK4 integrator&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * @brief Perform one step of integration</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * @param state Lorenz63State to update</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="type">void</span> <span class="title">step</span><span class="params">(State&amp; state)</span> </span>&#123; <span class="built_in">rk4_integrator_step</span>(ptr_.<span class="built_in">get</span>(), state.<span class="built_in">getPtr</span>()); &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * @brief Run the integration for multiple steps</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * @param state Lorenz63State to update</span></span><br><span class="line"><span class="comment">   * @param numSteps Number of steps to run</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="type">void</span> <span class="title">run</span><span class="params">(State&amp; state, <span class="type">int</span> numSteps)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; numSteps; ++i) &#123;</span><br><span class="line">      <span class="built_in">step</span>(state);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">private</span>:</span><br><span class="line">  <span class="comment">// Custom deleter for Fortran integrator</span></span><br><span class="line">  <span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">integrator_deleter</span><span class="params">(<span class="type">void</span>* ptr)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (ptr) &#123;</span><br><span class="line">      <span class="built_in">rk4_integrator_destroy</span>(ptr);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Smart pointer to manage Fortran integrator</span></span><br><span class="line">  std::shared_ptr&lt;<span class="type">void</span>&gt; ptr_;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 这段代码实现了Model类的run方法，用于运行Lorenz 63模型从初始状态到最终状态。它首先检查模型是否已经初始化，然后将初始状态转换为具体的State类型，创建一个初始状态的副本，创建一个Integrator实例，并运行模拟。</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">Model::run</span><span class="params">(<span class="type">const</span> framework::IState&amp; initialState,</span></span></span><br><span class="line"><span class="params"><span class="function">                       [[maybe_unused]] framework::IState&amp; finalState,</span></span></span><br><span class="line"><span class="params"><span class="function">                       [[maybe_unused]] <span class="type">double</span> startTime,</span></span></span><br><span class="line"><span class="params"><span class="function">                       [[maybe_unused]] <span class="type">double</span> endTime)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!initialized_) &#123;</span><br><span class="line">    <span class="keyword">throw</span> std::<span class="built_in">runtime_error</span>(<span class="string">&quot;Cannot run uninitialized model&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// Cast to concrete Lorenz63 state types</span></span><br><span class="line">    <span class="type">const</span> State&amp; lorenzInitialState = <span class="built_in">dynamic_cast</span>&lt;<span class="type">const</span> State&amp;&gt;(initialState);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Copy initial state to final state</span></span><br><span class="line">    <span class="function">std::unique_ptr&lt;State&gt; <span class="title">lorenzFinalState</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="keyword">dynamic_cast</span>&lt;State*&gt;(lorenzInitialState.clone().release()))</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Create integrator and run simulation</span></span><br><span class="line">    <span class="function">Integrator <span class="title">integrator</span><span class="params">(*<span class="keyword">this</span>)</span></span>;</span><br><span class="line">    <span class="type">int</span> numSteps = std::<span class="built_in">stoi</span>(parameters_[<span class="string">&quot;num_steps&quot;</span>]);</span><br><span class="line">    integrator.<span class="built_in">run</span>(*lorenzFinalState, numSteps);</span><br><span class="line"></span><br><span class="line">  &#125; <span class="built_in">catch</span> (<span class="type">const</span> std::bad_cast&amp;) &#123;</span><br><span class="line">    <span class="keyword">throw</span> std::<span class="built_in">runtime_error</span>(</span><br><span class="line">        <span class="string">&quot;Incompatible state type provided to Lorenz63 model&quot;</span>);</span><br><span class="line">  &#125; <span class="built_in">catch</span> (<span class="type">const</span> std::exception&amp; e) &#123;</span><br><span class="line">    <span class="keyword">throw</span> std::<span class="built_in">runtime_error</span>(std::<span class="built_in">string</span>(<span class="string">&quot;Model run failed: &quot;</span>) + e.<span class="built_in">what</span>());</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;  <span class="comment">// namespace metada::backends::lorenz63</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2025/07/28/Tool/METADA-install/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="METADA-install"><a href="#METADA-install" class="headerlink" title="METADA-install"></a>METADA-install</h1><h2 id="项目简介"><a href="#项目简介" class="headerlink" title="项目简介"></a>项目简介</h2><p>METADA (Modern Earth system Toolkit for Assimilation and Data Analysis) 是一个高性能、跨平台的数据同化框架，专为地球科学应用而设计。使用现代C++构建并针对性能进行了优化，METADA为在各种计算环境中实现、测试和部署数据同化算法提供了强大的基础设施。</p>
<h2 id="安装环境说明"><a href="#安装环境说明" class="headerlink" title="安装环境说明"></a>安装环境说明</h2><p>本教程专门针对超算平台环境编写，适用于以下情况：</p>
<ul>
<li><strong>无sudo权限</strong>：无法使用系统包管理器安装软件</li>
<li><strong>网络限制</strong>：可能无法直接联网下载软件包</li>
<li><strong>模块化管理</strong>：使用Lmod进行软件环境管理</li>
<li><strong>用户空间安装</strong>：所有软件安装在用户目录下</li>
</ul>
<h3 id="环境变量设置"><a href="#环境变量设置" class="headerlink" title="环境变量设置"></a>环境变量设置</h3><p>在开始安装前，请设置以下环境变量（请根据你的实际路径修改）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 设置安装目录（请根据实际情况修改）</span></span><br><span class="line"><span class="built_in">export</span> INSTALL_DIR=<span class="string">&quot;<span class="variable">$HOME</span>/install_soft&quot;</span></span><br><span class="line"><span class="built_in">export</span> DOWNLOAD_DIR=<span class="string">&quot;<span class="variable">$HOME</span>/down_soft&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建目录</span></span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$INSTALL_DIR</span></span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$DOWNLOAD_DIR</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置PATH和库路径</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/bin:<span class="variable">$PATH</span>&quot;</span></span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/lib:<span class="variable">$LD_LIBRARY_PATH</span>&quot;</span></span><br><span class="line"><span class="built_in">export</span> PKG_CONFIG_PATH=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/lib/pkgconfig:<span class="variable">$PKG_CONFIG_PATH</span>&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="安装逻辑概述"><a href="#安装逻辑概述" class="headerlink" title="安装逻辑概述"></a>安装逻辑概述</h2><p>本安装教程采用分层安装的方式，按照以下逻辑进行：</p>
<ol>
<li><strong>Lmod模块管理系统</strong> - 用于管理软件环境，可能依赖TCL</li>
<li><strong>HPC-Stack科学软件库</strong> - 安装必要的科学计算库，包括编译器、MPI、NetCDF等</li>
<li><strong>其他依赖库</strong> - 安装METADA项目特有的依赖库</li>
<li><strong>METADA本体编译</strong> - 配置环境变量，使用CMake编译METADA项目</li>
</ol>
<h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><h3 id="第一步：安装Lmod模块管理系统"><a href="#第一步：安装Lmod模块管理系统" class="headerlink" title="第一步：安装Lmod模块管理系统"></a>第一步：安装Lmod模块管理系统</h3><p>Lmod是一个用于管理软件环境的工具，在超算平台上广泛使用。我们需要先安装Lmod来管理后续的软件环境。</p>
<h4 id="1-1-安装Lua-5-4"><a href="#1-1-安装Lua-5-4" class="headerlink" title="1.1 安装Lua 5.4"></a>1.1 安装Lua 5.4</h4><p>Lmod依赖于Lua，首先安装Lua：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$DOWNLOAD_DIR</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载Lua 5.4.6</span></span><br><span class="line">curl -L -R -O https://www.lua.org/ftp/lua-5.4.6.tar.gz</span><br><span class="line">tar zxf lua-5.4.6.tar.gz</span><br><span class="line"><span class="built_in">cd</span> lua-5.4.6</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改Makefile中的安装路径</span></span><br><span class="line">sed -i <span class="string">&quot;s|INSTALL_TOP= /usr/local|INSTALL_TOP= <span class="variable">$INSTALL_DIR</span>/lua|g&quot;</span> Makefile</span><br><span class="line">sed -i <span class="string">&quot;s|INSTALL_BIN= \$(INSTALL_TOP)/bin|INSTALL_BIN= \$(INSTALL_TOP)/bin|g&quot;</span> Makefile</span><br><span class="line">sed -i <span class="string">&quot;s|INSTALL_INC= \$(INSTALL_TOP)/include|INSTALL_INC= \$(INSTALL_TOP)/include|g&quot;</span> Makefile</span><br><span class="line">sed -i <span class="string">&quot;s|INSTALL_LIB= \$(INSTALL_TOP)/lib|INSTALL_LIB= \$(INSTALL_TOP)/lib|g&quot;</span> Makefile</span><br><span class="line">sed -i <span class="string">&quot;s|INSTALL_MAN= \$(INSTALL_TOP)/man/man1|INSTALL_MAN= \$(INSTALL_TOP)/man/man1|g&quot;</span> Makefile</span><br><span class="line">sed -i <span class="string">&quot;s|INSTALL_LMOD= \$(INSTALL_TOP)/share/lua/\$(V)|INSTALL_LMOD= \$(INSTALL_TOP)/share/lua/\$(V)|g&quot;</span> Makefile</span><br><span class="line">sed -i <span class="string">&quot;s|INSTALL_CMOD= \$(INSTALL_TOP)/lib/lua/\$(V)|INSTALL_CMOD= \$(INSTALL_TOP)/lib/lua/\$(V)|g&quot;</span> Makefile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译和安装</span></span><br><span class="line">make all <span class="built_in">test</span></span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置Lua环境变量</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/lua/bin:<span class="variable">$PATH</span>&quot;</span></span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/lua/lib:<span class="variable">$LD_LIBRARY_PATH</span>&quot;</span></span><br></pre></td></tr></table></figure>

<h4 id="1-2-安装LuaRocks"><a href="#1-2-安装LuaRocks" class="headerlink" title="1.2 安装LuaRocks"></a>1.2 安装LuaRocks</h4><p>LuaRocks是Lua的包管理器，用于安装Lua模块：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$DOWNLOAD_DIR</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载LuaRocks</span></span><br><span class="line">wget https://luarocks.org/releases/luarocks-3.9.2.tar.gz</span><br><span class="line">tar zxpf luarocks-3.9.2.tar.gz</span><br><span class="line"><span class="built_in">cd</span> luarocks-3.9.2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置和安装</span></span><br><span class="line">./configure --prefix=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/luarocks&quot;</span></span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置LuaRocks环境变量</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/luarocks/bin:<span class="variable">$PATH</span>&quot;</span></span><br></pre></td></tr></table></figure>

<h4 id="1-3-安装luaposix"><a href="#1-3-安装luaposix" class="headerlink" title="1.3 安装luaposix"></a>1.3 安装luaposix</h4><p>luaposix是Lua的POSIX接口库，Lmod需要这个模块：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 进入LuaRocks安装目录</span></span><br><span class="line"><span class="built_in">cd</span> <span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/luarocks/bin&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装luaposix模块</span></span><br><span class="line">./luarocks install luaposix</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置Lua模块路径，方便找到luaposix</span></span><br><span class="line"><span class="built_in">export</span> LUAROCKS_PREFIX=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/luarocks&quot;</span></span><br><span class="line"><span class="built_in">export</span> LUA_PATH=<span class="string">&quot;<span class="variable">$LUAROCKS_PREFIX</span>/share/lua/5.4/?.lua;<span class="variable">$LUAROCKS_PREFIX</span>/share/lua/5.4/?/init.lua;;&quot;</span></span><br><span class="line"><span class="built_in">export</span> LUA_CPATH=<span class="string">&quot;<span class="variable">$LUAROCKS_PREFIX</span>/lib/lua/5.4/?.so;;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证luaposix安装</span></span><br><span class="line">lua -e <span class="string">&quot;require(&#x27;posix&#x27;); print(&#x27;luaposix installed successfully&#x27;)&quot;</span></span><br></pre></td></tr></table></figure>

<h4 id="1-4-安装Lmod"><a href="#1-4-安装Lmod" class="headerlink" title="1.4 安装Lmod"></a>1.4 安装Lmod</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$DOWNLOAD_DIR</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载Lmod（如果网络受限，可以下载到本地后上传）</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/TACC/Lmod.git</span><br><span class="line"><span class="built_in">cd</span> Lmod</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置和安装</span></span><br><span class="line">./configure --prefix=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/Lmod&quot;</span></span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置Lmod环境变量</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/Lmod/lmod/lmod/libexec:<span class="variable">$PATH</span>&quot;</span></span><br><span class="line"><span class="built_in">export</span> LMOD_CMD=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/Lmod/lmod/lmod/libexec/lmod&quot;</span></span><br><span class="line"><span class="built_in">export</span> MODULEPATH=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/Lmod/lmod/lmod/modulefiles/Core:<span class="variable">$MODULEPATH</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化Lmod</span></span><br><span class="line"><span class="built_in">source</span> <span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/Lmod/lmod/lmod/init/bash&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改bash初始化文件</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;BASH_ENV=<span class="variable">$INSTALL_DIR</span>/Lmod/lmod/lmod/init/bash; export BASH_ENV&quot;</span> &gt;&gt; ~/.bashrc</span><br></pre></td></tr></table></figure>

<h4 id="1-5-验证Lmod和luaposix安装"><a href="#1-5-验证Lmod和luaposix安装" class="headerlink" title="1.5 验证Lmod和luaposix安装"></a>1.5 验证Lmod和luaposix安装</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 重新加载bash配置</span></span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证Lmod安装</span></span><br><span class="line">module --version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证luaposix安装</span></span><br><span class="line">lua -e <span class="string">&quot;require(&#x27;posix&#x27;); print(&#x27;luaposix is working correctly&#x27;)&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查Lua模块路径</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;LUA_PATH: <span class="variable">$LUA_PATH</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;LUA_CPATH: <span class="variable">$LUA_CPATH</span>&quot;</span></span><br></pre></td></tr></table></figure>

<h4 id="1-6-故障排除"><a href="#1-6-故障排除" class="headerlink" title="1.6 故障排除"></a>1.6 故障排除</h4><p><strong>Lmod相关问题：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 检查Lmod是否正确安装</span></span><br><span class="line">module --version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查模块路径</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$MODULEPATH</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新初始化Lmod</span></span><br><span class="line"><span class="built_in">source</span> <span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/Lmod/lmod/lmod/init/bash&quot;</span></span><br></pre></td></tr></table></figure>

<p><strong>luaposix相关问题：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 检查luaposix是否正确安装</span></span><br><span class="line">lua -e <span class="string">&quot;require(&#x27;posix&#x27;); print(&#x27;luaposix found&#x27;)&quot;</span> 2&gt;/dev/null || <span class="built_in">echo</span> <span class="string">&quot;luaposix not found&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查Lua模块路径</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;LUA_PATH: <span class="variable">$LUA_PATH</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;LUA_CPATH: <span class="variable">$LUA_CPATH</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果luaposix找不到，重新安装</span></span><br><span class="line"><span class="built_in">cd</span> <span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/luarocks/bin&quot;</span></span><br><span class="line">./luarocks install luaposix</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查LuaRocks安装的模块</span></span><br><span class="line">./luarocks list</span><br></pre></td></tr></table></figure>

<h3 id="第二步：安装HPC-Stack科学软件库"><a href="#第二步：安装HPC-Stack科学软件库" class="headerlink" title="第二步：安装HPC-Stack科学软件库"></a>第二步：安装HPC-Stack科学软件库</h3><p>HPC-Stack包含了科学计算所需的核心库。你可以选择使用HPC-Stack自动安装，或者手动安装各个组件。</p>
<p><strong>重要提示：</strong> 在开始HPC-Stack安装前，请确保已加载Lmod环境，以便后续使用<code>module load</code>命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 重新加载bash配置以激活Lmod环境</span></span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证Lmod是否可用</span></span><br><span class="line">module --version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果Lmod不可用，手动初始化</span></span><br><span class="line"><span class="built_in">source</span> <span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/Lmod/lmod/lmod/init/bash&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加HPC-Stack模块路径（重要！）</span></span><br><span class="line">module use <span class="variable">$INSTALL_DIR</span>/my_modules</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证模块路径是否添加成功</span></span><br><span class="line">module avail</span><br></pre></td></tr></table></figure>

<h4 id="2-1-使用HPC-Stack自动安装（推荐）"><a href="#2-1-使用HPC-Stack自动安装（推荐）" class="headerlink" title="2.1 使用HPC-Stack自动安装（推荐）"></a>2.1 使用HPC-Stack自动安装（推荐）</h4><p><strong>重要提示：</strong> 使用HPC-Stack自动安装需要系统已安装GNU编译器14.0以上版本和CMake 3.30以上版本。如果系统没有这些版本，请先手动安装。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 检查系统编译器版本</span></span><br><span class="line">gcc --version</span><br><span class="line">g++ --version</span><br><span class="line">gfortran --version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查CMake版本</span></span><br><span class="line">cmake --version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果版本不满足要求，请先安装所需版本</span></span><br></pre></td></tr></table></figure>

<p><strong>HPC-Stack安装步骤：</strong></p>
<p><strong>重要：</strong> HPC-Stack安装必须按照特定顺序进行，前面的组件安装失败会影响后续组件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$DOWNLOAD_DIR</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载HPC-Stack</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/NOAA-EMC/hpc-stack.git</span><br><span class="line"><span class="built_in">cd</span> hpc-stack</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建模块目录</span></span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$INSTALL_DIR</span>/my_modules</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建配置文件（根据你的需求修改）</span></span><br><span class="line"><span class="built_in">cat</span> &gt; config/config_metada.sh &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 平台配置</span></span><br><span class="line"><span class="built_in">export</span> MACHINE_ID=linux</span><br><span class="line"><span class="built_in">export</span> COMPILER=gnu</span><br><span class="line"><span class="built_in">export</span> MPICC=mpicc</span><br><span class="line"><span class="built_in">export</span> MPICXX=mpicxx</span><br><span class="line"><span class="built_in">export</span> MPIF90=mpifort</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装路径</span></span><br><span class="line"><span class="built_in">export</span> PREFIX=<span class="variable">$INSTALL_DIR</span>/hpc-stack</span><br><span class="line"><span class="built_in">export</span> MODULEPATH=<span class="variable">$INSTALL_DIR</span>/my_modules</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译器设置</span></span><br><span class="line"><span class="built_in">export</span> CC=gcc</span><br><span class="line"><span class="built_in">export</span> CXX=g++</span><br><span class="line"><span class="built_in">export</span> FC=gfortran</span><br><span class="line"><span class="built_in">export</span> F77=gfortran</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译选项</span></span><br><span class="line"><span class="built_in">export</span> CFLAGS=<span class="string">&quot;-O3 -march=native&quot;</span></span><br><span class="line"><span class="built_in">export</span> CXXFLAGS=<span class="string">&quot;-O3 -march=native&quot;</span></span><br><span class="line"><span class="built_in">export</span> FFLAGS=<span class="string">&quot;-O3 -march=native&quot;</span></span><br><span class="line"><span class="built_in">export</span> FCFLAGS=<span class="string">&quot;-O3 -march=native&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 并行编译</span></span><br><span class="line"><span class="built_in">export</span> MAKE_JOBS=$(<span class="built_in">nproc</span>)</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置模块环境</span></span><br><span class="line">./setup_modules.sh -p <span class="variable">$INSTALL_DIR</span>/my_modules -c config/config_metada.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加模块路径到当前会话</span></span><br><span class="line">module use <span class="variable">$INSTALL_DIR</span>/my_modules</span><br></pre></td></tr></table></figure>

<p><strong>分步安装（推荐）：</strong></p>
<p>由于HPC-Stack安装复杂，建议分步进行，每步验证成功后再进行下一步：</p>
<p><strong>步骤1：安装GNU编译器三件套</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建只包含编译器的yaml文件</span></span><br><span class="line"><span class="built_in">cat</span> &gt; stack/step1_compiler.yaml &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">stack:</span><br><span class="line">  gcc:</span><br><span class="line">    version: 14.2.0</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装编译器</span></span><br><span class="line">./build_stack.sh -p <span class="variable">$INSTALL_DIR</span>/my_modules -c config/config_metada.sh -y stack/step1_compiler.yaml -m</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证编译器安装</span></span><br><span class="line">module load gcc/14.2.0</span><br><span class="line">gcc --version</span><br><span class="line">g++ --version</span><br><span class="line">gfortran --version</span><br></pre></td></tr></table></figure>

<p><strong>步骤2：安装CMake</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建包含CMake的yaml文件</span></span><br><span class="line"><span class="built_in">cat</span> &gt; stack/step2_cmake.yaml &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">stack:</span><br><span class="line">  cmake:</span><br><span class="line">    version: 3.31.1</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装CMake</span></span><br><span class="line">./build_stack.sh -p <span class="variable">$INSTALL_DIR</span>/my_modules -c config/config_metada.sh -y stack/step2_cmake.yaml -m</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证CMake安装</span></span><br><span class="line">module load cmake/3.31.1</span><br><span class="line">cmake --version</span><br></pre></td></tr></table></figure>

<p><strong>步骤3：安装OpenMPI</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建包含OpenMPI的yaml文件</span></span><br><span class="line"><span class="built_in">cat</span> &gt; stack/step3_openmpi.yaml &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">stack:</span><br><span class="line">  openmpi:</span><br><span class="line">    version: 5.0.8</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装OpenMPI</span></span><br><span class="line">./build_stack.sh -p <span class="variable">$INSTALL_DIR</span>/my_modules -c config/config_metada.sh -y stack/step3_openmpi.yaml -m</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证OpenMPI安装</span></span><br><span class="line">module load openmpi/5.0.8</span><br><span class="line">mpicc --version</span><br><span class="line">mpirun --version</span><br></pre></td></tr></table></figure>

<p><strong>步骤4：安装其他科学计算库</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建完整的yaml文件</span></span><br><span class="line"><span class="built_in">cat</span> &gt; stack/step4_libraries.yaml &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">stack:</span><br><span class="line">  <span class="comment"># 基础库</span></span><br><span class="line">  zlib:</span><br><span class="line">    version: 1.2.11</span><br><span class="line">  szip:</span><br><span class="line">    version: 2.1.1</span><br><span class="line">  hdf5:</span><br><span class="line">    version: 1_10_9</span><br><span class="line">    depends: [zlib, szip]</span><br><span class="line">  </span><br><span class="line">  <span class="comment"># NetCDF</span></span><br><span class="line">  netcdf-c:</span><br><span class="line">    version: 4.9.2</span><br><span class="line">    depends: [hdf5, openmpi]</span><br><span class="line">  netcdf-fortran:</span><br><span class="line">    version: 4.5.3</span><br><span class="line">    depends: [netcdf-c]</span><br><span class="line">  netcdf-cxx4:</span><br><span class="line">    version: 4.3.1</span><br><span class="line">    depends: [netcdf-c]</span><br><span class="line">  </span><br><span class="line">  <span class="comment"># 可选：并行NetCDF</span></span><br><span class="line">  pnetcdf:</span><br><span class="line">    version: 1.12.1</span><br><span class="line">    depends: [openmpi]</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装其他库</span></span><br><span class="line">./build_stack.sh -p <span class="variable">$INSTALL_DIR</span>/my_modules -c config/config_metada.sh -y stack/step4_libraries.yaml -m</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证安装</span></span><br><span class="line">module avail</span><br><span class="line">module load netcdf</span><br><span class="line">module load hdf5</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证模块加载是否成功</span></span><br><span class="line">module list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果看不到HPC-Stack模块，请检查模块路径</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;当前模块路径: <span class="variable">$MODULEPATH</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;HPC-Stack模块目录: <span class="variable">$INSTALL_DIR</span>/my_modules&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 手动添加模块路径（如果需要）</span></span><br><span class="line">module use <span class="variable">$INSTALL_DIR</span>/my_modules</span><br><span class="line">module avail</span><br></pre></td></tr></table></figure>

<p><strong>一键安装（如果系统环境稳定）：</strong></p>
<p>如果前面的分步安装都成功，可以尝试一键安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建完整的stack配置文件</span></span><br><span class="line"><span class="built_in">cat</span> &gt; stack/stack_metada.yaml &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">stack:</span><br><span class="line">  <span class="comment"># 编译器</span></span><br><span class="line">  gcc:</span><br><span class="line">    version: 14.2.0</span><br><span class="line">  </span><br><span class="line">  <span class="comment"># 构建工具</span></span><br><span class="line">  cmake:</span><br><span class="line">    version: 3.31.1</span><br><span class="line"></span><br><span class="line">  <span class="comment"># MPI</span></span><br><span class="line">  openmpi:</span><br><span class="line">    version: 5.0.8  </span><br><span class="line"></span><br><span class="line">  <span class="comment"># 基础库</span></span><br><span class="line">  zlib:</span><br><span class="line">    version: 1.2.11</span><br><span class="line">  szip:</span><br><span class="line">    version: 2.1.1</span><br><span class="line">  hdf5:</span><br><span class="line">    version: 1_10_9</span><br><span class="line">    depends: [zlib, szip]</span><br><span class="line">  </span><br><span class="line">  <span class="comment"># NetCDF</span></span><br><span class="line">  netcdf-c:</span><br><span class="line">    version: 4.9.2</span><br><span class="line">    depends: [hdf5, openmpi]</span><br><span class="line">  netcdf-fortran:</span><br><span class="line">    version: 4.5.3</span><br><span class="line">    depends: [netcdf-c]</span><br><span class="line">  netcdf-cxx4:</span><br><span class="line">    version: 4.3.1</span><br><span class="line">    depends: [netcdf-c]</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 可选：并行NetCDF</span></span><br><span class="line">  pnetcdf:</span><br><span class="line">    version: 1.12.1</span><br><span class="line">    depends: [openmpi]</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建HPC-Stack</span></span><br><span class="line">./build_stack.sh -p <span class="variable">$INSTALL_DIR</span>/my_modules -c config/config_metada.sh -y stack/stack_metada.yaml -m</span><br></pre></td></tr></table></figure>

<p><strong>使用示例（基于你的配置）：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 如果你有现成的配置文件，可以直接使用</span></span><br><span class="line">./setup_modules.sh -p /work/home/accewcmji2/my_modules -c /work/home/accewcmji2/down_soft/hpc-stack/config/config_wuzhen.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建stack</span></span><br><span class="line">./build_stack.sh -p /work/home/accewcmji2/my_modules -c /work/home/accewcmji2/down_soft/hpc-stack/config/config_wuzhen.sh -y stack/stack_hafs_build.yaml -m</span><br></pre></td></tr></table></figure>

<p><strong>参数说明：</strong></p>
<ul>
<li><code>-p</code>: 指定模块安装路径</li>
<li><code>-c</code>: 指定配置文件路径</li>
<li><code>-y</code>: 指定stack配置文件</li>
<li><code>-m</code>: 启用模块系统</li>
</ul>
<h4 id="2-2-手动安装各个组件"><a href="#2-2-手动安装各个组件" class="headerlink" title="2.2 手动安装各个组件"></a>2.2 手动安装各个组件</h4><p>如果选择手动安装，按以下顺序安装：</p>
<h5 id="2-2-1-安装GCC-14-2-0（如果需要）"><a href="#2-2-1-安装GCC-14-2-0（如果需要）" class="headerlink" title="2.2.1 安装GCC 14.2.0（如果需要）"></a>2.2.1 安装GCC 14.2.0（如果需要）</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$DOWNLOAD_DIR</span></span><br><span class="line">wget https://ftp.gnu.org/gnu/gcc/gcc-14.2.0/gcc-14.2.0.tar.gz</span><br><span class="line">tar zxf gcc-14.2.0.tar.gz</span><br><span class="line"><span class="built_in">cd</span> gcc-14.2.0</span><br><span class="line">./contrib/download_prerequisites</span><br><span class="line"><span class="built_in">mkdir</span> build &amp;&amp; <span class="built_in">cd</span> build</span><br><span class="line">../configure --prefix=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/gcc-14.2.0&quot;</span> --enable-languages=c,c++,fortran --disable-multilib</span><br><span class="line">make -j$(<span class="built_in">nproc</span>) &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<h5 id="2-2-2-安装CMake-3-31-1"><a href="#2-2-2-安装CMake-3-31-1" class="headerlink" title="2.2.2 安装CMake 3.31.1"></a>2.2.2 安装CMake 3.31.1</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$DOWNLOAD_DIR</span></span><br><span class="line">wget https://github.com/Kitware/CMake/releases/download/v3.31.1/cmake-3.31.1.tar.gz</span><br><span class="line">tar zxf cmake-3.31.1.tar.gz</span><br><span class="line"><span class="built_in">cd</span> cmake-3.31.1</span><br><span class="line">./bootstrap --prefix=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/cmake&quot;</span></span><br><span class="line">make -j$(<span class="built_in">nproc</span>) &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<h5 id="2-2-3-安装OpenMPI"><a href="#2-2-3-安装OpenMPI" class="headerlink" title="2.2.3 安装OpenMPI"></a>2.2.3 安装OpenMPI</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$DOWNLOAD_DIR</span></span><br><span class="line">wget https://download.open-mpi.org/release/open-mpi/v5.0/openmpi-5.0.8.tar.gz</span><br><span class="line">tar zxf openmpi-5.0.8.tar.gz</span><br><span class="line"><span class="built_in">cd</span> openmpi-5.0.8</span><br><span class="line">./configure --prefix=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/openmpi&quot;</span></span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<h5 id="2-2-4-安装zlib"><a href="#2-2-4-安装zlib" class="headerlink" title="2.2.4 安装zlib"></a>2.2.4 安装zlib</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$DOWNLOAD_DIR</span></span><br><span class="line">wget https://zlib.net/zlib-1.2.11.tar.gz</span><br><span class="line">tar zxf zlib-1.2.11.tar.gz</span><br><span class="line"><span class="built_in">cd</span> zlib-1.2.11</span><br><span class="line">./configure --prefix=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/zlib&quot;</span></span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<h5 id="2-2-5-安装szip"><a href="#2-2-5-安装szip" class="headerlink" title="2.2.5 安装szip"></a>2.2.5 安装szip</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$DOWNLOAD_DIR</span></span><br><span class="line">wget https://support.hdfgroup.org/ftp/lib-external/szip/src/szip-2.1.1.tar.gz</span><br><span class="line">tar zxf szip-2.1.1.tar.gz</span><br><span class="line"><span class="built_in">cd</span> szip-2.1.1</span><br><span class="line">./configure --prefix=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/szip&quot;</span></span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<h5 id="2-2-6-安装HDF5"><a href="#2-2-6-安装HDF5" class="headerlink" title="2.2.6 安装HDF5"></a>2.2.6 安装HDF5</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$DOWNLOAD_DIR</span></span><br><span class="line">wget https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.10/hdf5-1.10.9/src/hdf5-1.10.9.tar.gz</span><br><span class="line">tar zxf hdf5-1.10.9.tar.gz</span><br><span class="line"><span class="built_in">cd</span> hdf5-1.10.9</span><br><span class="line"><span class="built_in">mkdir</span> build &amp;&amp; <span class="built_in">cd</span> build</span><br><span class="line">cmake .. -DCMAKE_INSTALL_PREFIX=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/hdf5&quot;</span> -DHDF5_ENABLE_PARALLEL=ON</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<h5 id="2-2-7-安装NetCDF-C"><a href="#2-2-7-安装NetCDF-C" class="headerlink" title="2.2.7 安装NetCDF-C"></a>2.2.7 安装NetCDF-C</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$DOWNLOAD_DIR</span></span><br><span class="line">wget https://github.com/Unidata/netcdf-c/archive/refs/tags/v4.9.2.tar.gz</span><br><span class="line">tar zxf v4.9.2.tar.gz</span><br><span class="line"><span class="built_in">cd</span> netcdf-c-4.9.2</span><br><span class="line"><span class="built_in">mkdir</span> build &amp;&amp; <span class="built_in">cd</span> build</span><br><span class="line">cmake .. -DCMAKE_INSTALL_PREFIX=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/netcdf-c&quot;</span> -DENABLE_DAP=OFF -DENABLE_NETCDF_4=ON</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<h5 id="2-2-8-安装NetCDF-Fortran"><a href="#2-2-8-安装NetCDF-Fortran" class="headerlink" title="2.2.8 安装NetCDF-Fortran"></a>2.2.8 安装NetCDF-Fortran</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$DOWNLOAD_DIR</span></span><br><span class="line">wget https://github.com/Unidata/netcdf-fortran/archive/refs/tags/v4.5.3.tar.gz</span><br><span class="line">tar zxf v4.5.3.tar.gz</span><br><span class="line"><span class="built_in">cd</span> netcdf-fortran-4.5.3</span><br><span class="line"><span class="built_in">mkdir</span> build &amp;&amp; <span class="built_in">cd</span> build</span><br><span class="line">cmake .. -DCMAKE_INSTALL_PREFIX=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/netcdf-fortran&quot;</span> -DnetCDF_DIR=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/netcdf-c/lib/cmake/netCDF&quot;</span></span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<h5 id="2-2-9-安装NetCDF-CXX4"><a href="#2-2-9-安装NetCDF-CXX4" class="headerlink" title="2.2.9 安装NetCDF-CXX4"></a>2.2.9 安装NetCDF-CXX4</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$DOWNLOAD_DIR</span></span><br><span class="line">wget https://github.com/Unidata/netcdf-cxx4/archive/refs/tags/v4.3.1.tar.gz</span><br><span class="line">tar zxf v4.3.1.tar.gz</span><br><span class="line"><span class="built_in">cd</span> netcdf-cxx4-4.3.1</span><br><span class="line"><span class="built_in">mkdir</span> build &amp;&amp; <span class="built_in">cd</span> build</span><br><span class="line">cmake .. -DCMAKE_INSTALL_PREFIX=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/netcdf-cxx4&quot;</span> -DnetCDF_DIR=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/netcdf-c/lib/cmake/netCDF&quot;</span></span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<h4 id="2-3-故障排除"><a href="#2-3-故障排除" class="headerlink" title="2.3 故障排除"></a>2.3 故障排除</h4><p><strong>HPC-Stack相关问题：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 检查HPC-Stack安装状态</span></span><br><span class="line">module avail</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果某个组件安装失败，可以单独重新安装</span></span><br><span class="line"><span class="comment"># 例如重新安装OpenMPI：</span></span><br><span class="line">./build_stack.sh -p <span class="variable">$INSTALL_DIR</span>/my_modules -c config/config_metada.sh -y stack/step3_openmpi.yaml -m</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查模块加载</span></span><br><span class="line">module load gcc/14.2.0</span><br><span class="line">module load cmake/3.31.1</span><br><span class="line">module load openmpi/5.0.8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清理失败的构建</span></span><br><span class="line"><span class="built_in">rm</span> -rf <span class="variable">$INSTALL_DIR</span>/hpc-stack/build/*</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查依赖关系</span></span><br><span class="line">./build_stack.sh -p <span class="variable">$INSTALL_DIR</span>/my_modules -c config/config_metada.sh -y stack/step4_libraries.yaml -m --dry-run</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果编译器安装失败，检查系统要求</span></span><br><span class="line">gcc --version</span><br><span class="line">cmake --version</span><br></pre></td></tr></table></figure>

<p><strong>Lmod环境检查：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 检查Lmod是否可用</span></span><br><span class="line">module --version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查模块路径</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$MODULEPATH</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果module命令不可用，重新初始化Lmod</span></span><br><span class="line"><span class="built_in">source</span> <span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/Lmod/lmod/lmod/init/bash&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查已加载的模块</span></span><br><span class="line">module list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清除所有已加载的模块（如果需要重新开始）</span></span><br><span class="line">module purge</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查HPC-Stack模块是否可用</span></span><br><span class="line">module avail</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果看不到HPC-Stack模块，手动添加模块路径</span></span><br><span class="line">module use <span class="variable">$INSTALL_DIR</span>/my_modules</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证模块路径添加成功</span></span><br><span class="line">module avail | grep -E <span class="string">&quot;(gcc|cmake|openmpi|netcdf)&quot;</span></span><br></pre></td></tr></table></figure>

<p><strong>版本要求检查：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 检查系统编译器版本</span></span><br><span class="line">gcc --version</span><br><span class="line">g++ --version</span><br><span class="line">gfortran --version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查CMake版本</span></span><br><span class="line">cmake --version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果版本不满足要求，请先安装所需版本</span></span><br></pre></td></tr></table></figure>

<p><strong>网络下载问题：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 如果无法直接下载，可以手动下载后上传</span></span><br><span class="line"><span class="comment"># 在本地机器上下载所需文件，然后上传到超算平台</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用wget的断点续传功能</span></span><br><span class="line">wget -c https://example.com/file.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者使用curl</span></span><br><span class="line">curl -C - -O https://example.com/file.tar.gz</span><br></pre></td></tr></table></figure>

<h3 id="第三步：安装Python环境"><a href="#第三步：安装Python环境" class="headerlink" title="第三步：安装Python环境"></a>第三步：安装Python环境</h3><p>METADA的某些组件可能需要Python环境支持，建议安装miniconda和必要的Python包。</p>
<h4 id="3-1-安装Miniconda"><a href="#3-1-安装Miniconda" class="headerlink" title="3.1 安装Miniconda"></a>3.1 安装Miniconda</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$DOWNLOAD_DIR</span></span><br><span class="line">wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh</span><br><span class="line">bash Miniconda3-latest-Linux-x86_64.sh -b -p <span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/miniconda3&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化conda</span></span><br><span class="line"><span class="built_in">source</span> <span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/miniconda3/bin/activate&quot;</span></span><br><span class="line">conda init bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新加载bash配置</span></span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>

<h4 id="3-2-安装必要的Python包"><a href="#3-2-安装必要的Python包" class="headerlink" title="3.2 安装必要的Python包"></a>3.2 安装必要的Python包</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 激活conda环境</span></span><br><span class="line"><span class="built_in">source</span> <span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/miniconda3/bin/activate&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装基础科学计算包</span></span><br><span class="line">conda install -y numpy scipy matplotlib pandas</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者使用pip安装（如果conda安装失败）</span></span><br><span class="line">pip install numpy scipy matplotlib pandas</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证安装</span></span><br><span class="line">python -c <span class="string">&quot;import numpy; print(&#x27;NumPy version:&#x27;, numpy.__version__)&quot;</span></span><br><span class="line">python -c <span class="string">&quot;import scipy; print(&#x27;SciPy version:&#x27;, scipy.__version__)&quot;</span></span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：</p>
<ul>
<li>如果系统已有Python环境，可以跳过miniconda安装</li>
<li>确保Python版本兼容（建议Python 3.8+）</li>
<li>某些METADA组件可能需要特定的Python包，请根据具体需求安装</li>
</ul>
<h3 id="第四步：安装其他依赖库"><a href="#第四步：安装其他依赖库" class="headerlink" title="第四步：安装其他依赖库"></a>第四步：安装其他依赖库</h3><h4 id="4-1-安装Eigen3"><a href="#4-1-安装Eigen3" class="headerlink" title="4.1 安装Eigen3"></a>4.1 安装Eigen3</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$DOWNLOAD_DIR</span></span><br><span class="line">wget https://gitlab.com/libeigen/eigen/-/archive/3.4.0/eigen-3.4.0.tar.gz</span><br><span class="line">tar zxf eigen-3.4.0.tar.gz</span><br><span class="line"><span class="built_in">cd</span> eigen-3.4.0</span><br><span class="line"><span class="built_in">mkdir</span> build &amp;&amp; <span class="built_in">cd</span> build</span><br><span class="line">cmake .. -DCMAKE_INSTALL_PREFIX=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/eigen3&quot;</span></span><br><span class="line">make install</span><br></pre></td></tr></table></figure>

<h4 id="4-2-安装glog（可选，如果使用glog日志系统）"><a href="#4-2-安装glog（可选，如果使用glog日志系统）" class="headerlink" title="4.2 安装glog（可选，如果使用glog日志系统）"></a>4.2 安装glog（可选，如果使用glog日志系统）</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$DOWNLOAD_DIR</span></span><br><span class="line">wget https://github.com/google/glog/archive/refs/tags/v0.3.5.tar.gz</span><br><span class="line">tar zxf v0.3.5.tar.gz</span><br><span class="line"><span class="built_in">cd</span> glog-0.3.5</span><br><span class="line"><span class="built_in">mkdir</span> build &amp;&amp; <span class="built_in">cd</span> build</span><br><span class="line">cmake .. -DCMAKE_INSTALL_PREFIX=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/glog&quot;</span></span><br><span class="line">make install</span><br></pre></td></tr></table></figure>

<h4 id="4-3-安装ng-log（推荐，METADA默认日志系统）"><a href="#4-3-安装ng-log（推荐，METADA默认日志系统）" class="headerlink" title="4.3 安装ng-log（推荐，METADA默认日志系统）"></a>4.3 安装ng-log（推荐，METADA默认日志系统）</h4><p><strong>重要提示：</strong> ng-log依赖于gflags，必须先安装gflags（见4.4节）。</p>
<h1 id="可能要增加动态库环境变量"><a href="#可能要增加动态库环境变量" class="headerlink" title="可能要增加动态库环境变量"></a>可能要增加动态库环境变量</h1><h1 id="在LD-LIBRARY-PATH中添加ng-log"><a href="#在LD-LIBRARY-PATH中添加ng-log" class="headerlink" title="在LD_LIBRARY_PATH中添加ng-log"></a>在LD_LIBRARY_PATH中添加ng-log</h1><h1 id="export-LD-LIBRARY-PATH-x3D-”-INSTALL-DIR-x2F-ng-log-x2F-lib-LD-LIBRARY-PATH”"><a href="#export-LD-LIBRARY-PATH-x3D-”-INSTALL-DIR-x2F-ng-log-x2F-lib-LD-LIBRARY-PATH”" class="headerlink" title="export LD_LIBRARY_PATH&#x3D;”$INSTALL_DIR&#x2F;ng-log&#x2F;lib:$LD_LIBRARY_PATH”"></a>export LD_LIBRARY_PATH&#x3D;”$INSTALL_DIR&#x2F;ng-log&#x2F;lib:$LD_LIBRARY_PATH”</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$DOWNLOAD_DIR</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载ng-log</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/ng-log/ng-log.git</span><br><span class="line"><span class="built_in">cd</span> ng-log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建构建目录</span></span><br><span class="line"><span class="built_in">mkdir</span> build &amp;&amp; <span class="built_in">cd</span> build</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置CMake，指定gflags路径</span></span><br><span class="line">cmake .. \</span><br><span class="line">  -DCMAKE_INSTALL_PREFIX=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/ng-log&quot;</span> \</span><br><span class="line">  -Dgflags_DIR=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/gflags/lib/cmake/gflags&quot;</span> \</span><br><span class="line">  -DCMAKE_PREFIX_PATH=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/gflags&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译和安装</span></span><br><span class="line">make -j$(<span class="built_in">nproc</span>)</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证安装</span></span><br><span class="line"><span class="built_in">ls</span> -la <span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/ng-log/lib/&quot;</span></span><br><span class="line"><span class="built_in">ls</span> -la <span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/ng-log/include/&quot;</span></span><br></pre></td></tr></table></figure>

<p><strong>Linux编译后的重要配置修改：</strong></p>
<p>在Linux系统上编译ng-log后，需要手动修改CMake配置文件以确保METADA能正确找到ng-log：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 编辑ng-log的CMake配置文件</span></span><br><span class="line">vim <span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/ng-log/lib/cmake/ng-log/ng-log-config.cmake&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在文件末尾添加以下行：</span></span><br><span class="line"><span class="comment"># set(ng-log_FOUND TRUE)</span></span><br></pre></td></tr></table></figure>

<p><strong>具体操作步骤：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 方法1：使用sed命令自动添加</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;set(ng-log_FOUND TRUE)&quot;</span> &gt;&gt; <span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/ng-log/lib/cmake/ng-log/ng-log-config.cmake&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法2：手动编辑文件</span></span><br><span class="line"><span class="built_in">cat</span> &gt;&gt; <span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/ng-log/lib/cmake/ng-log/ng-log-config.cmake&quot;</span> &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 确保METADA能找到ng-log</span></span><br><span class="line"><span class="built_in">set</span>(ng-log_FOUND TRUE)</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证修改是否成功</span></span><br><span class="line">grep -n <span class="string">&quot;ng-log_FOUND&quot;</span> <span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/ng-log/lib/cmake/ng-log/ng-log-config.cmake&quot;</span></span><br></pre></td></tr></table></figure>

<p><strong>故障排除：</strong></p>
<p>如果CMake找不到ng-log，请检查：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 检查ng-log是否正确安装</span></span><br><span class="line"><span class="built_in">ls</span> -la <span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/ng-log/lib/cmake/ng-log/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查配置文件是否存在</span></span><br><span class="line"><span class="built_in">cat</span> <span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/ng-log/lib/cmake/ng-log/ng-log-config.cmake&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证gflags依赖</span></span><br><span class="line"><span class="built_in">ls</span> -la <span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/gflags/lib/cmake/gflags/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果ng-log编译失败，检查gflags是否正确安装</span></span><br><span class="line">pkg-config --exists gflags &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;gflags found&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;gflags not found&quot;</span></span><br></pre></td></tr></table></figure>

<h4 id="4-4-安装gflags"><a href="#4-4-安装gflags" class="headerlink" title="4.4 安装gflags"></a>4.4 安装gflags</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$DOWNLOAD_DIR</span></span><br><span class="line">wget https://github.com/gflags/gflags/archive/refs/tags/v2.2.2.tar.gz</span><br><span class="line">tar zxf v2.2.2.tar.gz</span><br><span class="line"><span class="built_in">cd</span> gflags-2.2.2</span><br><span class="line"><span class="built_in">mkdir</span> build &amp;&amp; <span class="built_in">cd</span> build</span><br><span class="line">cmake .. -DCMAKE_INSTALL_PREFIX=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/gflags&quot;</span></span><br><span class="line">make install</span><br></pre></td></tr></table></figure>

<h4 id="4-5-安装yaml-cpp"><a href="#4-5-安装yaml-cpp" class="headerlink" title="4.5 安装yaml-cpp"></a>4.5 安装yaml-cpp</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$DOWNLOAD_DIR</span></span><br><span class="line">wget https://github.com/jbeder/yaml-cpp/archive/refs/tags/yaml-cpp-0.8.0.tar.gz</span><br><span class="line">tar zxf yaml-cpp-0.8.0.tar.gz</span><br><span class="line"><span class="built_in">cd</span> yaml-cpp-yaml-cpp-0.8.0</span><br><span class="line"><span class="built_in">mkdir</span> build &amp;&amp; <span class="built_in">cd</span> build</span><br><span class="line">cmake .. -DCMAKE_INSTALL_PREFIX=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/yaml-cpp&quot;</span> -DYAML_CPP_BUILD_TESTS=OFF</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：在某些Linux系统上，yaml-cpp的CMakeLists.txt可能需要修改。如果编译METADA时遇到<code>yaml-cpp::yaml-cpp</code>相关的错误，可能需要将CMakeLists.txt中的<code>yaml-cpp::yaml-cpp</code>改为<code>yaml::yaml</code>。</p>
<h4 id="4-6-安装nlohmann-json"><a href="#4-6-安装nlohmann-json" class="headerlink" title="4.6 安装nlohmann-json"></a>4.6 安装nlohmann-json</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$DOWNLOAD_DIR</span></span><br><span class="line">wget https://github.com/nlohmann/json/releases/download/v3.11.3/json.tar.xz</span><br><span class="line">tar xf json.tar.xz</span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/nlohmann-json/include&quot;</span></span><br><span class="line"><span class="built_in">cp</span> -r include/nlohmann <span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/nlohmann-json/include/&quot;</span></span><br></pre></td></tr></table></figure>

<h4 id="4-7-安装Google-Test"><a href="#4-7-安装Google-Test" class="headerlink" title="4.7 安装Google Test"></a>4.7 安装Google Test</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$DOWNLOAD_DIR</span></span><br><span class="line">wget https://github.com/google/googletest/archive/refs/tags/v1.14.0.tar.gz</span><br><span class="line">tar zxf v1.14.0.tar.gz</span><br><span class="line"><span class="built_in">cd</span> googletest-1.14.0</span><br><span class="line"><span class="built_in">mkdir</span> build &amp;&amp; <span class="built_in">cd</span> build</span><br><span class="line">cmake .. -DCMAKE_INSTALL_PREFIX=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/googletest&quot;</span></span><br><span class="line">make install</span><br></pre></td></tr></table></figure>

<h4 id="4-8-安装xtensor"><a href="#4-8-安装xtensor" class="headerlink" title="4.8 安装xtensor"></a>4.8 安装xtensor</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$DOWNLOAD_DIR</span></span><br><span class="line">wget https://github.com/xtensor-stack/xtensor/archive/refs/tags/0.24.6.tar.gz</span><br><span class="line">tar zxf 0.24.6.tar.gz</span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/xtensor/include&quot;</span></span><br><span class="line"><span class="built_in">cp</span> -r xtensor-0.24.6/include/xtensor <span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/xtensor/include/&quot;</span></span><br></pre></td></tr></table></figure>

<h4 id="4-9-安装xtl"><a href="#4-9-安装xtl" class="headerlink" title="4.9 安装xtl"></a>4.9 安装xtl</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$DOWNLOAD_DIR</span></span><br><span class="line">wget https://github.com/xtensor-stack/xtl/archive/refs/tags/0.7.6.tar.gz</span><br><span class="line">tar zxf 0.7.6.tar.gz</span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/xtl/include&quot;</span></span><br><span class="line"><span class="built_in">cp</span> -r xtl-0.7.6/include/xtl <span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/xtl/include/&quot;</span></span><br></pre></td></tr></table></figure>

<h4 id="4-10-安装nanoflann"><a href="#4-10-安装nanoflann" class="headerlink" title="4.10 安装nanoflann"></a>4.10 安装nanoflann</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$DOWNLOAD_DIR</span></span><br><span class="line">wget https://github.com/jlblancoc/nanoflann/archive/refs/tags/v1.5.3.tar.gz</span><br><span class="line">tar zxf v1.5.3.tar.gz</span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/nanoflann/include&quot;</span></span><br><span class="line"><span class="built_in">cp</span> -r nanoflann-1.5.3/include/nanoflann <span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/nanoflann/include/&quot;</span></span><br></pre></td></tr></table></figure>

<h4 id="4-11-安装lcov"><a href="#4-11-安装lcov" class="headerlink" title="4.11 安装lcov"></a>4.11 安装lcov</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$DOWNLOAD_DIR</span></span><br><span class="line">wget https://github.com/linux-test-project/lcov/releases/download/v2.0/lcov-2.0.tar.gz</span><br><span class="line">tar zxf lcov-2.0.tar.gz</span><br><span class="line"><span class="built_in">cd</span> lcov-2.0</span><br><span class="line">make PREFIX=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/lcov&quot;</span> install</span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：在无法联网的环境下，lcov可能会有时间不同步的警告，这不会影响编译和功能，可以忽略。</p>
<h4 id="4-12-安装LLVM-x2F-Clang（可选，建议安装）"><a href="#4-12-安装LLVM-x2F-Clang（可选，建议安装）" class="headerlink" title="4.12 安装LLVM&#x2F;Clang（可选，建议安装）"></a>4.12 安装LLVM&#x2F;Clang（可选，建议安装）</h4><p>如果需要使用Clang编译器，可以安装LLVM：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$DOWNLOAD_DIR</span></span><br><span class="line"><span class="comment"># 下载LLVM预编译包（注意：需要glibc 2.35+）</span></span><br><span class="line">wget https://github.com/llvm/llvm-project/releases/download/llvmorg-20.1.6/LLVM-20.1.6-Linux-ARM64.tar.xz</span><br><span class="line">tar xf LLVM-20.1.6-Linux-ARM64.tar.xz</span><br><span class="line"><span class="built_in">mv</span> LLVM-20.1.6-Linux-ARM64 <span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/llvm-20.1.6&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置环境变量</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/llvm-20.1.6/bin:<span class="variable">$PATH</span>&quot;</span></span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/llvm-20.1.6/lib:<span class="variable">$LD_LIBRARY_PATH</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证安装</span></span><br><span class="line">clang --version</span><br><span class="line">clang++ --version</span><br></pre></td></tr></table></figure>

<p><strong>重要提示</strong>：</p>
<ul>
<li>LLVM 20.1.6需要系统glibc版本至少为2.35</li>
<li>可以通过<code>ldd --version</code>检查当前glibc版本</li>
<li>如果glibc版本过低，建议使用较低版本的LLVM或联系系统管理员升级</li>
</ul>
<p><strong>非管理员用户的glibc解决方案</strong>：</p>
<p>如果系统glibc版本低于2.35且没有管理员权限，可以创建包装脚本来使用更高版本的glibc：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建clang-format包装脚本</span></span><br><span class="line"><span class="built_in">cat</span> &gt; <span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/clang-format-wrapper.sh&quot;</span> &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自动用 glibc-2.35 启动 clang-format</span></span><br><span class="line"><span class="variable">$HOME</span>/install_soft/glibc-2.35/lib/ld-linux-aarch64.so.1 \</span><br><span class="line">  --library-path <span class="variable">$HOME</span>/install_soft/glibc-2.35/lib:<span class="variable">$HOME</span>/my_modules/gnu-14.2.0/zlib/1.2.11/lib \</span><br><span class="line">  <span class="variable">$HOME</span>/install_soft/LLVM-20.1.6-Linux-ARM64/bin/clang-format <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置执行权限</span></span><br><span class="line"><span class="built_in">chmod</span> +x <span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/clang-format-wrapper.sh&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建符号链接或别名</span></span><br><span class="line"><span class="built_in">ln</span> -sf <span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/clang-format-wrapper.sh&quot;</span> <span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/bin/clang-format&quot;</span></span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：需要根据你的实际安装路径调整上述脚本中的路径。</p>
<h4 id="4-13-安装Ninja（可选，推荐安装）"><a href="#4-13-安装Ninja（可选，推荐安装）" class="headerlink" title="4.13 安装Ninja（可选，推荐安装）"></a>4.13 安装Ninja（可选，推荐安装）</h4><p>如果后续编译METADA时使用Ninja构建系统，需要安装Ninja：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$DOWNLOAD_DIR</span></span><br><span class="line">wget https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-linux.zip</span><br><span class="line">unzip ninja-linux.zip</span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/ninja/bin&quot;</span></span><br><span class="line"><span class="built_in">mv</span> ninja <span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/ninja/bin/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置环境变量</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/ninja/bin:<span class="variable">$PATH</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证安装</span></span><br><span class="line">ninja --version</span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：Ninja可以显著提高编译速度，特别是在大型项目中。如果系统已有Ninja或不需要，可以跳过此步骤。</p>
<h4 id="4-14-故障排除"><a href="#4-14-故障排除" class="headerlink" title="4.14 故障排除"></a>4.14 故障排除</h4><p><strong>依赖库安装问题：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 检查依赖库是否正确安装</span></span><br><span class="line"><span class="built_in">ls</span> -la <span class="variable">$INSTALL_DIR</span>/*/lib/</span><br><span class="line"><span class="built_in">ls</span> -la <span class="variable">$INSTALL_DIR</span>/*/include/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查CMake是否能找到库</span></span><br><span class="line">cmake --find-package -DNAME=Eigen3 -DCOMPILER_ID=GNU -DLANGUAGE=CXX -DMODE=EXIST</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果某个库安装失败，可以单独重新安装</span></span><br><span class="line"><span class="comment"># 例如重新安装Eigen3：</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$DOWNLOAD_DIR</span>/eigen-3.4.0</span><br><span class="line"><span class="built_in">rm</span> -rf build</span><br><span class="line"><span class="built_in">mkdir</span> build &amp;&amp; <span class="built_in">cd</span> build</span><br><span class="line">cmake .. -DCMAKE_INSTALL_PREFIX=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/eigen3&quot;</span></span><br><span class="line">make install</span><br></pre></td></tr></table></figure>

<p><strong>权限问题：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 检查目录权限</span></span><br><span class="line"><span class="built_in">ls</span> -la <span class="variable">$INSTALL_DIR</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 确保有写入权限</span></span><br><span class="line"><span class="built_in">chmod</span> -R u+w <span class="variable">$INSTALL_DIR</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果空间不足，检查磁盘使用情况</span></span><br><span class="line"><span class="built_in">df</span> -h <span class="variable">$INSTALL_DIR</span></span><br></pre></td></tr></table></figure>

<p><strong>内存不足：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 减少并行编译任务数</span></span><br><span class="line">make -j2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查可用内存</span></span><br><span class="line">free -h</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在超算平台上，可以申请更多资源</span></span><br><span class="line"><span class="comment"># srun --mem=8G --cpus-per-task=4 make -j4</span></span><br></pre></td></tr></table></figure>

<h3 id="第五步：配置环境变量"><a href="#第五步：配置环境变量" class="headerlink" title="第五步：配置环境变量"></a>第五步：配置环境变量</h3><p>安装完所有依赖后，需要设置环境变量：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 设置CMAKE_PREFIX_PATH</span></span><br><span class="line"><span class="built_in">export</span> CMAKE_PREFIX_PATH=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/eigen3:<span class="variable">$INSTALL_DIR</span>/glog:<span class="variable">$INSTALL_DIR</span>/gflags:<span class="variable">$INSTALL_DIR</span>/yaml-cpp:<span class="variable">$INSTALL_DIR</span>/nlohmann-json:<span class="variable">$INSTALL_DIR</span>/googletest:<span class="variable">$INSTALL_DIR</span>/xtensor:<span class="variable">$INSTALL_DIR</span>/xtl:<span class="variable">$INSTALL_DIR</span>/nanoflann:<span class="variable">$INSTALL_DIR</span>/hdf5:<span class="variable">$INSTALL_DIR</span>/netcdf-c:<span class="variable">$INSTALL_DIR</span>/netcdf-fortran:<span class="variable">$INSTALL_DIR</span>/openmpi:<span class="variable">$CMAKE_PREFIX_PATH</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置库路径</span></span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/eigen3/lib:<span class="variable">$INSTALL_DIR</span>/glog/lib:<span class="variable">$INSTALL_DIR</span>/gflags/lib:<span class="variable">$INSTALL_DIR</span>/yaml-cpp/lib:<span class="variable">$INSTALL_DIR</span>/hdf5/lib:<span class="variable">$INSTALL_DIR</span>/netcdf-c/lib:<span class="variable">$INSTALL_DIR</span>/netcdf-fortran/lib:<span class="variable">$INSTALL_DIR</span>/openmpi/lib:<span class="variable">$LD_LIBRARY_PATH</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置头文件路径</span></span><br><span class="line"><span class="built_in">export</span> CPATH=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/eigen3/include:<span class="variable">$INSTALL_DIR</span>/glog/include:<span class="variable">$INSTALL_DIR</span>/gflags/include:<span class="variable">$INSTALL_DIR</span>/yaml-cpp/include:<span class="variable">$INSTALL_DIR</span>/nlohmann-json/include:<span class="variable">$INSTALL_DIR</span>/xtensor/include:<span class="variable">$INSTALL_DIR</span>/xtl/include:<span class="variable">$INSTALL_DIR</span>/nanoflann/include:<span class="variable">$INSTALL_DIR</span>/hdf5/include:<span class="variable">$INSTALL_DIR</span>/netcdf-c/include:<span class="variable">$INSTALL_DIR</span>/netcdf-fortran/include:<span class="variable">$INSTALL_DIR</span>/openmpi/include:<span class="variable">$CPATH</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置PATH</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/cmake/bin:<span class="variable">$INSTALL_DIR</span>/openmpi/bin:<span class="variable">$INSTALL_DIR</span>/lcov/bin:<span class="variable">$INSTALL_DIR</span>/llvm-20.1.6/bin:<span class="variable">$INSTALL_DIR</span>/ninja/bin:<span class="variable">$INSTALL_DIR</span>/miniconda3/bin:<span class="variable">$PATH</span>&quot;</span></span><br></pre></td></tr></table></figure>

<h4 id="5-2-故障排除"><a href="#5-2-故障排除" class="headerlink" title="5.2 故障排除"></a>5.2 故障排除</h4><p><strong>环境变量问题：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 检查环境变量设置</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$CMAKE_PREFIX_PATH</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$LD_LIBRARY_PATH</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$CPATH</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证库是否能被找到</span></span><br><span class="line">pkg-config --exists yaml-cpp &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;yaml-cpp found&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;yaml-cpp not found&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 手动检查库文件</span></span><br><span class="line"><span class="built_in">ls</span> -la <span class="variable">$INSTALL_DIR</span>/*/lib/</span><br></pre></td></tr></table></figure>

<p><strong>路径问题：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 检查所有路径是否存在</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">dir</span> <span class="keyword">in</span> <span class="variable">$INSTALL_DIR</span>/*; <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> [ -d <span class="string">&quot;<span class="variable">$dir</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Checking <span class="variable">$dir</span>:&quot;</span></span><br><span class="line">        <span class="built_in">ls</span> -la <span class="string">&quot;<span class="variable">$dir</span>&quot;</span>/lib/ 2&gt;/dev/null || <span class="built_in">echo</span> <span class="string">&quot;  No lib directory&quot;</span></span><br><span class="line">        <span class="built_in">ls</span> -la <span class="string">&quot;<span class="variable">$dir</span>&quot;</span>/include/ 2&gt;/dev/null || <span class="built_in">echo</span> <span class="string">&quot;  No include directory&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<h3 id="第六步：编译METADA"><a href="#第六步：编译METADA" class="headerlink" title="第六步：编译METADA"></a>第六步：编译METADA</h3><h4 id="6-1-克隆METADA项目"><a href="#6-1-克隆METADA项目" class="headerlink" title="6.1 克隆METADA项目"></a>6.1 克隆METADA项目</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/open-x-da/metada.git</span><br><span class="line"><span class="built_in">cd</span> metada</span><br></pre></td></tr></table></figure>

<p><strong>重要提醒：对于具体模型的后端配置</strong></p>
<p>如果使用特定的模型后端（如MACOM、WRF等），可能需要手动修改相应的CMakeLists.txt文件：</p>
<ol>
<li><p><strong>库路径调整</strong>：</p>
<ul>
<li>某些库（如netcdf）可能加载不顺利</li>
<li>需要手动修改<code>link_directories()</code>和<code>target_link_libraries()</code></li>
<li>确保库路径指向正确的安装位置</li>
</ul>
</li>
<li><p><strong>模型源码位置</strong>：</p>
<ul>
<li>某些模型需要定义源码的具体位置</li>
<li>检查模型后端的CMakeLists.txt中的路径设置</li>
</ul>
</li>
<li><p><strong>常见需要修改的文件</strong>：</p>
<ul>
<li><code>src/backends/macom/CMakeLists.txt</code></li>
<li><code>src/backends/wrf/CMakeLists.txt</code></li>
<li>其他具体模型后端的CMakeLists.txt</li>
</ul>
</li>
</ol>
<p><strong>建议</strong>：在开始编译前，先检查你要使用的模型后端的CMakeLists.txt文件，确保所有路径都正确配置。</p>
<p><strong>glibc版本兼容性检查</strong>：</p>
<p>如果使用LLVM&#x2F;Clang编译，请确保glibc版本兼容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 检查当前glibc版本</span></span><br><span class="line">ldd --version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果版本低于2.35，可能需要使用包装脚本</span></span><br><span class="line"><span class="comment"># 参考LLVM安装部分的glibc解决方案</span></span><br></pre></td></tr></table></figure>

<h4 id="6-2-创建构建脚本"><a href="#6-2-创建构建脚本" class="headerlink" title="6.2 创建构建脚本"></a>6.2 创建构建脚本</h4><p>创建一个构建脚本 <code>build_metada.sh</code>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置环境变量</span></span><br><span class="line"><span class="built_in">export</span> INSTALL_DIR=<span class="string">&quot;<span class="variable">$HOME</span>/install_soft&quot;</span></span><br><span class="line"><span class="built_in">export</span> CMAKE_PREFIX_PATH=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/eigen3:<span class="variable">$INSTALL_DIR</span>/glog:<span class="variable">$INSTALL_DIR</span>/gflags:<span class="variable">$INSTALL_DIR</span>/yaml-cpp:<span class="variable">$INSTALL_DIR</span>/nlohmann-json:<span class="variable">$INSTALL_DIR</span>/googletest:<span class="variable">$INSTALL_DIR</span>/xtensor:<span class="variable">$INSTALL_DIR</span>/xtl:<span class="variable">$INSTALL_DIR</span>/nanoflann:<span class="variable">$INSTALL_DIR</span>/hdf5:<span class="variable">$INSTALL_DIR</span>/netcdf-c:<span class="variable">$INSTALL_DIR</span>/netcdf-fortran:<span class="variable">$INSTALL_DIR</span>/openmpi:<span class="variable">$CMAKE_PREFIX_PATH</span>&quot;</span></span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/eigen3/lib:<span class="variable">$INSTALL_DIR</span>/glog/lib:<span class="variable">$INSTALL_DIR</span>/gflags/lib:<span class="variable">$INSTALL_DIR</span>/yaml-cpp/lib:<span class="variable">$INSTALL_DIR</span>/hdf5/lib:<span class="variable">$INSTALL_DIR</span>/netcdf-c/lib:<span class="variable">$INSTALL_DIR</span>/netcdf-fortran/lib:<span class="variable">$INSTALL_DIR</span>/openmpi/lib:<span class="variable">$LD_LIBRARY_PATH</span>&quot;</span></span><br><span class="line"><span class="built_in">export</span> CPATH=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/eigen3/include:<span class="variable">$INSTALL_DIR</span>/glog/include:<span class="variable">$INSTALL_DIR</span>/gflags/include:<span class="variable">$INSTALL_DIR</span>/yaml-cpp/include:<span class="variable">$INSTALL_DIR</span>/nlohmann-json/include:<span class="variable">$INSTALL_DIR</span>/xtensor/include:<span class="variable">$INSTALL_DIR</span>/xtl/include:<span class="variable">$INSTALL_DIR</span>/nanoflann/include:<span class="variable">$INSTALL_DIR</span>/hdf5/include:<span class="variable">$INSTALL_DIR</span>/netcdf-c/include:<span class="variable">$INSTALL_DIR</span>/netcdf-fortran/include:<span class="variable">$INSTALL_DIR</span>/openmpi/include:<span class="variable">$CPATH</span>&quot;</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/cmake/bin:<span class="variable">$INSTALL_DIR</span>/openmpi/bin:<span class="variable">$INSTALL_DIR</span>/lcov/bin:<span class="variable">$INSTALL_DIR</span>/llvm-20.1.6/bin:<span class="variable">$INSTALL_DIR</span>/ninja/bin:<span class="variable">$PATH</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查是否使用Ninja</span></span><br><span class="line">USE_NINJA=<span class="variable">$&#123;1:-&quot;yes&quot;&#125;</span>  <span class="comment"># 默认使用Ninja</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建构建目录</span></span><br><span class="line"><span class="built_in">mkdir</span> -p build</span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$USE_NINJA</span>&quot;</span> = <span class="string">&quot;yes&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;使用Ninja构建系统...&quot;</span></span><br><span class="line">    <span class="comment"># 配置CMake（使用Ninja）</span></span><br><span class="line">    cmake -G Ninja \</span><br><span class="line">      -DCMAKE_BUILD_TYPE=Release \</span><br><span class="line">      -DUSE_MPI=ON \</span><br><span class="line">      -DCMAKE_Fortran_COMPILER=mpifort \</span><br><span class="line">      -DCMAKE_Fortran_FLAGS=<span class="string">&quot;-O3 -cpp -fno-tree-vectorize -fallow-argument-mismatch -Wno-missing-include-dirs -Wno-unused-variable -Wno-conversion&quot;</span> \</span><br><span class="line">      -DCMAKE_CXX_FLAGS=<span class="string">&quot;-Wno-unused-variable -Wno-unused-function -Wno-unused-but-set-variable -Wno-sign-compare -Wno-uninitialized&quot;</span> \</span><br><span class="line">      -DLOGGER_BACKEND=GLOG \</span><br><span class="line">      -DCONFIG_BACKEND=YAML \</span><br><span class="line">      ..</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 编译（使用Ninja）</span></span><br><span class="line">    ninja -j$(<span class="built_in">nproc</span>)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;使用Make构建系统...&quot;</span></span><br><span class="line">    <span class="comment"># 配置CMake（使用Make）</span></span><br><span class="line">    cmake -G <span class="string">&quot;Unix Makefiles&quot;</span> \</span><br><span class="line">      -DCMAKE_BUILD_TYPE=Release \</span><br><span class="line">      -DUSE_MPI=ON \</span><br><span class="line">      -DCMAKE_Fortran_COMPILER=mpifort \</span><br><span class="line">      -DCMAKE_Fortran_FLAGS=<span class="string">&quot;-O3 -cpp -fno-tree-vectorize -fallow-argument-mismatch -Wno-missing-include-dirs -Wno-unused-variable -Wno-conversion&quot;</span> \</span><br><span class="line">      -DCMAKE_CXX_FLAGS=<span class="string">&quot;-Wno-unused-variable -Wno-unused-function -Wno-unused-but-set-variable -Wno-sign-compare -Wno-uninitialized&quot;</span> \</span><br><span class="line">      -DLOGGER_BACKEND=GLOG \</span><br><span class="line">      -DCONFIG_BACKEND=YAML \</span><br><span class="line">      ..</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 编译（使用Make）</span></span><br><span class="line">    make -j$(<span class="built_in">nproc</span>)</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<h4 id="6-3-运行构建脚本"><a href="#6-3-运行构建脚本" class="headerlink" title="6.3 运行构建脚本"></a>6.3 运行构建脚本</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x build_metada.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用Ninja构建（推荐，速度更快）</span></span><br><span class="line">./build_metada.sh <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者使用Make构建（如果系统没有Ninja或遇到问题）</span></span><br><span class="line">./build_metada.sh no</span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认使用Ninja</span></span><br><span class="line">./build_metada.sh</span><br></pre></td></tr></table></figure>

<h4 id="6-4-运行测试"><a href="#6-4-运行测试" class="headerlink" title="6.4 运行测试"></a>6.4 运行测试</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> build</span><br><span class="line">ctest --output-on-failure</span><br></pre></td></tr></table></figure>

<h4 id="6-5-故障排除"><a href="#6-5-故障排除" class="headerlink" title="6.5 故障排除"></a>6.5 故障排除</h4><p><strong>CMake配置失败：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 清理构建目录重新开始</span></span><br><span class="line"><span class="built_in">rm</span> -rf build</span><br><span class="line"><span class="built_in">mkdir</span> build</span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新配置，添加详细输出</span></span><br><span class="line">cmake -G Ninja \</span><br><span class="line">    -DCMAKE_BUILD_TYPE=Release \</span><br><span class="line">    -DUSE_MPI=ON \</span><br><span class="line">    -DCMAKE_Fortran_COMPILER=mpifort \</span><br><span class="line">    -DCMAKE_Fortran_FLAGS=<span class="string">&quot;-O3 -cpp -fno-tree-vectorize -fallow-argument-mismatch -Wno-missing-include-dirs -Wno-unused-variable -Wno-conversion&quot;</span> \</span><br><span class="line">    -DCMAKE_CXX_FLAGS=<span class="string">&quot;-Wno-unused-variable -Wno-unused-function -Wno-unused-but-set-variable -Wno-sign-compare -Wno-uninitialized&quot;</span> \</span><br><span class="line">    -DLOGGER_BACKEND=GLOG \</span><br><span class="line">    -DCONFIG_BACKEND=YAML \</span><br><span class="line">    -DCMAKE_PREFIX_PATH=<span class="string">&quot;<span class="variable">$CMAKE_PREFIX_PATH</span>&quot;</span> \</span><br><span class="line">    -DCMAKE_VERBOSE_MAKEFILE=ON \</span><br><span class="line">    ..</span><br></pre></td></tr></table></figure>

<p><strong>编译失败：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 减少并行编译任务数</span></span><br><span class="line">ninja -j4</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查可用内存</span></span><br><span class="line">free -h</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在超算平台上，可以申请更多资源</span></span><br><span class="line"><span class="comment"># srun --mem=8G --cpus-per-task=4 ninja -j4</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果Ninja有问题，尝试使用Make</span></span><br><span class="line">./build_metada.sh no</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者手动使用Make</span></span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line">make -j4</span><br></pre></td></tr></table></figure>

<p><strong>MPI相关问题：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 检查MPI安装</span></span><br><span class="line"><span class="built_in">which</span> mpicc</span><br><span class="line"><span class="built_in">which</span> mpirun</span><br><span class="line">mpicc --version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试MPI</span></span><br><span class="line">mpirun -np 2 hostname</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果MPI不可用，检查环境变量</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$PATH</span> | grep openmpi</span><br></pre></td></tr></table></figure>

<p><strong>glibc版本问题：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 检查glibc版本</span></span><br><span class="line">ldd --version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果LLVM/Clang因glibc版本过低无法运行</span></span><br><span class="line"><span class="comment"># 使用包装脚本（参考LLVM安装部分）</span></span><br><span class="line"><span class="variable">$INSTALL_DIR</span>/clang-format-wrapper.sh --version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者设置LD_LIBRARY_PATH</span></span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/glibc-2.35/lib:<span class="variable">$LD_LIBRARY_PATH</span>&quot;</span></span><br></pre></td></tr></table></figure>

<p><strong>测试失败：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 运行特定测试</span></span><br><span class="line">ctest -R <span class="string">&quot;test_name&quot;</span> --output-on-failure</span><br><span class="line"></span><br><span class="line"><span class="comment"># 详细输出</span></span><br><span class="line">ctest --output-on-failure --verbose</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查测试日志</span></span><br><span class="line"><span class="built_in">cat</span> Testing/Temporary/LastTest.<span class="built_in">log</span></span><br></pre></td></tr></table></figure>

<h2 id="环境变量持久化"><a href="#环境变量持久化" class="headerlink" title="环境变量持久化"></a>环境变量持久化</h2><p>为了避免每次登录都需要重新设置环境变量，建议将环境变量添加到shell配置文件中：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 添加到 ~/.bashrc 文件</span></span><br><span class="line"><span class="built_in">cat</span> &gt;&gt; ~/.bashrc &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># METADA 环境变量设置</span></span><br><span class="line"><span class="built_in">export</span> INSTALL_DIR=<span class="string">&quot;<span class="variable">$HOME</span>/install_soft&quot;</span></span><br><span class="line"><span class="built_in">export</span> DOWNLOAD_DIR=<span class="string">&quot;<span class="variable">$HOME</span>/down_soft&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 基础路径</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/cmake/bin:<span class="variable">$INSTALL_DIR</span>/openmpi/bin:<span class="variable">$INSTALL_DIR</span>/lcov/bin:<span class="variable">$PATH</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 库路径</span></span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/eigen3/lib:<span class="variable">$INSTALL_DIR</span>/glog/lib:<span class="variable">$INSTALL_DIR</span>/gflags/lib:<span class="variable">$INSTALL_DIR</span>/yaml-cpp/lib:<span class="variable">$INSTALL_DIR</span>/hdf5/lib:<span class="variable">$INSTALL_DIR</span>/netcdf-c/lib:<span class="variable">$INSTALL_DIR</span>/netcdf-fortran/lib:<span class="variable">$INSTALL_DIR</span>/openmpi/lib:<span class="variable">$LD_LIBRARY_PATH</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 头文件路径</span></span><br><span class="line"><span class="built_in">export</span> CPATH=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/eigen3/include:<span class="variable">$INSTALL_DIR</span>/glog/include:<span class="variable">$INSTALL_DIR</span>/gflags/include:<span class="variable">$INSTALL_DIR</span>/yaml-cpp/include:<span class="variable">$INSTALL_DIR</span>/nlohmann-json/include:<span class="variable">$INSTALL_DIR</span>/xtensor/include:<span class="variable">$INSTALL_DIR</span>/xtl/include:<span class="variable">$INSTALL_DIR</span>/nanoflann/include:<span class="variable">$INSTALL_DIR</span>/hdf5/include:<span class="variable">$INSTALL_DIR</span>/netcdf-c/include:<span class="variable">$INSTALL_DIR</span>/netcdf-fortran/include:<span class="variable">$INSTALL_DIR</span>/openmpi/include:<span class="variable">$CPATH</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># CMake前缀路径</span></span><br><span class="line"><span class="built_in">export</span> CMAKE_PREFIX_PATH=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/eigen3:<span class="variable">$INSTALL_DIR</span>/glog:<span class="variable">$INSTALL_DIR</span>/gflags:<span class="variable">$INSTALL_DIR</span>/yaml-cpp:<span class="variable">$INSTALL_DIR</span>/nlohmann-json:<span class="variable">$INSTALL_DIR</span>/googletest:<span class="variable">$INSTALL_DIR</span>/xtensor:<span class="variable">$INSTALL_DIR</span>/xtl:<span class="variable">$INSTALL_DIR</span>/nanoflann:<span class="variable">$INSTALL_DIR</span>/hdf5:<span class="variable">$INSTALL_DIR</span>/netcdf-c:<span class="variable">$INSTALL_DIR</span>/netcdf-fortran:<span class="variable">$INSTALL_DIR</span>/openmpi:<span class="variable">$CMAKE_PREFIX_PATH</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Lmod设置</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/Lmod/lmod/lmod/libexec:<span class="variable">$PATH</span>&quot;</span></span><br><span class="line"><span class="built_in">export</span> LMOD_CMD=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/Lmod/lmod/lmod/libexec/lmod&quot;</span></span><br><span class="line"><span class="built_in">export</span> MODULEPATH=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/Lmod/lmod/lmod/modulefiles/Core:<span class="variable">$INSTALL_DIR</span>/my_modules:<span class="variable">$MODULEPATH</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化Lmod环境</span></span><br><span class="line"><span class="built_in">source</span> <span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/Lmod/lmod/lmod/init/bash&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加HPC-Stack模块路径</span></span><br><span class="line">module use <span class="variable">$INSTALL_DIR</span>/my_modules</span><br><span class="line"></span><br><span class="line"><span class="comment"># Lua和LuaRocks设置</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/lua/bin:<span class="variable">$INSTALL_DIR</span>/luarocks/bin:<span class="variable">$PATH</span>&quot;</span></span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/lua/lib:<span class="variable">$LD_LIBRARY_PATH</span>&quot;</span></span><br><span class="line"><span class="built_in">export</span> LUAROCKS_PREFIX=<span class="string">&quot;<span class="variable">$INSTALL_DIR</span>/luarocks&quot;</span></span><br><span class="line"><span class="built_in">export</span> LUA_PATH=<span class="string">&quot;<span class="variable">$LUAROCKS_PREFIX</span>/share/lua/5.4/?.lua;<span class="variable">$LUAROCKS_PREFIX</span>/share/lua/5.4/?/init.lua;;&quot;</span></span><br><span class="line"><span class="built_in">export</span> LUA_CPATH=<span class="string">&quot;<span class="variable">$LUAROCKS_PREFIX</span>/lib/lua/5.4/?.so;;&quot;</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新加载配置</span></span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>

<h3 id="获取帮助"><a href="#获取帮助" class="headerlink" title="获取帮助"></a>获取帮助</h3><p>如果遇到其他问题：</p>
<ol>
<li>查看项目文档：<a href="https://modern-data-assimilation-system-for-earth-sciences.readthedocs.io/">https://modern-data-assimilation-system-for-earth-sciences.readthedocs.io/</a></li>
<li>检查GitHub Issues：<a href="https://github.com/open-x-da/metada/issues">https://github.com/open-x-da/metada/issues</a></li>
<li>查看CI配置：<code>.github/workflows/linux.yaml</code></li>
</ol>
<h2 id="验证安装"><a href="#验证安装" class="headerlink" title="验证安装"></a>验证安装</h2><p>安装完成后，运行以下命令验证：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 检查可执行文件</span></span><br><span class="line"><span class="built_in">ls</span> -la build/applications/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行示例程序（如果有）</span></span><br><span class="line"><span class="comment"># ./build/applications/your_app</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查库文件</span></span><br><span class="line"><span class="built_in">ls</span> -la build/src/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行测试套件</span></span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line">ctest --output-on-failure</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查MPI功能</span></span><br><span class="line">mpirun -np 2 ./build/applications/your_mpi_app</span><br></pre></td></tr></table></figure>

<h2 id="下一步"><a href="#下一步" class="headerlink" title="下一步"></a>下一步</h2><p>安装成功后，你可以：</p>
<ol>
<li>查看教程和示例：<code>tutorial/</code> 目录</li>
<li>阅读API文档：<code>docs/</code> 目录</li>
<li>运行基准测试</li>
<li>开始开发你的数据同化应用</li>
</ol>
<p>祝你使用愉快！</p>
<h2 id="运行MACOM模式"><a href="#运行MACOM模式" class="headerlink" title="运行MACOM模式"></a>运行MACOM模式</h2><p>编译完成后，你可以运行MACOM模式进行数值天气预报。以下是详细的使用说明：</p>
<h3 id="7-1-准备执行文件"><a href="#7-1-准备执行文件" class="headerlink" title="7.1 准备执行文件"></a>7.1 准备执行文件</h3><p>编译成功后，在<code>build/bin/</code>目录下会生成可执行文件，如<code>forecast</code>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 检查生成的可执行文件</span></span><br><span class="line"><span class="built_in">ls</span> -la build/bin/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制到工作目录</span></span><br><span class="line"><span class="built_in">cp</span> build/bin/forecast ./forecast</span><br><span class="line"><span class="built_in">chmod</span> +x ./forecast</span><br></pre></td></tr></table></figure>

<h3 id="7-2-准备配置文件"><a href="#7-2-准备配置文件" class="headerlink" title="7.2 准备配置文件"></a>7.2 准备配置文件</h3><p>METADA需要配置文件来指定运行参数。创建<code>macom_config.yaml</code>：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># MACOM模式配置文件示例</span></span><br><span class="line"><span class="attr">model:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">&quot;MACOM&quot;</span></span><br><span class="line">  <span class="attr">backend:</span> <span class="string">&quot;macom&quot;</span></span><br><span class="line">  </span><br><span class="line"><span class="attr">logger:</span></span><br><span class="line">  <span class="attr">app_name:</span> <span class="string">&quot;forecast&quot;</span></span><br><span class="line">  <span class="attr">level:</span> <span class="string">&quot;debug&quot;</span></span><br><span class="line">  <span class="attr">color:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">console:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Geometry for the forecast</span></span><br><span class="line"><span class="attr">geometry:</span></span><br><span class="line">  <span class="attr">file:</span> <span class="string">&quot;D:/macom/glo_1_6/exp/nmefc_macom_csp_grid_d01.nc&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Initial state</span></span><br><span class="line"><span class="attr">state:</span></span><br><span class="line">  <span class="attr">file:</span> <span class="string">&quot;D:/macom/glo_1_6/exp/nmefc_macom_csp_initinal_d01.nc&quot;</span></span><br><span class="line">  <span class="attr">timestamp:</span> <span class="string">&quot;2000-01-24T12:00:00Z&quot;</span></span><br><span class="line">  <span class="attr">variables:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;u&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;v&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;w&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;t&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;s&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Model configuration</span></span><br><span class="line"><span class="attr">model:</span></span><br><span class="line">  <span class="attr">time_control:</span></span><br><span class="line">    <span class="attr">start_datetime:</span> <span class="string">&quot;2000-01-24T12:00:00Z&quot;</span></span><br><span class="line">    <span class="attr">forecast_length:</span> <span class="string">&quot;24h&quot;</span></span><br><span class="line">    <span class="attr">end_datetime:</span> <span class="string">&quot;2000-01-25T12:00:00Z&quot;</span></span><br><span class="line">    <span class="attr">time_step:</span> <span class="string">&quot;360s&quot;</span></span><br><span class="line">    <span class="attr">output_history:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">history_file:</span> <span class="string">&quot;./forecast.nc&quot;</span></span><br><span class="line">    <span class="attr">history_frequency:</span> <span class="string">&quot;3600s&quot;</span></span><br><span class="line">  <span class="attr">dynamics:</span></span><br><span class="line">    <span class="attr">advection_scheme:</span> <span class="string">&quot;WENO&quot;</span></span><br><span class="line">    <span class="attr">diffusion:</span> <span class="number">0.0</span></span><br><span class="line">  <span class="attr">physics:</span></span><br><span class="line">    <span class="attr">microphysics:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">radiation:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">pbl:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">lsm:</span> <span class="literal">true</span> </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="7-3-运行MACOM模式"><a href="#7-3-运行MACOM模式" class="headerlink" title="7.3 运行MACOM模式"></a>7.3 运行MACOM模式</h3><p>使用SLURM作业调度系统运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建作业脚本 submit_job.sh</span></span><br><span class="line"><span class="built_in">cat</span> &gt; submit_job.sh &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#SBATCH --job-name=macom_forecast</span></span><br><span class="line"><span class="comment">#SBATCH --nodes=1</span></span><br><span class="line"><span class="comment">#SBATCH --ntasks=6</span></span><br><span class="line"><span class="comment">#SBATCH --time=02:00:00</span></span><br><span class="line"><span class="comment">#SBATCH --output=forecast_%j.out</span></span><br><span class="line"><span class="comment">#SBATCH --error=forecast_%j.err</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载环境 需要根据具体情况调整</span></span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br><span class="line">module load openmpi/5.0.8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行MACOM模式</span></span><br><span class="line">yhrun -n 6 ./forecast macom_config.yaml 2&gt;&amp;1 | <span class="built_in">tee</span> forecast.log</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交作业</span></span><br><span class="line">sbatch submit_job.sh</span><br></pre></td></tr></table></figure>

<h3 id="7-4-参考示例"><a href="#7-4-参考示例" class="headerlink" title="7.4 参考示例"></a>7.4 参考示例</h3><p>可以参考现有的MACOM测试配置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看参考配置</span></span><br><span class="line"><span class="built_in">ls</span> -la /thfs1/home/zj119/liq/test_macom/glo_1_6/exp/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看作业脚本示例</span></span><br><span class="line"><span class="built_in">cat</span> /thfs1/home/zj119/liq/test_macom/glo_1_6/exp/submit_job.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 该目录包含完整的初始数据配置</span></span><br></pre></td></tr></table></figure>

<h3 id="7-5-故障排除"><a href="#7-5-故障排除" class="headerlink" title="7.5 故障排除"></a>7.5 故障排除</h3><p><strong>常见问题：</strong></p>
<ol>
<li><p><strong>配置文件路径错误</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 检查配置文件是否存在</span></span><br><span class="line"><span class="built_in">ls</span> -la macom_config.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证YAML格式</span></span><br><span class="line">python -c <span class="string">&quot;import yaml; yaml.safe_load(open(&#x27;macom_config.yaml&#x27;))&quot;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>MPI进程数不匹配</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 确保配置文件中的num_procs与yhrun的-n参数一致</span></span><br><span class="line"><span class="comment"># 例如：yhrun -n 6 对应配置文件中的 num_procs: 6</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>数据路径问题</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 检查输入数据是否存在</span></span><br><span class="line"><span class="built_in">ls</span> -la /path/to/input/data</span><br><span class="line"></span><br><span class="line"><span class="comment"># 确保输出目录可写</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /path/to/output</span><br><span class="line"><span class="built_in">chmod</span> 755 /path/to/output</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>环境变量问题</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 确保所有必要的环境变量都已设置</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$LD_LIBRARY_PATH</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$CMAKE_PREFIX_PATH</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查MPI环境</span></span><br><span class="line"><span class="built_in">which</span> mpirun</span><br><span class="line">mpirun --version</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="7-6-性能优化"><a href="#7-6-性能优化" class="headerlink" title="7.6 性能优化"></a>7.6 性能优化</h3><ul>
<li>根据系统资源调整MPI进程数</li>
<li>使用适当的输出频率减少I&#x2F;O开销</li>
<li>考虑使用并行I&#x2F;O提高性能</li>
<li>监控内存使用情况，避免OOM错误</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Mac Cron</title>
    <url>/2022/05/01/Tool/Mac%20Cron/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Schedule-Python-Scripts-As-Cron-Jobs-With-Crontab-Mac-x2F-Linux"><a href="#Schedule-Python-Scripts-As-Cron-Jobs-With-Crontab-Mac-x2F-Linux" class="headerlink" title="Schedule Python Scripts As Cron Jobs With Crontab (Mac&#x2F;Linux)"></a>Schedule Python Scripts As Cron Jobs With Crontab (Mac&#x2F;Linux)</h1><p><strong>Learn about cron jobs and how to schedule commands and Python scripts in the terminal via crontab (for Linux and Mac)</strong></p>
<h3 id="Crontab"><a href="#Crontab" class="headerlink" title="Crontab"></a>Crontab</h3><p>We can schedule jobs with the <code>crontab</code> command. A crontab file is a simple text file containing a list of commands meant to be run at specified times. It is edited using the crontab command. The commands in the crontab file are checked by the cron daemon, which executes them in the system background.</p>
<p>List all scheduled cron jobs with:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ crontab -l</span><br></pre></td></tr></table></figure>

<p>Edit the file by using the command:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ crontab -e</span><br></pre></td></tr></table></figure>

<p>Then use the following syntax to schedule a job</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">* * * * * command</span><br></pre></td></tr></table></figure>

<p>For example to run a python script use:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">* * * * * python my_script.py</span><br></pre></td></tr></table></figure>

<h3 id="The-syntax"><a href="#The-syntax" class="headerlink" title="The syntax"></a>The syntax</h3><p>To check the syntax I recommend to visit the free website <a href="https://crontab.guru/">crontab.guru</a>.</p>
<p>The syntax is this: <code>&#39;minute hour day-of-month month day-of-week&#39;</code></p>
<p>The 5 items are used to specify minute, hour, day in the month, month, and day in the week (in this order).</p>
<p><strong>Allowed values are</strong>:</p>
<ul>
<li><code>0-59</code> for minute</li>
<li><code>0-23</code> for hour</li>
<li><code>1-31</code> for day-of-month</li>
<li><code>1-12</code> for month</li>
<li><code>0-6</code> for day-of-week (0 &#x3D; Sunday)</li>
</ul>
<p><strong>The following characters can be used for more complex timing</strong>:</p>
<ul>
<li><code>*</code> any value</li>
<li><code>,</code> value list separator</li>
<li><code>-</code> range of values</li>
<li><code>/</code> step values</li>
</ul>
<p><strong>Some examples</strong>:</p>
<ul>
<li><code>* * * * *</code>: At every minute (every minute, every hour, every day, every month, every weekday)</li>
<li><code>0 10 * * *</code>: At 10:00 AM each day</li>
<li><code>0 10 * * 0</code>: At 10:00 AM on each Monday</li>
<li><code>0 0 1,15 * *</code> At 00:00 on 1st and 15th each month</li>
<li><code>0 0 * * 1-3</code>: At 00:00 from Monday through Wednesday</li>
<li><code>0 0 1/2 * *</code>: At 00:00 on every 2nd day from 1 through 31</li>
</ul>
<h3 id="Pitfalls-when-running-Python-scripts"><a href="#Pitfalls-when-running-Python-scripts" class="headerlink" title="Pitfalls when running Python scripts"></a>Pitfalls when running Python scripts</h3><h4 id="Use-the-full-path-to-your-file-e-g"><a href="#Use-the-full-path-to-your-file-e-g" class="headerlink" title="Use the full path to your file, e.g.:"></a>Use the full path to your file, e.g.:</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">* * * * * python ~/code/python-task-automation/test.py</span><br></pre></td></tr></table></figure>

<h4 id="When-logging-into-files-specify-the-full-path-for-the-filename-in-the-Python-file-Otherwise-the-file-just-ends-up-in-your-home-directory"><a href="#When-logging-into-files-specify-the-full-path-for-the-filename-in-the-Python-file-Otherwise-the-file-just-ends-up-in-your-home-directory" class="headerlink" title="When logging into files, specify the full path for the filename in the Python file. Otherwise the file just ends up in your home directory."></a>When logging into files, specify the full path for the filename in the Python file. Otherwise the file just ends up in your home directory.</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import logging</span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line">dir_path = os.path.dirname(os.path.realpath(__file__))</span><br><span class="line">filename = os.path.join(dir_path, &#x27;test_log.log&#x27;)</span><br><span class="line"></span><br><span class="line"># Logger</span><br><span class="line">logger = logging.getLogger(__name__)</span><br><span class="line">logger.setLevel(logging.INFO)</span><br><span class="line"></span><br><span class="line">file_handler = logging.FileHandler(filename)</span><br><span class="line">file_handler.setLevel(logging.INFO)</span><br><span class="line">file_handler.setFormatter(logging.Formatter(&#x27;%(asctime)s - %(levelname)s - %(message)s&#x27;))</span><br><span class="line">logger.addHandler(file_handler)</span><br></pre></td></tr></table></figure>

<h4 id="When-a-virtual-environment-is-used-specify-the-full-path-to-the-python-executable-e-g"><a href="#When-a-virtual-environment-is-used-specify-the-full-path-to-the-python-executable-e-g" class="headerlink" title="When a virtual environment is used, specify the full path to the python executable, e.g.:"></a>When a virtual environment is used, specify the full path to the python executable, e.g.:</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">* * * * * ~/opt/miniconda3/envs/py38/bin/python ~/code/python-task-automation/fetch_github.py</span><br><span class="line">or</span><br><span class="line">* * * * * ~/code/python-task-automation/venv/bin/python ~/code/python-task-automation/fetch_github.py</span><br></pre></td></tr></table></figure>





<h2 id="MAC-cron-不自动执行解决办法"><a href="#MAC-cron-不自动执行解决办法" class="headerlink" title="MAC cron 不自动执行解决办法"></a>MAC cron 不自动执行解决办法</h2><p>重点请看后面斜体字。重点请看后面斜体字。重点请看后面斜体字。</p>
<p>最怕的就是定时任务不执行，还没半点可参考信息，搜了很多答案，都说环境变量问题，我试了很多解决方案都不行，对，看这个文章写得不错，按照其走了一遍</p>
<p><a href="https://link.zhihu.com/?target=https://segmentfault.com/a/1190000020850932">为什么crontab不执行 - SegmentFault 思否</a></p>
<p>还是不行，再找答案，发现这个</p>
<p><a href="https://link.zhihu.com/?target=https://blog.csdn.net/xjh093/article/details/108517904">Mac 自动任务 crontab 不执行</a></p>
<p>看起来写得不咋地，但是确实好用啊 ，解决了我的问题</p>
<p>总结起来，就是</p>
<h4 id="0x00-可能之一"><a href="#0x00-可能之一" class="headerlink" title="0x00 可能之一"></a>0x00 可能之一</h4><p>可能先去 这里 了解一下下</p>
<p>查看任务是否存在：</p>
<p>sudo launchctl list | grep cron</p>
<p>有输出则说明存在</p>
<p>查看启动项配置:</p>
<p>locate com.vix.cron</p>
<p>如果有 WARNING</p>
<p>就执行系统提供的命令</p>
<p>应该是这样的</p>
<p>sudo launchctl load -W &#x2F;System&#x2F;Library&#x2F;LaunchDaemons&#x2F;com.apple.locate.plist</p>
<p>查看 &#x2F;etc&#x2F;crontab 是否存在:</p>
<p>ls &#x2F;etc&#x2F;crontab</p>
<p>没有就创建:</p>
<p>sudo touch &#x2F;etc&#x2F;crontab</p>
<p>然后再重新开个定时任务</p>
<p>试试~</p>
<h4 id="0x01-可能之二"><a href="#0x01-可能之二" class="headerlink" title="0x01 可能之二"></a>0x01 可能之二</h4><p>系统是 OSX 10.15 Catalina 以上的</p>
<p>对 cron 的权限进行了限制</p>
<p>需要在 系统偏好设置 里将 cron 添加 完全磁盘访问权限</p>
<p><strong>重点在这里：：：</strong></p>
<p><em><strong>系统偏好设置 -&gt; 安全性与隐私 -&gt; 选择 隐私 -&gt; 左侧菜单找到完全磁盘访问权限</strong></em></p>
<p><em><strong>在右侧查看是否有 cron 这个应用</strong></em></p>
<p><em><strong>没有的话</strong></em></p>
<p><em><strong>就添加进去</strong></em></p>
<p><em><strong>然后勾选</strong></em></p>
<p><em><strong>cron 程序所在目录:</strong></em></p>
<p><em><strong>终端输入 whereis cron</strong></em></p>
<p><em><strong>打印：&#x2F;usr&#x2F;sbin&#x2F;cron</strong></em></p>
<p><em><strong>再输入 open &#x2F;usr&#x2F;sbin</strong></em></p>
<p><em><strong>在打开的文件夹内找到 cron</strong></em></p>
<p><em><strong>把这个文件直接拖动到 系统偏好设置 右侧应用列表框内</strong></em></p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>METADA-observation</title>
    <url>/2022/05/01/Tool/METADA-observation/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="METADA-observation"><a href="#METADA-observation" class="headerlink" title="METADA-observation"></a>METADA-observation</h2><h3 id="框架结构"><a href="#框架结构" class="headerlink" title="框架结构"></a>框架结构</h3><ol>
<li><p>Application: define workflow	<strong>主程序</strong></p>
<p><code>DataAssimilation</code>、<code>Forecast</code>、<code>ObsProcessing</code></p>
</li>
<li><p>Framework: define what can be done (interfaces)	<strong>公式</strong></p>
<p><code>Variational analyses</code>、<code>ENKF</code>、<code>Particle filter</code>…</p>
</li>
<li><p>⭐️ Adapters: Define how to do it（implementation stratedy）</p>
<p><code>ObsOperator</code>、<code>Observation</code>、<code>State</code></p>
</li>
</ol>
<ul>
<li>Translate framwork concepts to backend capabilities</li>
<li>Handles configuration and delegation logic</li>
<li>Provides a consistent interface regardless of backend choice</li>
</ul>
<ol start="4">
<li><p>Backends: Define where to do it (specific data sources)	<strong><code>模式state</code>|<code>具体观测</code>|<code>不同观测算子</code></strong></p>
<p><code>WRFDAObsOp</code>、<code>PrepBUFR</code>、<code>WRFState</code></p>
</li>
</ol>
<h3 id="C-x2F-Fortran-Bridge-Components"><a href="#C-x2F-Fortran-Bridge-Components" class="headerlink" title="C++&#x2F;Fortran Bridge Components"></a>C++&#x2F;Fortran Bridge Components</h3><p>Fortran 文件名 、数据传输效率（利用指针实现）</p>
<h3 id="Parquet-Column-Major-Database"><a href="#Parquet-Column-Major-Database" class="headerlink" title="Parquet Column-Major Database"></a>Parquet Column-Major Database</h3><p><strong>原：</strong>time | lat | lon | temp | u_wind | v_wind</p>
<p><strong>现</strong>：time column | lat colum | lon column | temp column | u_wind column | v_wind column </p>
<p><strong>优点：</strong>快速提取、压缩效率高</p>
<h3 id="Parguet-AI-x3D-Perfect-March-for-METADA"><a href="#Parguet-AI-x3D-Perfect-March-for-METADA" class="headerlink" title="Parguet + AI &#x3D; Perfect March for METADA"></a>Parguet + AI &#x3D; Perfect March for METADA</h3><h3 id="Key-Features"><a href="#Key-Features" class="headerlink" title="Key Features"></a>Key Features</h3><p>Efficient Feature Access</p>
<p>Fast Batch Processing</p>
<p>Memory Efficiency</p>
<p>Real-time capability</p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Mac convert picture</title>
    <url>/2022/05/01/Tool/Mac%20convert%20picture/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="MAC-通过命令行批量图片格式转换，调整大小"><a href="#MAC-通过命令行批量图片格式转换，调整大小" class="headerlink" title="MAC 通过命令行批量图片格式转换，调整大小"></a>MAC 通过命令行批量图片格式转换，调整大小</h4><p>今天为大家介绍的是使用终端命令行批量转换图片文件格式。<br>使用的命令是<code>sips</code>，<code>sips</code>可以转换一个或多个图片文件的文件格式。同时也可以对图片大小调整。</p>
<p><code>sips</code>的基本命令用法：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sips -s format 文件格式 要转换文件名 --out 输出文件名</span></span><br></pre></td></tr></table></figure>



<h4 id="使用-sips-命令对图片文件格式转"><a href="#使用-sips-命令对图片文件格式转" class="headerlink" title="使用 sips 命令对图片文件格式转"></a>使用 sips 命令对图片文件格式转</h4><ul>
<li>下面命令是将JPG转换成PNG：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sips -s format png 15982541728182.jpg --out 15982541728182.png</span></span><br></pre></td></tr></table></figure>



<ul>
<li>批量将JPG文件转换为PNG：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="keyword">for</span> mshk <span class="keyword">in</span> *.jpg; <span class="keyword">do</span> sips -s format png <span class="variable">$mshk</span> --out <span class="variable">$mshk</span>.png;<span class="keyword">done</span></span></span><br></pre></td></tr></table></figure>



<ul>
<li>批量将JPG文件转换为PNG，并删除原文件：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="keyword">for</span> mshk <span class="keyword">in</span> *.jpg; <span class="keyword">do</span> sips -s format png <span class="variable">$mshk</span> --out <span class="variable">$mshk</span>.png;<span class="built_in">rm</span> -rf <span class="variable">$mshk</span>;<span class="keyword">done</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">### 同理转换GIF为PNG，并删除原文件</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="keyword">for</span> mshk <span class="keyword">in</span> *.gif; <span class="keyword">do</span> sips -s format png <span class="variable">$mshk</span> --out <span class="variable">$mshk</span>.png;<span class="built_in">rm</span> -rf <span class="variable">$mshk</span>;<span class="keyword">done</span></span></span><br></pre></td></tr></table></figure>



<ul>
<li>通过以下命令可以查看sips支持的文件类型：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sips --formats</span></span><br><span class="line">Supported Formats:</span><br><span class="line">-------------------------------------------</span><br><span class="line">com.adobe.pdf                pdf   Writable</span><br><span class="line">com.adobe.photoshop-image    psd   Writable</span><br><span class="line">com.adobe.raw-image          dng</span><br><span class="line">com.apple.atx                --    Writable</span><br><span class="line">com.apple.icns               icns  Writable</span><br><span class="line">com.apple.pict               pict</span><br><span class="line">com.canon.cr2-raw-image      cr2</span><br><span class="line">com.canon.cr3-raw-image      cr3</span><br><span class="line">com.canon.crw-raw-image      crw</span><br><span class="line">com.canon.tif-raw-image      --</span><br><span class="line">com.compuserve.gif           gif   Writable</span><br><span class="line">com.dxo.raw-image            dxo</span><br><span class="line">com.epson.raw-image          erf</span><br><span class="line">com.fuji.raw-image           raf</span><br><span class="line">com.hasselblad.3fr-raw-image 3fr</span><br><span class="line">com.hasselblad.fff-raw-image fff</span><br><span class="line">com.ilm.openexr-image        exr   Writable</span><br><span class="line">com.kodak.raw-image          dcr</span><br><span class="line">com.konicaminolta.raw-image  mrw</span><br><span class="line">com.leafamerica.raw-image    mos</span><br><span class="line">com.leica.raw-image          raw</span><br><span class="line">com.leica.rwl-raw-image      rwl</span><br><span class="line">com.microsoft.bmp            bmp   Writable</span><br><span class="line">com.microsoft.cur            --</span><br><span class="line">com.microsoft.dds            dds   Writable</span><br><span class="line">com.microsoft.ico            ico   Writable</span><br><span class="line">com.nikon.nrw-raw-image      nrw</span><br><span class="line">com.nikon.raw-image          nef</span><br><span class="line">com.olympus.or-raw-image     orf</span><br><span class="line">com.olympus.raw-image        orf</span><br><span class="line">com.olympus.sr-raw-image     orf</span><br><span class="line">com.panasonic.raw-image      raw</span><br><span class="line">com.panasonic.rw2-raw-image  rw2</span><br><span class="line">com.pentax.raw-image         pef</span><br><span class="line">com.phaseone.raw-image       iiq</span><br><span class="line">com.samsung.raw-image        srw</span><br><span class="line">com.sgi.sgi-image            sgi</span><br><span class="line">com.sony.arw-raw-image       arw</span><br><span class="line">com.sony.raw-image           srf</span><br><span class="line">com.sony.sr2-raw-image       sr2</span><br><span class="line">com.truevision.tga-image     tga   Writable</span><br><span class="line">org.khronos.astc             astc  Writable</span><br><span class="line">org.khronos.ktx              ktx   Writable</span><br><span class="line">public.avci                  avci</span><br><span class="line">public.heic                  heic  Writable</span><br><span class="line">public.heics                 heics Writable</span><br><span class="line">public.heif                  heif</span><br><span class="line">public.jpeg                  jpeg  Writable</span><br><span class="line">public.jpeg-2000             jp2   Writable</span><br><span class="line">public.mpo-image             mpo</span><br><span class="line">public.pbm                   pbm   Writable</span><br><span class="line">public.png                   png   Writable</span><br><span class="line">public.pvr                   pvr   Writable</span><br><span class="line">public.radiance              pic</span><br><span class="line">public.tiff                  tiff  Writable</span><br></pre></td></tr></table></figure>

<h4 id="使用-sips-命令对图片文件调整大小"><a href="#使用-sips-命令对图片文件调整大小" class="headerlink" title="使用 sips 命令对图片文件调整大小"></a>使用 sips 命令对图片文件调整大小</h4><ul>
<li>下面命令将PNG文件，压缩为最大边 800px，另一个边自适应</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sips -Z 500 *.png</span></span><br></pre></td></tr></table></figure>

<ul>
<li>下面命令将PNG文件，压缩为最大边 800px，另一个边自适应</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sips -z 300 300 *.png</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>一般会造成图片变形</p>
</blockquote>
<p>  下面命令将PNG文件，压缩为宽度 500px，高度自适应</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sips --resampleWidth 500 *.png</span></span><br></pre></td></tr></table></figure>


<p>  下面命令将PNG文件，压缩为高度 500px，宽度自适应</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sips --resampleHeight 500 *.png</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Matplotlib Cheatsheet</title>
    <url>/2022/05/01/Tool/Matplotlib%20Cheatsheet/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="pdfobject-container" data-target="https://docs.qq.com/pdf/DSmF5Qk92dFZTbU5H" data-height="1000px"></div>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Model Tutorial</title>
    <url>/2022/05/01/Tool/Model%20Tutorial/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="数值模式基础"><a href="#数值模式基础" class="headerlink" title="数值模式基础"></a>数值模式基础</h2><p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247484155&idx=1&sn=aed91cdc45d2f17aeb39992637cc43fd&chksm=fc10e7eecb676ef83a54f46a764d8037a699f8fbe1531811f52910377e22236052d5bb9eb5ff&scene=21#wechat_redirect">献给数值模式新手入坑前的小结</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247484093&idx=1&sn=f9ce823403ac6d2e6568ca530c99af7c&chksm=fc10e7a8cb676ebe4d7fff8dfba9dfffa96b70f1ad9c646ba537c37d6e722897cf062c82fb19&scene=21#wechat_redirect">气象海洋数值基础：从0至1编写浅水方程模式</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247485371&idx=1&sn=6fe1cb895cebce128e67906c23219960&chksm=fc10e2aecb676bb86ccb0066bb610286ffff4d1fdb4dce6e7119468a91af750443259af5b66a&scene=21#wechat_redirect">关于数值模式spin up的一些说明</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247485381&idx=1&sn=38009a650bb799deba5526aae65847e9&chksm=fc10e2d0cb676bc69af784d6a44f1285620ef5bb66210a9825e14e0b39184417ba686867b0a9&scene=21#wechat_redirect">大气海洋资料同化科普篇</a></p>
<h2 id="大气模式"><a href="#大气模式" class="headerlink" title="大气模式"></a>大气模式</h2><p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247484059&idx=2&sn=810eea76db7595a0d58eecf3edd04ac4&chksm=fc10e78ecb676e981768258f271cacf637cef31625f21cb80e04e57d052160d7c9676908a97d&scene=21#wechat_redirect">WRF系列教程1：WRF如何得到更好的模拟结果？</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247483960&idx=1&sn=2ab6510d01b52304ea5b4f944598b800&chksm=fc10e72dcb676e3b837d35c021d5242eabd10622958413ea309dbc589e48ba97b3d231c9a57e&scene=21#wechat_redirect">WRF系列教程2：物理参数化方案</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247483982&idx=1&sn=825037c8a43c60229d526ed6b34d6701&chksm=fc10e75bcb676e4d6dce9885b31c48ec32abe7c504c90f869bf9f1cd563224e0a201140c5be1&scene=21#wechat_redirect">WRF系列教程3：嵌套方式总结</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247484079&idx=2&sn=1893e47637d79f2fe522df649eba5141&chksm=fc10e7bacb676eac0e41bdf0ab49ce284643a19296e9db4b9a7d0417b421b8047fe5023ab63b&scene=21#wechat_redirect">WRF系列教程4：WRF并行核数如何确定？</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247484274&idx=1&sn=61b3d7fc2b91e0fedc3710c83a89975f&chksm=fc10e667cb676f7140ff134650db9e21ce3b0d3ac786fafc7192047aaf326c6d3336ca3ff438&scene=21#wechat_redirect">WRF系列教程5：WPS前处理的一些利器</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247484678&idx=1&sn=0c8b89bff1bebcb884f60c053e47473a&chksm=fc10e013cb6769059f7f350a3fa7d19c064e769ff06c6e5c916625c7a4ad2c0550ef6007d990&scene=21#wechat_redirect">WRF模式后处理总结</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247483963&idx=1&sn=772e591cd1740192da23f92ebdd49a50&chksm=fc10e72ecb676e38e50712109be0a497d280c1d9ea6ec1eedccebd2636eb888a5e847206777c&scene=21#wechat_redirect">WRF后处理：模拟结果插值到站点(python版)</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247483820&idx=1&sn=8fc18006f70e99d74c3cde2b6acf93b4&chksm=fc10e4b9cb676daf516361bf430dda5ca62af488fad91632007cb72d662a2b41722b79235b8e&scene=21#wechat_redirect">WRF后处理：模拟结果插值到站点</a>(ncl)</p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247483937&idx=1&sn=2956e28fa71d9160c43ae235bf4b411f&chksm=fc10e734cb676e226411f97e3c1377888ae9864ef6a9a9a358c22254a58c2477705c5c56f104&scene=21#wechat_redirect">WRF后处理：WRF风旋转到地球相对坐标</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247483897&idx=2&sn=fc4324f708204859795f29621b3b360b&chksm=fc10e4eccb676dfa089f47e67da1f85066ed429e168720af999eb08a6b6e3efd397092e58fa5&scene=21#wechat_redirect">WRF后处理：降雨量的说明以及降雨的绘制</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247483786&idx=1&sn=49de4aa0fb4ce2551fa029435adfbe5b&chksm=fc10e49fcb676d894f04ae32867e5d3155b7af713a1148f2c3456c08c85760a23856c93544d7&scene=21#wechat_redirect">WRF模式使用NetCDF压缩格式，节约存储空间</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247483752&idx=1&sn=0ddea58c505eacae7764441dcbe71f06&chksm=fc10e47dcb676d6b5aae41289b80371a5b950e6c500b5d0c63698ca42b25e339aed120e13ede&scene=21#wechat_redirect">WRF中使用SRTM高分辨率的地形资料</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247483672&idx=1&sn=bcad424f8ee7d7ab9a9a6db2a61c4fe1&chksm=fc10e40dcb676d1ba7005cdcdcae166440244bbd28bc957021f5fe5aac4bf5d0cef796561b35&scene=21#wechat_redirect">WRF模式安装</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247483849&idx=2&sn=d566cb9787c0adf67c80dc96f1987616&chksm=fc10e4dccb676dca13426afa2cfb2a1455c78ce9dc45cf0482ad70b8f672206e198193dbf489&scene=21#wechat_redirect">WRFChem的安装</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247484568&idx=1&sn=997ec690da99f1f09ff9c199d1e5645f&chksm=fc10e18dcb67689bbad6c41747b92cb8bd5a846e65363350df370150696844f5834fd9a92306&scene=21#wechat_redirect">WRF模式预报冰雹</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247484456&idx=1&sn=17aa1108851236f49598291d1565d105&chksm=fc10e13dcb67682b7ae6ad88524dd909b650d10bb123c455374139a1b0c9996e903664b6a64e&scene=21#wechat_redirect">光伏发电预测——WRF-Solar</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247484062&idx=1&sn=43bb2ca88d1ffd9eef00b4cf8c7e84ab&chksm=fc10e78bcb676e9de3206d4aac0624bca95517f3e03c12cdc4babf637c6ddff66d825263bebf&scene=21#wechat_redirect">MPAS-A模式的介绍</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247485315&idx=1&sn=0ba31e383472cc7f9d25790144095d93&chksm=fc10e296cb676b80909ae5b404301f21a54500ce210d67124b79e7162f67e6d0702a7e6cf503&scene=21#wechat_redirect">MPAS-A模式的安装</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247485339&idx=1&sn=6ba5d8ca0490e4e6be509baf3e0f5f75&chksm=fc10e28ecb676b989f6f096a3936cd61f0fe102ead15314fb84491e5f13cab0565ca9eae0d2f&scene=21#wechat_redirect">MPAS-A模式的运行</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247483791&idx=1&sn=242d4a8d922ef48d4666db101a4a98bc&chksm=fc10e49acb676d8c2e4a86ebaa3deb61113f1bb8f25f98712696c6457a625f2c59b09276a2fe&scene=21#wechat_redirect">MPAS模式后处理，寻找距离观测站点最近的网格点</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247484323&idx=1&sn=27f20756e34d74da9eb8675dd745f274&chksm=fc10e6b6cb676fa02e705a68334219b2b09b72173f2981953e9cba09451a46da99323d22f9cc&scene=21#wechat_redirect">大涡模拟，你还可以选择这个模式</a>（PALM）</p>
<h2 id="海洋模式"><a href="#海洋模式" class="headerlink" title="海洋模式"></a>海洋模式</h2><p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247483830&idx=1&sn=9af1c5ffbf723d3b9e8b492596ecd759&chksm=fc10e4a3cb676db5385f7cf1bbb6aa9acd8df0aa67229c9c6ae7d2e7dbd6ab3d43ff41f2f2b8&scene=21#wechat_redirect">POM海洋模式简介、安装和运行</a></p>
<p>COAWST耦合模式介绍及其安装</p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247484616&idx=3&sn=957114539ac4135fe0e5db295fac7c10&chksm=fc10e1ddcb6768cb824e17493b4f9752b21fde2d7969b0d95ec68f0267d5a8562649cab63062&scene=21#wechat_redirect">ROMS区域海洋模式的安装和运行</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247484784&idx=1&sn=9d8c74d3321001a3524b9ec83a3d8810&chksm=fc10e065cb6769731b5c0beea9ccd0afc04bfe8877214027f6017e2f1f1f917b3288d19c852b&scene=21#wechat_redirect">但愿每个人都能感受到不用装环境就能跑ROMS模式的快乐</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247484125&idx=3&sn=4cf958f74807d08065827bb2482b57e7&chksm=fc10e7c8cb676ede4ed0927a72bf398155491577c4e053b0df064998d37ccbdcde9f6b94cfbf&scene=21#wechat_redirect">SWAN海浪模式介绍及其安装</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247484383&idx=4&sn=0c35d2ff3255bd2c6ecc9fcdbf118d15&chksm=fc10e6cacb676fdc5b4f30e1b69968ddbe6a33df9fc475df27c0afd7ac0a086216389690a7e0&scene=21#wechat_redirect">ADCIRC模式简介和安装</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247485062&idx=3&sn=44be53fded41337b11f94ad2c055556d&chksm=fc10e393cb676a851d6a8381f4efd9cf672d835d035ca1d24c92d2739ec7d67d935b5dfbfc91&scene=21#wechat_redirect">ADCIRC模式架构</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247485032&idx=1&sn=bb121e8c5be1a7e38ace53cc447499ac&chksm=fc10e37dcb676a6bbbd514b859867857ef782805ec64fd104e93c9711304f8e60a6b3577f86b&scene=21#wechat_redirect">ADCIRC专题| 网格文件解读与制作方法</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247485062&idx=1&sn=bddf970174824a9bf41f31209cc7ab63&chksm=fc10e393cb676a851f3289c5aa1569537479bd8621ecb1c43f524be993db4ef708cd34484133&scene=21#wechat_redirect">ADCIRC专题2| 常用文件格式说明</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247485032&idx=3&sn=bf1bff4da7d12f158c803eab52b11f47&chksm=fc10e37dcb676a6bee0b4f5eee8cf3c714ab004d31f2f24ec54f8648f433f42fa713d23d03b7&scene=21#wechat_redirect">ADCIRC模式运行—控制文件说明</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247485331&idx=1&sn=b170261955e07f8ae4167a230680a2e3&chksm=fc10e286cb676b9054c9b25486722216de4e1b5ce2ae1151232b81269ba28b92c6383a49caab&scene=21#wechat_redirect">ADCIRC | 属性文件fort13的介绍与制作方法</a></p>
<p><strong>资料同化</strong></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247483836&idx=2&sn=4a2b9127816919daf9fae60539c43f6f&chksm=fc10e4a9cb676dbfb7d4bd0a08636ba78c8ab40c43480f9998cf2d911dfcaa067265b57e78a5&scene=21#wechat_redirect">同化，你从哪里来，要到哪里去</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247483882&idx=1&sn=906a8b051d2bff15abe20dd2b16ab1b1&chksm=fc10e4ffcb676de971870191d718fc9ebd6b65caec1c76ef8dd7cb68949909722de5b89586bb&scene=21#wechat_redirect">资料同化简介和WRFDA的安装</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247483897&idx=1&sn=5a03fc2d628c7878fd46bd04ba3711d1&chksm=fc10e4eccb676dfa0a41def9c39579c845a6c2663adb1fd1269937c75f2bc3700237a0a80d66&scene=21#wechat_redirect">资料同化简介及GSI的安装</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247484684&idx=1&sn=fe4d488837ffb25f37b5c8b8b085ed1d&chksm=fc10e019cb67690f464d04be554c1e3f835816f7c9825127768aacaab3dc4da1df2bc2608634&scene=21#wechat_redirect">WRFDA教程：三维变分同化</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247484767&idx=1&sn=35ede4d8fca5491554f3396d27f56795&chksm=fc10e04acb67695cd61438fe5e66721ae1f73ad7e88c9a17fea1a553de4f4f8bc520d7553eb5&scene=21#wechat_redirect">WRFDA教程：四维变分同化</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247484816&idx=1&sn=62277cc1054b5c64f7c08e83440d60e7&chksm=fc10e085cb6769935b164bb055ef602f3ef6b0fce2457f4346773485d096e53a2b74041db9a3&scene=21#wechat_redirect">WRFDA教程：3DVar同化卫星辐射率资料</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247485074&idx=1&sn=58f789a2016f0371a9e7987b106191f8&chksm=fc10e387cb676a912a8c299231ab9883aaf30b29ca2eb1d71ce146ef22dc89d7d1d87b16f1ee&scene=21#wechat_redirect">WRFDA教程：背景误差的介绍以及gen_be生成背景误差</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247484303&idx=2&sn=c260ff286fb379b2204cecb23f5cb43e&chksm=fc10e69acb676f8c40864f74c7d7214dac0629e3976caf892ef12966d4565fd2ac3df430a745&scene=21#wechat_redirect">python实现逐步订正法</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247484263&idx=4&sn=41198d3f640a97e37aaa04deb849d490&chksm=fc10e672cb676f64bd9f94a411203643fefae7df8f697410032a433f96c55f048fe080ff749d&scene=21#wechat_redirect">WRFDA的Little R格式介绍</a></p>
<p><strong>人工智能</strong></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247484616&idx=2&sn=87b91b63a0412a5c0ec40e097dfcf53e&chksm=fc10e1ddcb6768cb9b95047ba708749ea9c8f3e91703e8fc5e6c55814bc0925afd22ae26d086&scene=21#wechat_redirect">深度学习降尺度技术</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247484432&idx=1&sn=b4d5e55e0b76031d1779840c8edd90ed&chksm=fc10e105cb6768139488303727a721c2d8ec6c08b0e585563c721cce0bfb567500e5ac65cd6e&scene=21#wechat_redirect">PINN——加入物理约束的神经网络</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247484417&idx=4&sn=06b0aab1b25faa35c1d68d5ad717d090&chksm=fc10e114cb676802f7a5816ec4ba14a44e1054c4e2b620d91215cbc91ccc0e8b15c3d51f18f5&scene=21#wechat_redirect">AI订正CMA台风预报，“烟花”预报误差降低80%以上</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247483890&idx=2&sn=20536eeb859190aad45ee9db0e9e089c&chksm=fc10e4e7cb676df136b9da2ec4fbea26ec229e5b9bc3f40da7075ac9d8667ee30cd8d9edd4d2&scene=21#wechat_redirect">BP神经网络进行分类任务</a></p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Model Whale</title>
    <url>/2022/05/01/Tool/Model%20Whale/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>从自然地理到人类社会，从气候变化到人口增长，从遥感卫星到城市交通，从南极到北极，从赤道到寒带，地球正在发生着前所未有的迅速变化，而地球和人类活动最伟大的意义是周而复始，生生不息，一切都有迹可循。这是一个万物都可以被测量、划分和记录的时代，人类对于用数据去理解自然，量化和探索地球科学的热情始终高涨。</p>
<p>我们精选了<strong>和鲸社区</strong>内所有<strong>地球科学领域的优质项目</strong>，期待越来越多的地球科学研究者和爱好者持续用数据去挖掘价值，揭示出新的深刻洞见，迎接大数据时代下地球科学所面临的机遇和挑战。</p>
<p>Tips：推荐使用<a href="https://www.modelwhale.com/?flag=mpdqkx0616"><strong>数据分析协同工具</strong> <strong>ModelWhale</strong></a>，确保所有资源的可复现性！（部分代码已隐藏，搭载对应镜像，一键复刻运行，获取完整代码）</p>
<h2 id="地理"><a href="#地理" class="headerlink" title="地理"></a>地理</h2><h3 id="1、数据获取-x2F-数据下载-x2F-数据格式读取"><a href="#1、数据获取-x2F-数据下载-x2F-数据格式读取" class="headerlink" title="1、数据获取&#x2F;数据下载&#x2F;数据格式读取"></a>1、数据获取&#x2F;数据下载&#x2F;数据格式读取</h3><p><a href="https://www.heywhale.com/mw/project/5feab70b840381003bfb93fd">爬虫 | 我国城市地铁站数据（含地理坐标）</a></p>
<p><a href="https://www.heywhale.com/mw/project/5fe87825840381003bf9f0ed">爬虫神器——开源数据接口(GoPUP)</a></p>
<p><a href="https://www.heywhale.com/mw/project/60acb25aa3eb5700175d663f">爬取全国高校数据（附源码和数据集）</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f229feed278b1002c22438d">如何从Twitter数据中提取空间地理信息</a></p>
<p><a href="https://www.heywhale.com/mw/project/61d807b13debcb0022ddbf39">北京门头沟区进城普通公交实时运行数据的探索</a></p>
<p><a href="https://www.heywhale.com/mw/project/6199aecf7d748000172530af">基于高德地图API获取城市公交站点和线路</a></p>
<p><a href="https://www.heywhale.com/mw/project/5fd706ea83e4460030a3c47e">高德地图📍📍API指南 🌍爬取经纬度</a></p>
<p><a href="https://www.heywhale.com/mw/project/6086baf5bb1fc9001866d910">OSMnx | OpenStreetMap数据下载</a></p>
<p><a href="https://www.heywhale.com/mw/project/627db330f9d3b38a5798f55d">度分秒与十进制经纬度转换</a></p>
<p><a href="https://www.heywhale.com/mw/project/5fd210551a34b90030b6a5ce">Xarray高阶 | 利用dask并行读取数据</a></p>
<p><a href="https://www.heywhale.com/mw/project/622b2d808a84f900178933ac">GeoTIFF格式地理数据的读取与可视化</a></p>
<p><a href="https://www.heywhale.com/mw/project/5fd217441a34b90030b6ad44">激光点云(Lidar)数据读取、分类与可视化</a></p>
<h3 id="2、数据处理-x2F-数据分析-x2F-数值计算和可视化"><a href="#2、数据处理-x2F-数据分析-x2F-数值计算和可视化" class="headerlink" title="2、数据处理&#x2F;数据分析&#x2F;数值计算和可视化"></a>2、数据处理&#x2F;数据分析&#x2F;数值计算和可视化</h3><p><a href="https://www.heywhale.com/mw/project/6029ee03891f960015c9df97">基于DBSCAN算法的人类活动GPS数据挖掘</a></p>
<p><a href="https://www.heywhale.com/mw/project/60d879df056f570017c2aa74">基于DEM数据计算坡向、坡度和流向</a></p>
<p><a href="https://www.heywhale.com/mw/project/622c31158a84f90017894e38">快速入门基于Python的时空数据分析</a></p>
<p><a href="https://www.heywhale.com/mw/project/6086bd2dbb1fc9001866d9d8">栅格数据的裁剪(掩膜)与分区统计</a></p>
<p><a href="https://www.heywhale.com/mw/project/6227ccbeb035430017a9138e">中国各省份的经济产业结构差异分析</a></p>
<p><a href="https://www.heywhale.com/mw/project/62754e8fd0bd1f00173f1cee">最全最完整！Shapely 用户手册</a></p>
<p><a href="https://www.heywhale.com/mw/project/61f37ff158fc130017027b18">多波段遥感影像可视化与分类算法</a></p>
<p><a href="https://www.heywhale.com/mw/project/5fc081b065710400309ef8e7">嫦娥探月数据(PDS)处理与可视化</a></p>
<p><a href="https://www.heywhale.com/mw/project/60868a94195abe00172f4708">Geopandas | 地图投影与距离计算</a></p>
<p><a href="https://www.heywhale.com/mw/project/607ef82da959c70017ef247d">中国手机基站数据分析（附深圳市具体分析思路）</a></p>
<p><a href="https://www.heywhale.com/mw/project/6276102d53f7db0017333231">地理空间数据分析入门：GeoPandas 和 Shapely</a></p>
<p><a href="https://www.heywhale.com/mw/project/6086934c195abe00172f4b81">归一化差分水体指数(NDWI)的计算与空间分析</a></p>
<p><a href="https://www.heywhale.com/mw/project/625f33e36534930017e899bf">何时适宜出行？中国20个城市的天气适宜出行度分析</a></p>
<p><a href="https://www.heywhale.com/mw/project/6018bc7aa93d4a0015389dc5">【数据分析冬令营】多伦多共享单车骑行数据时空分析</a></p>
<p><a href="https://www.heywhale.com/mw/project/5fdc505d83e4460030a7a295">【数据可视化】旅游景点信息爬取&amp;地图位置显示</a></p>
<p><a href="https://www.heywhale.com/mw/project/5ff32309840381003b02f0af">“泰迪杯”数据分析大赛B题 新冠疫情数据分析</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f228165d278b1002c222385">旧金山共享单车地理数据清洗和地图可视化</a></p>
<p><a href="https://www.heywhale.com/mw/project/624bf787bd5bb00017f19b2f">2022上海疫情数据预处理与时空分析</a></p>
<p><a href="https://www.heywhale.com/mw/project/627cfbf8f9d3b38a579406f0">我国地级市&#x2F;县级市数据获取与处理</a></p>
<p><a href="https://www.heywhale.com/mw/project/60ae290ea8c5b50017cc221e">关于全国高校地理分布数据的探索~</a></p>
<p><a href="https://www.heywhale.com/mw/project/5fa7a8a149c6d70030eefd8e">公寓出租的分区统计和服务评分</a></p>
<p><a href="https://www.heywhale.com/mw/project/60062f3f7ed5ab0015f051ea">【春运】新冠疫情下的回家之路</a></p>
<p><a href="https://www.heywhale.com/mw/project/61567b2890a8990017cb3815">【大型地理空间数据集可视化】</a></p>
<p><a href="https://www.heywhale.com/mw/project/61567b2890a8990017cb3815">美国人口分布数据</a><a href="https://www.heywhale.com/mw/project/60ae290ea8c5b50017cc221e">【高校地图】</a></p>
<p><a href="https://www.heywhale.com/mw/project/602c966b891f960015cb4c1b">最常见的10种图像滤波方法</a></p>
<p><a href="https://www.heywhale.com/mw/project/61e18911c8a9ae00178ca965">基础地理信息数据预处理</a></p>
<p><a href="https://www.heywhale.com/mw/project/620dcdf68da0860017b973bc">Clarmy吱声代码库</a></p>
<p><a href="https://www.heywhale.com/mw/project/629e9f815404b57558776576">空间网格统计方法</a></p>
<p><a href="https://www.heywhale.com/mw/project/6284306d901f1de4da862fa5">GDAL&#x2F;OGR 工具书！</a></p>
<h3 id="地理可视化"><a href="#地理可视化" class="headerlink" title="地理可视化"></a>地理可视化</h3><p><a href="https://www.heywhale.com/mw/project/5f52eb09c85f1c0031b3579b">Cartopy 调用天地图在线服务(原创)</a></p>
<p><a href="https://www.heywhale.com/mw/project/5fe870a6840381003bf9e573">在Cartopy中自定义世界底图</a></p>
<p><a href="https://www.heywhale.com/mw/project/605d2e48474ded0015711915">Cartopy|绘制不同投影的地图</a></p>
<p><a href="https://www.heywhale.com/mw/project/605d2e48474ded0015711915">Cartopy | 绘制不同投影的地图</a><a href="https://www.heywhale.com/mw/project/5e3ae358b8c462002d66e55f">2019新型冠状病毒</a></p>
<p><a href="https://www.heywhale.com/mw/project/6096206106b94200178c7c11">Geopandas|调用在线底图</a></p>
<p><a href="https://www.heywhale.com/mw/project/622b2d808a84f900178933ac">GeoTIFF格式地理数据的读取与可视化</a></p>
<p><a href="https://www.heywhale.com/mw/project/5fd217441a34b90030b6ad44">激光点云(Lidar)数据读取、分类与可视化</a></p>
<p><a href="https://www.heywhale.com/mw/project/5e3ae358b8c462002d66e55f">（2019-nCoV）数据地图可视化</a></p>
<p><a href="https://www.heywhale.com/mw/project/61fa2be88da0860017b07b50">Matplotlib绘图的常见问题汇总</a></p>
<p><a href="https://www.heywhale.com/mw/project/627688e02f4e3b31c33a6d59">地图之美 | 利用chorogrid绘制网格地图</a></p>
<p><a href="https://www.heywhale.com/mw/project/5fe4861d9762b20030137d5f">绘制具有艺术风格的山脊地图</a></p>
<p><a href="https://www.heywhale.com/mw/project/6004399a7ed5ab0015ef5672">试试不同风格的地图绘制</a></p>
<p><a href="https://www.heywhale.com/mw/project/5fd75ed483e4460030a417aa">我国地形(DEM)数据可视化</a></p>
<p><a href="https://www.heywhale.com/mw/project/6004399a7ed5ab0015ef5672">线状风格的地图、像素风格的地图、不规则多边形地图</a></p>
<p><a href="https://www.heywhale.com/mw/project/603b85d004f2500015a12e19">空间分析与可视化工具——CARTOframes</a></p>
<p><a href="https://www.heywhale.com/mw/project/623441622296bb0017cf48cb">快速入门Julia可视化库——Makie</a></p>
<p><a href="https://www.heywhale.com/mw/project/622d5cdea8d6010017ff76a3">强大的地形可视化工具箱（Relief Visualization Toolbox，RVT）</a></p>
<p><a href="https://www.heywhale.com/mw/project/622d5cdea8d6010017ff76a3">强大的地形可视化工具箱（RVT）</a></p>
<p><a href="https://www.heywhale.com/mw/project/60a0ca4af29cea001799de54">地理数据可视化——绘制地铁线路动态图</a></p>
<p><a href="https://www.heywhale.com/mw/project/60a123aa64d3a200172f2b59">地理数据可视化——桑基图</a></p>
<p><a href="https://www.heywhale.com/mw/project/5fe1a86583e4460030ab3b5c">新一代DEM数据(NASADEM)批量下载与可视化</a></p>
<p><a href="https://www.heywhale.com/mw/project/6096206106b94200178c7c11">Geopandas | 调用在线底图</a></p>
<p><a href="https://www.heywhale.com/mw/project/62086e1c7a7c9a0017c5836e">pydeck空间数据可视化合集</a></p>
<p><a href="https://www.heywhale.com/mw/project/600ad5dde455800015b7d5da">【GEO】通过Pyecharts实现【微博签到中国】可视化作品</a></p>
<p><a href="https://www.heywhale.com/mw/project/60714da175e8a300175c1c93">【pyecharts】Geo-Lines实现地铁线路图</a></p>
<p><a href="https://www.heywhale.com/mw/project/60d67d0fee16460017a2ca51">【Pyecharts】关于深圳某家网二手房数据的探索～</a></p>
<p><a href="https://www.heywhale.com/mw/project/607d679ef15a1d00171565e5">【pyecharts】全球手机基站数据的探索～</a></p>
<p><a href="https://www.heywhale.com/mw/project/600cdb62e455800015ba4e65">【春运】从一线城市前往二三线城市火车票数据可视化～</a></p>
<p><a href="https://www.heywhale.com/mw/project/60e8faa43f24480017055a53">【Plotly】关于Uber 纽约市乘车数据的探索～</a></p>
<p><a href="https://www.heywhale.com/mw/project/60c20cf919d60100189867f0">全国火锅店数量，并利用地图可视化展示</a></p>
<p><a href="https://www.heywhale.com/mw/project/61e384950ed7c2001703cad3">全球逐日紫外辐射数据可视化</a></p>
<p><a href="https://www.heywhale.com/mw/project/61274519bc40120017e86d12">我用Python画了北上广深的地铁动态图</a></p>
<h3 id="3、课程资源"><a href="#3、课程资源" class="headerlink" title="3、课程资源"></a>3、课程资源</h3><p><a href="https://earth-env-data-science.github.io/intro.html"><strong>地球与环境数据科学</strong></a> <strong>-</strong> <a href="https://rabernat.github.io/"><strong>Ryan Abernathey</strong></a> <a href="https://www.heywhale.com/mw/project/61add2c5197b8300171bb45d"><strong>课程翻译</strong></a></p>
<h4 id="Python核心语法"><a href="#Python核心语法" class="headerlink" title="Python核心语法"></a>Python核心语法</h4><p><a href="https://www.heywhale.com/mw/project/61a4913f1614660017dd3546">Python 基础</a></p>
<p><a href="https://www.heywhale.com/mw/project/61a496c1e867ee0017bf9c20">Python 函数和类</a></p>
<p><a href="https://www.heywhale.com/mw/project/61a499061614660017dd3c56">Python 项目的组织和打包</a></p>
<p><a href="https://www.heywhale.com/mw/project/61a4a4635cd1740017420f53">作业：基础Python</a></p>
<h4 id="科研中的Python基础知识"><a href="#科研中的Python基础知识" class="headerlink" title="科研中的Python基础知识"></a>科研中的Python基础知识</h4><p><a href="https://www.heywhale.com/mw/project/61a4b335e867ee0017bfb247">Numpy 和 Matplotlib</a></p>
<p><a href="https://www.heywhale.com/mw/project/61a4b9595cd1740017421f54">作业3：Numpy和Matplotlib</a></p>
<p><a href="https://www.heywhale.com/mw/project/61a4bc8ae867ee0017bfbdbf">更多Matplotlib的内容</a></p>
<p><a href="https://www.heywhale.com/mw/project/61a4c0365cd174001742291b">作业4：更多的Matplotlib的内容</a></p>
<h4 id="高级数据分析框架"><a href="#高级数据分析框架" class="headerlink" title="高级数据分析框架"></a>高级数据分析框架</h4><p><strong>Pandas</strong></p>
<p><a href="https://www.heywhale.com/mw/notebook/61a5e4425cd174001742ed18">Pandas基础知识</a></p>
<p><a href="https://www.heywhale.com/mw/notebook/61a5ebd4e867ee0017c088cc">作业5：Pandas基础知识与地震数据</a></p>
<p><a href="https://www.heywhale.com/mw/notebook/61a5edc71614660017de2743">Pandas: Groupby</a></p>
<p><a href="https://www.heywhale.com/mw/notebook/61a5f9bc1614660017de28d3">作业6：Pandas Groupby与飓风数据</a></p>
<p><strong>用于多维网格化数据的Xarray</strong></p>
<p><a href="https://www.heywhale.com/mw/notebook/61a5fcf8e867ee0017c08c44">Xarray基础知识</a></p>
<p><a href="https://www.heywhale.com/mw/notebook/61a619775cd174001742fe22">作业7：使用大气辐射数据的Xarray基础知识</a></p>
<p><a href="https://www.heywhale.com/mw/notebook/61a627541614660017de2f34">Xarray内插法、Groupby、重采样、滚动和粗化</a></p>
<p><a href="https://www.heywhale.com/mw/notebook/61a750661614660017de82d3">作业：使用厄尔尼诺-南方涛动（ENSO）数据的更多Xarray</a></p>
<p><a href="https://www.heywhale.com/mw/notebook/61a7525ee867ee0017c0f4c6">Xarray技巧和窍门</a></p>
<p><strong>地球科学的包</strong></p>
<p><a href="https://www.heywhale.com/mw/project/61a753d95cd1740017435bac">地球科学研究中的地图</a></p>
<p><a href="https://www.heywhale.com/mw/project/61a75ba65cd1740017435e9d">作业：用Cartopy制作地图</a></p>
<p><a href="https://www.heywhale.com/mw/project/61a761025cd174001743607c">使用xesmf和xgcm处理一般循环模型的输出结果</a></p>
<p><strong>大数据</strong></p>
<p><a href="https://www.heywhale.com/mw/project/61a8b7e1e867ee0017c23f46">用Python进行并行计算的Dask</a></p>
<p><a href="https://www.heywhale.com/mw/project/61a8b9825cd174001744ad3e">使用Dask进行计算</a></p>
<h2 id="气象"><a href="#气象" class="headerlink" title="气象"></a>气象</h2><h3 id="1、数据获取-x2F-数据下载-x2F-数据格式读取-1"><a href="#1、数据获取-x2F-数据下载-x2F-数据格式读取-1" class="headerlink" title="1、数据获取&#x2F;数据下载&#x2F;数据格式读取"></a>1、数据获取&#x2F;数据下载&#x2F;数据格式读取</h3><p><a href="https://www.heywhale.com/mw/project/60ed75fbbe5f09001762ebcb">常用气象数据下载——ERA5再分析(grib格式)</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f3e1fe9ce44c0002c8e4530">常用气象数据下载——Hamawari8</a></p>
<p><a href="https://www.heywhale.com/mw/project/6199a9657d74800017253023">常用气象数据下载——NCEP FNL再分析资料</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f3e0b4cce44c0002c8e0073">常用气象数据下载——NCEP再分析资料</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f9f9250ca48e000300dd5cb">常用气象数据下载——耦合模式比较计划(CMIP6)</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f3e143ece44c0002c8e1990">常用气象数据下载——实时空气质量数据</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f3e02d142797c002c9f0e1f">常用气象数据下载——探空资料</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f5453cb0906db003c774aca">常用气象数据下载——我国台风历史轨迹数据</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f4b93eb6476cf0036f806aa">常用气象数据下载——TEMIS遥感数据</a></p>
<p><a href="https://www.heywhale.com/mw/project/627e61a69b835caee44247c8">常用气象数据下载——2345天气王</a></p>
<p><a href="https://www.heywhale.com/mw/project/5fb22c69b99c2c003036a439">常用气象数据获取指南（与分工）</a></p>
<p><a href="https://www.heywhale.com/mw/project/6110ce14fe727700176be0cf">关于中国气象数据的探索</a></p>
<p><a href="https://www.heywhale.com/mw/project/6261ec826731be0017386e46">FNL数据下载</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f2ac754af3980002cb1bc95">ERA5降水数据下载与绘图</a></p>
<p><a href="https://www.heywhale.com/mw/project/61a20bcfa76aea00173d66ff">ERA5再分析资料下载及其绘制</a></p>
<p><a href="https://www.heywhale.com/mw/project/625c3328e22b670017083476">fortran读取netcdf文件</a></p>
<p><a href="https://www.heywhale.com/mw/project/625e21be26bb0900178a9c08">fortran输出netcdf文件</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f2a7906d278b1002c275cdd">Python处理HDF格式数据示例</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f1a407194d484002d2d9b2b">Python读取气象数据nc格式文件的入门级操作</a></p>
<p><a href="https://www.heywhale.com/mw/project/62660972af51920017414a26">Python读取与合并nc文件</a></p>
<p><a href="https://www.heywhale.com/mw/project/6195cf2bb2739500178eef9f">python提取影响某地的台风数据</a></p>
<p><a href="https://www.heywhale.com/mw/project/619d9af05e33460017f8c727">python爬取中央气象台降水预报</a></p>
<p><a href="https://www.heywhale.com/mw/project/6069bb93cbb4020018e4c9e2">基于Python的Grads文件解析</a></p>
<p><a href="https://www.heywhale.com/mw/project/628507931f8f7f5e2b45b284">利用python输出TIFF文件</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f79e83afab2e80030065a64">利用Python的requests和json包获取台风数据</a></p>
<p><a href="https://www.heywhale.com/mw/project/622a9d58a8d6010017fe83b4">读取dat&#x2F;grib格式气象数据并转为nc格式</a></p>
<p><a href="https://www.heywhale.com/mw/project/624fb43e9ed218001729386b">从micaps观测降水中提取单站点时间序列</a></p>
<p><a href="https://www.heywhale.com/mw/project/627a4ebc1b61c0641ac399aa">从PDF提取气象站点和探空站点数据信息</a></p>
<p><a href="https://www.heywhale.com/mw/project/626e95f332a9e600173ddd01">ungrib.exe问题与解决方案记录</a></p>
<p><a href="https://www.heywhale.com/mw/project/619ed9845e33460017f90b37">基于notebook实现交互式nc数据浏览</a></p>
<p><a href="https://www.heywhale.com/mw/project/61bee9c9b790460017c940a0">基于OPeNDAP server的数据下载方法</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f2bc0abaf3980002cb2706e">气象之批量下载气象数据(EC;NCEP;CMIP)（python）</a></p>
<p><a href="https://www.heywhale.com/mw/project/61ae12a83c18f70018b5947a">天气雷达基本反射率图像下载</a></p>
<p><a href="https://www.heywhale.com/mw/project/624ed7bae204830017d7fc5c">逐小时micaps站点降水资料累加</a></p>
<p><a href="https://www.heywhale.com/mw/project/627288e153f7db001731f85c">下载葵花8数据的脚本可以更简单一点</a></p>
<p><a href="https://www.heywhale.com/mw/project/6187c0d886227300178bb51e">下载逐小时、逐日、逐月的ERA5再分析</a></p>
<p><a href="https://www.heywhale.com/mw/project/62537e970b30350017514b5d">用 python 轻松提取 grib 文件数据，只用 3 个步骤</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f26b700d278b1002c244abf">Workshop第一期：初探气象数据 Part1</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f26b93cd278b1002c244b9e">Workshop第一期：初探气象数据 Part2</a></p>
<h3 id="2、数据处理-x2F-数据分析-x2F-数值计算和可视化-1"><a href="#2、数据处理-x2F-数据分析-x2F-数值计算和可视化-1" class="headerlink" title="2、数据处理&#x2F;数据分析&#x2F;数值计算和可视化"></a>2、数据处理&#x2F;数据分析&#x2F;数值计算和可视化</h3><p><a href="https://www.heywhale.com/mw/project/626e924732a9e600173ddba3">netCDF4基础1：读取nc文件</a></p>
<p><a href="https://www.heywhale.com/mw/project/626e92cb9405f9001759e854">netCDF4基础2：输出nc文件</a></p>
<p><a href="https://www.heywhale.com/mw/project/626e932edd340100173ddc7f">netCDF4基础3：时间处理</a></p>
<p><a href="https://www.heywhale.com/mw/project/626e937b32a9e600173ddc24">netCDF4基础4：unlimited维度</a></p>
<p><a href="https://www.heywhale.com/mw/project/626e93b1dd340100173ddcab">netCDF4基础5：压缩变量</a></p>
<p><a href="https://www.heywhale.com/mw/project/6200cf4b8da0860017b2f62c">【手把手学python项目】天气信息分析（1）</a></p>
<p><a href="https://www.heywhale.com/mw/project/6200cfb868364e00179b915f">【手把手学python项目】天气信息分析（2）</a></p>
<p><a href="https://www.heywhale.com/mw/project/6200d0128da0860017b2f645">【手把手学python项目】天气信息分析（3）</a></p>
<p><a href="https://www.heywhale.com/mw/project/6200d0598da0860017b2f653">【手把手学python项目】天气信息分析（4）</a></p>
<p><a href="https://www.heywhale.com/mw/project/61dc0990d43cbc00178ddb88">【气象数据处理】利用eccodes解码GRIB数据</a></p>
<p><a href="https://www.heywhale.com/mw/project/61d8592d9d17520017a8d815">【气象数据处理】利用pygrib解码GRIB数据，以GFS为例</a></p>
<p><a href="https://www.heywhale.com/mw/project/61aae99cdd46bd0017472368">【气象数据处理】清洗无序站点降水数据</a></p>
<p><a href="https://www.heywhale.com/mw/project/61b818ac3c18f70018c14a82">【气象数据处理】剔除离群值</a></p>
<p><a href="https://www.heywhale.com/mw/project/609d1dee64d3a200172c1723">气象数据处理——重采样（Regridding）</a></p>
<p><a href="https://www.heywhale.com/mw/project/60dbc32e94c44a0017dcc9dc">气象数据处理——湿位涡剖面分析</a></p>
<p><a href="https://www.heywhale.com/mw/project/603b786304f2500015a12a68">气象数据分析——Pearson相关系数与时间相关系数</a></p>
<p><a href="https://www.heywhale.com/mw/project/60681c06cbb4020018e4554d">气象数据分析——经验正交分解（EOF）</a></p>
<p><a href="https://www.heywhale.com/mw/project/609bc77b64d3a20017298071">气象数据分析——集合经验模态分解（EEMD）</a></p>
<p><a href="https://www.heywhale.com/mw/project/60f28687486e5c00170b5c5b">气象数据分析——克里金(Kriging)插值与可视化</a></p>
<p><a href="https://www.heywhale.com/mw/project/60f246eff1de9d0017e7dda3">气象数据分析——泰勒图绘制（R语言）</a></p>
<p><a href="https://www.heywhale.com/mw/project/60683992a7fbf60018904d8f">气象数据分析——我国逐年降水的经验正交分解</a></p>
<p><a href="https://www.heywhale.com/mw/project/603b786304f2500015a12a68">气象数据分析——相关系数与时间相关系数</a></p>
<p><a href="https://www.heywhale.com/mw/project/6073e7be6e71870017536113">气象数据分析——旋转经验正交函数(REOF)</a></p>
<p><a href="https://www.heywhale.com/mw/project/624d49abbd5bb00017f2bd9e">气象 Python 训练营 ⑤ xarray 使用笔记（一）</a></p>
<p><a href="https://www.heywhale.com/mw/project/624d743037409c00175ae962">气象 Python 训练营 ⑤ xarray 使用 笔记（二）</a></p>
<p><a href="https://www.heywhale.com/mw/project/61c4114f50a237001778070e">计算抬升凝结高度-优秀作业1</a></p>
<p><a href="https://www.heywhale.com/mw/project/61cc0a0baffcaf09c1890152">计算抬升凝结高度-优秀作业2</a></p>
<p><a href="https://www.heywhale.com/mw/project/61bae3914e0973001707b9e1">计算抬升凝结高度-优秀作业3</a></p>
<p><a href="https://www.heywhale.com/mw/project/61d55e1c4c783e0017aeafcb">计算抬升凝结高度-优秀作业4</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f98e2681444700030f689e0">气象雷达简介&amp;可视化</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f57510fbfe03300317f317f">气象雷达数据处理与可视化</a></p>
<p><a href="https://www.heywhale.com/mw/project/61fcef087a7c9a0017c1db3c">ROMS海洋模式混合层厚度计算</a></p>
<p><a href="https://www.heywhale.com/mw/project/61ff6f588da0860017b2990c">windspharm 风场分析模块</a></p>
<p><a href="https://www.heywhale.com/mw/project/602cadc8891f960015cb545a">基于暗通道的去雾算法</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f3144a1af3980002cb6164f">气象数据初探第一期作业</a></p>
<p><a href="https://www.heywhale.com/mw/project/6067f11a5fa89c001738d521">CALIPSO卫星数据处理</a></p>
<p><a href="https://www.heywhale.com/mw/project/5fe5a30c5e24ed003022719a">气象数据处理加速器——cdo</a></p>
<p><a href="https://www.heywhale.com/mw/project/609be8e806b942001791006b">基于随机森林对特征重要性排序</a></p>
<p><a href="https://www.heywhale.com/mw/project/601cd807b2334400157ecce0">两个变量场的相关分析——SVD分解</a></p>
<p><a href="https://www.heywhale.com/mw/project/6274ea37d0bd1f00173efc12">利用xarray将全球数据裁减到较小的范围</a></p>
<p><a href="https://www.heywhale.com/mw/project/626f83b59405f900175a0edc">WSR-88D双偏振雷达基数据处理与可视化</a></p>
<p><a href="https://www.heywhale.com/mw/project/6218c13de3d3a00017a30d18">按预报时效分割GRIB数据，以GFS为例</a></p>
<p><a href="https://www.heywhale.com/mw/project/60c76b90d8575f001844eec0">高维气象数据的插值（2D、3D、4D）</a></p>
<p><a href="https://www.heywhale.com/mw/project/621dbfe67e72dd001760b0cc">海洋物理学导论——2.海水热力学</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f2913fcd278b1002c260258">Python之一个简单的风数据处理和分析案例</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f2920d3d278b1002c261bc6">Python之以温度为例的气象数据缺测处理方法</a></p>
<p><a href="https://www.heywhale.com/mw/project/61fde79c8da0860017b2141d">混合层厚度计算</a><a href="https://www.heywhale.com/mw/project/604094e5f4d738001584effb">结构方程模型（SEM）构建</a></p>
<p><a href="https://www.heywhale.com/mw/project/627a6fb62079e38a9d84c432">极地&amp; Robinson投影画one-point correlation map</a></p>
<p><a href="https://www.heywhale.com/mw/project/626e867a9405f9001759e3e0">基于xeofs模块实现S-EOF、T-EOF、REOF和weight-EOF</a></p>
<p><a href="https://www.heywhale.com/mw/project/62402eba38834700186fe3d9">气象Python任务挑战-构建一个可互动的天气看板</a></p>
<p><a href="https://www.heywhale.com/mw/project/626695b2af5192001742538c">西北太平洋地区热带气旋路径检测与可视化</a></p>
<p><a href="https://www.heywhale.com/mw/project/61a738dd5cd1740017434977">长期气象站资料的均一化订正—以最大风速为例</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f55bb881a2616003c852362">基于ERA5数据分析中国区域气温与降水数据的时空分布</a></p>
<p><a href="https://www.heywhale.com/mw/project/627541f24dfd64001791b62f">全球数据绘制区域等值线clabel问题记录</a></p>
<p><a href="https://www.heywhale.com/mw/project/625d275fe22b6700170938ec">中国地区极端降水指数计算与绘图</a></p>
<p><a href="https://www.heywhale.com/mw/project/6236fea3dff0200017d3a89d">2011-2022年北京温度+天气+空气质量数据可视化初探</a></p>
<p><a href="https://www.heywhale.com/mw/project/61c136acb790460017cb2776">海洋温盐场季节分布特征与混合层计算</a></p>
<p><a href="https://www.heywhale.com/mw/project/61f20130dd78210017134330">ECMWF公开预报数据产品处理</a></p>
<p><a href="https://www.heywhale.com/mw/project/6187c0d886227300178bb51e">基于cdsapi下载逐小时、逐日、逐月的ERA5再分析</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f2ba580af3980002cb23b6c">气象分析常用方法之气候突变检测</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f2ba75daf3980002cb23e84">气象分析之气候变量场时空结构的分离-EOF</a></p>
<p><a href="https://www.heywhale.com/mw/project/623c34d21fc0830017f6d539">气象行业数据分析案</a><a href="https://www.heywhale.com/mw/project/5f9f8d0aca48e000300dbdbe">气象数据统计方法</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f19375b94d484002d2cc855">如何用Python科学分析天气？长沙为例城市历年气象报告</a></p>
<p><a href="https://www.heywhale.com/mw/project/61d973d03debcb0022de09e9">哨兵二号Sentinel-2 L2A产品预处理</a></p>
<p><a href="https://www.heywhale.com/mw/project/61bb07fb7e520c001797a32d">使用Python处理FY4A卫星的二级产品</a></p>
<p><a href="https://www.heywhale.com/mw/project/620b51fc7a7c9a0017c84250">使用ybc_weather获取天气情况并进行数据筛选</a></p>
<p><a href="https://www.heywhale.com/mw/project/626e867a9405f9001759e3e0">四个常见的经验正交分解（EOF）方法的实现</a></p>
<p><a href="https://www.heywhale.com/mw/project/6213517c68364e0017a585fd">天气网城市历史天气爬虫并进行简单的数据清洗</a></p>
<p><a href="https://www.heywhale.com/mw/project/602c966b891f960015cb4c1b">最常见的10种图像滤波方法</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f2ba204af3980002cb235d4">气候变化趋势分析常用方法</a></p>
<p><a href="https://www.heywhale.com/mw/project/5d99b81f037db3002d3c9c2e">台风数据分析-高德地图&#x2F;Geopandas</a></p>
<p><a href="https://www.heywhale.com/mw/project/602b2601891f960015caab6d">特征重要性评估——Lasso回归系数</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f59c2f162e92d003b202829">雷达基数据分析与可视化</a></p>
<p><a href="https://www.heywhale.com/mw/project/6101f58b911b33001742cc02">我国FY-4A气象卫星产品的处理与分析</a></p>
<p><a href="https://www.heywhale.com/mw/project/6268a923af51920017444bb7">2012年3月2日美国强对流天气形势与WSR-88D雷达观测</a></p>
<p><a href="https://www.heywhale.com/mw/project/602a38ab891f960015ca3f5c">2020华为杯E题——数据探索性分析</a></p>
<p><a href="https://www.heywhale.com/mw/project/612f087e8608050017ffd5d4">Python 气象数据分析</a></p>
<p><a href="https://www.heywhale.com/mw/project/6200c2898da0860017b2f494">Python计算任意区域内格点数据的平均值</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f2c00d5af3980002cb2ad99">Workshop第二期：气象数据的使用</a></p>
<h4 id="Cartopy-绘图"><a href="#Cartopy-绘图" class="headerlink" title="Cartopy 绘图"></a>Cartopy 绘图</h4><p>说明：Cartopy 适合于地球科学家，特别是气象学家和海洋学家的需求。Cartopy 常用于地理空间数据处理，以便生成地图和其他地理空间数据分析，对于大尺度&#x2F;小比例尺数据制图特别有用，它自带的数据（Shapefile 以及栅格数据）会在进行时下载并缓存。Cartopy的关键特性是它面向对象的投影定义，以及在这些投影之间转换点、线、向量、多边形和图像的能力。</p>
<p><a href="https://www.heywhale.com/mw/project/620c641868364e0017a131d1">cartopy叠加自定义地图</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f3c95a3af3980002cbf560b">Cartopy绘图 | 中国地图最正确的使用方式</a></p>
<p><a href="https://www.heywhale.com/mw/project/6205fe4168364e00179d8aed">气象世界|学画一幅环游世界的地图</a></p>
<p><a href="https://www.heywhale.com/mw/project/6205fe4168364e00179d8aed">气象世界 | 用Cartopy画一幅环游世界的地图</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f1a4df794d484002d2db14a">气象数据可视化库-Cartopy官网例程大全（中文翻译版）</a></p>
<p><a href="https://www.heywhale.com/mw/project/62148d2e68364e0017a6cfd5">【气象镜像更新】Cartopy 0.20 最新功能</a></p>
<h4 id="Metpy-绘图"><a href="#Metpy-绘图" class="headerlink" title="Metpy 绘图"></a>Metpy 绘图</h4><p>说明：Metpy 是应用于气象领域的开源Python包，可以进行气象数据的处理，可视化以及气象要素的计算等。在气象数据处理方面，可以读取并处理很多格式的数据。在可视化方面，提供了绘制 Skewt 和 站点图的函数，可以非常方便的创建图形。当然，也支持很多气象要素的计算。</p>
<p><a href="https://www.heywhale.com/mw/project/5f324d54af3980002cb6f69f">Metpy气象数据可视化库官网例程大全——目录</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f278156d278b1002c2486b3">大气科学可视化示例—— PV 斜压&#x2F;等压图</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f29025ad278b1002c25d5a1">大气科学可视化示例—— 飓风追踪器</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f22380dd278b1002c21c451">大气科学可视化示例——250hPa 半球图</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f223fbcd278b1002c21cc96">大气科学可视化示例——300hPa 低气压槽图</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f2264cdd278b1002c21e53e">大气科学可视化示例——500 hPa高度和风图</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f223e61d278b1002c21cb12">大气科学可视化示例——500 hPa涡度平流图</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f228060d278b1002c222220">大气科学可视化示例——500hPa绝对涡流风图</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f228374d278b1002c2226f3">大气科学可视化示例——700hPa相对湿度图</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f23e60cd278b1002c236f79">大气科学可视化示例——850hPa Q矢量图</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f23c7d7d278b1002c22e484">大气科学可视化实例——850hPa温度和风图</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f23cf01d278b1002c22ffa0">大气科学可视化示例——850hPa温度和平流图</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f291459d278b1002c26033e">大气科学可视化示例——AWS S3 NEXRAD 档案存取和绘图</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f27d4c3d278b1002c24f2ec">大气科学可视化示例——GFS部件</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f27c86dd278b1002c24ddc6">大气科学可视化示例——GOES 飞机图</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f27c51dd278b1002c24d9dc">大气科学可视化示例——Hovmoller图</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f213ae2d278b1002c217484">大气科学可视化示例——Miller Composite</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f27bbcdd278b1002c24cc70">大气科学可视化示例——MSLP,温度和风图</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f21358cd278b1002c217072">大气科学可视化示例——SkewT</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f223508d278b1002c21c09b">大气科学可视化示例——xarray500hPa地图</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f277a09d278b1002c247a11">大气科学可视化示例——非地转风</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f27da0dd278b1002c24fa9a">大气科学可视化示例——风切变矢量</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f23d6c1d278b1002c23242a">大气科学可视化示例——锋生图</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f27bc3cd278b1002c24cd2d">大气科学可视化示例——高低压符号</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f28fae1d278b1002c25cb7e">大气科学可视化示例——观测数据截面</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f324787af3980002cb6ea39">大气科学可视化示例——降水量</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f27be40d278b1002c24d022">大气科学可视化示例——平滑等高线图</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f290d34d278b1002c25f16a">大气科学可视化示例——声明 300hPa</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f277c92d278b1002c247d9c">大气科学可视化示例——温差对流</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f28d62ad278b1002c25917f">大气科学可视化示例——在旧版DIFAX图表上高空观测</a></p>
<h4 id="Matplotlib-绘图"><a href="#Matplotlib-绘图" class="headerlink" title="Matplotlib 绘图"></a>Matplotlib 绘图</h4><p>说明：Matplotlib 是 Python 最著名的绘图库，十分适合交互式地进行制图。而且也可以方便地将它作为绘图控件，使用在Python脚本、Jupyter notebook，Web应用程序服务器和各种图形用户界面工具包等上面。</p>
<p><a href="https://www.heywhale.com/mw/project/5c88bd5abf9f020035737adc">matplotlib入门教程（1）</a></p>
<p><a href="https://www.heywhale.com/mw/project/5c88bd74fe3bcb0036f20a13">matplotlib入门教程（2）</a></p>
<p><a href="https://www.heywhale.com/mw/project/5c88bd88ae19450035bb883a">matplotlib入门教程（3）</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f5afeba62e92d003b217933">Matplotlib科研制图小技巧</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f4b3f146476cf0036f7e51e">Matplotlib 最具价值的50个可视化项目</a></p>
<p><a href="https://www.heywhale.com/mw/project/620b9abb8da0860017b82749">画一张Matplotlib炫技图</a></p>
<p><a href="https://www.kesci.com/home/column/5b87a78131902f000f668549">【专栏】Matplotlib绘图详解</a></p>
<p><a href="https://www.kesci.com/home/project/5ad6e7a07238515d80b5f32b">matplotlib 的数据可视化</a></p>
<p><a href="https://www.kesci.com/home/project/5c7139d1508ba9002c76c2b4">Matplotlib数据可视化巩固训练，适合进阶和提高</a></p>
<p><a href="https://www.kesci.com/home/project/5de9f0a0953ca8002c95d2a9">50题matplotlib从入门到精通</a></p>
<h4 id="气象可视化"><a href="#气象可视化" class="headerlink" title="气象可视化"></a>气象可视化</h4><p><a href="https://www.heywhale.com/mw/project/5f49b57b14f35900368ae878">气象数据可视化——2020上海梅雨分布图</a></p>
<p><a href="https://www.heywhale.com/mw/project/609d1c0964d3a200172c1491">气象数据可视化——cf-plot模块示例汇总</a></p>
<p><a href="https://www.heywhale.com/mw/project/5fa8d1b049c6d70030efbd4d">气象数据可视化——风玫瑰图</a></p>
<p><a href="https://www.heywhale.com/mw/project/6018990ba93d4a0015387827">气象数据可视化——风向风速热力图</a></p>
<p><a href="https://www.heywhale.com/mw/project/6198e58c7d748000172525c0">气象数据可视化——海温异常指数时序的绘制</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f48b64f5c4b5d00363819bd">气象数据可视化——台风路径图</a></p>
<p><a href="https://www.heywhale.com/mw/project/5fe8604f840381003bf9c781">气象数据可视化——探空图</a></p>
<p><a href="https://www.heywhale.com/mw/project/60dbbb1994c44a0017dcc921">气象数据可视化——中尺度对流系统反射率截面</a></p>
<p><a href="https://www.heywhale.com/mw/project/5fa8fc580840a9003011d0e3">气象评估方法——泰勒图</a></p>
<p><a href="https://www.heywhale.com/mw/project/6215300a8da0860017be77d7">GeoPandas 简介</a></p>
<p><a href="https://www.heywhale.com/mw/project/620ec3db8da0860017ba1dd5">GeoPandas 示例库</a></p>
<p><a href="https://www.heywhale.com/mw/project/620b1aaf7a7c9a0017c7f14d">Holoviews可视化经典示例</a></p>
<p><a href="https://www.heywhale.com/mw/project/620622267a7c9a0017c5450d">Meteorographica气象可视化合集</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f36986aaf3980002cbaefb4">气象绘图</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f2e121baf3980002cb3daa4">气象降水图</a></p>
<p><a href="https://www.heywhale.com/mw/project/622aabf574c3750018961bd8">可互动天气看板</a></p>
<p><a href="https://www.heywhale.com/mw/project/62665f140a5ca500178ae7c4">绘制GFS预报降水</a></p>
<p><a href="https://www.heywhale.com/mw/project/61de9c11d43cbc0017904d71">Python绘制台风轨迹图</a></p>
<p><a href="https://www.heywhale.com/mw/project/6176746af7e7c30017579094">热带气旋统计分析可视化系列</a></p>
<p><a href="https://www.heywhale.com/mw/project/62244ec7b035430017a66aa3">天气预报数值产品下载与可视化</a></p>
<p><a href="https://www.heywhale.com/mw/project/61e8ca770ed7c2001706d688">风廓线雷达数据处理和可视化</a></p>
<p><a href="https://www.heywhale.com/mw/project/5fe870a6840381003bf9e573">地图可视化——TIF数据的显示</a></p>
<p><a href="https://www.heywhale.com/mw/project/6054a30adc67480016cf8566">基于CNN的台风云图的heatmap可视化</a></p>
<p><a href="https://www.heywhale.com/mw/project/6273646c4dfd64001790eed3">利用EC高分辨率预报数据绘制500hPa天气形势</a></p>
<p><a href="https://www.heywhale.com/mw/project/6200c89a8da0860017b2f567">Python画兰勃脱投影全国GDP分布热力图（虚拟数据）</a></p>
<p><a href="https://www.heywhale.com/mw/project/6209a95568364e00179e01bf">让Matplotlib动起来——广州市逐日天气变化</a></p>
<p><a href="https://www.heywhale.com/mw/project/613cbecc1859e6001781c5de">【空气指数】pyecharts动态绘制全国各地空气的变化</a></p>
<p><a href="https://www.heywhale.com/mw/project/618a9ef286227300178c361e">【下雪了】Pyecharts 绘制可视化 北上广深天气分布</a></p>
<h4 id="Xarray-实例"><a href="#Xarray-实例" class="headerlink" title="Xarray 实例"></a>Xarray 实例</h4><p>说明：由于气象数据大多为多维数据，Xarray 提供了一种高效读取和处理多维数据的方式方法，它特别适合处理 netCDF 文件，在类似于 NumPy 的原始数组上以尺寸、坐标和属性的形式引入标签，从而能提供给研究人员更直观，更简洁和更少出错的体验。该软件包包括一个庞大且不断增长的功能库，使用这些数据结构可以实现对<strong>气象数据的高级分析和可视化</strong>。</p>
<p><a href="https://www.heywhale.com/mw/project/5f224397d278b1002c21d17b">xarray实例大全-目录</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f224397d278b1002c21d17b">xarray实例大全-(一)气象数据示例</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f22766cd278b1002c2211ee">xarray实例大全(二)-月平均时间序列计算季节性平均值</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f227e2cd278b1002c221f55">xarray实例大全(三)-比较加权与非加权平均温度</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f228c86d278b1002c223174">xarray实例大全(四)-多维坐标的使用</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f237d36d278b1002c227499">xarray实例大全(五)-可视化库</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f238c51d278b1002c2287a3">xarray实例大全(六)-ROMS海洋模型示例</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f239477d278b1002c229d30">xarray实例大全(七)-GRIB数据示例</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f23c8a6d278b1002c22e736">xarray实例大全(八)-使用apply_ufunc</a></p>
<p><a href="https://www.heywhale.com/mw/project/62612b2f3007c7001779f93d">xarray合并nc文件</a></p>
<p><a href="https://www.heywhale.com/mw/project/62498c0be1d37c0017050bb6">Xarray使用中的踩坑记录</a></p>
<h4 id="摸鱼大佬的项目集"><a href="#摸鱼大佬的项目集" class="headerlink" title="摸鱼大佬的项目集"></a>摸鱼大佬的项目集</h4><p>说明：**@**<a href="https://www.heywhale.com/home/user/profile/611627295b97f40017492af1"><strong>摸鱼</strong></a>气象学在读博士，主攻极端天气气候事件等方向，擅长使用 Python 实现数据处理与可视化，同时也是优秀的 B 站 UP 主【<a href="https://space.bilibili.com/9517712">摸鱼今天在摸鱼吗</a>】。</p>
<p><a href="https://www.heywhale.com/mw/project/61162916fe727700176cac60">摸鱼的气象&amp;Python</a></p>
<p><a href="https://www.heywhale.com/mw/project/61e4ddadddda3c0017b4ad37">摸鱼气象Python - 1.文件读取</a></p>
<p><a href="https://www.heywhale.com/mw/project/61e4e22cddda3c0017b4b014">摸鱼气象Python - 2.Numpy内容太多了看完这点足够了</a></p>
<p><a href="https://www.heywhale.com/mw/project/61e4e354c8a9ae00178d7705">摸鱼气象Python - 3.复杂算法实现：波通量和平流计算</a></p>
<p><a href="https://www.heywhale.com/mw/project/61e4e5e9c8a9ae00178d7843">摸鱼气象Python - 4.利用Metpy计算气象诊断量</a></p>
<p><a href="https://www.heywhale.com/mw/project/61e4e85eddda3c0017b4b19b">摸鱼气象Python - 5.三类极端事件指数的实现</a></p>
<p><a href="https://www.heywhale.com/mw/project/61e4e987ddda3c0017b4b1d4">摸鱼气象Python - 6.数据结构，合成分析，显著性检验</a></p>
<p><a href="https://www.heywhale.com/mw/project/61e4ebfdddda3c0017b4b2c1">摸鱼气象Python - 7.CDO, Python+CDO和python-cdo</a></p>
<p><a href="https://www.heywhale.com/mw/project/61e4ee3addda3c0017b4b389">摸鱼气象Python - 8.相关分析和回归分析</a></p>
<p><a href="https://www.heywhale.com/mw/project/61e4eee8ddda3c0017b4b3c1">摸鱼气象Python - 9.数据插值</a></p>
<p><a href="https://www.heywhale.com/mw/project/61e4f2a4c8a9ae00178d7ce8">摸鱼气象Python - 10.EOF,及North检验</a></p>
<p><a href="https://www.heywhale.com/mw/project/61e4f343ddda3c0017b4b4e9">摸鱼气象Python - 11.趋势和滤波</a></p>
<p><a href="https://www.heywhale.com/mw/project/61e4f4020ed7c20017043af7">摸鱼气象Python - 12.气候序列突变检测(滑动t&amp;M-K)</a></p>
<p><a href="https://www.heywhale.com/mw/project/61e4f4a7ddda3c0017b4b576">摸鱼气象Python - 13.Matplotlib和Cartopy绘图基础</a></p>
<p><a href="https://www.heywhale.com/mw/project/61e4f72f0ed7c20017043bd2">摸鱼气象Python - 14.几个关键地理绘图函数</a></p>
<p><a href="https://www.heywhale.com/mw/project/61e4f7bbc8a9ae00178d7f7f">摸鱼气象Python - 15.常规绘图类型及数据准备</a></p>
<p><a href="https://www.heywhale.com/mw/project/61e4f85fc8a9ae00178d7f8f">摸鱼气象Python - 16.基础折线图</a></p>
<p><a href="https://www.heywhale.com/mw/project/61e4fbadc8a9ae00178d809c">摸鱼气象Python - 17.数据和文件输出</a></p>
<p><a href="https://www.heywhale.com/mw/project/61e4fc8addda3c0017b4b7c2">摸鱼气象Python - 18.双y轴和多y轴绘图</a></p>
<p><a href="https://www.heywhale.com/mw/project/61e4ff280ed7c20017043e98">摸鱼气象Python - 19.柱状图</a></p>
<p><a href="https://www.heywhale.com/mw/project/61e5011fc8a9ae00178d821e">摸鱼气象Python - 20.散点图</a></p>
<p><a href="https://www.heywhale.com/mw/project/61e50297c8a9ae00178d82f0">摸鱼气象Python - 21.等值线图和填色图</a></p>
<p><a href="https://www.heywhale.com/mw/project/61e50375ddda3c0017b4b9f5">摸鱼气象Python - 22.矢量图（风场）</a></p>
<p><a href="https://www.heywhale.com/mw/project/61e505390ed7c200170440bc">摸鱼气象Python - 23.泰勒图</a></p>
<p><a href="https://www.heywhale.com/mw/project/61e523e8ddda3c0017b4c8bc">摸鱼气象Python - 24.剖面图和地形填充</a></p>
<p><a href="https://www.heywhale.com/mw/project/61f0a79dddda3c0017bc6062">摸鱼气象Python - 25.批量绘制子图</a></p>
<p><a href="https://www.heywhale.com/mw/project/6206081768364e00179d9225">摸鱼气象Python - 26.极坐标系的刻度标签</a></p>
<p><a href="https://www.heywhale.com/mw/project/621450308da0860017bdfb1a">摸鱼气象Python - 27.白化绘图基础</a></p>
<p><a href="https://www.heywhale.com/mw/project/622c90b674c375001896e2cb">摸鱼气象Python - 28.风场的显著性检验</a></p>
<p><a href="https://www.heywhale.com/mw/project/62402b2f40f3c80018383ca3">摸鱼气象Python - 29.滑动相关</a></p>
<p><a href="https://www.heywhale.com/mw/project/6249850abd5bb00017f0617c">摸鱼气象Python - 30. 聚类算法基础</a></p>
<p><a href="https://www.heywhale.com/mw/project/625c0d3726bb090017889043">摸鱼气象Python - 31. 函数封装和调用基础</a></p>
<p><a href="https://www.heywhale.com/mw/project/626f886532a9e600173e01de">摸鱼气象Python - 32. 缺测值处理</a></p>
<p><a href="https://www.heywhale.com/mw/project/625c12635fe0ad0017c83e59">摸鱼带你debug（持续更新）</a></p>
<h3 id="3、数据建模与应用"><a href="#3、数据建模与应用" class="headerlink" title="3、数据建模与应用"></a>3、数据建模与应用</h3><h4 id="机器学习-x2F-深度学习-x2F-人工智能"><a href="#机器学习-x2F-深度学习-x2F-人工智能" class="headerlink" title="机器学习&#x2F;深度学习&#x2F;人工智能"></a>机器学习&#x2F;深度学习&#x2F;人工智能</h4><p><a href="https://www.heywhale.com/mw/project/61bac9ea7e520c0017970f4a">风速数据预测</a></p>
<p><a href="https://www.heywhale.com/mw/project/61ce60310270150017b578a6">气候评估工作任务</a></p>
<p><a href="https://www.heywhale.com/mw/project/61cd15680270150017b4f903">活动-西太副高初探</a></p>
<p><a href="https://www.heywhale.com/mw/project/624041a188d07a00177fc858">夏季西太副高活动探究</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f3e550ef30288002c7128bb">气象数据+机器学习实战</a></p>
<p><a href="https://www.heywhale.com/mw/project/6126e510bc40120017e85d4a">2020超强梅雨特征与机制</a></p>
<p><a href="https://www.heywhale.com/mw/project/6040cbc46b48c2001528ee15">可解释性机器学习比较（SHAP和LIME）</a></p>
<p><a href="https://www.heywhale.com/mw/project/6040e0e16b48c2001528f4f1">可解释性机器学习模型——LIME</a></p>
<p><a href="https://www.heywhale.com/mw/project/602b2b44891f960015cabd96">可解释性机器学习——规则拟合</a></p>
<p><a href="https://www.heywhale.com/mw/project/60e41e793f24480017049aba">城市风场数据空间降尺度模拟分析</a></p>
<p><a href="https://www.heywhale.com/mw/project/60c6fac38402f80018f94db4">探索全球海温异常的时空演变规律</a></p>
<p><a href="https://www.heywhale.com/mw/project/602a984d891f960015ca9f28">2020华为杯E题——基于图像的能见度深度学习模型</a></p>
<p><a href="https://www.heywhale.com/mw/project/616f9afec8f6140017ad90da">降水临近预报 Precipitation Nowcasting</a></p>
<p><a href="https://www.heywhale.com/mw/project/616fb2a1c8f6140017ada781">降雨短临预报的深度学习模型合并雷达雨图像和风预测</a></p>
<p><a href="https://www.heywhale.com/mw/project/6040dbc46b48c2001528f384">机器学习模型——极端梯度提升（Xgboost）</a></p>
<p><a href="https://www.heywhale.com/mw/project/62171722fd3782001707c277">OSAT热带气旋降水识别方法</a></p>
<p><a href="https://www.heywhale.com/mw/project/61be9d024e097300170aaa02">使用纯python进行REOF&#x2F;旋转PCA分析</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f48b2b65c4b5d003638155d">基于机器学习方法的天气预报数据订正</a></p>
<p><a href="https://www.heywhale.com/mw/project/618a0a4bebdfaf0017564505">基于气象条件的能见度拟合模型</a></p>
<p><a href="https://www.heywhale.com/mw/project/6284562e7633b37473024572">基于单目图像的能见度物理反演模型</a></p>
<p><a href="https://www.heywhale.com/mw/project/62061e148da0860017b4e9c6">分析厄尔尼诺与海表波高的关系</a></p>
<p><a href="https://www.heywhale.com/mw/project/61e292e1c8a9ae00178cdaf2">机器学习预测未来的PM2.5浓度</a></p>
<p><a href="https://www.heywhale.com/mw/project/5fab57600840a9003013bcab">基于多因子建模的气象预测问题</a></p>
<p><a href="https://www.heywhale.com/mw/project/5fe2f3de83e4460030ac7031">时间序列预测之LSTM天气预测</a></p>
<p><a href="https://www.heywhale.com/mw/project/613ebc7501c4c90017f2a054">使用darts，分析河流流量预测问题</a></p>
<p><a href="https://www.heywhale.com/mw/project/60374d79c614ab001505118d">供水管网压力预测（异常识别与缺失补全）</a></p>
<p><a href="https://www.heywhale.com/mw/project/5fc5f0c66571040030a25afe">自然变率和人类活动对气候变化的影响模型</a></p>
<p><a href="https://www.heywhale.com/mw/project/6219ac0e7e72dd00175dbff9">【气温】关于 NASA 全球陆地海洋温度指数的探索</a></p>
<p><a href="https://www.heywhale.com/mw/project/62367b18dff0200017d3668b">气象世界 | 随机森林算法预测光伏电站功率</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f366a78af3980002cbad922">基于数值模式资料和站点观测数据绘制相对湿度分布图</a></p>
<p><a href="https://www.heywhale.com/mw/project/6257c81ee22b670017033474">气象世界 | 利用sklearn中的回归算法预测光伏电站功率</a></p>
<p><a href="https://www.heywhale.com/mw/project/616fb01c29653b0018034077">用pysteps和rainymotion进行用短临预报</a></p>
<p><a href="https://www.heywhale.com/mw/project/62935123154b2da4ccd9a3f1">纬向海温梯度对中国南海热带气旋频数的影响</a></p>
<p><a href="https://www.heywhale.com/mw/project/60deab60be5f090017607385">西北太平洋热带气旋时空分布特征分析</a></p>
<p><a href="https://www.heywhale.com/mw/project/622834d20bfbd40017f1e376">【论文复现】台风强度预测的深度学习模型</a></p>
<p><a href="https://www.heywhale.com/mw/project/61265834911b3300174c7451">【论文复现】夏季西太副高与南亚高压时空分布特征</a></p>
<p><a href="https://www.heywhale.com/mw/project/6292e868154b2da4ccd5b686">MJO年际变化对西北太平洋冬季TC生成的调制（1）</a></p>
<p><a href="https://www.heywhale.com/mw/project/6295caf005ff1b3c3d3a1dea">MJO年际变化对西北太平洋冬季TC生成的调制（2）</a></p>
<p><a href="https://www.heywhale.com/mw/project/6297779f82a330ed7d380c26">MJO年际变化对西北太平洋冬季TC生成的调制（3）</a></p>
<p><a href="https://www.heywhale.com/mw/project/629d46305404b575586be274">MJO年际变化对西北太平洋冬季TC生成的调制（4）</a></p>
<p><a href="https://www.heywhale.com/mw/project/629eb3385404b5755878496e">MJO年际变化对西北太平洋冬季TC生成的调制（5）</a></p>
<p><a href="https://www.heywhale.com/mw/project/617a6486bbb4570017439dcc">用LSTM模型，根据风速风湿度等26个特征预测11种天气</a></p>
<p><a href="https://www.heywhale.com/mw/project/616fb2a1c8f6140017ada781">在用于降雨短临预报的深度学习模型中合并雷达雨图像和风预测：训练程序</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f3a433faf3980002cbd13b6">Workshop第三期：气象+机器学习实战</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f43260aad27ec002ddff078">Workshop第四期：利用机器学习对天气预报数据进行订正</a></p>
<h4 id="WRF-模式"><a href="#WRF-模式" class="headerlink" title="WRF 模式"></a>WRF 模式</h4><p><a href="https://www.heywhale.com/mw/project/625c2fbc5fe0ad0017c8457a">CFS预报数据下载&amp;驱动WRF</a></p>
<p><a href="https://www.heywhale.com/mw/project/6264231374c22700171f2769">利用salem处理wrfout数据</a></p>
<p><a href="https://www.heywhale.com/mw/project/626428140b8c48001791ad40">利用salem绘制WRF domain</a></p>
<p><a href="https://www.heywhale.com/mw/project/627e53149b835caee4417613">WRF-WPS格式文件转换</a></p>
<p><a href="https://www.heywhale.com/mw/project/6284b478901f1de4da8c8169">WRF模拟降水可视化</a></p>
<p><a href="https://www.heywhale.com/mw/project/61274f658608050017fee6d5">绘制WRF模式模拟所用的土地利用数据</a></p>
<p><a href="https://www.heywhale.com/mw/project/61874eb5b7de000017e23526">WRF绘图脚本</a></p>
<p><a href="https://www.heywhale.com/mw/project/6067d8365fa89c001738d1f8">WRF模式模拟数据后处理（绘图篇上）</a></p>
<p><a href="https://www.heywhale.com/mw/project/6067fb12cbb4020018e4411b">WRF模式模拟数据后处理（绘图篇下）</a></p>
<p><a href="https://www.heywhale.com/mw/project/6065773e9b05eb00177a7878">WRF模式模拟数据后处理（计算篇）</a></p>
<p><a href="https://www.heywhale.com/mw/project/626de2ab32a9e600173da00c">WRF投影问题–长短轴设置</a></p>
<p><a href="https://www.heywhale.com/mw/project/61ea31b60ed7c2001708493c">基于ModelWhale运行WRF模式</a></p>
<p><a href="https://www.heywhale.com/mw/project/621323ad68364e0017a54304">在WPS中使用aster30m高分辨率地形数据</a></p>
<p><a href="https://www.heywhale.com/mw/project/621230f168364e0017a4865c">在线制作WRF中使用的高分辨率地形数据（aster30m）</a></p>
<p><a href="https://www.heywhale.com/mw/project/628dc16d843e3c9fdc944a69">中尺度天气预报模式WRF 入门：从运行到后处理(教案项目)</a></p>
<p><a href="https://www.heywhale.com/mw/project/620496ce68364e00179d1489">中尺度天气预报模式WRF 入门：从运行到后处理（作业）</a></p>
<h3 id="4、和鲸社区气象系列活动"><a href="#4、和鲸社区气象系列活动" class="headerlink" title="4、和鲸社区气象系列活动"></a>4、和鲸社区气象系列活动</h3><p><a href="https://www.heywhale.com/landing/meteorology_study">气象数据科学系列学习计划</a></p>
<p><a href="https://www.heywhale.com/home/activity/detail/6177cd12a3ee260017c0e9b0">一起学习 | Python 气象数据分析</a></p>
<p><a href="https://www.heywhale.com/home/activity/detail/5f2287d9b4ac2e002c163189">Workshop | Python 气象数据分析</a></p>
<p><a href="https://www.heywhale.com/home/activity/detail/61a4a53db91a5300170f340e">Workshop | Python 气象海洋数据分析 II</a></p>
<p><a href="https://www.heywhale.com/home/activity/detail/615fc810c270e400182b23f8">超友好!气象 Python 训练营 ① 快速入门</a></p>
<p><a href="https://www.heywhale.com/home/activity/detail/6163d190b3c89100171fcedc">超友好!气象 Python 训练营 ② 基础应用</a></p>
<p><a href="https://www.heywhale.com/home/activity/detail/616fc009a3ee260017c0da2f">超友好!气象 Python 训练营 ③ 数组进阶</a></p>
<p><a href="https://www.heywhale.com/home/activity/detail/6189f5ef7b6f7d001813a951">超友好!气象 Python 训练营 ④ 进阶应用</a></p>
<p><a href="https://www.heywhale.com/home/activity/detail/624408cb31153c001798cab2">超友好!气象 Python 训练营 ⑤ xarray 使用</a></p>
<p><a href="https://www.heywhale.com/home/activity/detail/625fc3fa697f5d001806d935">一起来!气象Python专属攻关手册</a></p>
<p><a href="https://www.heywhale.com/home/competition/61e90f41ae7a4e0018d53e0e">有意思!气象世界 Python 任务挑战</a></p>
<p><a href="https://www.heywhale.com/home/activity/detail/6221cb543a984e00182b1883">预测分析·近地面臭氧浓度预测</a></p>
<p><a href="https://www.heywhale.com/home/activity/detail/61ee4eabae7a4e0018d558e9">检测识别·热带气旋路径检测</a></p>
<p><a href="https://www.heywhale.com/home/activity/detail/61b30686902a13001708dea6">预测分析·空气质量预测</a></p>
<h2 id="海洋"><a href="#海洋" class="headerlink" title="海洋"></a>海洋</h2><h3 id="1、数据获取-x2F-数据下载-x2F-数据格式读取-2"><a href="#1、数据获取-x2F-数据下载-x2F-数据格式读取-2" class="headerlink" title="1、数据获取&#x2F;数据下载&#x2F;数据格式读取"></a>1、数据获取&#x2F;数据下载&#x2F;数据格式读取</h3><p><a href="https://www.heywhale.com/mw/project/5f2ac754af3980002cb1bc95">ERA5降水数据下载与绘图</a></p>
<p><a href="https://www.heywhale.com/mw/project/61a20bcfa76aea00173d66ff">ERA5再分析资料下载及其绘制</a></p>
<p><a href="https://www.heywhale.com/mw/project/61d55e1c4c783e0017aeafcb">计算并绘制抬升凝结高度变化</a></p>
<h3 id="2、数据处理-x2F-数据分析-x2F-数值计算和可视化-2"><a href="#2、数据处理-x2F-数据分析-x2F-数值计算和可视化-2" class="headerlink" title="2、数据处理&#x2F;数据分析&#x2F;数值计算和可视化"></a>2、数据处理&#x2F;数据分析&#x2F;数值计算和可视化</h3><p><a href="https://www.heywhale.com/mw/project/6240547988d07a00177fe0a2">南海台风聚类分析</a></p>
<p><a href="https://www.heywhale.com/mw/project/61dbb7343debcb0022de7fab">潮汐调和分析–代码示例：p。ython版</a></p>
<p><a href="https://www.heywhale.com/mw/project/61c136acb790460017cb2776">海洋温盐场季节分布特征与混合层计算</a></p>
<p><a href="https://www.heywhale.com/mw/project/5fad41518ca2cf0030cca4f3">小波分析——海温数据的时频域分解</a></p>
<p><a href="https://www.heywhale.com/mw/project/62680c4852814e0017d67739">《海洋动力学》作业——Sverdrup输运</a></p>
<p><a href="https://www.heywhale.com/mw/project/6257f86326bb09001784e8cf">《海洋动力学》作业——表层地转流</a></p>
<p><a href="https://www.heywhale.com/mw/project/6225c1f2b035430017a7612d">《海洋动力学》作业——温盐密场</a></p>
<h3 id="3、数据建模与应用-1"><a href="#3、数据建模与应用-1" class="headerlink" title="3、数据建模与应用"></a>3、数据建模与应用</h3><p><a href="https://www.heywhale.com/mw/project/62837e74732dca77b0dfd21a">海洋表层温度EOF分析</a></p>
<p><a href="https://www.heywhale.com/mw/project/61fcef087a7c9a0017c1db3c">ROMS海洋模式混合层厚度计算</a></p>
<p><a href="https://www.heywhale.com/mw/project/62061e148da0860017b4e9c6">利用海洋浮标数据分析厄尔尼诺与海表波高的关系</a></p>
<p><a href="https://www.heywhale.com/mw/project/62935123154b2da4ccd9a3f1">纬向海温梯度对中国南海热带气旋频数的影响</a></p>
<p><a href="https://www.heywhale.com/mw/project/6219ac0e7e72dd00175dbff9">【气温】关于 NASA 全球陆地海洋温度指数的探索</a></p>
<h2 id="遥感"><a href="#遥感" class="headerlink" title="遥感"></a>遥感</h2><h3 id="1、数据获取-x2F-数据下载-x2F-数据格式读取-3"><a href="#1、数据获取-x2F-数据下载-x2F-数据格式读取-3" class="headerlink" title="1、数据获取&#x2F;数据下载&#x2F;数据格式读取"></a>1、数据获取&#x2F;数据下载&#x2F;数据格式读取</h3><p><a href="https://www.heywhale.com/mw/project/6240160f88d07a00177f8827">遥感数据下载——哨兵（Sentinel）系列卫星产品</a></p>
<p><a href="https://www.heywhale.com/mw/project/5f4b93eb6476cf0036f806aa">常用气象数据下载——TEMIS遥感数据</a></p>
<h3 id="2、数据处理-x2F-数据分析-x2F-数值计算和可视化-3"><a href="#2、数据处理-x2F-数据分析-x2F-数值计算和可视化-3" class="headerlink" title="2、数据处理&#x2F;数据分析&#x2F;数值计算和可视化"></a>2、数据处理&#x2F;数据分析&#x2F;数值计算和可视化</h3><p><a href="https://www.heywhale.com/mw/project/61761bc8768f3b0017847329">landsat8遥感数据处理与简单算法实现</a></p>
<p><a href="https://www.heywhale.com/mw/project/5fc081b065710400309ef8e7">嫦娥探月数据(PDS)处理与可视化</a></p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Module</title>
    <url>/2022/05/01/Tool/Module/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Environment-Modules-简明教程"><a href="#Environment-Modules-简明教程" class="headerlink" title="Environment Modules 简明教程"></a>Environment Modules 简明教程</h2><p>来源：<a href="https://zhuanlan.zhihu.com/p/50725572">https://zhuanlan.zhihu.com/p/50725572</a></p>
<h3 id="Modules-简介"><a href="#Modules-简介" class="headerlink" title="Modules 简介"></a>Modules 简介</h3><p>在 Linux 超算平台上，通常会安装有不同版本的多种编译器和其他软件等，如常用的编译器有 intel 和 gnu，常用的 MPI 并行库包括 intel mpi，openmpi，mpich2 等，而且对于同一软件，还包含不同的版本或采用不同编译设置得到的可执行程序和链接库等。在使用这些程序时，经常需要对环境变量进行修改。并且由于程序编译时会调用不同类型编译器或第三库，这时程序之间还存在着依赖关系。这使得当执行某个特定版本的程序时，环境变量的修改变得十分复杂。</p>
<p>Environment Modules 包是一个简化 shell 初始化的工具，它允许用户在使用 modulefiles 进行会话期间轻松修改其环境。每个模块文件都包含为应用程序配置 shell 所需的信息。模块文件可以由系统上的许多用户共享，并且用户可以拥有自己的集合来补充或替换共享模块文件。</p>
<h3 id="Modules-安装"><a href="#Modules-安装" class="headerlink" title="Modules 安装"></a>Modules 安装</h3><p>Modules 可直接采用源码安装方式，在<a href="https://link.zhihu.com/?target=http://modules.sourceforge.net/"> Modules 官网</a>下载最新4.2.1版本的源代码。在 Terminal 中输入如下命令安装 Modules 软件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># modules 安装目录</span></span><br><span class="line">INSTALL_PATH=<span class="variable">$&#123;HOME&#125;</span>/opt/modules-4.2.1/</span><br><span class="line"></span><br><span class="line">tar -xvf modules-4.2.1.tar</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入 modules 目录</span></span><br><span class="line"><span class="built_in">cd</span> modules-4.2.1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 modules 软件</span></span><br><span class="line">./configure --prefix=<span class="variable">$&#123;INSTALL_PATH&#125;</span></span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>

<p>在安装完毕后我们将 modules 设置脚本添加入环境变量中。注意，modules 中包含多种 shell 设置脚本，可以根据不同情况设置。这里由于我们用的是 zsh，输入如下命令即可</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;souce <span class="variable">$&#123;HOME&#125;</span>/opt/modules-4.2.1/init/zsh&quot;</span> &gt;&gt; ~/.zshrc</span><br><span class="line">souce ~/.zshrc</span><br></pre></td></tr></table></figure>

<p>输入如下命令，查看当前包含的模块并加载用户模块</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">➜  ~ module avail</span><br><span class="line">------------------------------------------ /usr/share/Modules/modulefiles ------------------------------------------</span><br><span class="line">dot  module-git  module-info  modules  null  use.own</span><br><span class="line">➜  ~ module load use.own</span><br><span class="line">➜  ~ module list</span><br><span class="line">Currently Loaded Modulefiles:</span><br><span class="line"> 1) use.own</span><br></pre></td></tr></table></figure>

<p>此时，用户目录下会出现 <code>privatemodules</code> 文件夹，用户可以直接在此文件夹中添加自定义模块文件添加环境变量。</p>
<h3 id="Modules-使用"><a href="#Modules-使用" class="headerlink" title="Modules 使用"></a>Modules 使用</h3><p>Modules 使用包括 shell 命令和 modulefile 文件定义两部分内容，下面将分别进行介绍。</p>
<h4 id="Modules-指令"><a href="#Modules-指令" class="headerlink" title="Modules 指令"></a>Modules 指令</h4><p>module 安装好后，即可调用 module [command] 来查看或加载模块，主要指令如下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜ ~ module avail <span class="comment"># 列出当前 module path 中的所有可用模块文件</span></span><br><span class="line">------------------------------------------ /usr/share/Modules/modulefiles ------------------------------------------</span><br><span class="line">dot  module-git  module-info  modules  null  use.own  </span><br><span class="line"></span><br><span class="line">----------------------------------------- /home/lilongxiang/privatemodules -----------------------------------------</span><br><span class="line">cmake/3.8.0</span><br><span class="line"></span><br><span class="line">➜ ~ module load cmake/3.8.0 <span class="comment"># 加载模块文件/类</span></span><br><span class="line"></span><br><span class="line">➜ ~ module list <span class="comment"># 显示已经加载的模块</span></span><br><span class="line">Currently Loaded Modulefiles:</span><br><span class="line"> 1) use.own   2) cmake/3.8.0 </span><br><span class="line"></span><br><span class="line">➜ ~ module unload cmake <span class="comment"># 卸载模块文件/类</span></span><br><span class="line"></span><br><span class="line">➜ ~ module list <span class="comment"># 显示已经加载的模块</span></span><br><span class="line">Currently Loaded Modulefiles:</span><br><span class="line"> 1) use.own</span><br></pre></td></tr></table></figure>



<h4 id="Modules-脚本内容"><a href="#Modules-脚本内容" class="headerlink" title="Modules 脚本内容"></a>Modules 脚本内容</h4><p>采用 module load 命令时，可用的模块其实都是安装在 module path 目录下的 modulefile 文件。一个基本 modulefile 内容如下</p>
<figure class="highlight tcl"><table><tr><td class="code"><pre><span class="line"><span class="comment">#%Module -*- tcl -*-</span></span><br><span class="line"><span class="comment">## This is a module to access something</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示 module help 主要内容</span></span><br><span class="line"><span class="keyword">proc</span><span class="title"> ModulesHelp</span> &#123; &#125; &#123;</span><br><span class="line">        <span class="keyword">puts</span> stderr <span class="string">&quot;This module sets up access to something&quot;</span> </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示 module whatis 显示主要内容</span></span><br><span class="line">module-whatis <span class="string">&quot;sets up access to something&quot;</span></span><br><span class="line"><span class="comment"># module 加载前需要模块类</span></span><br><span class="line">prereq module_flag</span><br><span class="line"><span class="comment"># module 加载冲突模块类</span></span><br><span class="line">conflict another_module_flag</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载其他模块</span></span><br><span class="line">module <span class="keyword">load</span> gcc</span><br><span class="line"><span class="comment"># 设置环境变量</span></span><br><span class="line">setenv       SOMEVERION       <span class="number">0.95</span></span><br><span class="line"><span class="comment"># 添加环境变量</span></span><br><span class="line"><span class="keyword">append</span>-path  PATH             /home/[user]/[somedir]/bin</span><br><span class="line"><span class="keyword">append</span>-path  MANPATH          /home/[user]/[somedir]/man</span><br><span class="line"><span class="keyword">append</span>-path  LD_LIBRARY_PATH  /home/[user]/[somedir]/lib</span><br></pre></td></tr></table></figure>

<p>其中包含的设置关键字有以下几个</p>
<ul>
<li><code>prereq</code> 指示加载此脚本需要预先加载的模块名，当这些模块没有预先加载时，module load 此模块会报错；</li>
<li><code>conflict</code> 指示与此模块冲突的其他模块类，注意这里不仅可以添加 modulefile 文件名称，也可添加 modulefile 所在路径文件名，此时代表模块和文件内所有模块类都会产生冲突；</li>
<li><code>module load</code> 指示加载此模块同时自动加载的模块，注意其和 <code>prereq</code> 命令的不同；</li>
<li><code>setenv</code> 设定环境变量；</li>
<li><code>append-path</code> 添加环境变量；</li>
</ul>
<h4 id="Modules-脚本配置"><a href="#Modules-脚本配置" class="headerlink" title="Modules 脚本配置"></a>Modules 脚本配置</h4><p>modulefile 文件可以按照相关功能添加到不同目录中，下面显示了 privatemodules 文件夹内所有 modulefile 文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── cmake</span><br><span class="line">│   └── 3.8.0</span><br><span class="line">├── compiler</span><br><span class="line">│   └── intel</span><br><span class="line">│       └── 2018.1.163</span><br><span class="line">└── mpi</span><br><span class="line">    ├── gnu</span><br><span class="line">    │   ├── mpich2</span><br><span class="line">    │   │   └── 3.2.1</span><br><span class="line">    │   └── openmpi</span><br><span class="line">    │       └── 3.1.3</span><br><span class="line">    ├── intel</span><br><span class="line">    │   ├── intel_mpi</span><br><span class="line">    │   │   └── 2018.1.163</span><br><span class="line">    │   ├── mpich2</span><br><span class="line">    │   └── openmpi</span><br><span class="line">    │       └── 3.1.3</span><br><span class="line">    └── mpich2</span><br></pre></td></tr></table></figure>

<p>调用 module avail 命令，对应显示内容如下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜ ~ module avail</span><br><span class="line">------------------------------------------ /usr/share/Modules/modulefiles ------------------------------------------</span><br><span class="line">dot  module-git  module-info  modules  null  use.own  </span><br><span class="line"></span><br><span class="line">----------------------------------------- /home/lilongxiang/privatemodules -----------------------------------------</span><br><span class="line">cmake/3.8.0                mpi/gnu/mpich2/3.2.1   mpi/intel/intel_mpi/2018.1.163  </span><br><span class="line">compiler/intel/2018.1.163  mpi/gnu/openmpi/3.1.3  mpi/intel/openmpi/3.1.3</span><br></pre></td></tr></table></figure>

<p>在此用户配置文件中，所有与 mpi 库相关的 modulefile 文件都放在了目录 privatemodules&#x2F;mpi 内，并且根据编译时所调用的编译器种类分为 gnu 和 intel 两个文件夹。 按照这种设置方法可以方便的对 modulefile 文件进行配置，在每个 modulefile 文件内添加 <code>conflict mpi</code>，即可避免用户加载不同的 mpi 配置文件，当加载多个时 module 程序会直接报错</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">➜ ~ module load mpi/intel/openmpi/3.1.3</span><br><span class="line">Loading mpi/intel/openmpi/3.1.3</span><br><span class="line">  Loading requirement: compiler/intel/2018.1.163</span><br><span class="line">➜ ~ module load mpi/gnu/openmpi/3.1.3</span><br><span class="line">Loading mpi/gnu/openmpi/3.1.3</span><br><span class="line">  ERROR: mpi/gnu/openmpi/3.1.3 cannot be loaded due to a conflict.</span><br><span class="line">    HINT: Might try &quot;module unload mpi/intel/openmpi/3.1.3&quot; first.</span><br></pre></td></tr></table></figure>



<h3 id="Modules-示例"><a href="#Modules-示例" class="headerlink" title="Modules 示例"></a>Modules 示例</h3><h4 id="Intel-编译器环境变量设置"><a href="#Intel-编译器环境变量设置" class="headerlink" title="Intel 编译器环境变量设置"></a>Intel 编译器环境变量设置</h4><p>intel 编译器安装后提供了 compilervars.sh 脚本文件自动为用户添加环境变量设置，但是这种方法不适用于 module 脚本，因为 modulefile 实际为 tcl 脚本文件，因此无法运行 shell 命令。</p>
<p>为了获取 intel 脚本内 设定的环境变量，可以采用 <a href="https://link.zhihu.com/?target=https://sourceforge.net/projects/env2/">env2</a> 脚本来方便的直接获取。下载 env2 脚本，运行</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">perl ./env2 -from bash -to modulecmd &quot;&lt;path to intel shell script&gt; intel64&quot; &gt;&gt; intell_module_file.log</span><br></pre></td></tr></table></figure>

<p>即可在 intell_module_file.log 中查看 compilervars.sh 总定义的所有环境变量。将 intell_module_file.log 文件放置到 <code>~/privatemodules/compiler/intel/</code> 路径下，文件名用具体版本号 <code>2018.1.163</code> 替代，随后便可用</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">module load compiler/intel/2018.1.163</span><br></pre></td></tr></table></figure>

<p>命令添加 intel 编译器环境变量。</p>
<h4 id="openmpi-环境变量设置"><a href="#openmpi-环境变量设置" class="headerlink" title="openmpi 环境变量设置"></a>openmpi 环境变量设置</h4><p>在设置好 intel 编译器环境后，编译 openmpi 库并安装到 <code>$&#123;HOME&#125;/opt/openmpi-3.1.3-intel</code> 目录下。 在 <code>privatemodules/mpi/intel/openmpi/3.1.3</code> 文件内添加</p>
<figure class="highlight tcl"><table><tr><td class="code"><pre><span class="line"><span class="comment">#%Module -*- tcl -*-</span></span><br><span class="line"><span class="comment">## This is a module to access cmake-3.8.0-rc1</span></span><br><span class="line"><span class="keyword">proc</span><span class="title"> ModulesHelp</span> &#123; &#125; &#123;</span><br><span class="line">        <span class="keyword">puts</span> stderr <span class="string">&quot;This module sets up access to openmpi-3.1.3 built with intel compiler&quot;</span> </span><br><span class="line">&#125;</span><br><span class="line">module-whatis <span class="string">&quot;sets up access to openmpi-3.1.3 with intel compiler&quot;</span></span><br><span class="line"><span class="comment">#prereq intel_2018</span></span><br><span class="line">conflict mpi</span><br><span class="line">module <span class="keyword">load</span> compiler/intel/<span class="number">2018.1</span><span class="number">.163</span></span><br><span class="line">setenv       SOMEVERION       <span class="number">3.1</span><span class="number">.3</span></span><br><span class="line"><span class="keyword">append</span>-path  PATH             <span class="variable">$&#123;HOME&#125;</span>/opt/openmpi<span class="number">-3.1</span><span class="number">.3</span>-intel/bin</span><br><span class="line"><span class="keyword">append</span>-path  LD_LIBRARY_PATH  <span class="variable">$&#123;HOME&#125;</span>/opt/openmpi<span class="number">-3.1</span><span class="number">.3</span>-intel/lib</span><br></pre></td></tr></table></figure>

<p>即可通过命令 <code>module load mpi/intel/openmpi/3.1.3</code> 来加载编译后的 openmpi 环境。</p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>NCL-debug</title>
    <url>/2022/05/01/Tool/NCL-debug/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="ncl-convert2nc-文件过大"><a href="#ncl-convert2nc-文件过大" class="headerlink" title="ncl_convert2nc  文件过大"></a>ncl_convert2nc  文件过大</h2><p><strong>报错信息：</strong> <code>ncclose: ncid 65536: NetCDF: One or more variable sizes violate format constraints</code></p>
<p><strong>解决方法：</strong> <code>ncl_convert2nc *.grib2 -nc4c</code></p>
<h2 id="escorc-计算结果为空值"><a href="#escorc-计算结果为空值" class="headerlink" title="escorc 计算结果为空值"></a>escorc 计算结果为空值</h2><p><strong>解决方法：</strong><code>sst@_FillValue = -32768</code>     <code>sst@_FillValue_original = -32768</code></p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>NOAA DATA</title>
    <url>/2022/05/01/Tool/NOAA_data/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>气象数据是在各项研究中都经常使用的数据。气象指标包括气温、风速、降水、能见度等指标。之前我们分享过1929-2024年NOAA全球站点逐日的12个气象指标数据集合（<a href="http://mp.weixin.qq.com/s?__biz=MzA3NTk0MTU3MA==&mid=2247550245&idx=1&sn=33d376a8eada296e936762e89f1c2eca&chksm=9f6a9688a81d1f9e26c35a6e6059a6f594019c7c42c61cd7fa931e9cabf2ea0a64235e2f9577&scene=21#wechat_redirect"><strong>戳我跳转</strong></a>），数据由美国国家海洋和大气管理局（NOAA）下设的国家环境信息中心(NCEI)发布！</p>
<p>相较全球范围的气象指标，大家更经常使用国内范围的数据，为方便大家直接使用，我们从全球站点中提取出国内站点，得到本次分享的数据——<strong>1942-2024年我国观测站点的逐日气象指标！</strong></p>
<p>该数据集汇总了1942年至今的全国约400个站点的逐日的气象指标。该数据的具体信息包括：</p>
<p><strong>1.时间方面：</strong>该数据集的起始年份是1942年，数据持续更新，本次分享的数据的截止时间为2024年9月2号。</p>
<p><img src="https://p.ipic.vip/8y4i19.png" alt="Image"></p>
<p><strong>2.站点方面：</strong>早些年份的站点量较少，比如1942年全国只有1个站点，到了最近的年份，站点量就比较多了，2024年全国范围的观察站点一共有390个。每个站点的数据保持为一个csv文件！</p>
<p><img src="https://p.ipic.vip/6qdzz8.jpg" alt="Image"></p>
<p>3.对于每个站点的csv文件，文件中包括了该站点的基本信息以及12个气象指标的数值。</p>
<p><img src="https://p.ipic.vip/52ewap.jpg" alt="Image"></p>
<p>csv文件中每一列数据的解释如下表：</p>
<p><img src="https://p.ipic.vip/nxui7o.jpg" alt="Image"></p>
<p>我们对原始数据文件的命名进行了调整，**改为“站点id_站点位置_国家_（经度，纬度）**”的形式，****从而实现对国内站点数据的筛选。</p>
<p>大家可以自己去NCEI官网下载全球范围的原始csv格式的数据，也可以在本公众号回复关键词 <strong>356</strong> 免费获取我们重命名后的全国站点的数据！****无需转发文章，直接获取！****以下为数据的详细介绍：</p>
<p><strong>01</strong></p>
<p><strong>数据来源</strong></p>
<p>原始全球站点数据来源于美国国家海洋和大气管理局（NOAA）下设的国家环境信息中心(NCEI)，网址为：<a href="https://www.ncei.noaa.gov/data/global-summary-of-the-day/archive/%EF%BC%8C%E5%8C%85%E6%8B%AC%E4%BA%861929%E2%80%942024%E5%B9%B4%E7%9A%84%E6%B0%94%E8%B1%A1%E6%95%B0%E6%8D%AE%EF%BC%8C%E5%A4%A7%E5%AE%B6%E5%8F%AF%E4%BB%A5%E8%87%AA%E5%B7%B1%E5%8E%BB%E8%AF%A5%E7%BD%91%E7%AB%99%E4%B8%8B%E8%BD%BD%E5%8E%9F%E5%A7%8B%E6%95%B0%E6%8D%AE%E5%92%8C%E8%8E%B7%E6%82%89%E6%9B%B4%E5%A4%9A%E6%9C%89%E5%85%B3%E6%95%B0%E6%8D%AE%E8%AF%A6%E6%83%85%E7%9A%84%E4%BB%8B%E7%BB%8D%E3%80%82">https://www.ncei.noaa.gov/data/global-summary-of-the-day/archive/，包括了1929—2024年的气象数据，大家可以自己去该网站下载原始数据和获悉更多有关数据详情的介绍。</a></p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/YTRp35p28nEoHJtyuX7icXf7CV2p4thtgibNNVt3aCNiaR7ylfZogeicuMib55PtyqSsCtrZyowibd2Ht0DxtyNqxFfQ/640?wx_fmt=png&tp=wxpic&wxfrom=5&wx_lazy=1&wx_co=1" alt="Image"></p>
<p><strong>02</strong></p>
<p><strong>数据命名方式</strong></p>
<p>**“站点id_站点位置_CHINA_（经度，纬度）*<em>”的形式，*<em>以方便大家筛选站点。</em></em></p>
<p>例如：50434099999_TULIHE_CHINA_（121.7,50.45）.csv</p>
<ul>
<li>站点编号：50434099999</li>
<li>站点名称：TULIHE</li>
<li>所属国家：CHINA（中国）</li>
<li>站点经度：121.7（东经为正数，西经为负数）</li>
<li>站点纬度：50.45（北纬为正数，南纬为负数）</li>
<li>数据格式：.csv</li>
</ul>
<p><strong><img src="https://p.ipic.vip/202gve.jpg" alt="Image"></strong></p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Nice Website</title>
    <url>/2022/05/01/Tool/Nice%20Website/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="pdfobject-container" data-target="https://docs.qq.com/pdf/DSmxodk5LTXNPeGJM?" data-height="1000px"></div>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>ONNX</title>
    <url>/2022/05/01/Tool/ONNX/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="ONNX"><a href="#ONNX" class="headerlink" title="ONNX"></a>ONNX</h2><p>来源：<a href="https://zhuanlan.zhihu.com/p/346511883">https://zhuanlan.zhihu.com/p/346511883</a></p>
<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>最近看了一些ONNX的资料，一个最大的感受就是这些资料太凌乱了。大多数都是在介绍ONNX模型转换中碰到的坑点以及解决办法。很少有文章可以系统的介绍ONNX的背景，分析ONNX格式，ONNX简化方法等。所以，综合了相当多资料之后我准备写一篇ONNX相关的文章，希望对大家有用。</p>
<h3 id="什么是ONNX？"><a href="#什么是ONNX？" class="headerlink" title="什么是ONNX？"></a>什么是ONNX？</h3><p>简单描述一下官方介绍，开放神经网络交换（Open Neural Network Exchange）简称ONNX是微软和Facebook提出用来表示深度学习模型的<strong>开放</strong>格式。所谓开放就是ONNX定义了一组和环境，平台均无关的标准格式，来增强各种AI模型的可交互性。</p>
<p>换句话说，无论你使用何种训练框架训练模型（比如TensorFlow&#x2F;Pytorch&#x2F;OneFlow&#x2F;Paddle），在训练完毕后你都可以将这些框架的模型统一转换为ONNX这种统一的格式进行存储。注意ONNX文件不仅仅存储了神经网络模型的权重，同时也存储了模型的结构信息以及网络中每一层的输入输出和一些其它的辅助信息。我们直接从onnx的官方模型仓库拉一个yolov3-tiny的onnx模型（地址为：<code>https://github.com/onnx/models/tree/master/vision/object_detection_segmentation/tiny-yolov3/model</code>）用Netron可视化一下看看ONNX模型长什么样子。</p>
<p><img src="https://p.ipic.vip/pdlbi5.jpg" alt="img"></p>
<p>yolov3-tiny onnx的可视化结果</p>
<p>这里我们可以看到ONNX的版本信息，这个ONNX模型是由Keras导出来的，以及模型的输入输出等信息，如果你对模型的输入输出有疑问可以直接看：<code>https://github.com/onnx/models/blob/master/vision/object_detection_segmentation/tiny-yolov3/README.md</code>。</p>
<p>在获得ONNX模型之后，模型部署人员自然就可以将这个模型部署到兼容ONNX的运行环境中去。这里一般还会设计到额外的模型转换工作，典型的比如在Android端利用NCNN部署ONNX格式模型，那么就需要将ONNX利用NCNN的转换工具转换到NCNN所支持的<code>bin</code>和<code>param</code>格式。</p>
<p>但在实际使用ONNX的过程中，大多数人对ONNX了解得并不多，仅仅认为它只是一个完成模型转换和部署工具人而已，我们可以利用它完成模型转换和部署。正是因为对ONNX的不了解，在模型转换过程中出现的各种不兼容或者不支持让很多人浪费了大量时间。这篇文章将从理论和实践2个方面谈一谈ONNX。</p>
<h3 id="ProtoBuf-简介"><a href="#ProtoBuf-简介" class="headerlink" title="ProtoBuf 简介"></a>ProtoBuf 简介</h3><p>在分析ONNX组织格式前我们需要了解Protobuf, 如果你比较了解Protobuf可以略过此节。 ONNX作为一个文件格式，我们自然需要一定的规则去读取我们想要的信息或者是写入我们需要保存信息。ONNX使用的是Protobuf这个序列化数据结构去存储神经网络的权重信息。熟悉Caffe或者Caffe2的同学应该知道，它们的模型存储数据结构协议也是Protobuf。这个从安装ONNX包的时候也可以看到：</p>
<p><img src="https://p.ipic.vip/gwruxo.jpg" alt="img"></p>
<p>安装onnx时依赖了protobuf</p>
<p>Protobuf是一种轻便高效的结构化数据存储格式，可以用于结构化数据串行化，或者说序列化。它很适合做数据存储或数据交换格式。可用于通讯协议、数据存储等领域的语言无关、平台无关、可扩展的序列化结构数据格式。目前提供了 C++、Java、Python 三种语言的 API（摘自官方介绍）。</p>
<p>Protobuf协议是一个以<code>*.proto</code>后缀文件为基础的，这个文件描述了用户自定义的数据结构。如果需要了解更多细节请参考0x7节的资料3，这里只是想表达ONNX是基于Protobuf来做数据存储和传输，那么自然<code>onnx.proto</code>就是ONNX格式文件了，接下来我们就分析一下ONNX格式。</p>
<h3 id="ONNX-格式分析"><a href="#ONNX-格式分析" class="headerlink" title="ONNX 格式分析"></a>ONNX 格式分析</h3><p>这一节我们来分析一下ONNX的组织格式，上面提到ONNX中最核心的部分就是<code>onnx.proto</code>（<code>https://github.com/onnx/onnx/blob/master/onnx/onnx.proto</code>）这个文件了，它定义了ONNX这个数据协议的规则和一些其它信息。现在是2021年1月，这个文件有700多行，我们没有必要把这个文件里面的每一行都贴出来，我们只要搞清楚里面的核心部分即可。在这个文件里面以<code>message</code>关键字开头的对象是我们需要关心的。我们列一下最核心的几个对象并解释一下它们之间的关系。</p>
<ul>
<li><code>ModelProto</code></li>
<li><code>GraphProto</code></li>
<li><code>NodeProto</code></li>
<li><code>ValueInfoProto</code></li>
<li><code>TensorProto</code></li>
<li><code>AttributeProto</code></li>
</ul>
<p>当我们加载了一个ONNX之后，我们获得的就是一个<code>ModelProto</code>，它包含了一些版本信息，生产者信息和一个<code>GraphProto</code>。在<code>GraphProto</code>里面又包含了四个<code>repeated</code>数组，它们分别是<code>node</code>(<code>NodeProto</code>类型)，<code>input</code>(<code>ValueInfoProto</code>类型)，<code>output</code>(<code>ValueInfoProto</code>类型)和<code>initializer</code>(<code>TensorProto</code>类型)，其中<code>node</code>中存放了模型中所有的计算节点，<code>input</code>存放了模型的输入节点，<code>output</code>存放了模型中所有的输出节点，<code>initializer</code>存放了模型的所有权重参数。</p>
<p>我们知道要完整的表达一个神经网络，不仅仅要知道网络的各个节点信息，还要知道它们的拓扑关系。这个拓扑关系在ONNX中是如何表示的呢？ONNX的每个计算节点都会有<code>input</code>和<code>output</code>两个数组，这两个数组是string类型，通过<code>input</code>和<code>output</code>的指向关系，我们就可以利用上述信息快速构建出一个深度学习模型的拓扑图。这里要注意一下，<code>GraphProto</code>中的<code>input</code>数组不仅包含我们一般理解中的图片输入的那个节点，还包含了模型中所有的权重。例如，<code>Conv</code>层里面的<code>W</code>权重实体是保存在<code>initializer</code>中的，那么相应的会有一个同名的输入在<code>input</code>中，其背后的逻辑应该是把权重也看成模型的输入，并通过<code>initializer</code>中的权重实体来对这个输入做初始化，即一个赋值的过程。</p>
<p>最后，每个计算节点中还包含了一个<code>AttributeProto</code>数组，用来描述该节点的属性，比如<code>Conv</code>节点或者说卷积层的属性包含<code>group</code>，<code>pad</code>，<code>strides</code>等等，每一个计算节点的属性，输入输出信息都详细记录在<code>https://github.com/onnx/onnx/blob/master/docs/Operators.md</code>。</p>
<h3 id="onnx-helper"><a href="#onnx-helper" class="headerlink" title="onnx.helper"></a>onnx.helper</h3><p>现在我们知道ONNX是把一个网络的每一层或者说一个算子当成节点<code>node</code>，使用这些<code>Node</code>去构建一个<code>Graph</code>，即一个网络。最后将<code>Graph</code>和其它的生产者信息，版本信息等合并在一起生成一个<code>Model</code>，也即是最终的ONNX模型文件。 在构建ONNX模型的时候，<code>https://github.com/onnx/onnx/blob/master/onnx/helper.py</code>这个文件非常重要，我们可以利用它提供的<code>make_node</code>，<code>make_graph</code>，<code>make_tensor</code>等等接口完成一个ONNX模型的构建，一个示例如下：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">import onnx</span><br><span class="line">from onnx import helper</span><br><span class="line">from onnx import AttributeProto, TensorProto, GraphProto</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># The protobuf definition can be found here:</span><br><span class="line"># https://github.com/onnx/onnx/blob/master/onnx/onnx.proto</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Create one input (ValueInfoProto)</span><br><span class="line">X = helper.make_tensor_value_info(&#x27;X&#x27;, TensorProto.FLOAT, [3, 2])</span><br><span class="line">pads = helper.make_tensor_value_info(&#x27;pads&#x27;, TensorProto.FLOAT, [1, 4])</span><br><span class="line"></span><br><span class="line">value = helper.make_tensor_value_info(&#x27;value&#x27;, AttributeProto.FLOAT, [1])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Create one output (ValueInfoProto)</span><br><span class="line">Y = helper.make_tensor_value_info(&#x27;Y&#x27;, TensorProto.FLOAT, [3, 4])</span><br><span class="line"></span><br><span class="line"># Create a node (NodeProto) - This is based on Pad-11</span><br><span class="line">node_def = helper.make_node(</span><br><span class="line">    &#x27;Pad&#x27;, # node name</span><br><span class="line">    [&#x27;X&#x27;, &#x27;pads&#x27;, &#x27;value&#x27;], # inputs</span><br><span class="line">    [&#x27;Y&#x27;], # outputs</span><br><span class="line">    mode=&#x27;constant&#x27;, # attributes</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"># Create the graph (GraphProto)</span><br><span class="line">graph_def = helper.make_graph(</span><br><span class="line">    [node_def],</span><br><span class="line">    &#x27;test-model&#x27;,</span><br><span class="line">    [X, pads, value],</span><br><span class="line">    [Y],</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"># Create the model (ModelProto)</span><br><span class="line">model_def = helper.make_model(graph_def, producer_name=&#x27;onnx-example&#x27;)</span><br><span class="line"></span><br><span class="line">print(&#x27;The model is:\n&#123;&#125;&#x27;.format(model_def))</span><br><span class="line">onnx.checker.check_model(model_def)</span><br><span class="line">print(&#x27;The model is checked!&#x27;)</span><br></pre></td></tr></table></figure>

<p>这个官方示例为我们演示了如何使用<code>onnx.helper</code>的<code>make_tensor</code>，<code>make_tensor_value_info</code>，<code>make_attribute</code>，<code>make_node</code>，<code>make_graph</code>，<code>make_node</code>等方法来完整构建了一个ONNX模型。需要注意的是在上面的例子中，输入数据是一个一维Tensor，初始维度为<code>[2]</code>，这也是为什么经过维度为<code>[1,4]</code>的Pad操作之后获得的输出Tensor维度为<code>[3,4]</code>。另外由于Pad操作是没有带任何权重信息的，所以当你打印ONNX模型时，<code>ModelProto</code>的<code>GraphProto</code>是没有<code>initializer</code>这个属性的。</p>
<h3 id="onnx-simplifie"><a href="#onnx-simplifie" class="headerlink" title="onnx-simplifie"></a>onnx-simplifie</h3><p>原本这里是要总结一些使用ONNX进行模型部署经常碰到一些因为版本兼容性，或者各种框架OP没有对齐等原因导致的各种BUG。但是这样会显得文章很长，所以这里以一个经典的Pytorch转ONNX的reshape问题为例子，来尝试讲解一下大老师的onnx-simplifier是怎么处理的，个人认为这个问题是基于ONNX进行模型部署最经典的问题。希望在解决这个问题的过程中大家能有所收获。</p>
<p>问题发生在当我们想把下面这段代码导出ONNX模型时：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">import torch</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class JustReshape(torch.nn.Module):</span><br><span class="line">    def __init__(self):</span><br><span class="line">        super(JustReshape, self).__init__()</span><br><span class="line"></span><br><span class="line">    def forward(self, x):</span><br><span class="line">        return x.view((x.shape[0], x.shape[1], x.shape[3], x.shape[2]))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">net = JustReshape()</span><br><span class="line">model_name = &#x27;just_reshape.onnx&#x27;</span><br><span class="line">dummy_input = torch.randn(2, 3, 4, 5)</span><br><span class="line">torch.onnx.export(net, dummy_input, model_name, input_names=[&#x27;input&#x27;], output_names=[&#x27;output&#x27;])</span><br></pre></td></tr></table></figure>

<p>由于这个模型输入维度是固定的，所以我们期望模型是这样的：</p>
<p><img src="https://p.ipic.vip/dayh6q.png" alt="img"></p>
<p>我们期待的ONNX模型</p>
<p>但是，即使使用了ONNX的<code>polished</code>工具也只能获得下面的模型：</p>
<p><img src="https://p.ipic.vip/lbe239.jpg" alt="img"></p>
<p>实际上转出来的ONNX模型</p>
<p>要解决这个问题，有两种方法，第一种是做一个强制类型转换，将<code>x.shape[0]</code>类似的变量强制转换为常量即<code>int(x.shape[0])</code>，或者使用大老师的onnx-simplifer来解决这一问题。</p>
<p>之前一直好奇onnx-simplifer是怎么做的，最近对ONNX有了一些理解之后也能逐步看懂做法了。我来尝试解释一下。onnx-simplifer的核心思路就是利用onnxruntime推断一遍ONNX的计算图，然后使用常量输出替代冗余的运算OP。主体代码为：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">def simplify(model: Union[str, onnx.ModelProto], check_n: int = 0, perform_optimization: bool = True,</span><br><span class="line">             skip_fuse_bn: bool = False, input_shapes: Optional[TensorShapes] = None, skipped_optimizers: Optional[Sequence[str]] = None, skip_shape_inference=False) \</span><br><span class="line">        -&gt; Tuple[onnx.ModelProto, bool]:</span><br><span class="line">    if input_shapes is None:</span><br><span class="line">        input_shapes = &#123;&#125;</span><br><span class="line">    if type(model) == str:</span><br><span class="line">        # 加载ONNX模型</span><br><span class="line">        model = onnx.load(model)</span><br><span class="line">    # 检查ONNX模型格式是否正确，图结构是否完整，节点是否正确等</span><br><span class="line">    onnx.checker.check_model(model)</span><br><span class="line">    # 深拷贝一份原始ONNX模型</span><br><span class="line">    model_ori = copy.deepcopy(model)</span><br><span class="line">    if not skip_shape_inference:</span><br><span class="line">        # 获取ONNX模型中特征图的尺寸</span><br><span class="line">        model = infer_shapes(model)</span><br><span class="line"></span><br><span class="line">    input_shapes = check_and_update_input_shapes(model, input_shapes)</span><br><span class="line"></span><br><span class="line">    if perform_optimization:</span><br><span class="line">        model = optimize(model, skip_fuse_bn, skipped_optimizers)</span><br><span class="line"></span><br><span class="line">    const_nodes = get_constant_nodes(model)</span><br><span class="line">    res = forward_for_node_outputs(</span><br><span class="line">        model, const_nodes, input_shapes=input_shapes)</span><br><span class="line">    const_nodes = clean_constant_nodes(const_nodes, res)</span><br><span class="line">    model = eliminate_const_nodes(model, const_nodes, res)</span><br><span class="line">    onnx.checker.check_model(model)</span><br><span class="line"></span><br><span class="line">    if not skip_shape_inference:</span><br><span class="line">        model = infer_shapes(model)</span><br><span class="line">    if perform_optimization:</span><br><span class="line">        model = optimize(model, skip_fuse_bn, skipped_optimizers)</span><br><span class="line"></span><br><span class="line">    check_ok = check(model_ori, model, check_n, input_shapes=input_shapes)</span><br><span class="line"></span><br><span class="line">    return model, check_ok</span><br></pre></td></tr></table></figure>

<p>上面有一行：<code>model = infer_shapes(model)</code> 是获取ONNX模型中特征图的尺寸，它的具体实现如下：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">def infer_shapes(model: onnx.ModelProto) -&gt; onnx.ModelProto:</span><br><span class="line">    try:</span><br><span class="line">        model = onnx.shape_inference.infer_shapes(model)</span><br><span class="line">    except:</span><br><span class="line">        pass</span><br><span class="line">    return model</span><br></pre></td></tr></table></figure>

<p>我们保存一下调用了这个接口之后的ONNX模型，并将其可视化看一下：</p>
<p><img src="https://p.ipic.vip/gvlmek.jpg" alt="img"></p>
<p>相比于原始的ONNX模型，现在我们知道了每一层特征图的shape信息</p>
<p>相对于原始的ONNX模型，现在每一条线都新增了一个shape信息，代表它的前一个特征图的shape是怎样的。</p>
<p>接着，程序使用到了<code>check_and_update_input_shapes</code>接口，这个接口的代码示例如下，它可以用来判断输入的格式是否正确以及输入模型是否存在所有的指定输入节点。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">def check_and_update_input_shapes(model: onnx.ModelProto, input_shapes: TensorShapes) -&gt; TensorShapes:</span><br><span class="line">    input_names = get_input_names(model)</span><br><span class="line">    if None in input_shapes:</span><br><span class="line">        if len(input_names) == 1:</span><br><span class="line">            input_shapes[input_names[0]] = input_shapes[None]</span><br><span class="line">            del input_shapes[None]</span><br><span class="line">        else:</span><br><span class="line">            raise RuntimeError(</span><br><span class="line">                &#x27;The model has more than 1 inputs, please use the format &quot;input_name:dim0,dim1,...,dimN&quot; in --input-shape&#x27;)</span><br><span class="line">    for x in input_shapes:</span><br><span class="line">        if x not in input_names:</span><br><span class="line">            raise RuntimeError(</span><br><span class="line">                &#x27;The model doesn\&#x27;t have input named &quot;&#123;&#125;&quot;&#x27;.format(x))</span><br><span class="line">    return input_shapes</span><br></pre></td></tr></table></figure>

<p>在这个例子中，如果我们指定<code>input_shapes</code>为：<code>&#123;&#39;input&#39;: [2, 3, 4, 5]&#125;</code>，那么这个函数的输出也为<code>&#123;&#39;input&#39;: [2, 3, 4, 5]&#125;</code>。如果不指定，输出就是<code>&#123;&#125;</code>。验证这个函数的调用代码如下所示：</p>
<p><img src="https://p.ipic.vip/qetyh1.jpg" alt="img"></p>
<p>构造input_shapes参数，传入simplify</p>
<p>确定了输入没有问题之后，程序会根据用户指定是否优化ONNX模型进入优化函数，函数定义如下：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">def optimize(model: onnx.ModelProto, skip_fuse_bn: bool, skipped_optimizers: Optional[Sequence[str]]) -&gt; onnx.ModelProto:</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    :model参数: 待优化的ONXX模型.</span><br><span class="line">    :return: 优化之后的ONNX模型.</span><br><span class="line">    简化之前, 使用这个方法产生会在&#x27;forward_all&#x27;用到的ValueInfo</span><br><span class="line">    简化之后，使用这个方法去折叠前一步产生的常量到initializer中并且消除没被使用的常量</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">    onnx.checker.check_model(model)</span><br><span class="line">    onnx.helper.strip_doc_string(model)</span><br><span class="line">    optimizers_list = [</span><br><span class="line">        &#x27;eliminate_deadend&#x27;,</span><br><span class="line">        &#x27;eliminate_nop_dropout&#x27;,</span><br><span class="line">        &#x27;eliminate_nop_cast&#x27;,</span><br><span class="line">        &#x27;eliminate_nop_monotone_argmax&#x27;, &#x27;eliminate_nop_pad&#x27;,</span><br><span class="line">        &#x27;extract_constant_to_initializer&#x27;, &#x27;eliminate_unused_initializer&#x27;,</span><br><span class="line">        &#x27;eliminate_nop_transpose&#x27;,</span><br><span class="line">        &#x27;eliminate_nop_flatten&#x27;, &#x27;eliminate_identity&#x27;,</span><br><span class="line">        &#x27;fuse_add_bias_into_conv&#x27;,</span><br><span class="line">        &#x27;fuse_consecutive_concats&#x27;,</span><br><span class="line">        &#x27;fuse_consecutive_log_softmax&#x27;,</span><br><span class="line">        &#x27;fuse_consecutive_reduce_unsqueeze&#x27;, &#x27;fuse_consecutive_squeezes&#x27;,</span><br><span class="line">        &#x27;fuse_consecutive_transposes&#x27;, &#x27;fuse_matmul_add_bias_into_gemm&#x27;,</span><br><span class="line">        &#x27;fuse_pad_into_conv&#x27;, &#x27;fuse_transpose_into_gemm&#x27;, &#x27;eliminate_duplicate_initializer&#x27;</span><br><span class="line">    ]</span><br><span class="line">    if not skip_fuse_bn:</span><br><span class="line">        optimizers_list.append(&#x27;fuse_bn_into_conv&#x27;)</span><br><span class="line">    if skipped_optimizers is not None:</span><br><span class="line">        for opt in skipped_optimizers:</span><br><span class="line">            try:</span><br><span class="line">                optimizers_list.remove(opt)</span><br><span class="line">            except ValueError:</span><br><span class="line">                pass</span><br><span class="line"></span><br><span class="line">    model = onnxoptimizer.optimize(model, optimizers_list,</span><br><span class="line">                                   fixed_point=True)</span><br><span class="line">    onnx.checker.check_model(model)</span><br><span class="line">    return model</span><br></pre></td></tr></table></figure>

<p>这个函数的功能是对原始的ONNX模型做一些图优化工作，比如merge_bn，fuse_add_bias_into_conv等等。我们使用<code>onnx.save</code>保存一下这个例子中图优化后的模型，可以发现它和优化前的可视化效果是一样的，如下图所示：</p>
<p><img src="https://p.ipic.vip/4bzo5c.jpg" alt="img"></p>
<p>optimize 之后的ONNX模型可视化</p>
<p>这是因为在这个模型中是没有上面列举到的那些可以做图优化的情况，但是当我们打印一下ONNX模型我们会发现optimize过后的ONNX模型多出一些<code>initializer</code>数组：</p>
<p><img src="https://p.ipic.vip/huxoxb.jpg" alt="img"></p>
<p>相比optimize前的模型多出了一些initializer数组</p>
<p>这些数组存储的就是这个图中那些常量OP的具体值，通过这个处理我们就可以调用<code>get_constant_nodes</code>函数来获取ONNX模型的常量OP了，这个函数的详细解释如下：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">def get_constant_nodes(m: onnx.ModelProto) -&gt; List[onnx.NodeProto]:</span><br><span class="line">    const_nodes = []</span><br><span class="line">    # 如果节点的name在ONNX的GraphProto的initizlizer数组里面，它就是静态的tensor</span><br><span class="line">    const_tensors = [x.name for x in m.graph.initializer]</span><br><span class="line">    # 显示的常量OP也加进来</span><br><span class="line">    const_tensors.extend([node.output[0]</span><br><span class="line">                          for node in m.graph.node if node.op_type == &#x27;Constant&#x27;])</span><br><span class="line">    # 一些节点的输出shape是由输入节点决定的，我们认为这个节点的输出shape并不是常量，</span><br><span class="line">    # 所以我们不需要简化这种节点</span><br><span class="line">    dynamic_tensors = []</span><br><span class="line">    # 判断是否为动态OP</span><br><span class="line">    def is_dynamic(node):</span><br><span class="line">        if node.op_type in [&#x27;NonMaxSuppression&#x27;, &#x27;NonZero&#x27;, &#x27;Unique&#x27;] and node.input[0] not in const_tensors:</span><br><span class="line">            return True</span><br><span class="line">        if node.op_type in [&#x27;Reshape&#x27;, &#x27;Expand&#x27;, &#x27;Upsample&#x27;, &#x27;ConstantOfShape&#x27;] and len(node.input) &gt; 1 and node.input[1] not in const_tensors:</span><br><span class="line">            return True</span><br><span class="line">        if node.op_type in [&#x27;Resize&#x27;] and ((len(node.input) &gt; 2 and node.input[2] not in const_tensors) or (len(node.input) &gt; 3 and node.input[3] not in const_tensors)):</span><br><span class="line">            return True</span><br><span class="line">        return False</span><br><span class="line">    for node in m.graph.node:</span><br><span class="line">        if any(x in dynamic_tensors for x in node.input):</span><br><span class="line">            dynamic_tensors.extend(node.output)</span><br><span class="line">        elif node.op_type == &#x27;Shape&#x27;:</span><br><span class="line">            const_nodes.append(node)</span><br><span class="line">            const_tensors.extend(node.output)</span><br><span class="line">        elif is_dynamic(node):</span><br><span class="line">            dynamic_tensors.extend(node.output)</span><br><span class="line">        elif all([x in const_tensors for x in node.input]):</span><br><span class="line">            const_nodes.append(node)</span><br><span class="line">            const_tensors.extend(node.output)</span><br><span class="line">    # 深拷贝</span><br><span class="line">    return copy.deepcopy(const_nodes)</span><br></pre></td></tr></table></figure>

<p>在这个例子中，我们打印一下执行这个获取常量OP函数之后，Graph中有哪些OP被看成了常量OP。</p>
<p><img src="https://p.ipic.vip/ljf5tw.jpg" alt="img"></p>
<p>红色框中的所有节点都是常量节点</p>
<p>获取了模型中所有的常量OP之后，我们需要把所有的静态节点扩展到ONNX Graph的输出节点列表中，然后利用onnxruntme执行一次forward：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">def forward_for_node_outputs(model: onnx.ModelProto, nodes: List[onnx.NodeProto],</span><br><span class="line">                             input_shapes: Optional[TensorShapes] = None) -&gt; Dict[str, np.ndarray]:</span><br><span class="line">    if input_shapes is None:</span><br><span class="line">        input_shapes = &#123;&#125;</span><br><span class="line">    model = copy.deepcopy(model)</span><br><span class="line">    # nodes 是Graph中所有的静态OP</span><br><span class="line">    add_features_to_output(model, nodes)</span><br><span class="line">    res = forward(model, input_shapes=input_shapes)</span><br><span class="line">    return res</span><br></pre></td></tr></table></figure>

<p>其中<code>add_features_to_output</code>的定义如下：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">def add_features_to_output(m: onnx.ModelProto, nodes: List[onnx.NodeProto]) -&gt; None:</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    Add features to output in pb, so that ONNX Runtime will output them.</span><br><span class="line">    :param m: the model that will be run in ONNX Runtime</span><br><span class="line">    :param nodes: nodes whose outputs will be added into the graph outputs</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    # ONNX模型的graph扩展输出节点，获取所有静态OP的输出和原始输出节点的输出</span><br><span class="line">    for node in nodes:</span><br><span class="line">        for output in node.output:</span><br><span class="line">            m.graph.output.extend([onnx.ValueInfoProto(name=output)])</span><br></pre></td></tr></table></figure>

<p>最后的<code>forward</code>函数就是利用onnxruntime推理获得我们指定的输出节点的值。这个函数这里不进行解释。推理完成之后，进入下一个函数<code>clean_constant_nodes</code>，这个函数的定义如下：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">def clean_constant_nodes(const_nodes: List[onnx.NodeProto], res: Dict[str, np.ndarray]):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    It seems not needed since commit 6f2a72, but maybe it still prevents some unknown bug</span><br><span class="line">    :param const_nodes: const nodes detected by `get_constant_nodes`</span><br><span class="line">    :param res: The dict containing all tensors, got by `forward_all`</span><br><span class="line">    :return: The constant nodes which have an output in res</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    return [node for node in const_nodes if node.output[0] in res]</span><br></pre></td></tr></table></figure>

<p>这个函数是用来清洗那些没有被onnxruntime推理的静态节点，但通过上面的optimize逻辑，我们的graph中其实已经不存在这个情况了（没有被onnxruntime推理的静态节点在图优化阶段会被<strong>优化掉</strong>），因此这个函数理论上是可以删除的。这个地方是为了避免删除掉有可能引发其它问题就保留了。</p>
<p>不过从一些实际经验来看，还是保留吧，毕竟不能保证ONNX的图优化就完全正确，前段时间刚发现了TensorRT图优化出了一个BUG。保留这个函数可以提升一些程序的稳定性。</p>
<p><img src="https://p.ipic.vip/xpetgc.jpg" alt="img"></p>
<p>TensorRT存在一个BUG，这个结构的relu会被tensorrt的优化器给移动到eltwise之后</p>
<p>接下来就是这个onnx-simplifier最核心的步骤了，即将常量节点从原始的ONNX Graph中移除，函数接口为<code>eliminate_const_nodes</code>：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">def eliminate_const_nodes(model: onnx.ModelProto, const_nodes: List[onnx.NodeProto],</span><br><span class="line">                          res: Dict[str, np.ndarray]) -&gt; onnx.ModelProto:</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    :model参数: 原始ONNX模型</span><br><span class="line">    :const_nodes参数: 使用`get_constant_nodes`获得的静态OP</span><br><span class="line">    :res参数: 包含所有输出Tensor的字典</span><br><span class="line">    :return: 简化后的模型. 所有冗余操作都已删除.</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    for i, node in enumerate(model.graph.node):</span><br><span class="line">        if node in const_nodes:</span><br><span class="line">            for output in node.output:</span><br><span class="line">                new_node = copy.deepcopy(node)</span><br><span class="line">                new_node.name = &quot;node_&quot; + output</span><br><span class="line">                new_node.op_type = &#x27;Constant&#x27;</span><br><span class="line">                new_attr = onnx.helper.make_attribute(</span><br><span class="line">                    &#x27;value&#x27;,</span><br><span class="line">                    onnx.numpy_helper.from_array(res[output], name=output)</span><br><span class="line">                )</span><br><span class="line">                del new_node.input[:]</span><br><span class="line">                del new_node.attribute[:]</span><br><span class="line">                del new_node.output[:]</span><br><span class="line">                new_node.output.extend([output])</span><br><span class="line">                new_node.attribute.extend([new_attr])</span><br><span class="line">                insert_elem(model.graph.node, i + 1, new_node)</span><br><span class="line">            del model.graph.node[i]</span><br><span class="line"></span><br><span class="line">    return model</span><br></pre></td></tr></table></figure>

<p>运行这个函数之后我们获得的ONNX模型可视化结果是这样子的：</p>
<p><img src="https://p.ipic.vip/9d7q32.jpg" alt="img"></p>
<p>将常量节点从原始的ONNX删除后</p>
<p>注意，这里获得的ONNX模型中虽然常量节点已经从Graph中断开了，即相当于这个DAG里面多了一些单独的点，但是这些点还是存在的。因此，我们再执行一次<code>optimize</code>就可以获得最终简化后的ONNX模型了。最终简化后的ONNX模型如下图所示：</p>
<p><img src="https://p.ipic.vip/mr8n9h.jpg" alt="img"></p>
<p>简化后的ONNX模型</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>介于篇幅原因，介绍ONNX的第一篇文章就介绍到这里了,后续可能会结合更多实践的经验来谈谈ONNX了，例如OneFlow模型导出ONNX进行部署？。总之，文章很长，谢谢你的观看，希望这篇文章有帮助到你。最后欢迎star大老师的onnx-simplifier。</p>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul>
<li>【1】<a href="https://zhuanlan.zhihu.com/p/86867138">https://zhuanlan.zhihu.com/p/86867138</a></li>
<li>【2】<a href="https://link.zhihu.com/?target=https://oldpan.me/archives/talk-about-onnx">https://oldpan.me/archives/talk-about-onnx</a></li>
<li>【3】<a href="https://link.zhihu.com/?target=https://blog.csdn.net/chengzi_comm/article/details/53199278">https://blog.csdn.net/chengzi_comm&#x2F;article&#x2F;details&#x2F;53199278</a></li>
<li>【4】<a href="https://link.zhihu.com/?target=https://www.jianshu.com/p/a24c88c0526a">https://www.jianshu.com/p/a24c88c0526a</a></li>
<li>【5】<a href="https://link.zhihu.com/?target=https://bindog.github.io/blog/2020/03/13/deep-learning-model-convert-and-depoly/">https://bindog.github.io/blog/2020/03/13/deep-learning-model-convert-and-depoly/</a></li>
<li>【6】 <a href="https://link.zhihu.com/?target=https://github.com/daquexian/onnx-simplifier">https://github.com/daquexian/onnx-simplifier</a></li>
</ul>
<h2 id="Netron"><a href="#Netron" class="headerlink" title="Netron"></a>Netron</h2><p>来源：<a href="https://zhuanlan.zhihu.com/p/431445882">https://zhuanlan.zhihu.com/p/431445882</a></p>
<p>本文介绍如何利用netron进行深度学习模型的可视化。其优点在于适用性广，支持大部分深度学习框架的模型导出文件，本文以pytorch为例讲解netron具体的使用流程。</p>
<h3 id="netron介绍"><a href="#netron介绍" class="headerlink" title="netron介绍"></a>netron介绍</h3><p>netron是一个深度学习模型可视化库，其支持以下格式的模型存储文件：</p>
<ul>
<li>ONNX (.onnx, .pb)</li>
<li>Keras (.h5, .keras)</li>
<li>CoreML (.mlmodel)</li>
<li>TensorFlow Lite (.tflite)</li>
</ul>
<p>netron并不支持pytorch通过torch.save方法导出的模型文件，因此在pytorch保存模型的时候，需要将其导出为onnx格式的模型文件，可以利用torch.onnx模块实现这一目标。</p>
<p>整体的流程分为两步，第一步，pytorch导出onnx格式的模型文件。第二步，netron载入模型文件，进行可视化。接下来按照这两步进行实践。</p>
<h3 id="pytorch导出onnx格式模型文件"><a href="#pytorch导出onnx格式模型文件" class="headerlink" title="pytorch导出onnx格式模型文件"></a>pytorch导出onnx格式模型文件</h3><p>pytorch导出onnx格式模型文件直接使用torch.onnx中相关方法即可，除了定义一个模型外，还需要传入一个数据样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import torchvision.models as models</span><br><span class="line">import torch</span><br><span class="line"></span><br><span class="line"># 定义样例数据+网络</span><br><span class="line">data = torch.randn(2, 3, 256, 256)</span><br><span class="line">net = models.resnet34()</span><br><span class="line"></span><br><span class="line"># 导出为onnx格式</span><br><span class="line">torch.onnx.export(</span><br><span class="line">    net,</span><br><span class="line">    data,</span><br><span class="line">    &#x27;model.onnx&#x27;,</span><br><span class="line">    export_params=True,</span><br><span class="line">    opset_version=8,</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<p>导出的模型文件为model.onnx。</p>
<h3 id="netron载入模型文件"><a href="#netron载入模型文件" class="headerlink" title="netron载入模型文件"></a>netron载入模型文件</h3><p>netron提供了两种运行方式。</p>
<p>第一种是以软件的方式安装netron，然后打开软件载入模型，下载地址见github主页<a href="https://link.zhihu.com/?target=https://github.com/lutzroeder/netron">https://github.com/lutzroeder/netron</a>。</p>
<p>第二种是将netron作为python库进行安装，在python代码调用netron库来载入模型进行可视化。 可以通过 pip install netron进行安装。</p>
<p>如果你既不想安装netron软件，也不想安装netron库，netron作者很贴心地做了一个在线demo网站，可以直接上传模型文件查看可视化结果。网站链接<a href="https://link.zhihu.com/?target=https://netron.app/">https://netron.app/</a>。网站页面如下</p>
<p><img src="https://p.ipic.vip/lj5wtt.jpg" alt="img"></p>
<p>点击页面中的Open Model即可上传模型文件</p>
<p>将刚才的model.onnx进行上传，结果如下</p>
<p><img src="https://p.ipic.vip/7xmzn7.jpg" alt="img"></p>
<p>可视化结果可以下载为图片</p>
<p>点击模块可以在右侧查看模块信息，例如卷积核的大小，卷积核的具体参数等。如果仔细看下结果，可以发现图中没有特征图的维度，只有输入数据的维度（3，256，256）。在netron中，如果想看到特征图的维度，需要在导出为onnx的时候，同时加上特征图维度信息。这个操作需要onnx库的帮助，可以通过pip install onnx进行安装。具体代码如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import torchvision.models as models</span><br><span class="line">import torch</span><br><span class="line"></span><br><span class="line">import onnx</span><br><span class="line">import onnx.utils</span><br><span class="line">import onnx.version_converter</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 定义数据+网络</span><br><span class="line">data = torch.randn(2, 3, 256, 256)</span><br><span class="line">net = models.resnet34()</span><br><span class="line"></span><br><span class="line"># 导出</span><br><span class="line">torch.onnx.export(</span><br><span class="line">    net,</span><br><span class="line">    data,</span><br><span class="line">    &#x27;model.onnx&#x27;,</span><br><span class="line">    export_params=True,</span><br><span class="line">    opset_version=8,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"># 增加维度信息</span><br><span class="line">model_file = &#x27;model.onnx&#x27;</span><br><span class="line">onnx_model = onnx.load(model_file)</span><br><span class="line">onnx.save(onnx.shape_inference.infer_shapes(onnx_model), model_file)</span><br></pre></td></tr></table></figure>

<p>相比之前的代码，多了一个增加维度信息的步骤。此时可视化图中就能完整显示所有特征图的维度了。</p>
<p><img src="https://p.ipic.vip/w8j9wc.jpg" alt="img"></p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>PALM-CPU</title>
    <url>/2022/05/01/Tool/PALM-CPU/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Auto-install"><a href="#Auto-install" class="headerlink" title="Auto install"></a>Auto install</h2><p>下载自动安装脚本：<a href="http://palm.muk.uni-hannover.de/trac/attachment/wiki/doc/install/palm_installer">http://palm.muk.uni-hannover.de/trac/attachment/wiki/doc/install/palm_installer</a></p>
<p>官网首页注册账号：<a href="https://palm.muk.uni-hannover.de/trac">https://palm.muk.uni-hannover.de/trac</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">bash palm_installer</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">注意Checking general software requirements是否有不满足的环境</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">可能需要修改安装目录</span></span><br></pre></td></tr></table></figure>



<p>！！！实际显示成功但实际失败了！！！</p>
<p><img src="https://p.ipic.vip/5yxwm7.png" alt="Screenshot 2024-03-04 at 16.29.48"></p>
<h2 id="Install-manually"><a href="#Install-manually" class="headerlink" title="Install manually"></a>Install manually</h2><p>参考：<a href="https://docs.palm-model.org/23.10/Get_Started/">https://docs.palm-model.org/23.10/Get_Started/</a></p>
<p><a href="https://palm.muk.uni-hannover.de/trac/wiki/doc/install/advanced">https://palm.muk.uni-hannover.de/trac/wiki/doc/install/advanced</a></p>
<h3 id="Download"><a href="#Download" class="headerlink" title="Download"></a>Download</h3><p><a href="https://gitlab.palm-model.org/releases/palm_model_system/-/releases/v23.10">https://gitlab.palm-model.org/releases/palm_model_system/-/releases/v23.10</a></p>
<h3 id="Software-Requirements"><a href="#Software-Requirements" class="headerlink" title="Software Requirements"></a>Software Requirements</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install gfortran g++ make cmake coreutils libopenmpi-dev openmpi-bin libnetcdff-dev netcdf-bin libfftw3-dev python3-pip python3-pyqt5 flex bison ncl-ncarg</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python -m pip install -r requirements.txt</span><br></pre></td></tr></table></figure>



<h3 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export install_prefix=&quot;&lt;install-prefix&gt;&quot;</span><br><span class="line">bash install -p $&#123;install_prefix&#125;</span><br><span class="line">export PATH=$&#123;install_prefix&#125;/bin:$&#123;PATH&#125;</span><br></pre></td></tr></table></figure>



<h3 id="Verification"><a href="#Verification" class="headerlink" title="Verification"></a>Verification</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/palm/current_version</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mkdir</span> -p JOBS/example_cbl/INPUT</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cp</span> palm_model_system/packages/palm/model/tests/cases/example_cbl/INPUT/example_cbl_p3d $ JOBS/example_cbl/INPUT/example_cbl_p3d</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">palmrun -r example_cbl -c default -X4 -a <span class="string">&quot;d3#&quot;</span></span></span><br></pre></td></tr></table></figure>



<h3 id="DEBUG"><a href="#DEBUG" class="headerlink" title="DEBUG"></a>DEBUG</h3><p><code>netcdf_data_input_mod.f90</code> 中</p>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">!-- Get variable</span></span><br><span class="line">    nc_stat = NF90_GET_VAR( id, id_var, tmp, start = (/<span class="number">1</span>, i1s, i2s /),    &amp;    </span><br><span class="line">            <span class="built_in">count</span> = (/ <span class="number">1</span>, count_1, count_2 /) )<span class="comment">! change by Ruyan</span></span><br></pre></td></tr></table></figure>





<h2 id="使用说明简介"><a href="#使用说明简介" class="headerlink" title="使用说明简介"></a>使用说明简介</h2><p>参考：<a href="https://blog.csdn.net/ysqzhatian/article/details/106760093">https://blog.csdn.net/ysqzhatian/article/details/106760093</a></p>
<p><a href="https://blog.csdn.net/ysqzhatian/article/details/112557474">https://blog.csdn.net/ysqzhatian/article/details/112557474</a></p>
<h2 id="马玉龙讲解视频笔记"><a href="#马玉龙讲解视频笔记" class="headerlink" title="马玉龙讲解视频笔记"></a>马玉龙讲解视频笔记</h2><h3 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h3><h4 id="MAKE-DEPOSITORY-default"><a href="#MAKE-DEPOSITORY-default" class="headerlink" title="MAKE_DEPOSITORY_default"></a>MAKE_DEPOSITORY_default</h4><p>存放个人代码的修改</p>
<p>源代码 + 编译中间文件 + 可执行文件存放位置</p>
<p>可执行文件：<code>palm</code> 为palm主程序 + <code>combine_plot_fields.x</code> 为合并各节点的输出文件打到一个文件中</p>
<h4 id="palm-config-default"><a href="#palm-config-default" class="headerlink" title=".palm.config.default"></a>.palm.config.default</h4><p>修改 %source_path为<code>/work/home/acyii6v8kt/WORK/Palm/palm_model_system-v23.10/MAKE_DEPOSITORY_default</code> 以保证原代码的整洁</p>
<p>%compiler_options 添加 <code>-g -traceback</code> 进行代码调试，给出具体出错信息</p>
<h4 id="x2F-bin-x2F-palmbuild"><a href="#x2F-bin-x2F-palmbuild" class="headerlink" title=".&#x2F;bin&#x2F;palmbuild"></a>.&#x2F;bin&#x2F;palmbuild</h4><p>首次安装好后重新编译时使用，即使用<code>.palm.config.default</code>配置文件</p>
<h4 id="新建-test-文件夹用于存在运行个例"><a href="#新建-test-文件夹用于存在运行个例" class="headerlink" title="新建 test 文件夹用于存在运行个例"></a>新建 test 文件夹用于存在运行个例</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cp palm ./</span><br><span class="line">cp combine_plot_fields.x ./</span><br></pre></td></tr></table></figure>

<ul>
<li>准备输入文件和namelist:</li>
</ul>
<p> <code>PID_STATIC</code> 为nc格式的静态输入文件，包括网格信息，网格位置</p>
<p><code>PIDS_DYNAMIC </code> 为nc格式的动态输入文件，包括边界条件（uvtpq 六个面，一般设置侧向，上下为默认）、初始条件</p>
<p><code>PARIN</code> 为namelist </p>
<p><code>ENVPAR</code> 为计算节点设置</p>
<h4 id="DATA-3D-AV-NETCDF-输出结果时间平均"><a href="#DATA-3D-AV-NETCDF-输出结果时间平均" class="headerlink" title="DATA_3D_AV_NETCDF 输出结果时间平均"></a>DATA_3D_AV_NETCDF 输出结果时间平均</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">!-------------------------------------------------------------------------------</span><br><span class="line">!-- INITIALIZATION PARAMETER NAMELIST</span><br><span class="line">!   Documentation: https://palm.muk.uni-hannover.de/trac/wiki/doc/app/inipar</span><br><span class="line">!!-------------------------------------------------------------------------------</span><br><span class="line">!&amp;nesting_parameters</span><br><span class="line">!   domain_layouts            = &#x27;root&#x27;,    1,  -1,  324,    0.0,    0.0,</span><br><span class="line">!                               &#x27;parent&#x27;,  2,   1,  864,   1557.0,  1143.0,</span><br><span class="line">!   nesting_datatransfer_mode = &#x27;overlap&#x27;,</span><br><span class="line">!   nesting_mode              = &#x27;one-way&#x27;,</span><br><span class="line">!   !nesting_datatransfer_mode = &#x27;cascade&#x27;,</span><br><span class="line">!   !nesting_mode              = &#x27;one-way&#x27;,</span><br><span class="line">!/ ! end of nesting_parameters namelist</span><br><span class="line"></span><br><span class="line">&amp;initialization_parameters</span><br><span class="line">    nx                   = 593,</span><br><span class="line">    ny                   = 719,</span><br><span class="line">    nz                   = 100,</span><br><span class="line"></span><br><span class="line">    dx                   = 9.0,</span><br><span class="line">    dy                   = 9.0,</span><br><span class="line">    dz                   = 9.0,</span><br><span class="line">    dz_stretch_factor = 1.04,</span><br><span class="line">    dz_stretch_level = 630.0,</span><br><span class="line">    dz_max = 30.0,</span><br><span class="line"></span><br><span class="line">    psolver              = &#x27;multigrid&#x27;,</span><br><span class="line">    call_psolver_at_all_substeps = .T.,</span><br><span class="line">    mg_cycles            = 4,            ! no. of cycles in the multigrid scheme</span><br><span class="line">    ngsrb                = 2,            ! no. of Gauss-Seidel iterations</span><br><span class="line">    momentum_advec       = &#x27;ws-scheme&#x27;, </span><br><span class="line">    conserve_volume_flow = .F.,</span><br><span class="line"></span><br><span class="line">    !initializing_actions = &#x27;inifor&#x27;,</span><br><span class="line">    initializing_actions = &#x27;read_from_file&#x27;,</span><br><span class="line"></span><br><span class="line">    rayleigh_damping_factor = 0.1,</span><br><span class="line">    rayleigh_damping_height = 1000.,</span><br><span class="line"></span><br><span class="line">    !omega = 0.</span><br><span class="line">    ug_surface = -10.61,</span><br><span class="line">    vg_surface = -10.61,</span><br><span class="line">    latitude = 22.55,</span><br><span class="line"></span><br><span class="line">    neutral              = .T., ! strictly neutral flow</span><br><span class="line">    humidity             = .F.,</span><br><span class="line"></span><br><span class="line">    constant_flux_layer  = .T.,</span><br><span class="line">    roughness_length = 0.1,</span><br><span class="line"></span><br><span class="line">    !bc_lr = &#x27;cyclic&#x27;,</span><br><span class="line">    !bc_ns = &#x27;cyclic&#x27;,</span><br><span class="line"></span><br><span class="line">    fft_method                 = &#x27;temperton-algorithm&#x27;, ! build-in fft method</span><br><span class="line">    topography                 = &#x27;read_from_file&#x27;,  ! use input file</span><br><span class="line">                                                    ! to set topography</span><br><span class="line">/ ! end of initialization parameter namelist</span><br><span class="line"></span><br><span class="line">&amp;plant_canopy_parameters</span><br><span class="line">   canopy_mode                  = &#x27;read_from_file&#x27;,</span><br><span class="line">   canopy_drag_coeff            = 0.25,</span><br><span class="line">   cthf                         = 0.000,</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;stg_par</span><br><span class="line">   switch_off_module =  .F., </span><br><span class="line">   dt_stg_adjust    =  36000.0, </span><br><span class="line">   dt_stg_call      = 0.0,</span><br><span class="line">/ ! end of stg_par namelist</span><br><span class="line"></span><br><span class="line">&amp;runtime_parameters</span><br><span class="line">!-------------------------------------------------------------------------------</span><br><span class="line">    !npex = 1,</span><br><span class="line">    !npey = 1,</span><br><span class="line">    npex = 18,</span><br><span class="line">    npey = 18,</span><br><span class="line"></span><br><span class="line">    end_time                   = 9005.0, ! simulation time of the 3D model</span><br><span class="line">    !end_time                   = 25.0, ! simulation time of the 3D model</span><br><span class="line"></span><br><span class="line">    create_disturbances      = .T.,</span><br><span class="line">    disturbance_level_b      = 25.,</span><br><span class="line">    disturbance_level_t      = 900.,</span><br><span class="line">    dt_disturb               = 30.</span><br><span class="line"></span><br><span class="line">    dt_run_control             = 30.0, ! output interval for run control</span><br><span class="line"></span><br><span class="line">    netcdf_data_format         = 2,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    data_output = &#x27;u&#x27;, ! &#x27;v&#x27; , &#x27;w&#x27;, &#x27;u_av&#x27;, &#x27;v_av&#x27;, !-- &#x27;u&#x27;,&#x27;v&#x27;,&#x27;w&#x27;,   !-- &#x27;p&#x27;,&#x27;e&#x27;,</span><br><span class="line"></span><br><span class="line">    skip_time_data_output_av = 3600,</span><br><span class="line">    dt_data_output_av  = 5400.0,</span><br><span class="line">    averaging_interval = 5400.0,</span><br><span class="line">    dt_averaging_input = 0.0,</span><br><span class="line">   </span><br><span class="line">    interpolate_to_grid_center = .T.</span><br><span class="line"></span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;nesting_offl_parameters</span><br><span class="line">    switch_off_module = .F., </span><br><span class="line">/ ! end of nesting_offl_parameters namelist</span><br><span class="line"></span><br></pre></td></tr></table></figure>







<h3 id="Auto"><a href="#Auto" class="headerlink" title="Auto"></a>Auto</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0 14 * * * sh /work/home/acyii6v8kt/WORK/Palm/Backup_WZCS-Palm.sh</span><br><span class="line">0 15 * * * sh /work/home/acyii6v8kt/WORK/Downscaling/Backup_WZCS-Downscaling.sh</span><br><span class="line">0 2 * * * sh /work/home/acyii6v8kt/WORK/DATA_download/Backup_WZCS-DATA_download.sh</span><br><span class="line">0 3 * * * sh /work/home/acyii6v8kt/WORK/GSI/Backup_WZCS-GSI.sh</span><br><span class="line">0 0 * * * delete -rf /home_gkx/users/nsgkx_zx2/.trash/*</span><br><span class="line"></span><br><span class="line">0 0 * * * sh /work/home/acyii6v8kt/WORK/DATA_download/For_HAFS/download_00.sh</span><br><span class="line">0 12 * * * sh /work/home/acyii6v8kt/WORK/DATA_download/For_HAFS/download_12.sh</span><br><span class="line"></span><br><span class="line">0 16 * * * sh /work/home/acyii6v8kt/WORK/Palm/Operational/check_HAFS_pm_001.sh</span><br><span class="line">0 4 * * * sh /work/home/acyii6v8kt/WORK/Palm/Operational/check_HAFS_am_001.sh</span><br><span class="line"></span><br><span class="line">0 9 * * * sh /work/home/acyii6v8kt/WORK/Palm/Operational/check_HAFS_am_036.sh</span><br><span class="line">30 9 * * * sh /work/home/acyii6v8kt/WORK/Palm/Operational/run_am.sh &gt; /work/home/acyii6v8kt/WORK/Palm/Operational/log.run 2&gt;&amp;1</span><br><span class="line">0 18 * * * sh /work/home/acyii6v8kt/WORK/Palm/Operational/output_am.sh &gt; /work/home/acyii6v8kt/WORK/Palm/Operational/log.output 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line">0 21 * * * sh /work/home/acyii6v8kt/WORK/Palm/Operational/check_HAFS_pm_036.sh</span><br><span class="line">30 21 * * * sh /work/home/acyii6v8kt/WORK/Palm/Operational/run_pm.sh &gt; /work/home/acyii6v8kt/WORK/Palm/Operational/log.run 2&gt;&amp;1</span><br><span class="line">0 6 * * * sh /work/home/acyii6v8kt/WORK/Palm/Operational/output_pm.sh &gt; /work/home/acyii6v8kt/WORK/Palm/Operational/log.output 2&gt;&amp;1</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h2 id="Palm-XYCS"><a href="#Palm-XYCS" class="headerlink" title="Palm XYCS"></a>Palm XYCS</h2><h4 id="创建环境"><a href="#创建环境" class="headerlink" title="创建环境"></a>创建环境</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda create -n Palm_v23 python=3.10</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source Palm_v23.env</span><br></pre></td></tr></table></figure>

<p><strong>Palm_v23.env</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export LC_ALL=en_US.UTF-8</span><br><span class="line">export LANG=en_US.UTF-8</span><br><span class="line"></span><br><span class="line">conda activate Palm_v23</span><br><span class="line">module load intel/2021u3</span><br><span class="line">module load hpc hpc-intel hpc-impi</span><br><span class="line">module load cmake/3.31.4</span><br><span class="line">module load pnetcdf/1.12.2</span><br><span class="line">module load netcdf/4.9.2</span><br><span class="line">module load textproc/flex/2.6.4</span><br></pre></td></tr></table></figure>

<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export install_prefix=&quot;&lt;install-prefix&gt;&quot;</span><br><span class="line">bash install -p $&#123;install_prefix&#125;</span><br><span class="line">export PATH=$&#123;install_prefix&#125;/bin:$&#123;PATH&#125;</span><br></pre></td></tr></table></figure>

<h4 id="修改-palm-config-default"><a href="#修改-palm-config-default" class="headerlink" title="修改.palm.config.default"></a>修改.palm.config.default</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">修改 %source_path为/work/home/acyii6v8kt/WORK/Palm/palm_model_system-v23.10/MAKE_DEPOSITORY_default 以保证原代码的整洁</span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">compiler_options 添加 -g -traceback 进行代码调试，给出具体出错信息</span></span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./bin/palmbuild</span><br><span class="line">首次安装好后重新编译时使用，即使用.palm.config.default配置文件</span><br></pre></td></tr></table></figure>



<h3 id="修改netcdf-data-input-mod-f90"><a href="#修改netcdf-data-input-mod-f90" class="headerlink" title="修改netcdf_data_input_mod.f90"></a>修改netcdf_data_input_mod.f90</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">!-- Get variable</span><br><span class="line">    nc_stat = NF90_GET_VAR( id, id_var, tmp, start = (/1, i1s, i2s /),    &amp;    </span><br><span class="line">            count = (/ 1, count_1, count_2 /) )! change by Ruyan</span><br></pre></td></tr></table></figure>

<h4 id="重新编译"><a href="#重新编译" class="headerlink" title="重新编译"></a>重新编译</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./bin/palmbuild</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>PALM-GPU</title>
    <url>/2022/05/01/Tool/PALM-GPU/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Palm-GPU-移植"><a href="#Palm-GPU-移植" class="headerlink" title="Palm GPU 移植"></a>Palm GPU 移植</h2><h3 id="Step-1：安装-NVIDIA-OpenACC"><a href="#Step-1：安装-NVIDIA-OpenACC" class="headerlink" title="Step 1：安装 NVIDIA OpenACC"></a>Step 1：安装 NVIDIA OpenACC</h3><p>参考：<a href="https://wuli.wiki/online/OpACCn.html#:~:text=source%20~%2F.bashrc%20%E4%BB%A5%E5%90%8E%EF%BC%8C%E5%B0%B1%E5%8F%AF%E4%BB%A5%E8%AF%95%E8%AF%95%20nvc%20--version%EF%BC%8C%20nvcc%20--version%20%E4%BA%86%E3%80%82,%E7%BC%96%E8%AF%91%E5%99%A8%E6%94%AF%E6%8C%81%20OpenACC%20%E5%92%8C%20OpenMP%EF%BC%8C%E8%80%8C%20nvcc%20%E5%88%99%E7%94%A8%E4%BA%8E%20CUDA%20%E7%BC%96%E7%A8%8B%E3%80%82">OpenACC笔记</a></p>
<ul>
<li>查看Linux系统版本</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cat</span> /etc/issue</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">返回 Ubuntu 20.04.6 LTS \n \l</span></span><br></pre></td></tr></table></figure>

<h4 id="尝试一：安装SDK-Manager（失败）"><a href="#尝试一：安装SDK-Manager（失败）" class="headerlink" title="尝试一：安装SDK Manager（失败）"></a>尝试一：安装SDK Manager（失败）</h4><ul>
<li>官网：<a href="https://developer.nvidia.com/sdk-manager">https://developer.nvidia.com/sdk-manager</a></li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo apt install ./sdkmanager_[version]-[build<span class="comment">#]_amd64.deb</span></span></span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sdkmanager --cli</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SDK Manager will start once login is completed. # 此步等待时间较长</span><br><span class="line">⠦ Waiting for user information from NVIDIA authentication server...</span><br></pre></td></tr></table></figure>

<ul>
<li><p>报错：<code>Error: User is not authorized on NVIDIA developer server</code></p>
</li>
<li><p>尝试：加入NIVIDA开发者计划 <a href="https://developer.nvidia.com/nvidia-developer-program">https://developer.nvidia.com/nvidia-developer-program</a> - 仍然失败</p>
</li>
</ul>
<p><img src="https://p.ipic.vip/8sgx63.png" alt="Screenshot 2024-11-12 at 17.10.32"></p>
<h4 id="尝试二：只安装-NVIDIA-HPC-SDK-（成功）"><a href="#尝试二：只安装-NVIDIA-HPC-SDK-（成功）" class="headerlink" title="尝试二：只安装 NVIDIA HPC SDK （成功）"></a>尝试二：只安装 NVIDIA HPC SDK （成功）</h4><ul>
<li>官网：<a href="https://developer.nvidia.com/hpc-sdk-downloads">https://developer.nvidia.com/hpc-sdk-downloads</a></li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">wget https://developer.download.nvidia.com/hpc-sdk/24.9/nvhpc_2024_249_Linux_x86_64_cuda_12.6.tar.gz</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">tar xpzf nvhpc_2024_249_Linux_x86_64_cuda_12.6.tar.gz</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nvhpc_2024_249_Linux_x86_64_cuda_12.6/install</span></span><br></pre></td></tr></table></figure>

<ul>
<li>安装测试</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nvc --version</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nvc 24.9-0 64-bit target on x86-64 Linux -tp sapphirerapids </span><br><span class="line">NVIDIA Compilers and Tools</span><br><span class="line">Copyright (c) 2024, NVIDIA CORPORATION &amp; AFFILIATES.  All rights reserved.</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nvcc --version</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nvcc: NVIDIA (R) Cuda compiler driver</span><br><span class="line">Copyright (c) 2005-2024 NVIDIA Corporation</span><br><span class="line">Built on Fri_Jun_14_16:34:21_PDT_2024</span><br><span class="line">Cuda compilation tools, release 12.6, V12.6.20</span><br><span class="line">Build cuda_12.6.r12.6/compiler.34431801_0</span><br></pre></td></tr></table></figure>



<h3 id="Step-2：使用nvhpc重新编译netcdf库"><a href="#Step-2：使用nvhpc重新编译netcdf库" class="headerlink" title="Step 2：使用nvhpc重新编译netcdf库"></a>Step 2：使用nvhpc重新编译netcdf库</h3><ul>
<li><p><code>/home/ruyanc/libs</code>下创建<code>libraries.sh </code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">  </span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">##-------此处路径需要根据自己修改--------</span></span></span><br><span class="line">export DIR=/home/ruyanc/libs</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">##-------------------------------------</span></span></span><br><span class="line">export CC=nvc</span><br><span class="line">export FC=nvfortran</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## zlib</span></span></span><br><span class="line">export LD_LIBRARY_PATH=$DIR/hdf5/lib:$LD_LIBRARY_PATH</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## hdf5</span></span></span><br><span class="line">export PATH=$DIR/hdf5/bin:$PATH</span><br><span class="line">export LD_LIBRARY_PATH=$DIR/hdf5/lib:$LD_LIBRARY_PATH</span><br><span class="line">export HDF5_HOME=$DIR/hdf5</span><br><span class="line">export HDF5_INCDIR=$HDF5_HOME/include</span><br><span class="line">export HDF5_LIBDIR=$HDF5_HOME/lib</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## netcdf</span></span></span><br><span class="line">export PATH=$DIR/netcdf/bin:$PATH</span><br><span class="line">export LD_LIBRARY_PATH=$DIR/netcdf/lib:$LD_LIBRARY_PATH</span><br><span class="line">export NETCDF=$DIR/netcdf</span><br><span class="line">export NETCDF_INC=$NETCDF/include</span><br><span class="line">export NETCDF_LIB=$NETCDF/lib</span><br><span class="line">export NETCDF_INCDIR=$NETCDF/include</span><br><span class="line">export NETCDF_LIBDIR=$NETCDF/lib</span><br><span class="line">export NETCDFPATH=$NETCDF</span><br></pre></td></tr></table></figure>
</li>
<li><p>下载安装包并安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar xzvf zlib-1.2.7.tar.gz</span><br><span class="line">cd zlib-1.2.7</span><br><span class="line">./configure --prefix=$DIR/hdf5</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">source ../libraries.sh</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">tar xzvf hdf5-1.10.5.tar.gz</span><br><span class="line">cd hdf5-1.10.5/</span><br><span class="line">./configure --prefix=$DIR/hdf5 --with-zlib=$DIR/hdf5</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">source ../libraries.sh</span><br><span class="line"></span><br><span class="line">unzip netcdf-c-4.8.1.zip</span><br><span class="line">cd netcdf-c-4.8.1/</span><br><span class="line">CPPFLAGS=&quot;-I$DIR/hdf5/include&quot; LDFLAGS=&quot;-L$DIR/hdf5/lib&quot; ./configure --prefix=$DIR/netcdf --enable-netcdf-4 --enable-netcdf4 --enable-shared --disable-dap</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">source ../libraries.sh</span><br><span class="line"></span><br><span class="line">netcdf-fortran-4.5.4</span><br><span class="line">unzip netcdf-fortran-4.5.4.zip</span><br><span class="line">cd netcdf-fortran-4.5.4/</span><br><span class="line">CPPFLAGS=&quot;-I$DIR/netcdf/include&quot; LDFLAGS=&quot;-L$DIR/netcdf/lib&quot; ./configure --prefix=$DIR/netcdf  --FC=nvfortran</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">source ../libraries.sh</span><br></pre></td></tr></table></figure>
</li>
<li><p>检查安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nc-config --fc ## nvfortran</span><br><span class="line">nc-config --cc ## nvc</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="Step-3：修改编译选项"><a href="#Step-3：修改编译选项" class="headerlink" title="Step 3：修改编译选项"></a>Step 3：修改编译选项</h3><p><strong>palm依赖rrtmg，而rrtmg以共享库方式编译链接，nvfortran在编译openacc程序时，似乎不支持共享库用同样的编译选项，因此只能分开编译rrtmg和palm</strong></p>
<ul>
<li><p>修改1：复制<code>packages/palm/model/share/cmake/CMakeLists.txt</code> 并重命名为<code>CMakeLists.1.txt</code>和<code>CMakeLists.2.txt</code></p>
<p><code>CMakeLists.1.txt</code> 对应修改如下</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># compiler flag management</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">else</span>() <span class="comment">### added </span></span><br><span class="line">   <span class="keyword">set</span>(PALM_CPP_FLAGS <span class="string">&quot;-cpp&quot;</span>)  <span class="comment">### added by Ruyan</span></span><br><span class="line">   <span class="keyword">list</span>(APPEND PALM_CPP_OPTIONS __fastv8)  <span class="comment">### added by Ruyan</span></span><br><span class="line"><span class="keyword">endif</span>()</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>()   <span class="comment">### added by Ruyan</span></span><br><span class="line">   <span class="keyword">set</span>(PALM_C_COMPILER_OPTIONS <span class="string">&quot;-fast&quot;</span>)  <span class="comment">### added by Ruyan </span></span><br><span class="line"><span class="keyword">endif</span>()</span><br></pre></td></tr></table></figure>

<p><code>CMakeLists.2.txt</code> 对应修改如下</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># compiler flag management</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">else</span>()  <span class="comment">### added </span></span><br><span class="line">   <span class="keyword">set</span>(PALM_COMPILER_OPTIONS <span class="string">&quot;-w -fast -acc -gpu=cc89 -Minfo=accel&quot;</span>) <span class="comment">### -gpu=cc89 需要试用pgaccelinfo对应查看</span></span><br><span class="line">   <span class="keyword">set</span>(PALM_LINKER_OPTIONS <span class="string">&quot;-acc -gpu=cc89&quot;</span>)  <span class="comment">### added by Ruyan</span></span><br><span class="line">   <span class="keyword">set</span>(PALM_CPP_FLAGS <span class="string">&quot;-cpp&quot;</span>)  <span class="comment">### added by Ruyan</span></span><br><span class="line">   <span class="keyword">list</span>(APPEND PALM_CPP_OPTIONS __fastv8) <span class="comment">### added by Ruyan</span></span><br><span class="line"><span class="keyword">endif</span>()</span><br><span class="line">...   </span><br><span class="line">   </span><br><span class="line"><span class="keyword">else</span>()  <span class="comment">### added </span></span><br><span class="line">   <span class="keyword">set</span>(PALM_C_COMPILER_OPTIONS <span class="string">&quot;-fast&quot;</span>)  <span class="comment">### added </span></span><br><span class="line"><span class="keyword">endif</span>()</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改2：<code>packages/palm/model/install</code>对应修改如下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">install_function() &#123;</span><br><span class="line">   ...</span><br><span class="line">   cp $&#123;project_share_dir&#125;/cmake/CMakeLists.1.txt $&#123;project_share_dir&#125;/cmake/CMakeLists.txt   ### added by Ruyan</span><br><span class="line">   bash $&#123;project_bin_dir&#125;/palmconfigure \</span><br><span class="line">        -p &quot;$&#123;install_prefix&#125;&quot; \</span><br><span class="line">        $&#123;fortran_compiler:+-c &#125;$&#123;fortran_compiler&#125; \</span><br><span class="line">        $&#123;netcdf_c_prefix:+-s &#125;$&#123;netcdf_c_prefix&#125; \</span><br><span class="line">        $&#123;netcdf_fortran_prefix:+-t &#125;$&#123;netcdf_fortran_prefix&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">configure palm with externals</span></span><br><span class="line">   cp $&#123;project_share_dir&#125;/cmake/CMakeLists.2.txt $&#123;project_share_dir&#125;/cmake/CMakeLists.txt   ### added by Ruyan</span><br><span class="line">   bash $&#123;project_bin_dir&#125;/palmconfigure \</span><br><span class="line">        -p &quot;$&#123;install_prefix&#125;&quot; \</span><br><span class="line">        $&#123;fortran_compiler:+-c &#125;$&#123;fortran_compiler&#125; \</span><br><span class="line">        $&#123;netcdf_c_prefix:+-s &#125;$&#123;netcdf_c_prefix&#125; \</span><br><span class="line">        $&#123;netcdf_fortran_prefix:+-t &#125;$&#123;netcdf_fortran_prefix&#125; \</span><br><span class="line">        -r &quot;$&#123;rrtmg_prefix&#125;&quot; \</span><br><span class="line">        -T &quot;$&#123;tenstream_prefix&#125;&quot;</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改3：<code>palm_model_system-v23.10/packages/dynamic_driver/inifor/share/cmake/CMakeLists.txt</code>中添加</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># compiler flag management</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">else</span>()</span><br><span class="line"><span class="keyword">set</span>(INIFOR_COMPILER_OPTIONS <span class="string">&quot;-O3&quot;</span>)  <span class="comment">### added by Ruyan</span></span><br><span class="line"><span class="keyword">set</span>(INIFOR_CPP_FLAGS <span class="string">&quot;-cpp&quot;</span>)        <span class="comment">### added by Ruyan</span></span><br></pre></td></tr></table></figure></li>
</ul>
<p><strong>v23.10 仅支持 <code>constant_diffusion = .T.</code></strong></p>
<ul>
<li><p>修改：增加constant_diffusion参数，在<code>packages/palm/model/src/parin.f90</code>中添加</p>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">constant_diffusion, &amp;</span><br></pre></td></tr></table></figure></li>
</ul>
<p><strong>打开netcdf4_parallel</strong></p>
<ul>
<li><p><code>CMakeLists.1.txt</code> 和 <code>CMakeLists.2.txt</code>中添加</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">if(NETCDF_FOUND)</span><br><span class="line">   list(APPEND PALM_CPP_OPTIONS __netcdf)</span><br><span class="line">   list(APPEND PALM_CPP_OPTIONS __netcdf4)</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="Step-4：编译"><a href="#Step-4：编译" class="headerlink" title="Step 4：编译"></a>Step 4：编译</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">module purge</span><br><span class="line"><span class="built_in">source</span> ~/sdk.env</span><br><span class="line"><span class="built_in">source</span> ~/libs/libraries.sh</span><br><span class="line"><span class="built_in">export</span> install_prefix=/home/ruyanc/WORK/Palm-GPU/GPU_v23.10</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;install_prefix&#125;</span>/bin:<span class="variable">$&#123;PATH&#125;</span></span><br><span class="line">bash install -p <span class="variable">$&#123;install_prefix&#125;</span></span><br><span class="line"><span class="built_in">export</span> PATH=/home/ruyanc/WORK/Palm-GPU/GPU_test/bin:<span class="variable">$&#123;PATH&#125;</span></span><br></pre></td></tr></table></figure>



<h3 id="Step-5：测试"><a href="#Step-5：测试" class="headerlink" title="Step 5：测试"></a>Step 5：测试</h3><ul>
<li><p>切换环境</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">module purge</span><br><span class="line">source ~/sdk.env</span><br><span class="line">source ~/libs/libraries.sh</span><br></pre></td></tr></table></figure>

</li>
<li><p>创建运行目录</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir JOBS</span><br><span class="line">cd JOBS</span><br><span class="line">mkdir test</span><br></pre></td></tr></table></figure>

<p><code>test</code> 下放置<code>PIDS_DYNAMIC</code>、<code>PIDS_STATIC</code>、<code>PARIN</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp ../MAKE_DEPOSITORY_default/palm ./</span><br><span class="line">cp ../MAKE_DEPOSITORY_default/combine_plot_fields.x ./</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改<code>PARIN</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">psolver = &#x27;poisfft&#x27;</span><br><span class="line">constant_diffusion = .T.</span><br><span class="line">fft_method = &#x27;singleton-algorithm&#x27;</span><br></pre></td></tr></table></figure>


</li>
<li><p>运行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /JOBS/test</span><br><span class="line">mpirun -n 4 ./palm  ## -n 1 报错 timestep limit</span><br><span class="line">watch -n 1 nvidia-smi   ## 查看GPU运行状态</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>PALM-GPU-LZK</title>
    <url>/2022/05/01/Tool/PALM-GPU_LZK/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="A100上编译运行plam模式"><a href="#A100上编译运行plam模式" class="headerlink" title="A100上编译运行plam模式"></a>A100上编译运行plam模式</h1><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><ul>
<li><code>palm_model_system-v23.10/packages/dynamic_driver/inifor/share/cmake/CMakeLists.txt</code>中添加<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span>(INIFOR_COMPILER_OPTIONS <span class="string">&quot;-O3&quot;</span>)</span><br><span class="line"><span class="keyword">set</span>(INIFOR_CPP_FLAGS <span class="string">&quot;-cpp&quot;</span>)</span><br></pre></td></tr></table></figure></li>
<li><code>palm_model_system-v23.10/packages/palm/model/share/cmake/CMakeLists.txt</code>中添加<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span>(PALM_COMPILER_OPTIONS <span class="string">&quot;-w -fast -acc -gpu=cc80 -Minfo=accel&quot;</span>)</span><br><span class="line"><span class="keyword">set</span>(PALM_LINKER_OPTIONS <span class="string">&quot;-acc -gpu=cc80&quot;</span>)</span><br><span class="line"><span class="keyword">set</span>(PALM_CPP_FLAGS <span class="string">&quot;-cpp&quot;</span>)</span><br><span class="line"><span class="keyword">list</span>(APPEND PALM_CPP_OPTIONS __fastv8)</span><br></pre></td></tr></table></figure>
和<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span>(PALM_C_COMPILER_OPTIONS <span class="string">&quot;-fast&quot;</span>)</span><br></pre></td></tr></table></figure></li>
<li>因为palm依赖rrtmg，而rrtmg以共享库方式编译链接，nvfortran在编译openacc程序时，似乎不支持共享库用同样的编译选项，因此只能分开编译rrtmg和palm。可以把2中的CMakeLists.txt复制为2份，一份不包含-acc选项，然后在<code>palm_model_system-v24.04/packages/palm/model/install</code>中<code>palmconfigure</code>执行前分别<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> <span class="variable">$&#123;project_share_dir&#125;</span>/cmake/CMakeLists.1.txt <span class="variable">$&#123;project_share_dir&#125;</span>/cmake/CMakeLists.txt</span><br></pre></td></tr></table></figure>
和<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> <span class="variable">$&#123;project_share_dir&#125;</span>/cmake/CMakeLists.2.txt <span class="variable">$&#123;project_share_dir&#125;</span>/cmake/CMakeLists.txt</span><br></pre></td></tr></table></figure></li>
<li>为了增加constant_diffusion参数，在packages&#x2F;palm&#x2F;model&#x2F;src&#x2F;parin.f90中添加了一行<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">constant_diffusion, &amp;</span><br></pre></td></tr></table></figure></li>
<li>23.10因为数据管理和代码有误（包括transpose_mod.f90和poisfft_mod.f90），不能支持cufft，因此不能打开<code>__cuda_fft</code>, 24.04可以打开该宏。</li>
<li>24.04代码中明确写有<code>routine not prepared for using openacc</code>，因此在<code>palm_model_system-v24.04/packages/palm/model/src/exchange_horiz_mod.f90</code>中注释了类似的3行：<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CALL</span> message( <span class="string">&#x27;exchange_horiz_2d&#x27;</span>, <span class="string">&#x27;PAC0359&#x27;</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">0</span> )</span><br></pre></td></tr></table></figure>
即使这样，运行还是报错，见下文。</li>
<li>编译命令<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> install_prefix=/home/zhenkun/work/pgi/palm/v23.10</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;install_prefix&#125;</span>/bin:<span class="variable">$&#123;PATH&#125;</span></span><br><span class="line">bash install -p <span class="variable">$&#123;install_prefix&#125;</span></span><br><span class="line"><span class="built_in">export</span> PATH=/home/ruyanc/WORK/Palm-GPU/GPU_test/bin:<span class="variable">$&#123;PATH&#125;</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p><code>palmtest --cases openacc_test --builds nvidia_mpi_openacc_cufft --cores 1</code><br>其中用到了<br><code>palmrun -c &quot;nvidia_mpi_openacc_cufft&quot; -r openacc_test__nvidia_mpi_openacc_cufft__1 -a &quot;d3#&quot; -X 1 -B -v -z</code></p>
<h2 id="运行（目前测试的情况）"><a href="#运行（目前测试的情况）" class="headerlink" title="运行（目前测试的情况）"></a>运行（目前测试的情况）</h2><ul>
<li>23.10（nvhpc）<ul>
<li>仅支持<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">psolver = <span class="string">&#x27;poisfft&#x27;</span></span><br><span class="line">constant_diffusion = .T.</span><br><span class="line">fft_method = <span class="string">&#x27;singleton-algorithm&#x27;</span></span><br></pre></td></tr></table></figure></li>
<li>如果注释<code>constant_diffusion = .T.</code>，报错<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FATAL ERROR: data in PRESENT clause was not found on device 1: name=var(:,:,:) host:0x7fc851656c70</span><br><span class="line">file:/home/zhenkun/work/pgi/palm/v23.10/MAKE_DEPOSITORY_default/turbulence_closure_mod.f90 tcm_diffusivities_default line:4762</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li>24.04（intel编译器cpu版本）<ul>
<li>只需要添加<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">boundary_layer_depth = <span class="number">800</span> ！(仅试验，可换成其它值)</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li>24.04（nvhpc）<br>不能运行，代码本身有问题（没有做好数据管理），无论怎么设置，均提示：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">+++ error message ---</span><br><span class="line">               ID: PAC0358  generated by routine &quot;exchange_horiz&quot;:</span><br><span class="line">  </span><br><span class="line">               array not on device</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>PALM Driver</title>
    <url>/2022/05/01/Tool/PALM%20Driver/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="PALM-Static-Driver"><a href="#PALM-Static-Driver" class="headerlink" title="PALM Static Driver"></a>PALM Static Driver</h3><p><font color='red'><strong>GEO4PALM 安装使用指南 - for generate PIDS_STATIC</strong></font></p>
<p><font color='green'>在mac环境下完成</font></p>
<h4 id="代码下载与环境配置"><a href="#代码下载与环境配置" class="headerlink" title="代码下载与环境配置"></a>代码下载与环境配置</h4><p><a href="https://github.com/dongqi-DQ/GEO4PALM">https://github.com/dongqi-DQ/GEO4PALM</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/dongqi-DQ/GEO4PALM.git</span><br><span class="line">cd GEO4PALM</span><br></pre></td></tr></table></figure>

<ul>
<li>删除 <code>geo4palm_env.yml </code>文件中的以下字段：</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- _libgcc_mutex=0.1=main</span><br><span class="line">  - _openmp_mutex=5.1=1_gnu</span><br><span class="line">  - alabaster=0.7.12=pyhd3eb1b0_0</span><br><span class="line">  ...</span><br><span class="line">  - zlib=1.2.13=h5eee18b_0</span><br><span class="line">  - zstd=1.5.5=hc292b87_0</span><br></pre></td></tr></table></figure>

<ul>
<li>创建<code>conda</code>环境<code>GEO4PALM</code></li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda env create -f geo4palm_env.yml -n GEO4PALM</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">出现gdal安装报错，更换为使用brew安装，完成此步需要较长时间</span></span><br><span class="line">brew install gdal</span><br></pre></td></tr></table></figure>

<ul>
<li>激活<code>GEO4PALM</code>虚拟环境</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda activate GEO4PALM</span><br></pre></td></tr></table></figure>

<ul>
<li>install <code>terracatalogueclient</code></li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">which -a pip</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">返回：</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/Users/Ruyan/miniconda3/envs/geo4palm/bin/pip  - use this thereafter</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/opt/homebrew/bin/pip</span></span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">完成此步需要较长时间</span></span><br><span class="line">/Users/Ruyan/miniconda3/envs/geo4palm/bin/pip install terracatalogueclient -i https://artifactory.vgt.vito.be/api/pypi/python-packages/simple </span><br></pre></td></tr></table></figure>



<h4 id="可视化交互完成-domain-设置"><a href="#可视化交互完成-domain-设置" class="headerlink" title="可视化交互完成 domain 设置"></a>可视化交互完成 domain 设置</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install panel</span><br><span class="line">pip install geoviews</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">panel serve --port 8081 palm_domain_utility.py --show</span><br></pre></td></tr></table></figure>

<p><img src="https://p.ipic.vip/d8c4yi.png" alt="44971717665529_.pic"></p>
<ul>
<li>对应修改<code>./JOBS/Wuhan/INPUT/config.static-Wuhan</code>中的 [case] 和 [domain] 参数</li>
</ul>
<h4 id="dem-地形数据准备"><a href="#dem-地形数据准备" class="headerlink" title="dem 地形数据准备"></a>dem 地形数据准备</h4><ul>
<li>安装elevation - 基于集成的elevation工具包：<a href="https://github.com/bopen/elevation?tab=readme-ov-file">https://github.com/bopen/elevation?tab=readme-ov-file</a></li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/bopen/elevation.git</span><br><span class="line">pip install elevation</span><br></pre></td></tr></table></figure>

<ul>
<li>测试安装</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">eio selfcheck</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Your system is ready.</span></span><br></pre></td></tr></table></figure>

<ul>
<li>选择区域范围</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">eio clip -o Wuhan-30m-DEM.tif --bounds 113 29 115 31   # left bottom right top</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">注意：区域选择不可过大，否则会报错</span></span><br></pre></td></tr></table></figure>

<ul>
<li>移动生成数据到<code>INPUT</code>文件夹下</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mv Wuhan-30m-DEM.tif ./JOBS/Wuhan/INPUT</span><br></pre></td></tr></table></figure>



<h4 id="shp-建筑物数据准备"><a href="#shp-建筑物数据准备" class="headerlink" title="shp 建筑物数据准备"></a>shp 建筑物数据准备</h4><ul>
<li>网络资源：国内77个城市建筑物轮廓（带高度）数据分享 【环哥建筑物矢量shp】（测试可用）</li>
</ul>
<p><a href="https://www.bilibili.com/read/cv17043593/">https://www.bilibili.com/read/cv17043593/</a></p>
<ul>
<li>中国首套10米分辨率的建筑高度数据（tif格式）（尚未测试）</li>
</ul>
<p><a href="https://blog.csdn.net/weixin_63042008/article/details/130816753">https://blog.csdn.net/weixin_63042008/article/details/130816753</a></p>
<p><a href="https://zenodo.org/records/7827315">https://zenodo.org/records/7827315</a></p>
<p>参考文献：A first Chinese building height estimate at 10 m resolution (CNBH-10 m) using multi-source earth observations and machine learning</p>
<ul>
<li><p>shp 文件可视化网站： <a href="https://mapshaper.org/">https://mapshaper.org/</a></p>
</li>
<li><p>移动数据到<code>./JOBS/Wuhan/INPUT/shp</code>文件夹下</p>
</li>
<li><p>读取shp变量信息</p>
</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python read_shp.py</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">[(<span class="string">&#x27;DeletionFlag&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, 1, 0), [<span class="string">&#x27;Entity&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, 16, 0], [<span class="string">&#x27;Layer&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, 254, 0], [<span class="string">&#x27;LyrFrzn&#x27;</span>, <span class="string">&#x27;N&#x27;</span>, 5, 0], [<span class="string">&#x27;LyrOn&#x27;</span>, <span class="string">&#x27;N&#x27;</span>, 5, 0], [<span class="string">&#x27;Color&#x27;</span>, <span class="string">&#x27;N&#x27;</span>, 5, 0], [<span class="string">&#x27;Linetype&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, 254, 0], [<span class="string">&#x27;Elevation&#x27;</span>, <span class="string">&#x27;F&#x27;</span>, 19, 11], [<span class="string">&#x27;LineWt&#x27;</span>, <span class="string">&#x27;N&#x27;</span>, 5, 0], [<span class="string">&#x27;RefName&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, 254, 0], [<span class="string">&#x27;DocUpdate&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, 8, 0]]</span></span><br></pre></td></tr></table></figure>

<ul>
<li>shp 转换 tif</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install rioxarray,geopandas,geocube</span><br><span class="line">python shp2tif.py Wuhan shp Elevation</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tif file Elevation_9m_EPSG32650_shp2tif.tif saved</span></span><br></pre></td></tr></table></figure>

<ul>
<li>对应修改<code>./JOBS/Wuhan/INPUT/config.static-Wuhan</code></li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[urban]</span><br><span class="line">bldh     = &quot;Elevation_9m_EPSG32650_shp2tif.tif&quot;,</span><br></pre></td></tr></table></figure>



<h4 id="lu-土地利用类型"><a href="#lu-土地利用类型" class="headerlink" title="lu 土地利用类型"></a>lu 土地利用类型</h4><ul>
<li><p>注册 ESA WorldCover 账号</p>
</li>
<li><p>修改<code>./JOBS/Wuhan/INPUT/config.static-Wuhan</code></p>
</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[case]</span><br><span class="line">case_name    = &quot;Wuhan&quot;,                   # prefix for a case</span><br><span class="line">origin_time  = &quot;2020-05-01 00:00:00 +00&quot;, # time in yyyy-mm-dd HH:MM:SS +HH format (+00 as in UTC)</span><br><span class="line">config_proj  = &quot;EPSG:32650&quot;,              # projection for PALM</span><br><span class="line">default_proj = &quot;EPSG:4326&quot;,               # projection of lat/lon to find domain location</span><br><span class="line">lu_table     = &quot;esa_2020v1_lu.csv&quot;,</span><br><span class="line"></span><br><span class="line">[domain]</span><br><span class="line">ndomain   = 1,                                </span><br><span class="line">centlat   = 30.508,</span><br><span class="line">centlon   = 114.393,                        </span><br><span class="line">nx        = 180, </span><br><span class="line">ny        = 180,   </span><br><span class="line">nz        = 100,   </span><br><span class="line">dx        = 9.0,</span><br><span class="line">dy        = 9.0,</span><br><span class="line">dz        = 9.0, </span><br><span class="line">z_origin  = 0.0,  </span><br><span class="line">ll_x      = 0.0, </span><br><span class="line">ll_y      = 0.0, </span><br><span class="line"></span><br><span class="line">[settings]</span><br><span class="line">water_temperature     = 283.0,</span><br><span class="line">building_height_dummy = 3.0,</span><br><span class="line">tree_height_filter    = 1.5,</span><br><span class="line"></span><br><span class="line">[geotif] </span><br><span class="line">water     = &quot;online&quot;,        </span><br><span class="line">dem       = &quot;Wuhan-30m-DEM.tif&quot;, </span><br><span class="line">lu        = &quot;esa&quot;,   </span><br><span class="line">resample_method = &quot;nearest&quot;, </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="keyword">if</span> NASA API is used format <span class="keyword">in</span> YYYY-MM-DD</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">SST <span class="built_in">date</span> should be the same as the orignin_time</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># No need to change start/end dates for NASA SRTMGL1_NC.003</span></span> </span><br><span class="line">dem_start_date = &#x27;2000-02-12&#x27;,</span><br><span class="line">dem_end_date = &#x27;2000-02-20&#x27;,</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># start/end dates for land use data set</span></span></span><br><span class="line">lu_start_date = &#x27;2020-10-01&#x27;,</span><br><span class="line">lu_end_date = &#x27;2020-10-30&#x27;,</span><br><span class="line"></span><br><span class="line">[urban]</span><br><span class="line">bldh     = &quot;Elevation_9m_EPSG32650_shp2tif.tif&quot;,</span><br><span class="line">bldid    = &quot;osm&quot;,</span><br><span class="line">pavement = &quot;osm&quot;,</span><br><span class="line">street   = &quot;osm&quot;, </span><br><span class="line"></span><br><span class="line">[plant]</span><br><span class="line">tree_lai_max   =  5.0,</span><br><span class="line">lad_max_height =  0.4,</span><br><span class="line">sfch = &quot;&quot;,</span><br></pre></td></tr></table></figure>

<ul>
<li>把 <code>esa_2020v1_lu.csv</code> 放到<code>./JOBS/Wuhan/INPUT/</code>文件夹下</li>
</ul>
<h4 id="运行-GEO4PALM"><a href="#运行-GEO4PALM" class="headerlink" title="运行 GEO4PALM"></a>运行 GEO4PALM</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install osmnx,netCDF4,dask</span><br><span class="line">python run_config_static.py Wuhan</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">输入 NASA EarthData login account</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">输入 ESA WouldCover login account</span></span><br></pre></td></tr></table></figure>
<ul>
<li>返回数据下载信息</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Downloading SST file to ./JOBS/Wuhan/INPUT/</span><br><span class="line">SST file downloaded to ./JOBS/Wuhan/INPUT/</span><br><span class="line">You are about to download 152.17 MB, do you want to continue? [Y/n] Y</span><br><span class="line">ESA WorldCover data download done</span><br><span class="line">merge ESA data</span><br><span class="line">Done</span><br><span class="line">Retrieving OSM building data...</span><br></pre></td></tr></table></figure>

<ul>
<li>生成 Static Driver 数据到<code>./JOBS/Wuhan/OUTPUT</code></li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ncview Wuhan_static_N01</span><br></pre></td></tr></table></figure>

<p><img src="https://p.ipic.vip/ww775e.png" alt="Screenshot 2024-06-07 at 10.41.26"></p>
<h3 id="PALM-Dynamic-Driver"><a href="#PALM-Dynamic-Driver" class="headerlink" title="PALM Dynamic Driver"></a>PALM Dynamic Driver</h3><p><font color='red'><strong>WRF4PALM 安装使用指南 - for generate PIDS_DYNAMIC</strong></font></p>
<p><font color='green'>在WZCS环境下完成</font></p>
<h4 id="代码下载与环境配置-1"><a href="#代码下载与环境配置-1" class="headerlink" title="代码下载与环境配置"></a>代码下载与环境配置</h4><p><a href="https://github.com/dongqi-DQ/WRF4PALM">https://github.com/dongqi-DQ/WRF4PALM</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/dongqi-DQ/WRF4PALM.git</span><br><span class="line">cd WRF4PALM</span><br></pre></td></tr></table></figure>

<ul>
<li>删除 <code>geo4palm_env.yml </code>文件中的以下字段：</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- _libgcc_mutex=0.1=main</span><br><span class="line">  - _openmp_mutex=5.1=1_gnu</span><br><span class="line">  - alabaster=0.7.12=pyhd3eb1b0_0</span><br><span class="line">  ...</span><br><span class="line">  - zlib=1.2.13=h5eee18b_0</span><br><span class="line">  - zstd=1.5.5=hc292b87_0</span><br></pre></td></tr></table></figure>

<ul>
<li>创建<code>conda</code>环境<code>GEO4PALM</code></li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda env create -f wrf4palm_env.yml -n WRF4PALM</span><br></pre></td></tr></table></figure>

<ul>
<li>激活<code>WRF4PALM</code>虚拟环境</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda activate WRF4PALM</span><br></pre></td></tr></table></figure>

<h5 id="WZCS环境激活步骤"><a href="#WZCS环境激活步骤" class="headerlink" title="WZCS环境激活步骤"></a><font color='green'>WZCS环境激活步骤</font></h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- module load anaconda3/5.2.0 </span><br><span class="line">- module load python/3.8.10</span><br><span class="line">- source activate WRF4PALM</span><br></pre></td></tr></table></figure>

<ul>
<li>把WRF输出文件放到<code>./wrf_output</code>文件夹下</li>
</ul>
<p>需要提前将ERA5数据降尺度到3km分辨率（参数设置见后section）</p>
<h4 id="修改namelist-wrf4palm"><a href="#修改namelist-wrf4palm" class="headerlink" title="修改namelist.wrf4palm "></a>修改<code>namelist.wrf4palm </code></h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[case]</span><br><span class="line">case_name = &quot;wuhan_test&quot;,</span><br><span class="line">max_pool = 32,</span><br><span class="line">geostrophic = &quot;p&quot;, ## alculate geostrophic wind using the variable pressure (option &quot;p&quot;) or geopotential height  (option &quot;z&quot;)</span><br><span class="line"></span><br><span class="line">[domain]</span><br><span class="line">palm_proj = &quot;EPSG:32650&quot;,    # projection of PALM</span><br><span class="line">centlat   = 30.508,</span><br><span class="line">centlon   = 114.393,  </span><br><span class="line">nx        = 180,                                  # number of grid points along x-axis</span><br><span class="line">ny        = 180,                                  # number of grid points along y-axis</span><br><span class="line">nz        = 100,                                  # number of grid points along z-axis</span><br><span class="line">dx        = 9,                                </span><br><span class="line">dy        = 9,                                 </span><br><span class="line">dz        = 9,                                     </span><br><span class="line">z_origin  = 0.0,                                  # elevated mean grid position (elevated terrain)</span><br><span class="line"></span><br><span class="line">[stretch]</span><br><span class="line">dz_stretch_factor = 1.0,        # stretch factor for a vertically stretched grid</span><br><span class="line">                                # set this to 1.0 if no streching required</span><br><span class="line">dz_stretch_level = 1200.0,      # Height level above which the grid is to be stretched vertically (in m)</span><br><span class="line"></span><br><span class="line">dz_max = 30.0,                  # allowed maximum vertical grid spacing (in m)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[wrf]</span><br><span class="line">wrf_path = &quot;./wrf_output/&quot;,</span><br><span class="line">wrf_output = &quot;wrfout_d03_2020-05-01_*&quot;, </span><br><span class="line"></span><br><span class="line">interp_mode = &quot;linear&quot;,</span><br><span class="line"></span><br><span class="line">start_year = 2020,</span><br><span class="line">start_month = 5,</span><br><span class="line">start_day = 1,</span><br><span class="line">start_hour = 0,</span><br><span class="line"></span><br><span class="line">end_year = 2020,</span><br><span class="line">end_month = 5,</span><br><span class="line">end_day = 1,</span><br><span class="line">end_hour = 12,</span><br><span class="line"></span><br><span class="line">dynamic_ts = 3600.0,         # PALM dynamic driver update frequency</span><br><span class="line"></span><br><span class="line">[soil]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">layers <span class="keyword">for</span> soil temperature and moisture calculation</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">this shall be changed depending on different cases</span></span><br><span class="line"></span><br><span class="line">dz_soil = 0.01, 0.02, 0.04, 0.06, 0.14, 0.26, 0.54, 1.86,</span><br><span class="line">msoil = 0.3, # dummy value in case soil moisture from WRF output is 0.0</span><br></pre></td></tr></table></figure>

<h4 id="运行-WRF4PALM"><a href="#运行-WRF4PALM" class="headerlink" title="运行 WRF4PALM"></a>运行 WRF4PALM</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install salem,multiprocess,dask</span><br></pre></td></tr></table></figure>

<ul>
<li>修改<code>mpi_job.sh</code></li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH --job-name=OmpJob</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH --nodes=1</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH --ntasks-per-node=32   <span class="comment"># 与 namelist.wrf4palm 中的max_pool一致</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH --partition=wzhcexclu01</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH --exclusive</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">load the environment</span></span><br><span class="line">export I_MPI_PMI_LIBRARY=/opt/gridview/slurm/lib/libpmi.so</span><br><span class="line">python run_config_wrf4palm.py namelist.wrf4palm</span><br></pre></td></tr></table></figure>

<ul>
<li>执行<code>mpi_job.sh</code></li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sbatch mpi_job.sh</span><br></pre></td></tr></table></figure>

<ul>
<li>执行完成</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Add to your *_p3d file: </span><br><span class="line"> soil_temperature = [295.31546738281247, 295.31546738281247, 295.31546738281247, 295.31546738281247, 294.6043686659415, 293.1092400457651, 290.35686103980805, 290.20395097351076]</span><br><span class="line"> soil_moisture = [0.31395987400412556, 0.31395987400412556, 0.31395987400412556, 0.31395987400412556, 0.3273818972649503, 0.35219524385050477, 0.3706932271973485, 0.37172089375555517]</span><br><span class="line"> deep_soil_temperature = 288.4166</span><br><span class="line"></span><br><span class="line">PALM dynamic input file is ready. Script duration: 0:08:26.125738</span><br><span class="line">Start time: 2020-05-01T00:00:00.000000000</span><br><span class="line">End time: 2020-05-01T12:00:00.000000000</span><br><span class="line">Time step: 3600.0 seconds</span><br></pre></td></tr></table></figure>

<ul>
<li>生成 Dynamic Driver 数据到<code>./dynamic_files</code></li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Wuhan_dynamic_2020_5_1_0</span><br></pre></td></tr></table></figure>

<h4 id="检验对比"><a href="#检验对比" class="headerlink" title="检验对比"></a>检验对比</h4><p>n order for users to quickly check the quality of the dynamic driver generated by WRF4PALM, we provide a quick comparison script. Five variables are allowed (can be in uppercase or lowercase):</p>
<p>U  -  V  -  W  -  PT  -  QV</p>
<p>Three plot types are provided:</p>
<p><strong>zcross</strong>: vertical cross sections of west&#x2F;east&#x2F;south&#x2F;north boundaries for the user specified variable and timestamp</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python quick_compare.py [your namelist] zcross [variable name]</span><br></pre></td></tr></table></figure>

<p>then the script will ask for the timestamp:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Please enter the timestamp (yyyy-mm-dd-hh):</span><br></pre></td></tr></table></figure>

<p>Once the timestamp is given, the script will return a comparison plot.</p>
<p><strong>pr</strong>: vertical profiless of west&#x2F;east&#x2F;south&#x2F;north boundaries for the user specified variable and timestamp</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 quick_compare.py [your namelist] pr [variable name]</span><br></pre></td></tr></table></figure>

<p>then the script will ask for the timestamp:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Please enter the timestamp (yyyy-mm-dd-hh):</span><br></pre></td></tr></table></figure>

<p>Once the timestamp is given, the script will return a comparison plot.<br>Note that the vertical profiles are horizontally averaged and hence the comparison only gives a approximate reference regarding the performance of WRF4PALM.</p>
<p><strong>ts</strong>: time series of west&#x2F;east&#x2F;south&#x2F;north boundaries for the user specified variable and altitude</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 quick_compare.py [your namelist] ts [variable name]</span><br></pre></td></tr></table></figure>

<p>then the script will ask for the altitude:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Please enter the vertical level in m:</span><br></pre></td></tr></table></figure>

<p>Once the vertical level is given, the script will return a comparison plot.<br>Note that the time series are horizontally averaged and hence the comparison only gives a approximate reference regarding the performance of WRF4PALM.</p>
<p><img src="https://p.ipic.vip/jfw2ol.png" alt="compare"></p>
<p><font color='red'><strong>！！注意！！原版代码<code>dynamic_util/surface_nan_solver.py </code>中存在bug</strong></font></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">以下为订正后的正确代码：</span></span><br><span class="line">def surface_nan_uv(data,z, uv10):</span><br><span class="line">    &#x27;&#x27;&#x27;</span><br><span class="line">    assuming U = a*log(z)+b</span><br><span class="line">    &#x27;&#x27;&#x27;</span><br><span class="line">    nan_idx = np.argwhere(np.isnan(data))</span><br><span class="line">    if nan_idx.size &gt; 0 :</span><br><span class="line">        nan_idx = int(nan_idx[-1])+1</span><br><span class="line">        terrain_height = z[nan_idx]</span><br><span class="line">        a = (data[nan_idx]-uv10)/np.log(terrain_height/(terrain_height-10))</span><br><span class="line">        b = uv10-a*np.log(terrain_height-10)</span><br><span class="line">        for i in range(0,int(nan_idx)):</span><br><span class="line">            data[i] = a*np.log(z[i])+b</span><br><span class="line">    return(data)</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>NCL</title>
    <url>/2022/05/01/Tool/NCL/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>℃     </p>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">~F34~<span class="number">0</span>~F~ C</span><br></pre></td></tr></table></figure>

<h2 id="Function"><a href="#Function" class="headerlink" title="Function"></a>Function</h2><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">undef(<span class="string">&quot;ttest_TLL&quot;</span>)</span><br><span class="line"><span class="function"><span class="keyword">function</span></span> ttest_TLL(x:numeric,y:numeric,sig:numeric)</span><br><span class="line">begin</span><br><span class="line">    dimXY = dimsizes(x)</span><br><span class="line">    ntim  = dimXY(<span class="number">0</span>)</span><br><span class="line">    nlat  = dimXY(<span class="number">1</span>)</span><br><span class="line">    mlon  = dimXY(<span class="number">2</span>)</span><br><span class="line">    xtmp = x(lat|:,lon|:,time|:)       ; reorder but <span class="keyword">do</span> it <span class="keyword">only</span> once [temporary]</span><br><span class="line">    ytmp = y(lat|:,lon|:,time|:)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    xAve = dim_avg (xtmp)              ; calculate means at each grid point </span><br><span class="line">    yAve = dim_avg (ytmp)</span><br><span class="line">    xVar = dim_variance (xtmp)         ; calculate variances</span><br><span class="line">    yVar = dim_variance (ytmp)</span><br><span class="line">    sigr = sig                        ; critical sig lvl for r</span><br><span class="line">    xEqv = equiv_sample_size (xtmp, sigr,<span class="number">0</span>)</span><br><span class="line">    yEqv = equiv_sample_size (ytmp, sigr,<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    printVarSummary(xEqv)</span><br><span class="line">    printVarSummary(yEqv)</span><br><span class="line"></span><br><span class="line">    xN   = wgt_areaave (xEqv, <span class="number">1.</span>, <span class="number">1.</span>, <span class="number">0</span>)    ; wgty could be gaussian weights </span><br><span class="line">    yN   = wgt_areaave (yEqv, <span class="number">1.</span>, <span class="number">1.</span>, <span class="number">0</span>)</span><br><span class="line">    iflag= False                        ; population variance similar</span><br><span class="line">    prob = ttest(xAve,xVar,xN, yAve,yVar,yN, iflag, False)</span><br><span class="line">    copy_VarMeta(xtmp(:,:,<span class="number">0</span>),prob)</span><br><span class="line">    <span class="keyword">return</span>(prob)</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>



<h2 id="IO"><a href="#IO" class="headerlink" title="IO"></a>IO</h2><ul>
<li>output large files</li>
</ul>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">setfileoption(<span class="string">&quot;nc&quot;</span>,<span class="string">&quot;Format&quot;</span>,<span class="string">&quot;LargeFile&quot;</span>)</span><br><span class="line">setfileoption(<span class="string">&quot;nc&quot;</span>,<span class="string">&quot;Format&quot;</span>,<span class="string">&quot;NetCDF4Classic&quot;</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li>output</li>
</ul>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">finame_out           =   dir+<span class="string">&quot;/WORK/data/OUT/MOD/Boot_NPI/CMIP5/&quot;</span>+modelname+<span class="string">&quot;_NPI_J-J_EN.nc&quot;</span></span><br><span class="line">system(<span class="string">&quot;rm -rf &quot;</span>+finame_out)</span><br><span class="line">setfileoption(<span class="string">&quot;nc&quot;</span>,<span class="string">&quot;Format&quot;</span>,<span class="string">&quot;LargeFile&quot;</span>)</span><br><span class="line">fiout                =   addfile(finame_out,<span class="string">&quot;c&quot;</span>)</span><br><span class="line">fiout-&gt;NPI       		 =   save_NPI_E</span><br><span class="line">fiout-&gt;NPI_avg       =   dim_avg_n_Wrap(save_NPI_E,<span class="number">1</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li>read multiple files</li>
</ul>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">;---Get list of files from years <span class="number">1980</span> to <span class="number">2008</span></span><br><span class="line">yyyy      = ispan(<span class="number">1958</span>,<span class="number">2010</span>,<span class="number">1</span>)</span><br><span class="line">all_files = <span class="string">&quot;JRA55_divQ_trans_&quot;</span> + yyyy + <span class="string">&quot;.nc&quot;</span></span><br><span class="line"></span><br><span class="line">fils = systemfunc (<span class="string">&quot;ls /project/cas/ruyanc/WORK/data/OUT/OBS/Diabatic/1958/Q_mon_1958-2010_JRA.nc&quot;</span>)</span><br><span class="line">f    = addfiles (fils, <span class="string">&quot;r&quot;</span>)</span><br><span class="line">ListSetType (f, <span class="string">&quot;join&quot;</span>)</span><br><span class="line">Q  = f[:]-&gt;Q</span><br></pre></td></tr></table></figure>



<h2 id="处理NAN值"><a href="#处理NAN值" class="headerlink" title="处理NAN值"></a>处理NAN值</h2><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="built_in">any</span>(isnan_ieee(t2m_an))) <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">value</span> = <span class="number">1.e20</span></span><br><span class="line">      replace_ieeenan (t2m_an, <span class="keyword">value</span>, <span class="number">0</span>)</span><br><span class="line">      t2m_an@_FillValue = <span class="keyword">value</span></span><br><span class="line"><span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> .not.<span class="built_in">any</span>(ismissing(inds)) <span class="keyword">then</span></span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line"><span class="keyword">end</span> <span class="keyword">if</span> </span><br></pre></td></tr></table></figure>



<h2 id="plot"><a href="#plot" class="headerlink" title="plot"></a>plot</h2><ul>
<li>Font</li>
</ul>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">res@tiMainFont            = <span class="string">&quot;helvetica&quot;</span></span><br><span class="line">res@tmXBLabelFont         = <span class="string">&quot;helvetica&quot;</span></span><br><span class="line">res@tmYLLabelFont         = <span class="string">&quot;helvetica&quot;</span></span><br><span class="line">res@tiYAxisFont           = <span class="string">&quot;helvetica&quot;</span></span><br><span class="line">res@tiXAxisFont           = <span class="string">&quot;helvetica&quot;</span></span><br><span class="line">res@txFont                = <span class="string">&quot;helvetica&quot;</span></span><br><span class="line">res@lbLabelFont           = <span class="string">&quot;helvetica&quot;</span></span><br><span class="line">res@cnLineLabelFont       = <span class="string">&quot;helvetica&quot;</span></span><br></pre></td></tr></table></figure>



<ul>
<li>coordinate info</li>
</ul>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">sf_temp&amp;lat@units=<span class="string">&quot;degrees_north&quot;</span></span><br><span class="line">sf_temp&amp;lon@units=<span class="string">&quot;degrees_east&quot;</span></span><br></pre></td></tr></table></figure>



<ul>
<li>Label Bar</li>
</ul>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">res_cn@lbLabelBarOn          			= True</span><br><span class="line">res_cn@lbBoxEndCapStyle  					= <span class="string">&quot;TriangleBothEnds&quot;</span> </span><br><span class="line">res_cn@pmLabelBarOrthogonalPosF 	= <span class="number">0.2</span></span><br><span class="line">res@lbLabelBarOn       						= True</span><br><span class="line">res@lbTitleString  	= <span class="string">&quot;units: 10~S~6~N~ m~S~2~N~ s~S~-1~N~&quot;</span></span><br><span class="line">res@lbTitleFont 		=  <span class="string">&quot;helvetica&quot;</span></span><br><span class="line">res@lbTitlePosition = <span class="string">&quot;Top&quot;</span></span><br><span class="line">res@lbTitleFont 		= <span class="string">&quot;helvetica&quot;</span></span><br><span class="line">res@pmLabelBarHeightF 	= <span class="number">0.07</span></span><br><span class="line">res@pmLabelBarWidthF 		= <span class="number">0.7</span> </span><br><span class="line">res@lbLabelFontHeightF 	= <span class="number">0.013</span></span><br><span class="line">res@lbTitleFontHeightF 	= <span class="number">0.017</span></span><br><span class="line">res@pmLabelBarOrthogonalPosF = <span class="number">0.2</span> </span><br></pre></td></tr></table></figure>



<ul>
<li>add box</li>
</ul>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">ypts = (/<span class="number">15.0</span>,  <span class="number">15.0</span>, -<span class="number">15.0</span>, -<span class="number">15.0</span>, <span class="number">15.0</span>/)</span><br><span class="line">xpts = (/<span class="number">30</span>, <span class="number">110</span>, <span class="number">110</span>, <span class="number">30</span>, <span class="number">30</span>/)</span><br><span class="line"></span><br><span class="line">resp                  = True      </span><br><span class="line">resp@gsLineColor      = <span class="string">&quot;red&quot;</span>                </span><br><span class="line">resp@gsLineThicknessF = <span class="number">6.0</span>        </span><br><span class="line"></span><br><span class="line">dum1 = new(<span class="number">4</span>,graphic)</span><br><span class="line"><span class="keyword">do</span> i = <span class="number">0</span> , <span class="number">3</span></span><br><span class="line">dum1(i)=gsn_add_polyline(wks,plot,xpts(i:i+<span class="number">1</span>),ypts(i:i+<span class="number">1</span>),resp)</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">do</span></span><br></pre></td></tr></table></figure>



<ul>
<li>change color bar</li>
</ul>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">cmap    	= read_colormap_file(<span class="string">&quot;temp_19lev&quot;</span>)    </span><br><span class="line">ncolors 	= dimsizes(cmap(:,<span class="number">0</span>))      </span><br><span class="line">cmap(<span class="number">9</span>,:) = namedcolor2rgba(<span class="string">&quot;white&quot;</span>)</span><br><span class="line">cmap(<span class="number">10</span>,:) = namedcolor2rgba(<span class="string">&quot;white&quot;</span>) </span><br><span class="line">cmap(<span class="number">10</span>,:) = namedcolor2rgba(<span class="string">&quot;white&quot;</span>)</span><br><span class="line">cmap(<span class="number">11</span>,:) = namedcolor2rgba(<span class="string">&quot;white&quot;</span>)</span><br><span class="line"></span><br><span class="line">res@cnFillPalette := cmap</span><br></pre></td></tr></table></figure>



<ul>
<li>2D Fill</li>
</ul>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">;************************************************</span><br><span class="line">; <span class="number">2</span>D Fill</span><br><span class="line">;************************************************</span><br><span class="line"></span><br><span class="line">begin</span><br><span class="line"></span><br><span class="line">;************************************************</span><br><span class="line">; set <span class="keyword">parameter</span></span><br><span class="line">;************************************************</span><br><span class="line"></span><br><span class="line">dirin = <span class="string">&quot;/home/hwy_stu/WORK3/973/data/&quot;</span></span><br><span class="line">dirout = <span class="string">&quot;/home/hwy_stu/WORK3/973/plots/CLM/&quot;</span></span><br><span class="line"></span><br><span class="line">StartDate = <span class="number">197901</span></span><br><span class="line">EndDate   = <span class="number">200512</span></span><br><span class="line"></span><br><span class="line">lonE = <span class="number">0</span></span><br><span class="line">lonW = <span class="number">350</span></span><br><span class="line">latS = -<span class="number">90</span></span><br><span class="line">latN = <span class="number">90</span></span><br><span class="line"></span><br><span class="line">para = <span class="string">&quot;ctl&quot;</span></span><br><span class="line"></span><br><span class="line">;************************************************</span><br><span class="line">; read <span class="keyword">in</span> <span class="keyword">data</span></span><br><span class="line">;************************************************</span><br><span class="line"></span><br><span class="line">  filein_1 = addfile(dirin+<span class="string">&quot;/obs/GPCP.precip.mon.mean_remap.nc&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line"></span><br><span class="line">  var_ori_1 = filein_1-&gt;precip</span><br><span class="line"></span><br><span class="line">  var_cut = var_ori_1(&#123;StartDate:EndDate&#125;,:,:)</span><br><span class="line">  printVarSummary(var_cut)  </span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&quot;------------------------------------&quot;</span>)</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&quot;min: &quot;</span>+<span class="built_in">min</span>(var_cut)+<span class="string">&quot;   max: &quot;</span>+<span class="built_in">max</span>(var_cut))</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&quot;------------------------------------&quot;</span>)</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&quot;units: &quot;</span>+var_cut@units)</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&quot;------------------------------------&quot;</span>)</span><br><span class="line"></span><br><span class="line">  var_TransUnits = var_cut*<span class="number">1000</span>*<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span></span><br><span class="line">  copy_VarMeta(var_cut,var_TransUnits)</span><br><span class="line">  var_TransUnits@units = <span class="string">&quot;mm/day&quot;</span></span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&quot;------------------------------------&quot;</span>)</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&quot;units new: &quot;</span>+var_TransUnits@units)</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&quot;------------------------------------&quot;</span>)</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&quot;min: &quot;</span>+<span class="built_in">min</span>(var_TransUnits)+<span class="string">&quot;   max: &quot;</span>+<span class="built_in">max</span>(var_TransUnits))</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&quot;------------------------------------&quot;</span>)</span><br><span class="line"></span><br><span class="line">  var = var_cut</span><br><span class="line">  var_clm = dim_avg_n_Wrap(var,<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">;************************************************</span><br><span class="line">; create plot</span><br><span class="line">;************************************************</span><br><span class="line"></span><br><span class="line">  wks   =  gsn_open_wks(<span class="string">&quot;pdf&quot;</span>,dirout+<span class="string">&quot;precip_clm_GPCP&quot;</span>)            </span><br><span class="line">  cmap  =  read_colormap_file(<span class="string">&quot;precip2_17lev&quot;</span>)</span><br><span class="line"></span><br><span class="line">  res   = True      </span><br><span class="line">  </span><br><span class="line">  res@mpMinLonF     = lonE</span><br><span class="line">  res@mpMaxLonF     = lonW</span><br><span class="line">  res@mpMinLatF     = latS</span><br><span class="line">  res@mpMaxLatF     = latN</span><br><span class="line">  res@mpCenterLonF  = <span class="number">180</span></span><br><span class="line"></span><br><span class="line">  res@cnLevelSelectionMode = <span class="string">&quot;ManualLevels&quot;</span>    </span><br><span class="line">  res@cnMinLevelValF       = <span class="number">1.</span>              </span><br><span class="line">  res@cnMaxLevelValF       = <span class="number">12.</span>             </span><br><span class="line">  res@cnLevelSpacingF      = <span class="number">1.</span>           </span><br><span class="line">  </span><br><span class="line">  res@cnFillOn             = True</span><br><span class="line">  res@cnFillPalette        = cmap;(<span class="number">0</span>:<span class="number">18</span>,:)</span><br><span class="line"></span><br><span class="line">  res@cnLinesOn     = False</span><br><span class="line">  res@cnInfoLabelOn = False</span><br><span class="line"></span><br><span class="line">  res@txFont                = <span class="string">&quot;helvetica&quot;</span></span><br><span class="line">  res@tiMainFont            = <span class="string">&quot;helvetica&quot;</span></span><br><span class="line">  res@tmXBLabelFont         = <span class="string">&quot;helvetica&quot;</span></span><br><span class="line">  res@tmYLLabelFont         = <span class="string">&quot;helvetica&quot;</span></span><br><span class="line">  res@tiYAxisFont           = <span class="string">&quot;helvetica&quot;</span></span><br><span class="line">  res@tiXAxisFont           = <span class="string">&quot;helvetica&quot;</span></span><br><span class="line">  res@txFont                = <span class="string">&quot;helvetica&quot;</span></span><br><span class="line">  res@lbLabelFont           = <span class="string">&quot;helvetica&quot;</span></span><br><span class="line">  res@lbTitleFont           = <span class="string">&quot;helvetica&quot;</span></span><br><span class="line"></span><br><span class="line">  res@tiMainString          = <span class="string">&quot;&quot;</span> </span><br><span class="line">  res@gsnCenterString       = <span class="string">&quot;GPCP Precipitation Climatology&quot;</span></span><br><span class="line">  res@gsnCenterStringFontHeightF    = <span class="number">0.02</span></span><br><span class="line">  res@gsnCenterStringOrthogonalPosF = <span class="number">0.1</span></span><br><span class="line">  res@gsnLeftString         = <span class="built_in">min</span>(var&amp;time)+<span class="string">&quot;-&quot;</span>+<span class="built_in">max</span>(var&amp;time) </span><br><span class="line">  res@gsnRightString        =  var@units</span><br><span class="line">  res@pmTickMarkDisplayMode = <span class="string">&quot;Always&quot;</span></span><br><span class="line"></span><br><span class="line">  res@lbLabelBarOn              = True</span><br><span class="line">  res@pmLabelBarHeightF         = <span class="number">0.08</span></span><br><span class="line">  res@pmLabelBarOrthogonalPosF  = <span class="number">0.1</span></span><br><span class="line"></span><br><span class="line">  plot = gsn_csm_contour_map(wks,var_clm, res)  </span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>



<ul>
<li>significance test with dots</li>
</ul>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">res2 = res </span><br><span class="line">res2@cnFillMode = <span class="string">&quot;AreaFill&quot;</span></span><br><span class="line">res2@cnFillPattern = <span class="number">17</span></span><br><span class="line">res2@cnFillDotSizeF = <span class="number">0.004</span></span><br><span class="line">res2@cnMonoFillColor = True</span><br><span class="line">res2@cnFillColor = <span class="string">&quot;Black&quot;</span></span><br><span class="line">res2@gsnRightString        = <span class="string">&quot;&quot;</span></span><br><span class="line">res2@lbLabelBarOn          = False</span><br></pre></td></tr></table></figure>



<ul>
<li>mask land</li>
</ul>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">fi_mask = addfile(dir+<span class="string">&quot;/WORK/data/Reference/landsea.nc&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line">lsm  = landsea_mask(fi_mask-&gt;LSMASK,TS_ctr&amp;lat,TS_ctr&amp;lon)       </span><br><span class="line">TS_an_FM = mask(TS_an_FM,lsm.eq<span class="number">.1</span>,False)</span><br></pre></td></tr></table></figure>



<h2 id="Calculation"><a href="#Calculation" class="headerlink" title="Calculation"></a>Calculation</h2><ul>
<li>area average</li>
</ul>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">rad       = <span class="number">4.0</span>*<span class="built_in">atan</span>(<span class="number">1.0</span>)/<span class="number">180.0</span></span><br><span class="line">NPI_box   = slp_an(:,&#123;<span class="number">35</span>:<span class="number">60</span>&#125;,&#123;<span class="number">165</span>:<span class="number">360</span>-<span class="number">145</span>&#125;)</span><br><span class="line">NPI_lat   = NPI_box&amp;lat</span><br><span class="line">NPI_clat  = <span class="built_in">cos</span>(NPI_lat*rad)</span><br><span class="line">NPI       = wgt_areaave_Wrap(NPI_box,NPI_clat,<span class="number">1.0</span>,<span class="number">1</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li>advection</li>
</ul>
<p><a href="http://www.ncl.ucar.edu/Document/Functions/Contributed/advect_variable_cfd.shtml">http://www.ncl.ucar.edu/Document/Functions/Contributed/advect_variable_cfd.shtml</a></p>
<p>Using centered-finite_differences (cfd) to estimate gradients, advect a variable horizontally on a regional or global rectilinear grid.</p>
<p>Use “highly accurate” spherical harmonics to estimate gradients and advect a variable horizontally on a global rectilinear grid.<br><a href="http://www.ncl.ucar.edu/Document/Functions/Contributed/advect_variable.shtml">http://www.ncl.ucar.edu/Document/Functions/Contributed/advect_variable.shtml</a><br>NOTE: This is a non-linear quantity. Generally, it is not appropriate to use (say) monthly means quantities. Rather, high-frequency (hourly, 3-hr, 6-hr, daily) quantities should be used.<br>This function requires that the grids be global because the “highly accurate” spherical harmonic functions are used to derive the gradients.</p>
<ul>
<li>zonal gradients</li>
</ul>
<p><a href="http://ncl.ucar.edu/Applications/gradients.shtml">http://ncl.ucar.edu/Applications/gradients.shtml</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grad_latlon_cfd</span><br></pre></td></tr></table></figure>

<ul>
<li>vertical integration</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">linlog = 1 </span><br><span class="line">pbot   = 1000</span><br><span class="line">ptop   = 100</span><br><span class="line"></span><br><span class="line">Q_vint = vibeta (Q&amp;pre,Q(lat|:,lon|:,pre|:), linlog,ps,pbot,ptop)</span><br><span class="line">copy_VarMeta(Q(0,:,:),Q_vint)</span><br></pre></td></tr></table></figure>

<ul>
<li>remap</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">area_conserve_remap_Wrap (loni,lati,fi, lono,lato, False)</span><br></pre></td></tr></table></figure>

<ul>
<li>regression</li>
</ul>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">rc = regCoef_n(NPI,Precip,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">rc<span class="comment">!0 = &quot;lat&quot;</span></span><br><span class="line">rc<span class="comment">!1 = &quot;lon&quot; </span></span><br><span class="line">rc&amp;lat = Precip&amp;lat </span><br><span class="line">rc&amp;lon = Precip&amp;lon </span><br><span class="line"></span><br><span class="line">printVarSummary(rc)</span><br><span class="line">printMinMax(rc,True)</span><br><span class="line"></span><br><span class="line">tval = onedtond(rc@tval , dimsizes(rc))</span><br><span class="line">df   = onedtond(rc@nptxy, dimsizes(rc)) - <span class="number">2</span> </span><br><span class="line">b = tval    ; b must be same <span class="built_in">size</span> as tval (and df)</span><br><span class="line">b = <span class="number">0.5</span></span><br><span class="line">prob = betainc(df/(df+tval^<span class="number">2</span>),df/<span class="number">2.0</span>,b)       ; prob(nlat,nlon)</span><br><span class="line">copy_VarMeta(rc,prob)</span><br><span class="line"></span><br><span class="line">rc_sig = rc</span><br><span class="line">psig = <span class="number">0.05</span></span><br><span class="line">rc_sig = <span class="keyword">where</span>(prob.le.psig,rc_sig,rc_sig@_FillValue)</span><br></pre></td></tr></table></figure>

<ul>
<li>Correlation map</li>
</ul>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">begin</span><br><span class="line"></span><br><span class="line">undef(<span class="string">&quot;escorc_lead_TLL&quot;</span>)</span><br><span class="line"><span class="function"><span class="keyword">function</span></span> escorc_lead_TLL(ts_in:numeric,var_in:numeric,lead_years:numeric,if_dtrend:<span class="keyword">logical</span>,if_cover:<span class="keyword">logical</span>,sig:numeric)</span><br><span class="line">begin</span><br><span class="line">    <span class="keyword">if</span>(if_dtrend) <span class="keyword">then</span></span><br><span class="line">        ts    =   dtrend_n(ts_in,False,<span class="number">0</span>)</span><br><span class="line">        var   =   dtrend_n(var_in,False,<span class="number">0</span>)</span><br><span class="line">        copy_VarMeta(ts_in,ts)</span><br><span class="line">        copy_VarMeta(var_in,var)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        ts  =   ts_in</span><br><span class="line">        var =   var_in</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line">    time    =   ts&amp;time </span><br><span class="line">    num_time    =   dimsizes(time)</span><br><span class="line">    <span class="keyword">if</span> (lead_years .ge. <span class="number">0</span>) <span class="keyword">then</span></span><br><span class="line">        ts_move     =   ts(<span class="number">0</span>:num_time-<span class="number">1</span>-lead_years)</span><br><span class="line">        var_move    =   var(lead_years:num_time-<span class="number">1</span>,:,:)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        ts_move     =   ts(-lead_years:num_time-<span class="number">1</span>)</span><br><span class="line">        var_move    =   var(<span class="number">0</span>:num_time-<span class="number">1</span>+lead_years,:,:)  </span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line">    var_move_LLT    =   var_move(lat|:,lon|:,time|:)</span><br><span class="line">    rc  =   escorc(ts_move, var_move_LLT(lat|:,lon|:,time|:))</span><br><span class="line">    copy_VarMeta(var_move_LLT(:,:,<span class="number">0</span>),rc)</span><br><span class="line">    N   =   dimsizes(ts)</span><br><span class="line">    df  =   N-<span class="number">2</span></span><br><span class="line">    num_lat =   dimsizes(rc&amp;lat)</span><br><span class="line">    num_lon =   dimsizes(rc&amp;lon)</span><br><span class="line">    tval    =   new(dimsizes(rc),typeof(rc),rc@_FillValue)</span><br><span class="line">    prob    =   tval</span><br><span class="line">    <span class="keyword">do</span> j = <span class="number">0</span>, num_lat-<span class="number">1</span></span><br><span class="line">    <span class="keyword">do</span> i = <span class="number">0</span>, num_lon-<span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> (.not.ismissing(rc(j,i))) <span class="keyword">then</span></span><br><span class="line">        tval(j,i)   =   rc(j,i)*<span class="built_in">sqrt</span>((df*<span class="number">1.0</span>)/(<span class="number">1.0</span>-rc(j,i)^<span class="number">2</span>))</span><br><span class="line">        prob(j,i)   =   betainc( df/(df+tval(j,i)^<span class="number">2</span>), df/<span class="number">2.0</span>, <span class="number">0.5</span>)</span><br><span class="line">        <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span>( if_cover ) <span class="keyword">then</span></span><br><span class="line">        rc    =   <span class="keyword">where</span>(prob .gt. sig, rc, rc@_FillValue)</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line">    copy_VarMeta(rc,prob)</span><br><span class="line">    <span class="keyword">return</span>(rc)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">f = addfile(<span class="string">&quot;/home/data_temp/rychen/Paleo/PHYDA/da_hydro_DecFeb_r.1-2000_d.05-Jan-2018.nc&quot;</span>, <span class="string">&quot;r&quot;</span>)</span><br><span class="line"></span><br><span class="line">sst_temp = f-&gt;tas_mn</span><br><span class="line">sst_all = doubletofloat(sst_temp)</span><br><span class="line">copy_VarMeta(sst_temp,sst_all)</span><br><span class="line">printVarSummary(sst_all)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">time = sst_all&amp;time</span><br><span class="line">;-------------------------------</span><br><span class="line">sst_avg = sst_all</span><br><span class="line">sst_avg = runave_n_Wrap(sst_all,<span class="number">30</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">temp = dim_avg_n_Wrap(sst_all(<span class="number">0</span>:<span class="number">30</span>-<span class="number">1</span>,:,:),<span class="number">0</span>)</span><br><span class="line"><span class="keyword">do</span> it = <span class="number">0</span>,<span class="number">15</span>-<span class="number">1</span></span><br><span class="line">sst_avg(it,:,:) = temp</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">do</span> </span><br><span class="line">temp = dim_avg_n_Wrap(sst_all(dimsizes(time)-<span class="number">30</span>:dimsizes(time)-<span class="number">1</span>,:,:),<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span> it = dimsizes(time)-<span class="number">15</span>,dimsizes(time)-<span class="number">1</span></span><br><span class="line">sst_avg(it,:,:) = temp</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">sst_new = sst_all-sst_avg</span><br><span class="line">copy_VarMeta(sst_all, sst_new)</span><br><span class="line">printVarSummary(sst_new)</span><br><span class="line"></span><br><span class="line">sst_all = sst_new</span><br><span class="line">;-------------------------------</span><br><span class="line"></span><br><span class="line">sst = sst_all(<span class="number">0</span>:<span class="number">200</span>-<span class="number">1</span>,:,:)</span><br><span class="line">printVarSummary(sst)</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span> it = <span class="number">0</span>,<span class="number">200</span>-<span class="number">1</span>,<span class="number">1</span></span><br><span class="line">sst(it,:,:) = dim_avg_n_Wrap(sst_all(it*<span class="number">10</span>:it*<span class="number">10</span>+<span class="number">9</span>,:,:), <span class="number">0</span>)</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">do</span> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fi = addfile(<span class="string">&quot;/home/data_temp/rychen/OUT/Paleo/AMO/PHYDA_EN_numnber_per_ten_years.nc&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line">EN = fi-&gt;<span class="built_in">All</span></span><br><span class="line"></span><br><span class="line">fi = addfile(<span class="string">&quot;/home/data_temp/rychen/OUT/Paleo/AMO/PHYDA_LN_numnber_per_ten_years.nc&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line">LN = fi-&gt;<span class="built_in">All</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">printVarSummary(sst)</span><br><span class="line">printVarSummary(EN)</span><br><span class="line">printVarSummary(LN)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fi_mask = addfile(<span class="string">&quot;$NCARG_ROOT/lib/ncarg/data/cdf/landsea.nc&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line">lsm  = landsea_mask(fi_mask-&gt;LSMASK,sst&amp;lat,sst&amp;lon)       </span><br><span class="line">sst = mask(sst,lsm.eq<span class="number">.1</span>,False)</span><br><span class="line"></span><br><span class="line">printVarSummary(LN)</span><br><span class="line">printVarSummary(sst)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">LN<span class="comment">!0 = &quot;time&quot;</span></span><br><span class="line">LN&amp;time = ispan(<span class="number">1</span>, <span class="number">200</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">EN<span class="comment">!0 = &quot;time&quot;</span></span><br><span class="line">EN&amp;time = ispan(<span class="number">1</span>, <span class="number">200</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">;*************************************************</span><br><span class="line">; reg</span><br><span class="line">;*************************************************</span><br><span class="line"></span><br><span class="line">rc = escorc_lead_TLL(EN,sst,<span class="number">0</span>,False,False,<span class="number">0.05</span>)</span><br><span class="line">rc_sig = escorc_lead_TLL(EN,sst,<span class="number">0</span>,False,True,<span class="number">0.05</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">;************************************************</span><br><span class="line">; create plot</span><br><span class="line">;************************************************</span><br><span class="line"></span><br><span class="line">wks  = gsn_open_wks (<span class="string">&quot;pdf&quot;</span>,<span class="string">&quot;/home/rychen/plots/AMO/cor_EN_to_SST_ten_years_all&quot;</span>) </span><br><span class="line">gsn_define_colormap(wks, <span class="string">&quot;BlueWhiteOrangeRed&quot;</span>)</span><br><span class="line">;cmap  =  read_colormap_file(<span class="string">&quot;precip2_17lev&quot;</span>)</span><br><span class="line"></span><br><span class="line">res   = True      </span><br><span class="line"></span><br><span class="line">res@mpMinLonF     = <span class="number">0</span></span><br><span class="line">res@mpMaxLonF     = <span class="number">360</span></span><br><span class="line">res@mpMinLatF     = -<span class="number">90</span></span><br><span class="line">res@mpMaxLatF     = <span class="number">90</span></span><br><span class="line">res@mpCenterLonF  = <span class="number">180</span></span><br><span class="line"></span><br><span class="line">res@cnLevelSelectionMode = <span class="string">&quot;ManualLevels&quot;</span>    </span><br><span class="line">res@cnMinLevelValF       = -<span class="number">0.8</span>            </span><br><span class="line">res@cnMaxLevelValF       = <span class="number">0.8</span>      </span><br><span class="line">res@cnLevelSpacingF      = <span class="number">0.08</span>           </span><br><span class="line"></span><br><span class="line">res@cnFillOn             = True</span><br><span class="line">;res@cnFillPalette        = cmap;(<span class="number">0</span>:<span class="number">18</span>,:)</span><br><span class="line"></span><br><span class="line">res@cnLinesOn     = False</span><br><span class="line">res@cnInfoLabelOn = False</span><br><span class="line"></span><br><span class="line">res@txFont                = <span class="string">&quot;helvetica&quot;</span></span><br><span class="line">res@tiMainFont            = <span class="string">&quot;helvetica&quot;</span></span><br><span class="line">res@tmXBLabelFont         = <span class="string">&quot;helvetica&quot;</span></span><br><span class="line">res@tmYLLabelFont         = <span class="string">&quot;helvetica&quot;</span></span><br><span class="line">res@tiYAxisFont           = <span class="string">&quot;helvetica&quot;</span></span><br><span class="line">res@tiXAxisFont           = <span class="string">&quot;helvetica&quot;</span></span><br><span class="line">res@txFont                = <span class="string">&quot;helvetica&quot;</span></span><br><span class="line">res@lbLabelFont           = <span class="string">&quot;helvetica&quot;</span></span><br><span class="line">res@lbTitleFont           = <span class="string">&quot;helvetica&quot;</span></span><br><span class="line"></span><br><span class="line">res@tiMainString          = <span class="string">&quot;&quot;</span> </span><br><span class="line">res@gsnCenterString       = <span class="string">&quot;&quot;</span></span><br><span class="line">res@gsnCenterStringFontHeightF    = <span class="number">0.02</span></span><br><span class="line">res@gsnCenterStringOrthogonalPosF = <span class="number">0.1</span></span><br><span class="line">res@gsnLeftString         = <span class="string">&quot;&quot;</span></span><br><span class="line">res@gsnRightString        =  <span class="string">&quot;&quot;</span></span><br><span class="line">res@pmTickMarkDisplayMode = <span class="string">&quot;Always&quot;</span></span><br><span class="line"></span><br><span class="line">res@lbLabelBarOn              = True</span><br><span class="line">res@pmLabelBarHeightF         = <span class="number">0.08</span></span><br><span class="line">res@pmLabelBarOrthogonalPosF  = <span class="number">0.1</span></span><br><span class="line">res@cnLineLabelsOn = False</span><br><span class="line"></span><br><span class="line">res@lbBoxEndCapStyle     = <span class="string">&quot;TriangleBothEnds&quot;</span></span><br><span class="line">res@lbLabelBarOn             = True</span><br><span class="line">res@pmLabelBarHeightF        = <span class="number">0.05</span></span><br><span class="line">res@pmLabelBarOrthogonalPosF = <span class="number">0.17</span></span><br><span class="line">res@lbLabelFontHeightF       = <span class="number">0.01</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">res2 = res </span><br><span class="line">res2@cnFillMode = <span class="string">&quot;AreaFill&quot;</span></span><br><span class="line">res2@cnFillPattern = <span class="number">5</span></span><br><span class="line">res2@cnFillDotSizeF = <span class="number">0.004</span></span><br><span class="line">res2@cnMonoFillColor = True</span><br><span class="line">res2@cnFillColor = <span class="string">&quot;grey&quot;</span></span><br><span class="line">res2@gsnRightString        = <span class="string">&quot;&quot;</span></span><br><span class="line">res2@lbLabelBarOn          = False</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plot = gsn_csm_contour_map_overlay(wks, rc, rc_sig, res, res2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<ul>
<li>conform_dims</li>
</ul>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">PREC_FM = PREC_FM*conform_dims(dimsizes(PREC_FM),ratio_EN_DJF,<span class="number">0</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li>Find the latitude and longitude location of the maximum value in a two dimensional array</li>
</ul>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">dims = dimsizes(X)</span><br><span class="line">x1d  = ndtooned(X)      </span><br><span class="line"></span><br><span class="line">inds = ind_resolve(maxind (x1d), dims)</span><br><span class="line">ilat = inds(<span class="number">0</span>,<span class="number">0</span>)       </span><br><span class="line">ilon = inds(<span class="number">0</span>,<span class="number">1</span>)        </span><br><span class="line"></span><br><span class="line">lat_max = X&amp;lat(ilat)   </span><br><span class="line">lon_max = X&amp;lon(ilon)   </span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Maximum value located at &quot;</span>+lat_max+<span class="string">&quot;, &quot;</span>+lon_max) </span><br></pre></td></tr></table></figure>



<h2 id="System-Function"><a href="#System-Function" class="headerlink" title="System_Function"></a>System_Function</h2><ul>
<li>create a directory if it does not already exist</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DIR = &quot;SAMPLE&quot;</span><br><span class="line">system(&quot;if ! test -d &quot; + DIR +&quot; ; then mkdir &quot; + DIR + &quot; ; fi&quot;)</span><br></pre></td></tr></table></figure>

<ul>
<li>convert a GRIB file to netCDF</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ncl_convert2nc ced1.lf00.t00z.eta.grb</span><br></pre></td></tr></table></figure>





<h2 id="自定义色标"><a href="#自定义色标" class="headerlink" title="自定义色标"></a>自定义色标</h2><p>当NCL中的自带色标不能满足我们的需求时，可以设置自己的色标。</p>
<p>1.使用NCL自带色标</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">res@cnFillPalette       = &quot;色标名称&quot;</span><br><span class="line"></span><br><span class="line">;或</span><br><span class="line">gsn_define_colormap(wks,&quot;色标名称&quot;) </span><br></pre></td></tr></table></figure>

<p>2.修改NCL自带色标 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gsn_define_colormap(wks,”色标名称”)</span><br><span class="line">res@gsnSpreadColorStart   = 1      ; 色板ncl_default中序号为1的颜色</span><br><span class="line">res@gsnSpreadColorEnd    = -1     ; 色板ncl_default中倒数第1个颜色</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>定义自己的色板</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">colors = (/&quot;DeepSkyBlue2&quot;,&quot;DeepSkyBlue1&quot;,&quot;SkyBlue1&quot;,\</span><br><span class="line">          &quot;blanched almond&quot;,&quot;bisque&quot;,&quot;PeachPuff&quot;,&quot;PeachPuff2&quot;,\</span><br><span class="line">           &quot;LightSalmon&quot;,&quot;coral&quot;,&quot;orange red&quot;/)</span><br><span class="line"></span><br><span class="line">res@cnFillPalette       = colors</span><br></pre></td></tr></table></figure>

<ol start="4">
<li><p>使用三原色自定义色板的方式</p>
<p>建立   xxx.rgb  文件，如</p>
</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># r  g  b</span><br><span class="line">255 255 255</span><br><span class="line">0  0  255</span><br><span class="line">0  255 0</span><br></pre></td></tr></table></figure>

<p>将文件放在 $NCARG_ROOT\lib\ncarg\colormaps\ 目录下，使用</p>
<p>gsn_define_colormap(wks,”xxx”)  调用色板即可。</p>
<h2 id="Error-Workspace-reallocation-would-exceed-maximum-size-100000000"><a href="#Error-Workspace-reallocation-would-exceed-maximum-size-100000000" class="headerlink" title="Error: Workspace reallocation would exceed maximum size 100000000"></a>Error: Workspace reallocation would exceed maximum size 100000000</h2><p>The following code snippet shows how to use the <strong>NhlGetWorkspaceObjectId</strong> function to increase the maximum workspace memory:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wks = gsn_open_wks(&quot;x11&quot;,&quot;example&quot;)</span><br><span class="line"></span><br><span class="line">setvalues NhlGetWorkspaceObjectId()</span><br><span class="line">  &quot;wsMaximumSize&quot; : 300000000</span><br><span class="line">end setvalues</span><br></pre></td></tr></table></figure>

<p>This is useful if you find yourself getting an error message from NCL that looks like this:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fatal:ContourPlotPreDraw: Workspace reallocation would exceed maximum size 100000000</span><br><span class="line">fatal:ContourPlotDraw: draw error</span><br><span class="line">warning:WorkstationDeactivate: workstation not active or not opened</span><br></pre></td></tr></table></figure>





<h2 id="向NCL脚本传递参数"><a href="#向NCL脚本传递参数" class="headerlink" title="向NCL脚本传递参数"></a>向NCL脚本传递参数</h2><h3 id="Shell-版本"><a href="#Shell-版本" class="headerlink" title="Shell 版本"></a>Shell 版本</h3><h4 id="1-传递环境变量"><a href="#1-传递环境变量" class="headerlink" title="1. 传递环境变量"></a>1. 传递环境变量</h4><p>通过环境变量传递的是字符串，传递经纬度等数值型变量需要先转换为字符串</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">set -x </span><br><span class="line"></span><br><span class="line">export FILENAME=&quot;gfs.2022022300f150&quot;</span><br><span class="line">export LAT=40</span><br><span class="line"></span><br><span class="line">ncl Run.ncl</span><br></pre></td></tr></table></figure>

<p>在NCL中获取变量需要将字符串转为浮点数</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">begin</span><br><span class="line">    fn = getenv(&quot;FILENAME&quot;)</span><br><span class="line">    print(fn)    </span><br><span class="line">    </span><br><span class="line">    lat = tofloat(getenv(&quot;LAT&quot;))</span><br><span class="line">    print(lat)</span><br><span class="line"></span><br><span class="line">end</span><br></pre></td></tr></table></figure>



<h4 id="2-命令行参数"><a href="#2-命令行参数" class="headerlink" title="2. 命令行参数"></a>2. 命令行参数</h4><p>通过命令行传递参数，等号两侧没有空格，数值类型的直接以lat&#x3D;40传递即可，字符串变量需要在最外层添加单引号，具体变量值添加双引号。(详见：<a href="https://www.ncl.ucar.edu/Document/Manuals/">https://www.ncl.ucar.edu/Document/Manuals/</a>)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ncl lat=40 &#x27;fn=&quot;gfs.2022022300f150&quot;&#x27;  Run.ncl</span><br></pre></td></tr></table></figure>

<p>NCL脚本中可以直接使用命令行中传递的变量</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">begin    </span><br><span class="line">print(fn)        </span><br><span class="line">print(lat)</span><br><span class="line">end</span><br></pre></td></tr></table></figure>



<h4 id="3-动态生成临时脚本"><a href="#3-动态生成临时脚本" class="headerlink" title="3. 动态生成临时脚本"></a>3. 动态生成临时脚本</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">set -x </span><br><span class="line"></span><br><span class="line">FILENAME=&quot;gfs.2022022300f150&quot;</span><br><span class="line">LAT=40</span><br><span class="line"></span><br><span class="line">cat &lt;&lt; EOF &gt; Run.ncl       # &gt;表示覆盖</span><br><span class="line">begin</span><br><span class="line">    a = addfile(&quot;$&#123;FILENAME&#125;&quot;, &quot;r&quot;)</span><br><span class="line">    </span><br><span class="line">    res@mpMinLatF  = $&#123;LAT&#125;</span><br><span class="line"></span><br><span class="line">end</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>



<h3 id="Python-版本"><a href="#Python-版本" class="headerlink" title="Python 版本"></a>Python 版本</h3><h4 id="1-传递环境变量-1"><a href="#1-传递环境变量-1" class="headerlink" title="1. 传递环境变量"></a>1. 传递环境变量</h4><p>通过环境变量传递的是字符串，传递经纬度等数值型变量需要先转换为字符串</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os </span><br><span class="line"></span><br><span class="line">os.environ[<span class="string">&#x27;FILENAME&#x27;</span>] = <span class="string">&quot;gfs.2022022300f150&quot;</span></span><br><span class="line">os.environ[<span class="string">&#x27;LAT&#x27;</span>]      = <span class="built_in">str</span>(<span class="number">40</span>)</span><br><span class="line">os.system(<span class="string">&quot;ncl Run.ncl&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>在NCL中获取变量需要将字符串转为浮点数</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">begin</span><br><span class="line">    fn = getenv(<span class="string">&quot;FILENAME&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(fn)    </span><br><span class="line">    lat = tofloat(getenv(<span class="string">&quot;LAT&quot;</span>))</span><br><span class="line">    <span class="built_in">print</span>(lat)</span><br><span class="line">end</span><br></pre></td></tr></table></figure>



<h4 id="2-命令行参数-1"><a href="#2-命令行参数-1" class="headerlink" title="2. 命令行参数"></a>2. 命令行参数</h4><p>通过命令行传递参数，等号两侧没有空格，数值类型的直接以lat&#x3D;40传递即可，字符串变量需要在最外层添加单引号，具体变量值添加双引号。(详见：<a href="https://www.ncl.ucar.edu/Document/Manuals/">https://www.ncl.ucar.edu/Document/Manuals/</a>)</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os </span><br><span class="line">cmd = <span class="string">f&#x27;&#x27;&#x27; ncl lat=40 &#x27;fn=&quot;gfs.2022022300f150&quot;&#x27;  Run.ncl &#x27;&#x27;&#x27;</span></span><br><span class="line">os.system(cmd)</span><br></pre></td></tr></table></figure>

<p>NCL脚本中可以直接使用命令行中传递的变量</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">begin</span><br><span class="line">    print(fn)    </span><br><span class="line">    print(lat)</span><br><span class="line">end</span><br></pre></td></tr></table></figure>



<h4 id="3-动态生成临时脚本-1"><a href="#3-动态生成临时脚本-1" class="headerlink" title="3. 动态生成临时脚本"></a>3. 动态生成临时脚本</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os </span><br><span class="line"></span><br><span class="line"><span class="comment"># 变量</span></span><br><span class="line">lat = <span class="number">40</span></span><br><span class="line">fn  = <span class="string">&quot;gfs.2022022300f150&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 完整脚本</span></span><br><span class="line">src = <span class="string">f&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">begin</span></span><br><span class="line"><span class="string">    a = addfile(&quot;<span class="subst">&#123;fn&#125;</span>&quot;, &quot;r&quot;)</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    res@mpMinLatF  = <span class="subst">&#123;lat&#125;</span></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">end</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出到临时文件</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;Run.ncl&quot;</span>, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(src)</span><br><span class="line"></span><br><span class="line">os.system(<span class="string">&quot;ncl Run.ncl&quot;</span>)</span><br></pre></td></tr></table></figure>





<h2 id="ASCII-read"><a href="#ASCII-read" class="headerlink" title="ASCII read"></a>ASCII read</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ncols = <span class="number">32</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;================ read in data file =================&quot;</span>)</span><br><span class="line">values_try = asciiread(<span class="string">&quot;/work/home/acyii6v8kt/DATA/CMA/Station/SURF_GLB_HOR_INTEG_PROD_Asia_&quot;</span>+year+<span class="string">&quot;.txt&quot;</span>,-<span class="number">1</span>,<span class="string">&quot;float&quot;</span>)  ;(/nrows,ncols/)</span><br><span class="line">printVarSummary(values_try)</span><br><span class="line">nrows = dimsizes(values_try)/ncols</span><br><span class="line">delete(values_try)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;nrows = &quot;</span>+nrows)</span><br><span class="line"></span><br><span class="line">values_2d = asciiread(<span class="string">&quot;/work/home/acyii6v8kt/DATA/CMA/Station/SURF_GLB_HOR_INTEG_PROD_Asia_&quot;</span>+year+<span class="string">&quot;.txt&quot;</span>,(/nrows,ncols/),<span class="string">&quot;float&quot;</span>)</span><br><span class="line">printVarSummary(values_2d)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>PATH</title>
    <url>/2022/05/01/Tool/PATH/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Linux中PATH、-LIBRARY-PATH、-LD-LIBRARY-PATH的区别"><a href="#Linux中PATH、-LIBRARY-PATH、-LD-LIBRARY-PATH的区别" class="headerlink" title="Linux中PATH、 LIBRARY_PATH、 LD_LIBRARY_PATH的区别"></a>Linux中PATH、 LIBRARY_PATH、 LD_LIBRARY_PATH的区别</h2><h3 id="PATH"><a href="#PATH" class="headerlink" title="PATH"></a>PATH</h3><p>PATH是可执行文件路径命令行中的命令，如ls等等，都是系统通过PATH找到了这个命令执行文件的所在位置，再run这个命令（可执行文件）。所以，PATH 配置的路径下的文件<strong>可以在任何位置执行</strong>，并且<strong>可以通过which可执行文件命令来找到该文件的位置。</strong></p>
<h4 id="查看PATH"><a href="#查看PATH" class="headerlink" title="查看PATH"></a>查看PATH</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">echo</span> <span class="variable">$PATH</span></span></span><br><span class="line">/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/games:/usr/games</span><br></pre></td></tr></table></figure>


<h4 id="修改PATH"><a href="#修改PATH" class="headerlink" title="修改PATH"></a>修改PATH</h4><h5 id="临时修改："><a href="#临时修改：" class="headerlink" title="临时修改："></a>临时修改：</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">export</span> PATH=/usr/local/mongodb/bin:<span class="variable">$PATH</span></span></span><br><span class="line">//配置完后可以通过echo $PATH查看配置结果。</span><br></pre></td></tr></table></figure>

<p>生效方法：立即生效<br>有效期限：临时改变，只能在当前的终端窗口中有效，当前窗口关闭后就会恢复原有的path配置<br>用户局限：仅对当前用户</p>
<h5 id="永久修改"><a href="#永久修改" class="headerlink" title="永久修改:"></a>永久修改:</h5><p><strong>永久修改一:</strong></p>
<p>通过修改.bashrc文件:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vim ~/.bashrc</span> </span><br></pre></td></tr></table></figure>


<p>在最后一行添上：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export PATH=/usr/local/mongodb/bin:$PATH</span><br></pre></td></tr></table></figure>


<p>生效方法：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">source</span> ~/.bashrc</span></span><br></pre></td></tr></table></figure>


<p>用户局限：仅对当前用户</p>
<p><strong>永久修改二:</strong></p>
<p>通过修改profile文件:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vim /etc/profile</span></span><br></pre></td></tr></table></figure>


<p>找到设置PATH的行增加，也可以在文本末添加</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PATH=$PATH:/etc/apache/bin</span><br></pre></td></tr></table></figure>


<p>生效方法：</p>
<p>1.系统重启</p>
<p>2.要想马上生效还要运行 ：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">source</span> /etc/profile</span> </span><br></pre></td></tr></table></figure>

<p>不然只能在下次重进此用户时生效<br>用户局限：对所有用户</p>
<h3 id="LIBRARY-PATH"><a href="#LIBRARY-PATH" class="headerlink" title="LIBRARY_PATH"></a>LIBRARY_PATH</h3><p>LIBRARY_PATH是在程序编译期间查找动态链接库时指定的查找共享库的路径。</p>
<p>举例：指定gcc编译需要链接动态链接库的目录。设置<strong>libtest1</strong>和<strong>libtest2</strong>目录</p>
<h4 id="临时修改"><a href="#临时修改" class="headerlink" title="临时修改"></a>临时修改</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">export</span> LIBRARY_PATH=libtest1:libtest2:<span class="variable">$LIBRARY_PATH</span></span> </span><br></pre></td></tr></table></figure>


<p>关闭当前终端失效</p>
<h4 id="永久修改-1"><a href="#永久修改-1" class="headerlink" title="永久修改"></a>永久修改</h4><p>修改 .bashrc或.bash_profile或系统级别的&#x2F;etc&#x2F;profile</p>
<p>在文末中添加例如</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export LIBRARY_PATH=libtest1:libtest2:$LIBRARY_PATH </span><br></pre></td></tr></table></figure>

<p>记得执行生效</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">source</span> .bashrc</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">source</span> .bash_profile</span></span><br></pre></td></tr></table></figure>

<p>编译时分别链接libtest1目录下的libtest1.so库与libtest2目录的libtest2.so库。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">gcc *.c -L./libtest1 -L./libtest2 -ltest1 -ltest2</span></span><br></pre></td></tr></table></figure>



<h3 id="LD-LIBRARY-PATH"><a href="#LD-LIBRARY-PATH" class="headerlink" title="LD_LIBRARY_PATH"></a>LD_LIBRARY_PATH</h3><p>主要是用于指定动态链接器（ld）查找ELF可执行文件运行时所依赖的动态库（so）的路径。</p>
<p>即用于在程序运行期间查找动态链接库时，指定除了系统默认路径(&#x2F;usr&#x2F;lib)之外的路径。</p>
<p><strong>注意：</strong> LD_LIBRARY_PATH中指定的路径会在系统默认路径之前进行查找。</p>
<h4 id="临时修改-1"><a href="#临时修改-1" class="headerlink" title="临时修改"></a>临时修改</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">export</span> LD_LIBRARY_PATH=libtest1:libtest2:<span class="variable">$LD_LIBRARY_PATH</span></span></span><br></pre></td></tr></table></figure>

<h4 id="永久修改-2"><a href="#永久修改-2" class="headerlink" title="永久修改"></a>永久修改</h4><p>修改 ~&#x2F;.bashrc 或者 ~&#x2F;.bash_profile文件，保存、退出</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/xxx/xxx</span><br></pre></td></tr></table></figure>

<p>执行生效</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">source</span> .bashrc</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">source</span> .bash_profile文件</span></span><br></pre></td></tr></table></figure>


<p>source（或点）命令通常用于重新执行刚修改的初始化文档，如 .bash_profile 和 .profile 这些配置文件。</p>
<h3 id="区别举例"><a href="#区别举例" class="headerlink" title="区别举例"></a>区别举例</h3><p>开发时，设置LIBRARY_PATH，以便gcc能够找到编译时需要的动态链接库。</p>
<p>发布时，设置LD_LIBRARY_PATH，以便程序加载运行时能够自动找到需要的动态链接库。</p>
<h3 id="另外注明：C-INCLUDE-PATH"><a href="#另外注明：C-INCLUDE-PATH" class="headerlink" title="另外注明：C_INCLUDE_PATH"></a>另外注明：C_INCLUDE_PATH</h3><p>指明头文件的搜索路径，此两个环境变量指明的头文件会在-I指定路径之后，系统默认路径之前进行搜索。</p>
<p>LIBRARY_PATH指明库搜索路径，此环境变量指明路径会在-L指定路径之后，系统默认路径之前被搜索。</p>
<p>例如：</p>
<p><img src="https://p.ipic.vip/sk0gvk.png" alt="Screenshot 2023-10-21 at 21.09.50"></p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>PIP</title>
    <url>/2022/05/01/Tool/PIP/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Debug"><a href="#Debug" class="headerlink" title="Debug"></a>Debug</h3><h4 id="ERROR-Could-not-install-packages-due-to-an-OSError-Could-not-find-a-suitable-TLS-CA-certificate-bundle-invalid-path-path-x2F-to-x2F-ca-bundle-crt"><a href="#ERROR-Could-not-install-packages-due-to-an-OSError-Could-not-find-a-suitable-TLS-CA-certificate-bundle-invalid-path-path-x2F-to-x2F-ca-bundle-crt" class="headerlink" title="ERROR: Could not install packages due to an OSError: Could not find a suitable TLS CA certificate bundle, invalid path: path&#x2F;to&#x2F;ca-bundle.crt"></a>ERROR: Could not install packages due to an OSError: Could not find a suitable TLS CA certificate bundle, invalid path: path&#x2F;to&#x2F;ca-bundle.crt</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">python -c <span class="string">&quot;import certifi; print(certifi.where())&quot;</span></span></span><br></pre></td></tr></table></figure>

<p>输出：<code>/work/home/acyii6v8kt/.local/lib/python3.8/site-packages/certifi/cacert.pem</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pip config <span class="built_in">set</span> global.cert <span class="string">&quot;/work/home/acyii6v8kt/.local/lib/python3.8/site-packages/certifi/cacert.pem&quot;</span></span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Pandas Cheatsheet</title>
    <url>/2022/05/01/Tool/Pandas%20Cheatsheet/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="pdfobject-container" data-target="https://docs.qq.com/pdf/DSlhOc2FRV213ZkRM" data-height="1000px"></div>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Paper submission</title>
    <url>/2022/05/01/Tool/Paper%20Submission/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>一份稿件在投出去之前，可以开展如下自评工作: 1） 整体科学质量自评；2）写作质量自评；3）陷阱自评；4）亮点自评；5) 针对目标期刊要求的适应性评估。<br>本文更新自2021年7月19日文章《<a href="http://mp.weixin.qq.com/s?__biz=MzU2NzcwNzk3NA==&mid=2247491665&idx=1&sn=51b1e00716366b6a9c3f0d556cbebe6a&chksm=fc9bb078cbec396e1e1c6300296daa3ace9edb556469e0ff8d96878deb3dfcc705d9e13a943e&scene=21#wechat_redirect">论文投稿前的5项自评工作</a>》。本次更新有些修订。</p>
<h4 id="整体科学质量自评"><a href="#整体科学质量自评" class="headerlink" title="整体科学质量自评"></a>整体科学质量自评</h4><p>整体科学质量包括原创性和新颖性、研究设计的适当性、内容的重要性、科学合理性、对读者的有趣性和整体价值等6个方面。可以自评这六个方面是高于平均水平、达到平均水平还是低于平均水平。</p>
<p>1） 原创性和新颖性Originality &#x2F; Novelty。论文工作相比于已有工作有什么新的东西？比如说，解决了一个不一样的问题、使用了一个改进或新构造的方法、有一些新的发现、给出了新的见解。</p>
<p>2）研究设计的适当性 Appropriateness of Research Design。研究思路、手段工具、研究步骤、数据处理方法、合理性控制等是否得当、是否围绕问题和目标而开展、是否可检验、结果是否可靠？ </p>
<p>3） 内容的重要性Significance of Content。光有新的东西不够，研究工作必须重要。例如，如果解决了一个新的问题，那么其意义是什么？如果构造或改进了一个方法，其优点是什么？如果有重要发现，其重要在什么地方？</p>
<p>4）科学合理性 Scientific Soundness。从科学层面看，研究方法是否合理？研究结果是否符合科学预期？分析讨论是否采用科学思维？是否将一般的相关性错误地等同为因果关系？   </p>
<p>5） 对读者的有趣性Interest to the readers。有趣既可以是有用，也可以是令人惊奇。   </p>
<p>6）整体价值 Overall Merit。论文包括问题、方法、结果、基于结果的分析和由此形成的结论。整体价值是指这些方面作为一个整体是否有价值。一个方面的严重欠缺往往会影响整体价值。 </p>
<h4 id="写作质量自评"><a href="#写作质量自评" class="headerlink" title="写作质量自评"></a>写作质量自评</h4><p>可以从如下几个方面检查论文的写作质量：</p>
<p>1）标题是否突出论文的中心思想？或者揭示了论文的研究主题或方法（描述型标题）、或者揭示了论文的主要结果或结论（声明型标题）。</p>
<p>2）摘要是否包含了几个主要要素？这些要素是问题、动机、方法、结果和结论。是否突出了最重要的要素？除此之外，摘要是否简明扼要（以致不熟悉主题的作者大致能读懂）、是否可以独立阅读（即不包含那些需要翻阅全文才能搞明白意思的缩写语、符号和编号等）。</p>
<p>3） 引言是否包含了背景、需求、任务和目标？是否交代清楚了问题的来龙去脉、本文整体思路和余下部分的安排？ 是否遵循由浅入深的原则？是否对现有工作进行了合理的介绍并将其与自身的研究问题和内容建立起了联系？</p>
<p>4）研究方法的介绍是否能让研究结果可以被检验？是否包含足够的细节让其他读者可重复？整体思路是否明确？研究手段和数据处理方法是否交代清楚了？研究步骤是否包含了必要的细节，且按所在领域作者们习惯的逻辑流程介绍？是否对方法的合理性进行了讨论？</p>
<p>5）研究结果的介绍是否明晰？是否进行了合理的归类？是否用客观语言表述？数据图表是否满足规范？是否按标准方式引用和描述图表？</p>
<p>6）对结果是否进行了充分讨论？是否对重要结果进行了解释？是否指出了必要的因果关系？是否分析了与其它结果的关系与区别？是否对结果的重要性和意义进行了交代？是否对假设和控制条件的影响进行了分析？是否形成了新的见解？</p>
<p>7）在结论中是否对全文的要点进行了总结？是否能让读者记住点什么？</p>
<p>8）在合适的位置是否合理地安排了过渡语句和过渡词？以便读者在阅读时不被迷失？</p>
<p>9）是否按标准要求分段？段落是否由主题语句和支撑内容构成？</p>
<p>10）句子和词语是否清晰？是否有引起误解和不解的表述？例如，缩写语、符号和专业术语是否得到了解释？</p>
<p>11）是否检查了拼写错误？</p>
<h4 id="陷阱自评"><a href="#陷阱自评" class="headerlink" title="陷阱自评"></a>陷阱自评</h4><p>如果一篇论文有陷阱，那么很容易被审稿人和读者发现。应通过陷阱自评来避开陷阱。陷阱有大有小。小毛病可能被审稿人误认为是大毛病，因此都需要重视。</p>
<p>如果审稿人不太支持发表，那么他会专注于挑小陷阱，而不是专注于找优点。</p>
<p>检查是否有学术规范陷阱。比如说，是否有文献漏引了？是否过多引用了自己的文献。是否把别的观点表述错了？是否使用了别人的图片而忘记引用？</p>
<p>检查是否有夸大其词的表述，尤其不能在介绍自己以往工作时，使用非客观类语言进行褒奖。例如，不能说“在文献…中，我们提出了比以往更优越的方法”，而可以说“在文献…中，我们提出了和以往不一样的方法，将精度提高了20%”。</p>
<p>检查每一个声明或结论是否有结果或证据支撑，不能无缘无故声明一个观点，也不能声明结果或证据无法百分之百支持的观点或结论。</p>
<p>检查对别人工作的批判性介绍中，是否使用的是建设性语言，而不是攻击性语言。</p>
<p>检查是否还有其它形式的陷阱，例如，检查是否因为语句容易造成误解而让别人误解自己的结果、结论和观点等。</p>
<p>尤其不能有主观上的敌对情绪，因为这会成为陷阱反映在文字之中。例如，明明是自己Follow了别人的idea，却刻意先写成自己得到了什么，再说别人也得到了类似结果。应该使用别人在前，自己在后的顺序描述。</p>
<h4 id="亮点自评"><a href="#亮点自评" class="headerlink" title="亮点自评"></a>亮点自评</h4><p>亮点可以是论文工作独一无二的亮点，也可以是从看似平平淡淡的内容中拔出的亮点。突出亮点，可以让文章看起来不平庸。</p>
<p>独一无二的亮点主要有三个方面：可以是一个令人意想不到的问题的提出、一个绝妙的解决问题的主意或思路、一个令人意外的发现。</p>
<p>平平淡淡的亮点是指在没有独一无二亮点的情况下，论文工作中最好的地方，如结果中最重要的结果。</p>
<p>检查是否在适当位置中突出了亮点？如果问题或思路是亮点，那么应该在摘要、引言和结论中突出。如果有重要发现，那么应该在摘要和结论中突出，在介绍重要发现的地方着重描述。</p>
<h4 id="针对目标期刊要求的适应性评估"><a href="#针对目标期刊要求的适应性评估" class="headerlink" title="针对目标期刊要求的适应性评估"></a>针对目标期刊要求的适应性评估</h4><p>目标期刊是我们准备投稿的期刊。目标期刊对文章类型、内涵和形式都有严格要求。第一步是可以通过出版物写给作者的指南来找到相关要求。第二步是看看对审稿人有何要求，从给审稿人的建议可以看出对论文有何要求。第三步是阅读目标期刊的相关论文，来直观了解有何要求。</p>
<p>前两步不难理解。对于第三步，可以挑几篇目标期刊上与自己论文方向大致接近的论文，尤其是那些有影响力的学者的论文做参考，看看在如下几个方面他们是如何安排的。</p>
<p>1）在引言中，如何介绍背景？如何引用和归纳别人的工作？如何切入自己主题？</p>
<p>2）如何介绍研究方法？</p>
<p>3）如何呈现与讨论结果？图表的风格与质量是什么？题注有哪些内容？在论文中如何引用、描述与分析图表？</p>
<p>4）各节如何开始？如何结束？</p>
<p>5）摘要包含了什么？结论有什么？</p>
<p>如果自己的草稿看上去与目标期刊上发表的好的论文形式上比较接近，且符合指南的一般性要求，那么就可以初步断定完成了目标期刊的适应性评估。</p>
<p>最后需要强调的是，应使用出版物提供的word和latex模板来排版文章。如果使用别的排版，会让人误解是被别的期刊拒稿了才改投的。</p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Palm-XYCS</title>
    <url>/2022/05/01/Tool/Palm-XYCS/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Palm-XYCS"><a href="#Palm-XYCS" class="headerlink" title="Palm XYCS"></a>Palm XYCS</h2><h4 id="创建环境"><a href="#创建环境" class="headerlink" title="创建环境"></a>创建环境</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda create -n Palm_v23 python=3.10</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source Palm_v23.env</span><br></pre></td></tr></table></figure>
<p><strong>Palm_v23.env</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export LC_ALL=en_US.UTF-8</span><br><span class="line">export LANG=en_US.UTF-8</span><br><span class="line"></span><br><span class="line">conda activate Palm_v23</span><br><span class="line">module load intel/2021u3</span><br><span class="line">module load hpc hpc-intel hpc-impi</span><br><span class="line">module load cmake/3.31.4</span><br><span class="line">module load pnetcdf/1.12.2</span><br><span class="line">module load netcdf/4.9.2</span><br><span class="line">module load textproc/flex/2.6.4</span><br></pre></td></tr></table></figure>

<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export install_prefix=&quot;&lt;install-prefix&gt;&quot;</span><br><span class="line">bash install -p $&#123;install_prefix&#125;</span><br><span class="line">export PATH=$&#123;install_prefix&#125;/bin:$&#123;PATH&#125;</span><br></pre></td></tr></table></figure>

<h4 id="修改-palm-config-default"><a href="#修改-palm-config-default" class="headerlink" title="修改.palm.config.default"></a>修改.palm.config.default</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">修改 %source_path为/work/home/acyii6v8kt/WORK/Palm/palm_model_system-v23.10/MAKE_DEPOSITORY_default 以保证原代码的整洁</span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">compiler_options 添加 -g -traceback 进行代码调试，给出具体出错信息</span></span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./bin/palmbuild</span><br><span class="line">首次安装好后重新编译时使用，即使用.palm.config.default配置文件</span><br></pre></td></tr></table></figure>

<h3 id="修改netcdf-data-input-mod-f90"><a href="#修改netcdf-data-input-mod-f90" class="headerlink" title="修改netcdf_data_input_mod.f90"></a>修改netcdf_data_input_mod.f90</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">!-- Get variable</span><br><span class="line">    nc_stat = NF90_GET_VAR( id, id_var, tmp, start = (/1, i1s, i2s /),    &amp;    </span><br><span class="line">            count = (/ 1, count_1, count_2 /) )! change by Ruyan</span><br></pre></td></tr></table></figure>

<h4 id="重新编译"><a href="#重新编译" class="headerlink" title="重新编译"></a>重新编译</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./bin/palmbuild</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Parameters</title>
    <url>/2022/05/01/Tool/Parameters/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="Constants"><a href="#Constants" class="headerlink" title="Constants"></a>Constants</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rad = 4.0*atan(1.0)/180.0</span><br><span class="line"></span><br><span class="line">density of water: 997 kg/m³</span><br><span class="line"></span><br><span class="line">acceleration due to gravity: 9.80665 m/s2</span><br></pre></td></tr></table></figure>



<h4 id="Units"><a href="#Units" class="headerlink" title="Units"></a>Units</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 day = 86400s</span><br><span class="line"></span><br><span class="line">1 kg m-2 s-1 = 86400 mm/day</span><br><span class="line"></span><br><span class="line">1 Pa = 1 N/m2   1 N = 1 kg⋅m⋅s−2</span><br><span class="line"></span><br><span class="line">One newton is the force needed to accelerate one kilogram of mass at the rate of one metre per second squared in the direction of the applied force.</span><br><span class="line"></span><br><span class="line">1 Pa = 10−5 bar  SI base units‎: ‎kg⋅m−1⋅s−2</span><br><span class="line"></span><br><span class="line">vertical integrated moisture budget： </span><br><span class="line"></span><br><span class="line">m/s kg/kg hPa to mm/day   Q_vint_unit = Q_vint/(9.8*997)*86400*1000*100</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1 SV = 10^6 m^3 s^-1 流量的单位</span><br><span class="line"></span><br><span class="line">stream function: m^2 s^-1</span><br></pre></td></tr></table></figure>



<p><img src="https://p.ipic.vip/odszo8.png" alt="Latent Heat of vaporization of water at 20 °C"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">K day-1 * m2 * height =  ~ W M-2</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Python Color</title>
    <url>/2022/05/01/Tool/Python%20Color/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Named-colors"><a href="#Named-colors" class="headerlink" title="Named colors"></a>Named colors</h2><p><img src="https://p.ipic.vip/3e66na.jpg" alt="sphx_glr_named_colors_003_2_0x"></p>
<h2 id="Color-maps"><a href="#Color-maps" class="headerlink" title="Color maps"></a>Color maps</h2><p><img src="https://p.ipic.vip/j1hbd4.jpg" alt="sphx_glr_colormap_reference_001_2_0x"></p>
<p><img src="https://p.ipic.vip/w6w92j.jpg" alt="sphx_glr_colormap_reference_002_2_0x"></p>
<p><img src="https://p.ipic.vip/mk6sr2.jpg" alt="sphx_glr_colormap_reference_003_2_0x"></p>
<p><img src="https://p.ipic.vip/byca3g.jpg" alt="sphx_glr_colormap_reference_004_2_0x"></p>
<p><img src="https://p.ipic.vip/wkq0at.jpg" alt="sphx_glr_colormap_reference_005_2_0x"></p>
<p><img src="https://p.ipic.vip/8mbi35.jpg" alt="sphx_glr_colormap_reference_006_2_0x"></p>
<p><img src="https://p.ipic.vip/v6tjg8.jpg" alt="sphx_glr_colormap_reference_007_2_0x"></p>
<h2 id="matplotlib中colormap的常用设置"><a href="#matplotlib中colormap的常用设置" class="headerlink" title="matplotlib中colormap的常用设置"></a>matplotlib中colormap的常用设置</h2><h3 id="常用指定颜色的方法"><a href="#常用指定颜色的方法" class="headerlink" title="常用指定颜色的方法"></a>常用指定颜色的方法</h3><ol>
<li><p>RGB或者RGBA(red, green, blue, alpha)数组，浮点数[0, 1]，如 (0.1, 0.2, 0.5) 或 (0.1, 0.2, 0.5, 0.3)</p>
</li>
<li><p>不区分大小写的hex RGB or RGBA，如’#0f0f0f’或’#0f0f0f80’</p>
</li>
<li><p>灰度值，[0,1]中的浮动数的字符串表示形式，’0’表示黑色，’1’表示白色，’0.8’表示灰色</p>
</li>
<li><p>一些基本颜色的单字符简写。</p>
</li>
<li><ul>
<li>• b：蓝色</li>
<li>• g：绿色</li>
<li>• r：红色</li>
<li>• c：青色</li>
<li>• m：红色</li>
<li>• y：黄色</li>
<li>• k：黑色</li>
<li>• w：白色</li>
</ul>
</li>
<li><ol start="5">
<li>具体颜色名称，如’red’,’blue’</li>
</ol>
</li>
</ol>
<h3 id="连续colormap"><a href="#连续colormap" class="headerlink" title="连续colormap"></a>连续colormap</h3><h4 id="1-使用系统自带colormap，指定填色范围"><a href="#1-使用系统自带colormap，指定填色范围" class="headerlink" title="1. 使用系统自带colormap，指定填色范围"></a>1. 使用系统自带colormap，指定填色范围</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">import matplotlib as mpl</span><br><span class="line">import matplotlib.cm as cm</span><br><span class="line">import matplotlib.colors as mcolors</span><br><span class="line"></span><br><span class="line">cmap = cm.cool</span><br><span class="line">norm = mcolors.Normalize(vmin=5, vmax=10)    </span><br><span class="line"># 默认是0-1，可以通过vmin和vmax指定范围</span><br><span class="line">im = cm.ScalarMappable(norm=norm, cmap=cmap)</span><br><span class="line"></span><br><span class="line">fig, ax = plt.subplots(figsize=(6, 1))</span><br><span class="line">fig.subplots_adjust(bottom=0.5)</span><br><span class="line">fig.colorbar(im, cax=ax, orientation=&#x27;horizontal&#x27;,extend=&#x27;both&#x27;,)</span><br></pre></td></tr></table></figure>

<p><img src="https://p.ipic.vip/j7esfd.png" alt="Image"></p>
<p>reversed()方法可以反转cmap</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cmap = mpl.colormaps[&#x27;cool&#x27;].reversed()</span><br><span class="line">norm = mcolors.Normalize(vmin=5, vmax=10)    </span><br><span class="line">im = cm.ScalarMappable(norm=norm, cmap=cmap)</span><br><span class="line"></span><br><span class="line">fig, ax = plt.subplots(figsize=(6, 1))</span><br><span class="line">fig.subplots_adjust(bottom=0.5)</span><br><span class="line">fig.colorbar(im, cax=ax, orientation=&#x27;horizontal&#x27;,extend=&#x27;both&#x27;,)</span><br></pre></td></tr></table></figure>

<p><img src="https://p.ipic.vip/jwtfg4.png" alt="Image"></p>
<h4 id="2-使用红蓝色标，将白色和0对齐"><a href="#2-使用红蓝色标，将白色和0对齐" class="headerlink" title="2. 使用红蓝色标，将白色和0对齐"></a>2. 使用红蓝色标，将白色和0对齐</h4><ul>
<li>可以通过设置对称的vmin和vmax</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cmap = cm.RdBu_r</span><br><span class="line">norm = mcolors.Normalize(vmin=-10, vmax=10)   </span><br><span class="line">im = cm.ScalarMappable(norm=norm, cmap=cmap)</span><br><span class="line"></span><br><span class="line">fig, ax = plt.subplots(figsize=(6, 1))</span><br><span class="line">fig.subplots_adjust(bottom=0.5)</span><br><span class="line">fig.colorbar(im, cax=ax, orientation=&#x27;horizontal&#x27;,extend=&#x27;both&#x27;,)</span><br></pre></td></tr></table></figure>

<p><img src="https://p.ipic.vip/9iitta.png" alt="Image"></p>
<p>• 也可以通过TwoSlopeNorm设置vcenter将白色和0对应上</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cmap = cm.RdBu_r</span><br><span class="line">norm = mcolors.TwoSlopeNorm(vmin=-5, vcenter=0, vmax=10)   </span><br><span class="line">im = cm.ScalarMappable(norm=norm, cmap=cmap)</span><br><span class="line"></span><br><span class="line">fig, ax = plt.subplots(figsize=(6, 1))</span><br><span class="line">fig.subplots_adjust(bottom=0.5)</span><br><span class="line">fig.colorbar(im, cax=ax, orientation=&#x27;horizontal&#x27;,extend=&#x27;both&#x27;,)</span><br></pre></td></tr></table></figure>

<p><img src="https://p.ipic.vip/c8xxut.png" alt="Image"></p>
<h3 id="3-利用自定义颜色生成连续colormap"><a href="#3-利用自定义颜色生成连续colormap" class="headerlink" title="3. 利用自定义颜色生成连续colormap"></a>3. 利用自定义颜色生成连续colormap</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># colors = [&#x27;red&#x27;, &#x27;green&#x27;, &#x27;blue&#x27;, &#x27;cyan&#x27;]</span><br><span class="line">colors = np.array([(255,0,0), (0,128,0), (0,0,255), (0,255,255)] ) /255. </span><br><span class="line">cmap = mcolors.LinearSegmentedColormap.from_list(&#x27;Mycmap&#x27;, colors)</span><br><span class="line">norm = mcolors.Normalize(vmin=5, vmax=10)    # 默认是0-1，可以通过vmin和vmax指定范围</span><br><span class="line">im = cm.ScalarMappable(norm=norm, cmap=cmap)</span><br><span class="line"></span><br><span class="line">fig, ax = plt.subplots(figsize=(6, 1))</span><br><span class="line">fig.subplots_adjust(bottom=0.5)</span><br><span class="line">fig.colorbar(im, cax=ax, orientation=&#x27;horizontal&#x27;,extend=&#x27;both&#x27;,)</span><br></pre></td></tr></table></figure>

<p><img src="https://p.ipic.vip/ld1hse.png" alt="Image"></p>
<h3 id="4-拼接内置-colormap"><a href="#4-拼接内置-colormap" class="headerlink" title="4. 拼接内置 colormap"></a>4. 拼接内置 colormap</h3><p>代码来自炸鸡人博客</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">colors_cool   = cm.cool(np.linspace(0, 1, 128))</span><br><span class="line">colors_spring = cm.spring(np.linspace(0, 1, 128))</span><br><span class="line">colors_all    = np.vstack((colors_cool, colors_spring))</span><br><span class="line">cmap_merged = mcolors.ListedColormap(colors_all)</span><br><span class="line"></span><br><span class="line">norm = mcolors.Normalize()    </span><br><span class="line">im = cm.ScalarMappable(norm=norm, cmap=cmap_merged)</span><br><span class="line"></span><br><span class="line">fig, ax = plt.subplots(figsize=(6, 1))</span><br><span class="line">fig.subplots_adjust(bottom=0.5)</span><br><span class="line">fig.colorbar(im, cax=ax, orientation=&#x27;horizontal&#x27;,extend=&#x27;both&#x27;,)</span><br></pre></td></tr></table></figure>

<p><img src="https://p.ipic.vip/jtijna.png" alt="Image"></p>
<h3 id="离散colormap"><a href="#离散colormap" class="headerlink" title="离散colormap"></a>离散colormap</h3><h4 id="1-利用连续的colormap创建离散的colormap"><a href="#1-利用连续的colormap创建离散的colormap" class="headerlink" title="1. 利用连续的colormap创建离散的colormap"></a>1. 利用连续的colormap创建离散的colormap</h4><ul>
<li>给定cmap.N配合完整的 colormap</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fig, ax = plt.subplots(figsize=(6, 1))</span><br><span class="line">fig.subplots_adjust(bottom=0.5)</span><br><span class="line"></span><br><span class="line">cmap = cm.viridis</span><br><span class="line">bounds = [-1, 2, 5, 7, 12, 15]</span><br><span class="line">norm = mcolors.BoundaryNorm(bounds, cmap.N, extend=&#x27;both&#x27;)</span><br><span class="line">im = cm.ScalarMappable(norm=norm, cmap=cmap)</span><br><span class="line"></span><br><span class="line">fig.colorbar(im,</span><br><span class="line">             cax=ax, orientation=&#x27;horizontal&#x27;,</span><br><span class="line">             label=&quot;Discrete intervals with extend=&#x27;both&#x27; keyword&quot;)</span><br></pre></td></tr></table></figure>

<p><img src="https://p.ipic.vip/mcwx0r.png" alt="Image"></p>
<ul>
<li>先对colormap进行采样，给定颜色数为nbin+1(extend&#x3D;’both’)或者nbin(extend&#x3D;’None’)</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fig, ax = plt.subplots(figsize=(6, 1))</span><br><span class="line">fig.subplots_adjust(bottom=0.5)</span><br><span class="line"></span><br><span class="line">bounds = [-1, 2, 5, 7, 12, 15]</span><br><span class="line">nbin = len(bounds)</span><br><span class="line"># cmap = cm.get_cmap(&#x27;viridis&#x27;, nbin+1)</span><br><span class="line">cmap = mpl.colormaps[&#x27;viridis&#x27;].resampled(nbin+1)</span><br><span class="line"></span><br><span class="line">norm = mcolors.BoundaryNorm(bounds, nbin+1, extend=&#x27;both&#x27;)</span><br><span class="line">im = cm.ScalarMappable(norm=norm, cmap=cmap)</span><br><span class="line"></span><br><span class="line">fig.colorbar(im,</span><br><span class="line">             cax=ax, orientation=&#x27;horizontal&#x27;,</span><br><span class="line">             label=&quot;Discrete intervals with extend=&#x27;both&#x27; keyword&quot;)</span><br></pre></td></tr></table></figure>

<p><img src="https://p.ipic.vip/mcwx0r.png" alt="Image"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fig, ax = plt.subplots(figsize=(6, 1))</span><br><span class="line">fig.subplots_adjust(bottom=0.5)</span><br><span class="line"></span><br><span class="line">bounds = [-1, 2, 5, 7, 12, 15]</span><br><span class="line">nbin = len(bounds)</span><br><span class="line">cmap = cm.get_cmap(&#x27;viridis&#x27;, nbin)</span><br><span class="line"></span><br><span class="line">norm = mcolors.BoundaryNorm(bounds, nbin)</span><br><span class="line">im = cm.ScalarMappable(norm=norm, cmap=cmap)</span><br><span class="line"></span><br><span class="line">fig.colorbar(im,</span><br><span class="line">             cax=ax, orientation=&#x27;horizontal&#x27;,</span><br><span class="line">             label=&quot;Discrete intervals with extend=&#x27;both&#x27; keyword&quot;)</span><br></pre></td></tr></table></figure>

<p><img src="https://p.ipic.vip/5meky7.png" alt="Image"></p>
<h4 id="2-利用指定颜色生成离散colormap"><a href="#2-利用指定颜色生成离散colormap" class="headerlink" title="2. 利用指定颜色生成离散colormap"></a>2. 利用指定颜色生成离散colormap</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">colors = [&#x27;red&#x27;, &#x27;green&#x27;, &#x27;blue&#x27;, &#x27;cyan&#x27;]</span><br><span class="line">cmap = mcolors.ListedColormap(colors)</span><br><span class="line"></span><br><span class="line">bounds = [-1.0, -0.5, 0.0, 0.5, 1.0]</span><br><span class="line">norm = mcolors.BoundaryNorm(bounds, cmap.N)  </span><br><span class="line">im = cm.ScalarMappable(norm=norm, cmap=cmap)</span><br><span class="line"></span><br><span class="line">fig, ax = plt.subplots(figsize=(6, 1))</span><br><span class="line">fig.subplots_adjust(bottom=0.5)</span><br><span class="line">fig.colorbar(im, cax=ax, orientation=&#x27;horizontal&#x27;,extend=&#x27;both&#x27;,extendfrac=&#x27;auto&#x27;,)</span><br></pre></td></tr></table></figure>

<p><img src="https://p.ipic.vip/so1qyz.png" alt="Image"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">colors = np.array([(255,0,0), (0,128,0), (0,0,255), (0,255,255)] ) /255. </span><br><span class="line">cmap = mcolors.ListedColormap( colors).with_extremes(over=&#x27;0.25&#x27;, under=&#x27;0.75&#x27;)</span><br><span class="line"># cmap = mcolors.ListedColormap(colors)</span><br><span class="line"># cmap.set_over(&#x27;0.25&#x27;)</span><br><span class="line"># cmap.set_under(&#x27;0.75&#x27;)</span><br><span class="line"></span><br><span class="line">bounds = [-1.0, -0.5, 0.0, 0.5, 1.0]</span><br><span class="line">norm = mcolors.BoundaryNorm(bounds, cmap.N)  </span><br><span class="line">im = cm.ScalarMappable(norm=norm, cmap=cmap)</span><br><span class="line"></span><br><span class="line">fig, ax = plt.subplots(figsize=(6, 1))</span><br><span class="line">fig.subplots_adjust(bottom=0.5)</span><br><span class="line">fig.colorbar(im, cax=ax, orientation=&#x27;horizontal&#x27;,extend=&#x27;both&#x27;,extendfrac=&#x27;auto&#x27;,)</span><br></pre></td></tr></table></figure>

<p><img src="https://p.ipic.vip/t5f8mx.png" alt="Image"></p>
<p>参考：</p>
<ol>
<li><a href="https://matplotlib.org/stable/tutorials/colors/colorbar_only.html#discrete-intervals-colorbar">https://matplotlib.org/stable/tutorials/colors/colorbar_only.html#discrete-intervals-colorbar</a></li>
<li><a href="https://zhajiman.github.io/post/matplotlib_colormap/">https://zhajiman.github.io/post/matplotlib_colormap/</a></li>
<li><a href="https://matplotlib.org/stable/tutorials/colors/colormaps.html">https://matplotlib.org/stable/tutorials/colors/colormaps.html</a></li>
<li><a href="https://matplotlib.org/mpl-third-party/#colormaps-and-styles">https://matplotlib.org/mpl-third-party/#colormaps-and-styles</a></li>
</ol>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Python Assist Package</title>
    <url>/2022/05/01/Tool/Python%20Assist%20%20Package/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="python的debug神器PySnooper"><a href="#python的debug神器PySnooper" class="headerlink" title="python的debug神器PySnooper"></a>python的debug神器PySnooper</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>使用python开发过程中，总是避免不了debug。传统的debug过程大致分为两种：</p>
<p>a）断点+单步调试。</p>
<p>断点+单步调试估计是用的最多的了，对于较大型项目来说，其流程大致为：先在关键的代码位置加上print语句，通过分析print的值将范围缩小，这个过程可能需要重复多次，使用print的方法，一般可以将范围缩小到一个比较完整的功能模块中；然后在可能出现bug的模块中的关键部分打上断点，进入到断点后使用单步调试，查看各变量的值是否正确，最后根据错误的变量值定位到具体的代码行，最后进行修改。</p>
<p>b) pdb调试。</p>
<p>pdb是python自带的一个包，为 python 程序提供了一种交互的源代码调试功能，主要特性包括设置断点、单步调试、进入函数调试、查看当前代码、查看栈片段、动态改变变量的值等。pdb的调试流程和1）基本差不多，其具体的使用方法大家可以网上搜一下。</p>
<p>传统的debug的方法的缺点包括：</p>
<p>a)需要在代码中添加print语句，这就改变了原有的代码; </p>
<p>b)在断点调试和单步调试过程中，需要保持持续的专注，一旦跳过了关键点就要从头开始。</p>
<p>最近在github上冒出了一个debug工具，可以解决传统debug过程中的缺点。下面一块来看看这个工具的使用和神奇之处。</p>
<h3 id="1-PySnooper是什么"><a href="#1-PySnooper是什么" class="headerlink" title="1. PySnooper是什么"></a>1. PySnooper是什么</h3><p>该工具使用采用装饰器的形式，将函数的运行过程以日志的形式打印到文件中，其记录了运行了哪些代码行，运行的时间及运行到当前代码时各变量的值。根据变量的变化就可以定位问题了。亲自试用该工具后，其优点可总结为以下几点：</p>
<p>1、无需为了查看变量的值，使用print打印变量的值，从而修改了原有的代码。</p>
<p>2、接口的运行过程以日志的形式保存，方便随时查看。</p>
<p>3、可以根据需要，设置函数调用的函数的层数，方便将注意力集中在需要重点关注的代码段。</p>
<p>4、多个函数的日志，可以设置日志前缀表示进行标识，方便查看时过滤。</p>
<p>该工具有这么多优点，那么如何使用呢，下面结合demo来介绍该工具的使用。</p>
<h3 id="2-使用方式介绍"><a href="#2-使用方式介绍" class="headerlink" title="2. 使用方式介绍"></a>2. 使用方式介绍</h3><p><strong>1. 工具安装</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install pysnooper</span><br></pre></td></tr></table></figure>



<p><strong>2. 官方demo介绍</strong></p>
<p>官方demo代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import pysnooper@pysnooper.snoop()def number_to_bits(number):    if number:        bits = []        while number:            number, remainder = divmod(number, 2)            bits.insert(0, remainder)        return bits    else:        return [0]number_to_bits(6)</span><br></pre></td></tr></table></figure>



<p> 控制台输出：</p>
<p>控制台的输出如上图，从图中可以看到，从进入到函数开始，会记录每一行代码的执行及记录新增局部变量或已有局部变量的变化，直到函数结束。以装饰器的形式使用该工具后，会将函数运行的中间结果打印出来，这样方便后续的bug定位和分析。</p>
<p><strong>3. 参数介绍</strong></p>
<p>以装饰器的形式使用该工具，其包含了四个参数，参数包括output, variables, depth, prefix，如下图。</p>
<p>1、output参数。该参数指定函数运行过程中产生的中间结果的保存位置，若该值为空，则将中间结果输出到控制台。</p>
<p>2、variables参数。该参数是vector类型, 因为在默认情况下，装饰器只跟踪局部变量，要跟踪非局部变量，则可以通过该字段来指定。默认值为空vector。</p>
<p>3、depth参数。该参数表示需要追踪的函数调用的深度。在很多时候，我们在函数中会调用其他函数，通过该参数就可以指定跟踪调用函数的深度。默认值为1。</p>
<p>4、prefix参数。该参数用于指定该函数接口的中间结果前缀。当多个函数都使用的该装饰器后，会将这些函数调用的中间结果保存到一个文件中，此时就可以通过前缀过滤不同函数调用的中间结果。默认值为空字符串。</p>
<h3 id="3-工具应用"><a href="#3-工具应用" class="headerlink" title="3. 工具应用"></a>3. 工具应用</h3><p>要使用该工具只需要理解该装饰器（snoop）的参数的含义，下面结合几个demo介绍参数的使用及对结果的影响。</p>
<p><strong>1. output 参数使用</strong></p>
<p>若使用默认参数，则将中间结果输出到控制台，若填写该参数，则将中间结果写入到该参数指定的目录下，如运行以下代码，其中间结果会保存在装饰器snoop中设置日志保存的路径中，注意这里不会自动创建目录，所以需要事先创建目录，如测试代码中填写路径后需要创建log目录。</p>
<p>测试代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import pysnooper</span><br><span class="line">def add(num1, num2):    return num1 + num2</span><br><span class="line">@pysnooper.snoop(&quot;./log/debug.log&quot;, prefix=&quot;--*--&quot;)def multiplication(num1, num2):    sum_value = 0    for i in range(0, num1):        sum_value = add(sum_value, num2)    return sum_value</span><br><span class="line">value = multiplication(3, 4)</span><br></pre></td></tr></table></figure>



<p>运行该代码后，在.&#x2F;log&#x2F;debug.log的内容如下：</p>
<p>从运行代码的中间结果中可以看出，文件中记录了各行代码的执行过程及局部变量的变化。在debug时，通过分析该文件，就可以跟踪每一步的执行过程及局部变量的变化，这样就能快速的定位问题所在；由于运行的中间结果保存在文件中，方便随时分析其运行的中间结果，也便于共享。</p>
<p><strong>2. variables参数使用</strong></p>
<p>在默认参数的情况下，使用该工具只能查看局变量的变化过程，当需要查看局部变量以外变量时，则可以通过variables参数进行设置，比如下方代码，在Foo类型，需要查看类实例的变量self.num1, self.num2, self.sum_value,则可以看将该变量设置当参数传入snoop的装饰器中。</p>
<p>测试代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import pysnooper</span><br><span class="line">class Foo(object):    def __init__(self):        self.num1 = 0        self.num2 = 0        self.sum_value = 0</span><br><span class="line">    def add(self, num1, num2):        return num1 + num2    @pysnooper.snoop(output=&quot;./log/debug.log&quot;, variables=(&quot;self.num1&quot;, &quot;self.num2&quot;, &quot;self.sum_value&quot;))    def multiplication(self, num1, num2):        self.num1 = num1        self.num2 = num2        sum_value = 0        for i in range(0, num1):            sum_value = self.add(sum_value, num2)        self.sum_value = sum_value        return sum_value</span><br><span class="line">foo = Foo()foo.multiplication(3, 4)</span><br></pre></td></tr></table></figure>

<p>为了体现该参数的作用，这里分别使用默认参数和上述参数（代码中设置的参数）运行代码，得到的结果如下：</p>
<p>使用默认参数的结果</p>
<p>使用代码中参数的结果</p>
<p>从两个中间结果中可以看出，若变量不是局部变量，哪怕在函数中使用了该变量，如果不显示设置打印该变量的中间结果，则不会将该变量的中间结果打印到文件中。</p>
<p><strong>3. depth参数使用</strong></p>
<p>该参数用来指定记录函数调用层数的结果，默认值为1，若要查看多层函数调用的中间结果，则可将该参数设置为&gt;&#x3D;2。</p>
<p>测试代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import pysnooper</span><br><span class="line">def add(num1, num2):    return num1 + num2</span><br><span class="line">@pysnooper.snoop(&quot;./log/debug.log&quot;, depth=2)def multiplication(num1, num2):    sum_value = 0    for i in range(0, num1):        sum_value = add(sum_value, num2)    return sum_value</span><br><span class="line">value = multiplication(3, 4)</span><br></pre></td></tr></table></figure>

<p>为了对比，将depth的值分别设置为1和2，其结果如下：</p>
<p>depth&#x3D;1的结果</p>
<p>depth&#x3D;2的结果</p>
<p>从上述结果中可以看出，若要查看更深层次函数调用的情况，则可以通过设置depth值进行查看。这样方便用户有选择性的查看函数的调用情况。</p>
<p><strong>4. prefix参数使用</strong></p>
<p>该参数主要用于设置中间结果的前缀，这样就可以区分不同的函数调用的中间结果，默认参数为””。</p>
<p>测试代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import pysnooper</span><br><span class="line">def add(num1, num2):    return num1 + num2</span><br><span class="line">@pysnooper.snoop(&quot;./log/debug.log&quot;, prefix=&quot;--*--&quot;)def multiplication(num1, num2):    sum_value = 0    for i in range(0, num1):        sum_value = add(sum_value, num2)    return sum_value</span><br><span class="line">value = multiplication(3, 4)</span><br></pre></td></tr></table></figure>



<p>运行代码后的中间结果如下：</p>
<p>从结果中可以看到，中间结果的每一行都包含了prefix设置的前缀，这样便于区分不同的函数调用的中间结果。</p>
<p>上述的介绍为了将注意力集中到具体的参数，采取设置单一参数的形式进行介绍（output+其他单个参数）。在实际使用时，可以同时设置多个参数。使用PySnooper工具来记录函数运行的中间结果，比起传统的使用断点+单步调试，pdb等调试方法，PySnooper工具有着巨大的优势。</p>
<h3 id="4-该工具的不足之处"><a href="#4-该工具的不足之处" class="headerlink" title="4. 该工具的不足之处"></a>4. 该工具的不足之处</h3><p>虽然使用debug在使用PySnooper很方便，但还是存在一些问题（以4月26号拉取代码为依据），比如：</p>
<p>1、无法很好的支持递归调用。</p>
<p>2、调用每个函数的中间结果只能保存在一个文件中，如果需要区分不同文件的结果，需要使用prefix来进行前缀标识。</p>
<p>3、对于跨文件函数调用，不支持记录调用函数所在的文件名。</p>
<p>当然PySnooper是最近在github上火起来的项目，还不够完善是正常的，相信这些不足之处后续也会得到完善，期待一个更好的PySnooper。</p>
<h3 id="5-总结"><a href="#5-总结" class="headerlink" title="5. 总结"></a>5. 总结</h3><p>本文介绍PpySnooper的工具，先介绍了该工具是什么，相比传统debug方法的优势，然后介绍了该工具的参数及说明该参数作用的demo。最后介绍了该工具的不足之处。</p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Python Library</title>
    <url>/2022/05/01/Tool/Python%20Library/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="面向地学领域的Python库汇总"><a href="#面向地学领域的Python库汇总" class="headerlink" title="面向地学领域的Python库汇总"></a>面向地学领域的Python库汇总</h1><p><a href="https://mp.weixin.qq.com/s/dbg4cFHZxJOeLLhx9Fc28w">https://mp.weixin.qq.com/s/dbg4cFHZxJOeLLhx9Fc28w</a></p>
<h3 id="数据处理"><a href="#数据处理" class="headerlink" title="数据处理"></a>数据处理</h3><p><strong>NetCDF格式</strong> : <code>netCDF4-python</code>，<code>h5py</code>，<code>h5netcdf</code>，<code>xarray</code>等。<br>除了上述简单的数据处理库之外，python还提供了<code>NCO</code>和<code>CDO</code>工具的封装，<code>pynco</code>和<code>cdo</code>，提供了更多的便捷操作。</p>
<p><strong>Grib格式</strong>：<code>xarray</code>，<code>Iris</code>，<code>pygrib</code>等，有些仅支持类Unix系统。<br>ECWMF提供了<code>cfgrib</code>工具可将grib格式转换为NetCDF格式，<code>cfgrib</code>库支持Mac，Linux和windows系统。</p>
<p><strong>csv, xlsx等格式</strong>：<code>pandas</code>你值得拥有，无论是气象还是其他领域的类似格式数据，使用<code>pandas</code>可以解决你的常用操作。</p>
<p><strong>HDF格式</strong>：<code>pandas</code>和<code>h5py</code>可以处理hdf5格式，<code>PyHDF</code>可以处理hdf4格式。</p>
<p><strong>二进制</strong>：<code>numpy</code>可以处理二进制数据，同时借助python内置<code>struct</code>模块可以非常方便的处理二进制格式数据。</p>
<p>上述介绍的一些库，很多仅支持简单的数据读取和写入操作，不支持更多计算操作。如果要对空间数据进行插值，可能就无法满足了。</p>
<h3 id="数据插值"><a href="#数据插值" class="headerlink" title="数据插值"></a>数据插值</h3><p><code>xESMF</code>和<code>ESMPy</code>：气象数据空间插值，尤其是对于模式网格数据而言，提供了一些便捷的命令可对网格数据进行一些列插值操作</p>
<p><code>python-stratify</code>：针对大气和海洋数据进行垂直插值</p>
<p><code>scipy.interpolate</code>模块提供了大量插值函数</p>
<p><code>python-geotiepoints</code>：针对地理网格数据的空间插值</p>
<p>说到地球科学领域的数据处理，最离不开的应该也是模式输出数据了。Python中有很多处理模式输出的库，功能都比较完善。</p>
<h3 id="模式输出处理"><a href="#模式输出处理" class="headerlink" title="模式输出处理"></a>模式输出处理</h3><p><code>wrf-python</code>：对于使用WRF模式的来说使用最为频繁的模式输出后处理工具之一。</p>
<p><code>salem</code>：这个库包含了数据处理和可视化几乎所有功能，也提供了不少WRF模式后处理和前处理的函数。除此以外还是做掩膜的利器，之前的文章也有提到<a href="http://mp.weixin.qq.com/s?__biz=MzA3MDQ1NDA4Mw==&mid=2247488432&idx=2&sn=a3eb213e4ffe844070866ef310a97208&chksm=9f3dcd9ca84a448ad68450701fbb15ece93ef2c717f63f3d44cf0ba110904c0c720aa5453c62&scene=21#wechat_redirect">python绘图 | salem一招解决所有可视化中的掩膜(Mask)问题</a>。</p>
<p><code>CESM_postprocessing</code>：针对<code>CESM</code>地球模式的后处理工具</p>
<p><code>CAMxTools</code>：提供了CAMx和CMAQ模型的前处理和后处理功能</p>
<p><code>PseudoNetCDF</code>：类似处理NetCDF的工具，可用于处理CMAQ等模式输出结果</p>
<p><code>MONET</code>：模式和观测评估工具，然而我非常喜欢的一款类似工具还没有python版&#x3D;&#x3D;</p>
<h3 id="雷达和卫星数据处理"><a href="#雷达和卫星数据处理" class="headerlink" title="雷达和卫星数据处理"></a>雷达和卫星数据处理</h3><p><code>PyART</code>，<code>wradlib</code>可用于处理国外常见格式的雷达数据。改进后的PyART[1]和PyART[2]提供国内常用的S波段雷达数据处理方式，还有这个PyCINRAD[3]。此外，Python中还提供了不少雷达数据处理和反演库。</p>
<p><code>satpy</code>，<code>PyCAMA</code>，<code>pys5p</code>，<code>pyresample</code>等库可处理常见的卫星数据</p>
<p>说到数据处理，当然少不了Micaps的多种数据格式了，下面介绍一款国内大神基于Python开发的Micaps数据处理和可视化库：</p>
<h3 id="Micaps数据处理"><a href="#Micaps数据处理" class="headerlink" title="Micaps数据处理"></a>Micaps数据处理</h3><p><code>PyMICAPS</code>：PyMICAPS[4]是由国内某气象局一位大神开源的Micaps输出处理和可视化工具(发布在知名同性交友平台–Github)，功能相对齐全，而且也在不断完善。感兴趣的可以下载使用，并反馈意见，帮助持续完善(打个广告~~)。</p>
<p>数据处理完成之后，当然是要进一步进行分析，python中提供了相当多的分析工具，以下仅列出一小部分：</p>
<h3 id="数据分析"><a href="#数据分析" class="headerlink" title="数据分析"></a>数据分析</h3><p><code>EOFS</code>：Python EOF分析库</p>
<p><code>statsmodels</code>：Python统计分析库，提供了大量的统计分析函数</p>
<p><code>scikit-learn</code>：Python中较为热门的机器学习库，其中也提供了相当多的统计学方法<code>metpy</code>，<code>sharppy</code>，<code>atmos</code>等库可计算大气科学领域常用的一些参数，其中<code>metpy</code>还提供了一些可视化和数据处理函数。</p>
<p>数据处理完成后，当然也要画图看一下了，要不然怎么发paper呢？&lt;手动狗头&gt;</p>
<h3 id="数据可视化"><a href="#数据可视化" class="headerlink" title="数据可视化"></a>数据可视化</h3><p><code>matplotlib</code>：<code>matplotlib</code>可以说是python中最为基础的绘图库了</p>
<p><code>seaborn</code>：针对统计分析的可视化库•<code>Basemap</code>和<code>Cartopy</code>：针对地理信息的可视化库</p>
<p><code>EarthSim</code>：针对环境模拟(比如水文气象等)的后处理可视化工具，包含了交互式可视化。</p>
<p><code>calmap</code>：可以绘制日历图</p>
<p>除了上面列出来的之外，还有很多绘图工具，不再赘述。当然还有一些库不知道该怎么分类，因为分析画图的时候会用到，就放到这边吧：</p>
<p><code>geopandas</code>：地理空间数据处理和可视化神器</p>
<p><code>pyshp</code>，<code>fiona</code>等可处理常规的shapefile文件，常在画图的时候添加海岸线和边界线使用</p>
<p>上述介绍的可视化库大多是非交互式可视化库，关于Python中更多的可视化库分类，见<a href="http://mp.weixin.qq.com/s?__biz=MzU0NTk2NTgwNQ==&mid=2247483727&idx=1&sn=c59818a0d4818ec0eeb6243a981bbb1a&chksm=fb6592cdcc121bdbb35710a42214a3158388954bceb1114e038e90a2c390c34728b2f9705ac9&scene=21#wechat_redirect">Python可视化工具概览</a></p>
<p>画图当然少不了配色，以下介绍一些Python中的配色库：</p>
<p><code>cmocean</code>：海洋科学领域的配色库，除了python版之外，还有matlab及其他版本</p>
<p><code>colorcet</code>，<code>palettable</code>，<code>colour</code>：提供了很多可选的colormap</p>
<p><code>colormap</code>：提供了一些颜色转换基础操作和创建colormap的函数</p>
<p><code>cmaps</code>：提供了NCL中所有的colormap</p>
<p>除了上面提到的之外，Python中还有很多可用的库，比如网络数据获取<code>requests</code>和<code>bs4</code>等，而且很多国外很多机构都提供了python版的获取数据的API接口工具。</p>
<h3 id="机器学习"><a href="#机器学习" class="headerlink" title="机器学习"></a>机器学习</h3><p><code>sklearn</code>：前面已经介绍，可以用这个框架完成常用的机器学习流程，从数据预处理，特征工程，建模到评估，非常方便，但不支持深度学习的模型。</p>
<p><code>TensorFlow</code>：大家都耳熟能详的深度学习框架，是Google brain 开发和维护的，在工业界和学术界都有广泛的使用。</p>
<p><code>Pytorch</code>：与TensorFlow相比，Pytorch更加方便实现简单灵活的实验，它的前身是Torch，用的是lua语言，从Torch到Pytorch可以看成是lua到python的迁移。</p>
<p><code>Keras</code>：是建立在 Tensorflow 和 Theano 之上的更高级的 封装，非常容易上手，适合进行简单的试验。具体可以看<a href="http://mp.weixin.qq.com/s?__biz=MzU0NTk2NTgwNQ==&mid=2247483778&idx=1&sn=c37186dd50ff6b87e119539ce927e81c&chksm=fb659200cc121b160e89698cad6fdd6a965b29b1f211b4c27b18f1ed2f807ac9bcc073ecade3&scene=21#wechat_redirect">铁柱同学的系列文章</a>。</p>
<p><code>XGBoost</code>：被称为机器学习大杀器的XGBoost(eXtreme Gradient Boosting)，想必大家都有所耳闻，很多比赛的top solutions大多数都用了这个算法。</p>
<p><code>lightgbm</code>：微软推出的gbm算法模型，更加轻量，一些测试表明其可以实现类似xgboost的效果，但是可以极大节约时间成本。</p>
<p><code>CatBoost</code>：CatBoost是Yandex在17年开源的机器学习框架，对类别特征支持较好，可以理解为基于类别特征优化的GBM算法。</p>
<p><code>Hyperopt</code>：强大的调参库，支持贝叶斯优化。</p>
<p>上面仅对仅列出了一些气象或者机器学习常用库，当然还有很多库有待挖掘。当你有一个想法的时候，可以在Google或者Github搜索一下，说不定Python就能满足你呢！</p>
<p>之前和朋友们整合了这些资源，觉得对大家还是很有帮助的，不过新来的小伙伴可能没看到过，所以再发一次，希望对大家有所帮助，了解过的盆友们就当温故而知新吧。</p>
<p>另外因为开源库总是在不断更新，好的工具总在不断出现，为此在Github上开了一个项目<a href="https://github.com/MeteoAI/awesome-atmos%EF%BC%8C%E5%A4%A7%E5%AE%B6%E5%8F%AF%E4%BB%A5%E6%8A%8A%E8%87%AA%E5%B7%B1%E8%A7%89%E5%BE%97%E6%9C%89%E7%94%A8%E7%9A%84%E5%BA%93%E4%B8%80%E8%B5%B7%E5%8A%A0%E8%BF%9B%E6%9D%A5%E4%B8%8D%E6%96%AD%E4%B8%B0%E5%AF%8C%E6%95%B4%E4%B8%AA%E9%A1%B9%E7%9B%AE%E3%80%82">https://github.com/MeteoAI/awesome-atmos，大家可以把自己觉得有用的库一起加进来不断丰富整个项目。</a></p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>PDF</title>
    <url>/2022/05/01/Tool/PDF/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="解密PDF"><a href="#解密PDF" class="headerlink" title="解密PDF"></a>解密PDF</h4><p><a href="https://www.ilovepdf.com/zh-cn/unlock_pdf">https://www.ilovepdf.com/zh-cn/unlock_pdf</a></p>
<p>如果pdf被加密的话进行此步操作，无加密直接去水印即可</p>
<h4 id="PDF去水印"><a href="#PDF去水印" class="headerlink" title="PDF去水印"></a>PDF去水印</h4><p><a href="https://www.douyacun.com/pdf/remove-watermark">https://www.douyacun.com/pdf/remove-watermark</a></p>
<p>需要关注人家公众号获取个验证码，一个关注不用交钱，还是划算的</p>
<h4 id="在线修复PDF"><a href="#在线修复PDF" class="headerlink" title="在线修复PDF"></a>在线修复PDF</h4><p><a href="https://www.ilovepdf.com/zh-cn/repair-pdf">https://www.ilovepdf.com/zh-cn/repair-pdf</a></p>
<p>第二步中生成的pdf，可能会出现部分复杂的页面在pdf阅读器打开报错，进行在线修复</p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Python</title>
    <url>/2022/05/01/Tool/Python/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Install-Python"><a href="#Install-Python" class="headerlink" title="Install Python"></a>Install Python</h2><p> <a href="https://www.jianshu.com/p/b9eac8419c8d">https://www.jianshu.com/p/b9eac8419c8d</a></p>
<p>下载anaconda</p>
<h3 id="查看帮助"><a href="#查看帮助" class="headerlink" title="查看帮助"></a>查看帮助</h3><p><code>conda -h</code></p>
<h3 id="基于python3-8版本创建一个名字为python38的环境"><a href="#基于python3-8版本创建一个名字为python38的环境" class="headerlink" title="基于python3.8版本创建一个名字为python38的环境"></a>基于python3.8版本创建一个名字为python38的环境</h3><p><code>conda create --name python38 python=3.8</code></p>
<h3 id="激活此环境"><a href="#激活此环境" class="headerlink" title="激活此环境"></a>激活此环境</h3><p><code>activate python38</code></p>
<h3 id="再来检查python版本，显示是-3-8"><a href="#再来检查python版本，显示是-3-8" class="headerlink" title="再来检查python版本，显示是 3.8"></a>再来检查python版本，显示是 3.8</h3><p><code>python -V </code></p>
<h3 id="退出当前环境"><a href="#退出当前环境" class="headerlink" title="退出当前环境"></a>退出当前环境</h3><p><code>deactivate python38</code></p>
<h3 id="删除该环境"><a href="#删除该环境" class="headerlink" title="删除该环境"></a>删除该环境</h3><p><code>conda remove -n python38 --all</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda update --all</span><br><span class="line"></span><br><span class="line">conda create -n py38 python=3.8</span><br><span class="line"></span><br><span class="line">conda activate py38 # 激活这个新的配置环境</span><br><span class="line"></span><br><span class="line">python --version # 检查版本</span><br><span class="line"></span><br><span class="line"># 打开 anaconda navigator，会现多出来一个可选择的环境</span><br><span class="line"></span><br><span class="line">添加清华镜像 https://blog.csdn.net/u014330763/article/details/79994593</span><br></pre></td></tr></table></figure>



<h3 id="Jupyter-Notebook-add-conda-env"><a href="#Jupyter-Notebook-add-conda-env" class="headerlink" title="Jupyter Notebook add conda env"></a>Jupyter Notebook add conda env</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda create --name pyn_env --channel conda-forge pyngl pynio</span><br><span class="line"></span><br><span class="line">source activate pyn_env</span><br></pre></td></tr></table></figure>



<h3 id="jupyter-notebook-添加-conda-环境"><a href="#jupyter-notebook-添加-conda-环境" class="headerlink" title="jupyter notebook 添加 conda 环境"></a>jupyter notebook 添加 conda 环境</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda install ipykernel</span><br><span class="line"></span><br><span class="line">source activate pyn_env</span><br><span class="line"></span><br><span class="line">python -m ipykernel install --user --name pyn_env --display-name &quot;Python pyn_env&quot;</span><br><span class="line"></span><br><span class="line">jupyter notebook</span><br><span class="line"></span><br><span class="line">切换kernal环境</span><br></pre></td></tr></table></figure>





<h2 id="Python-并行-multiprocessing-Process"><a href="#Python-并行-multiprocessing-Process" class="headerlink" title="Python 并行 multiprocessing.Process"></a>Python 并行 multiprocessing.Process</h2><h3 id="基础示例代码"><a href="#基础示例代码" class="headerlink" title="基础示例代码"></a>基础示例代码</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import multiprocessing</span><br><span class="line"></span><br><span class="line">def worker(num):</span><br><span class="line">    &quot;&quot;&quot;worker function&quot;&quot;&quot;</span><br><span class="line">    print(&#x27;Worker:&#x27;, num)</span><br><span class="line">    return</span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    jobs = []</span><br><span class="line">    for i in range(5):</span><br><span class="line">        p = multiprocessing.Process(target=worker, args=(i,))</span><br><span class="line">        jobs.append(p)</span><br><span class="line">        p.start()</span><br></pre></td></tr></table></figure>

<p>上面的代码中，首先定义了一个worker函数，该函数接受一个参数num，然后打印出Worker: num的信息。接着，在主程序中，使用for循环创建了5个进程，每个进程都调用worker函数，并传入不同的参数。最后，将每个进程对象都添加到jobs列表中，并依次启动每个进程。</p>
<h3 id="传入可选参数"><a href="#传入可选参数" class="headerlink" title="传入可选参数"></a>传入可选参数</h3><p>如果worker函数需要传入可选参数，可以使用关键字参数的方式来实现。具体来说，可以将可选参数打包成一个字典，然后将该字典作为kwargs参数传递给Process对象。修改后的代码如下所示：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import multiprocessing</span><br><span class="line"></span><br><span class="line">def worker(num1, num2, **kwargs):</span><br><span class="line">    &quot;&quot;&quot;worker function&quot;&quot;&quot;</span><br><span class="line">    print(&#x27;Worker:&#x27;, num1, num2)</span><br><span class="line">    if &#x27;name&#x27; in kwargs:</span><br><span class="line">        print(&#x27;Hello,&#x27;, kwargs[&#x27;name&#x27;])</span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    jobs = []</span><br><span class="line">    for i in range(5):</span><br><span class="line">        p = multiprocessing.Process(target=worker, args=(i, i+1), kwargs=&#123;&#x27;name&#x27;: &#x27;Alice&#x27;&#125;)</span><br><span class="line">        jobs.append(p)</span><br><span class="line">        p.start()</span><br></pre></td></tr></table></figure>



<h3 id="获取多进程函数的返回值"><a href="#获取多进程函数的返回值" class="headerlink" title="获取多进程函数的返回值"></a>获取多进程函数的返回值</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import multiprocessing</span><br><span class="line"></span><br><span class="line">def worker(num, q):</span><br><span class="line">    &quot;&quot;&quot;worker function&quot;&quot;&quot;</span><br><span class="line">    print(&#x27;Worker:&#x27;, num)</span><br><span class="line">    q.put(num * 2)</span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    # 创建一个Queue对象</span><br><span class="line">    q = multiprocessing.Queue()</span><br><span class="line"></span><br><span class="line">    # 创建5个进程，并将Queue对象作为参数传递给每个进程</span><br><span class="line">    jobs = []</span><br><span class="line">    for i in range(5):</span><br><span class="line">        p = multiprocessing.Process(target=worker, args=(i, q))</span><br><span class="line">        jobs.append(p)</span><br><span class="line">        p.start()</span><br><span class="line"></span><br><span class="line">    # 等待所有进程执行完毕</span><br><span class="line">    for p in jobs:</span><br><span class="line">        p.join(timeout = None) </span><br><span class="line"></span><br><span class="line">    # 从Queue对象中获取子进程返回的值</span><br><span class="line">    results = []</span><br><span class="line">    while not q.empty():</span><br><span class="line">        results.append(q.get())</span><br><span class="line"></span><br><span class="line">    print(&#x27;Results:&#x27;, results)</span><br></pre></td></tr></table></figure>

<p>上面的代码中，首先定义了一个worker函数，该函数接受两个参数num和q，其中num表示进程编号，q表示Queue对象。在函数体中，首先打印出Worker: num的信息，然后将num * 2的结果放入Queue对象中。在主程序中，首先创建一个Queue对象，然后使用for循环创建了5个进程，每个进程都调用worker函数，并传入不同的参数。然后，将每个进程对象都添加到jobs列表中，并依次启动每个进程。接着，使用for循环遍历jobs列表，调用每个进程对象的join()方法，等待该进程执行完毕。最后，使用while循环从Queue对象中获取子进程返回的值，并将这些值存储在results列表中。最后，打印出Results</p>
<h3 id="multiprocessing-Pool"><a href="#multiprocessing-Pool" class="headerlink" title="multiprocessing.Pool"></a>multiprocessing.Pool</h3><h4 id="基础示例"><a href="#基础示例" class="headerlink" title="基础示例"></a>基础示例</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from multiprocessing import Pool</span><br><span class="line"></span><br><span class="line">def worker(num):</span><br><span class="line">    print(&#x27;Worker %d is running&#x27; % num)</span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    pool = Pool(processes=4)</span><br><span class="line">    for i in range(4):</span><br><span class="line">        pool.apply_async(worker, args=(i,))</span><br><span class="line">    pool.close()</span><br><span class="line">    pool.join()</span><br></pre></td></tr></table></figure>

<p>首先创建了一个Pool对象，指定进程数为4，然后使用apply_async()方法启动4个进程，执行worker()函数。最后，使用close()方法关闭进程池，使用join()方法等待所有进程执行完毕。</p>
<h3 id="获取返回值"><a href="#获取返回值" class="headerlink" title="获取返回值"></a>获取返回值</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from multiprocessing import Pool</span><br><span class="line"></span><br><span class="line">def worker(num):</span><br><span class="line">    return &#x27;Worker %d is running&#x27; % num</span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    pool = Pool(processes=4)</span><br><span class="line">    results = []</span><br><span class="line">    for i in range(4):</span><br><span class="line">        result = pool.apply_async(worker, args=(i,))</span><br><span class="line">        results.append(result)</span><br><span class="line">    pool.close()</span><br><span class="line">    pool.join()</span><br><span class="line">    for result in results:</span><br><span class="line">        print(result.get())</span><br></pre></td></tr></table></figure>

<p>也可以使用map方法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from multiprocessing import Pool</span><br><span class="line"></span><br><span class="line">def worker(arg):</span><br><span class="line">    # 进程执行的代码</span><br><span class="line">    return arg</span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    pool = Pool(processes=2)</span><br><span class="line">    results = pool.map(worker, [arg1, arg2])</span><br><span class="line">    pool.close()</span><br><span class="line">    pool.join()</span><br><span class="line">    # 处理进程返回的结果</span><br></pre></td></tr></table></figure>



<h3 id="多个参数"><a href="#多个参数" class="headerlink" title="多个参数"></a>多个参数</h3><p>最简单的方法，是在基础示例中args后面继续加参数</p>
<h4 id="仅有一个变量，其余为常量"><a href="#仅有一个变量，其余为常量" class="headerlink" title="仅有一个变量，其余为常量"></a>仅有一个变量，其余为常量</h4><p>参数为1个可迭代对象和其他几个常量，可以使用partial偏函数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import os</span><br><span class="line">import pandas as pd</span><br><span class="line">import numpy</span><br><span class="line">from multiprocessing import Pool</span><br><span class="line">from functools import partial</span><br><span class="line"></span><br><span class="line">def plot_var(var1, var2, idate):</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line">worker = partial(plot_var, var1, var2)</span><br><span class="line"></span><br><span class="line">pool = Pool(processes=10)</span><br><span class="line">pool.map(worker, dates[:])</span><br><span class="line">pool.close()</span><br><span class="line">pool.join()  </span><br></pre></td></tr></table></figure>



<h4 id="包装函数"><a href="#包装函数" class="headerlink" title="包装函数"></a>包装函数</h4><p>在目标函数外面多套了一层函数，将多个多参数问题转为单参数问题</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#代码来自：https://blog.csdn.net/qazwsxrx/article/details/129624406</span><br><span class="line"></span><br><span class="line">import multiprocessing</span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line">def function_1(a, b):</span><br><span class="line">    print(f&quot;进程 &#123;os.getpid()&#125; 执行 function_1，参数: &#123;a&#125;, &#123;b&#125;&quot;)</span><br><span class="line">    return a * b</span><br><span class="line"></span><br><span class="line">def function_2(a, b):</span><br><span class="line">    print(f&quot;进程 &#123;os.getpid()&#125; 执行 function_2，参数: &#123;a&#125;, &#123;b&#125;&quot;)</span><br><span class="line">    return a + b</span><br><span class="line"></span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    max_processes = 4</span><br><span class="line"></span><br><span class="line">    # 将函数、参数1和参数2包装成元组，并组合成列表</span><br><span class="line">    tasks = [</span><br><span class="line">        (function_1, 1, 2),</span><br><span class="line">        (function_1, 3, 4),</span><br><span class="line">        (function_2, 5, 6),</span><br><span class="line">        (function_2, 7, 8),</span><br><span class="line">        (function_1, 9, 10),</span><br><span class="line">        (function_2, 11, 12)</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    # 定义一个包装器函数，将参数解包并调用相应的函数</span><br><span class="line">    def wrapper(args):</span><br><span class="line">        func, a, b = args</span><br><span class="line">        return func(a, b)</span><br><span class="line"></span><br><span class="line">    with multiprocessing.Pool(processes=max_processes) as pool:</span><br><span class="line">        # 使用 starmap 方法将任务列表传递给进程池</span><br><span class="line">        results = pool.map(wrapper, tasks)</span><br><span class="line"></span><br><span class="line">        # 输出进程返回的结果</span><br><span class="line">        print(f&quot;进程返回的结果: &#123;results&#125;&quot;)</span><br></pre></td></tr></table></figure>



<h4 id="其他解决方法"><a href="#其他解决方法" class="headerlink" title="其他解决方法"></a>其他解决方法</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#a.使用starmap函数</span><br><span class="line">from multiprocessing import Pool</span><br><span class="line">urls  = [xx,xx,xx]</span><br><span class="line">paths = [xx,xx,xx]</span><br><span class="line">zip_args = list(zip(urls,paths))</span><br><span class="line"></span><br><span class="line">pool = Pool(processes=4)</span><br><span class="line">pool.starmap(get_pic, zip_args)</span><br><span class="line">pool.close()</span><br><span class="line">pool.join()</span><br><span class="line"></span><br><span class="line">#b.使用pathos</span><br><span class="line">from pathos.multiprocessing import ProcessingPool as paPool</span><br><span class="line">urls  = [xx,xx,xx]</span><br><span class="line">paths = [xx,xx,xx]</span><br><span class="line"></span><br><span class="line">pool = paPool(processes=4)</span><br><span class="line">pool.map(get_pic, urls, paths )</span><br><span class="line">pool.close()</span><br><span class="line">pool.join()</span><br></pre></td></tr></table></figure>



<h3 id="增加报错信息"><a href="#增加报错信息" class="headerlink" title="增加报错信息"></a>增加报错信息</h3><p>multiprocessing存在一个隐患，很容易出现指定函数不执行，也无报错的现象。我们需要添加error_callback参数，捕获报错信息。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def err_call_back(err):</span><br><span class="line">    print(f&#x27;出错啦~ error：&#123;str(err)&#125;&#x27;)</span><br><span class="line"></span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    ...</span><br><span class="line">    pool = Pool(processes = 4)</span><br><span class="line">    for fhr in range(10):         </span><br><span class="line">        pool.apply_async(plot_qv, </span><br><span class="line">                         args = (var1, var2, var3, var4 ),</span><br><span class="line">                         error_callback=err_call_back</span><br><span class="line">                         )</span><br><span class="line">    pool.close()</span><br><span class="line">    pool.join() </span><br></pre></td></tr></table></figure>



<h3 id="多进程嵌套"><a href="#多进程嵌套" class="headerlink" title="多进程嵌套"></a>多进程嵌套</h3><p>给函数加了一层multiprocessing，报错daemonic processes are not allowed to have children。</p>
<p>Pool的实现使用了守护(daemon)进程来完成任务。而为了防止进程泄漏留下孤儿进程，守护进程是无法spawn出它自己的子进程的。</p>
<p>我这里的问题是子程序中salem的插值函数默认打开了多进程</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DatasetAccessor.wrf_zlevel(varname, levels=None, fill_value=nan, use_multiprocessing=True)</span><br></pre></td></tr></table></figure>

<p>如果需要使外层生效，需要将插值部分的多进程关闭</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def plot_qv(filename, title, figname, zlevel ):</span><br><span class="line"></span><br><span class="line">    ds = salem.open_wrf_dataset(filename).isel(time=0)</span><br><span class="line">    if zlevel is not None:</span><br><span class="line">        u  = ds.salem.wrf_zlevel(&#x27;U&#x27;, levels=zlevel,use_multiprocessing=False) </span><br><span class="line">        v  = ds.salem.wrf_zlevel(&#x27;V&#x27;, levels=zlevel,use_multiprocessing=False)</span><br><span class="line">        qv = ds.salem.wrf_zlevel(&#x27;QVAPOR&#x27;, levels=zlevel,use_multiprocessing=False)</span><br><span class="line">        </span><br></pre></td></tr></table></figure>

<p>参考：</p>
<ul>
<li>• <a href="https://zhuanlan.zhihu.com/p/393267512">https://zhuanlan.zhihu.com/p/393267512</a></li>
<li>• <a href="https://zhuanlan.zhihu.com/p/46798399">https://zhuanlan.zhihu.com/p/46798399</a></li>
</ul>
<h2 id="Python-IO"><a href="#Python-IO" class="headerlink" title="Python IO"></a>Python IO</h2><p><a href="https://mp.weixin.qq.com/s/wqnT0TQMbHZ3rKqnQuqnJw">https://mp.weixin.qq.com/s/wqnT0TQMbHZ3rKqnQuqnJw</a></p>
<p><strong>1.Python自带方式</strong></p>
<p>  Python自带的文件打开函数是open及with open，使用方式为：</p>
<p>open函数：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">f = open(file,’r’)f.read()f.close()</span><br></pre></td></tr></table></figure>



<p>  麻烦之处在于，每次用完文件后，要使用close()函数关闭文件，如果文件关闭的位置不合适或者忘记关闭文件，就会报错。</p>
<p>  with open函数是open函数的进阶版，优势在于不需要关闭文件，使用方式为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">with open(file,’r’) as f:         f.read()</span><br></pre></td></tr></table></figure>



<p>  该函数会自动检测，在不使用文件的时候自动关闭，并不需要手动关闭文件。</p>
<p>  读取文件时，其读取方式的可选参数（即前文函数中’r’位置）与之前在MATLAB环节介绍过的一致，再掏出表格复习一遍：</p>
<table>
<thead>
<tr>
<th>打开模式</th>
<th>执行操作</th>
</tr>
</thead>
<tbody><tr>
<td>‘r’</td>
<td>以只读方式打开文件（默认）</td>
</tr>
<tr>
<td>‘w’</td>
<td>以写入的方式打开文件，会覆盖已存在的文件</td>
</tr>
<tr>
<td>‘x’</td>
<td>如果文件已经存在，使用此模式打开将引发异常</td>
</tr>
<tr>
<td>‘a’</td>
<td>以写入模式打开，如果文件存在，则在末尾追加写入</td>
</tr>
<tr>
<td>‘b’</td>
<td>以二进制模式打开文件</td>
</tr>
<tr>
<td>‘t’</td>
<td>以文本模式打开（默认）</td>
</tr>
<tr>
<td>‘+’</td>
<td>可读写模式（可添加到其他模式中使用）</td>
</tr>
<tr>
<td>‘U’</td>
<td>通用换行符支持</td>
</tr>
</tbody></table>
<p>  同之前例子，小明想以二进制的形式打开一个已存在的文件，在读入数据后，在文件中再持续写入数据，则查一查表中相对应的符号，他可以：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">f = open(&#x27;write_data.txt&#x27;,&#x27;ab+&#x27;)</span><br></pre></td></tr></table></figure>

<p>或</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">with open(&#x27;write_data.txt&#x27;,&#x27;ab+&#x27;) as f:</span><br></pre></td></tr></table></figure>



<p>在文件操作方面，open函数和with open函数是一致的 ，包含的文件操作函数有：</p>
<table>
<thead>
<tr>
<th>文件对象方法</th>
<th>执行操作</th>
</tr>
</thead>
<tbody><tr>
<td>f.close()</td>
<td>关闭文件</td>
</tr>
<tr>
<td>f.read([size&#x3D;-1])</td>
<td>从文件读取size个字符，当未给定size或给定负值的时候，读取剩余的所有字符，然后作为字符串返回</td>
</tr>
<tr>
<td>f.readline([size&#x3D;-1])</td>
<td>从文件中读取并返回一行（包括行结束符），如果有size有定义则返回size个字符</td>
</tr>
<tr>
<td>f.write(str)</td>
<td>将字符串str写入文件</td>
</tr>
<tr>
<td>f.writelines(seq)</td>
<td>向文件写入字符串序列seq，seq应该是一个返回字符串的可迭代对象</td>
</tr>
<tr>
<td>f.seek(offset, from)</td>
<td>在文件中移动文件指针，从from（0代表文件起始位置，1代表当前位置，2代表文件末尾）偏移offset个字节</td>
</tr>
<tr>
<td>f.tell()</td>
<td>返回当前在文件中的位置</td>
</tr>
<tr>
<td>f.truncate([size&#x3D;file.tell()])</td>
<td>截取文件到size个字节，默认是截取到文件指针当前位置</td>
</tr>
</tbody></table>
<p>  所以怎么写入文件也呼之欲出了，没错，就是f.write()函数或f.writelines()函数。格式控制和之前在MATLAB与NCL版块里介绍过的一致，就不在此重复了。</p>
<p>  虽然也能打开文件，但由于Python不支持数组格式，因此常对后续的数据计算过程造成阻碍，这时聪明的小伙伴就想到了自己写一个数组对象，于是numpy库就出现了。</p>
<p><strong>2.numpy</strong></p>
<p> numpy定义了一个array类型的数组，使用numpy.array(data)就可以轻松得到一个数组data，之后就可以方便地进行类似其他语言的数组操作啦！</p>
<p>  numpy库的文件打开效率虽然比不上后面两个pandas和xarray库，但比最原始的open一个文件然后再各种split挑选数据的方式要高效很多，其读取函数包括读取文件时的genformtxt、loadtxt、以及保存时所需的savetxt。</p>
<p>genformtxt的完整使用方式为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">numpy.genfromtxt(fname, dtype=&lt;type &#x27;float&#x27;&gt;, comments=&#x27;#&#x27;, delimiter=None, skip_header=0, skip_footer=0, converters=None, missing_values=None, filling_values=None, usecols=None, names=None, excludelist=None, deletechars=None, replace_space=&#x27;_&#x27;, autostrip=False, case_sensitive=True, defaultfmt=&#x27;f%i&#x27;, unpack=None, usemask=False, loose=True, invalid_raise=True, max_rows=None)[source]¶</span><br></pre></td></tr></table></figure>

<p>当然平时的使用中大部分时候用不到这么多参数，平时多用的形式为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">numpy.genfromtxt(fname, dtype=&lt;type &#x27;float&#x27;&gt;, delimiter=’’, skip_header=1)</span><br></pre></td></tr></table></figure>

<p>delimiter表示数据分隔符，skip_header表示跳过文件的前几行之后开始读取。</p>
<p>类似地，loadtxt的常用形式为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">numpy.loadtxt(fname,dtype=,delimiter=None,skiprows=0)</span><br></pre></td></tr></table></figure>

<p> skiprows在这里表示跳过前几行，使用形式和genformtxt大体相同，只是有些参数的名称不同。</p>
<p>保存文件时用到savetxt：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">np.savetxt(&quot;file.txt&quot;, a)</span><br></pre></td></tr></table></figure>



<p><strong>3.pandas</strong></p>
<p>  pandas的读取效率又要高于上述的numpy包，这部分得益于pandas常用的两种数据结构：Series和DataFrame，顾名思义，区别在于Series为一维数据，而DataFrame为两维数据。</p>
<p>读取文件时，pandas针对不同文件有不同的函数，具体可在下列官网中找到：</p>
<p><a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html">https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html</a></p>
<p><img src="https://p.ipic.vip/jfdvzt.png" alt="Image"></p>
<p>截张不完全的图感受一下pandas针对读取和写入文件施工的函数数量。</p>
<p>因为函数实在太多，此处仅简单举例，例如使用read_table函数读入txt文件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">data = pd.read_table(&#x27;filename.txt&#x27;,sep=&#x27;\t&#x27;,header=2)</span><br></pre></td></tr></table></figure>

<p>此处sep表示数据分隔符，header表示跳过头文件的行数。</p>
<p><strong>4.xarray</strong></p>
<p>以上库在读取txt或csv等通用格式的数据时很好用，然而到了气象领域，面对多维数组和特殊的数据格式，以上函数多少都会显得力不从心，此时，xarray库就派上了用场。</p>
<p>xarray的数据类型主要包括DataArray、Dataset两类（其实和numpy的Series及DataFrame两种数据格式类似）。DataArray包含的属性有：values记录数组的具体数值、dims记录维度的名字、coords记录数据坐标、attrs记录数据的属性，比如变量的单位等。Dataset可以理解为由多个DataArray组成的数据结构，它包括：dims 记录维度的名字、data_vars记录各个变量的名字、coords 记录坐标、attrs 记录数据的属性，比变量的单位等。</p>
<p>在读取数据时，常使用的函数为open_dataset，此函数甚至可以直接读取气象中常用的nc格式数据，只需要：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ds_disk = xr.open_dataset(&quot;saved_on_disk.nc&quot;)</span><br></pre></td></tr></table></figure>

<p>官方说明可参考：</p>
<p><a href="http://xarray.pydata.org/en/stable/io.html">http://xarray.pydata.org/en/stable/io.html</a></p>
<p>6.其他</p>
<p>netCDF4 、UV-CDAT等库这些库也能达到省心省力读取气象格式数据的效果，有感兴趣的小伙伴可以参阅家园用户的分享：</p>
<p>18393810639针对netCDF4库的分享：</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=92817">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=92817</a></p>
<p>风往北吹的UV-CDAT库介绍：</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=48188">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=48188</a></p>
<p><strong>8.批量读取：os</strong></p>
<p>常有小伙伴头疼文件怎么批量读取，甚至为此建立数组写循环，拼出每个文件的名称再去读取。实际上，拥有了os模块，只需要使用listdir函数：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import osPaths = os.listdir(filepath)</span><br></pre></td></tr></table></figure>

<p>filepath文件夹下的所有文件名就被保存在paths变量中了，之后再结合for语句和之前介绍过的文件读取函数，循环读取paths中的每一行就可以了。简单又省心！</p>
<h4 id="read-NC"><a href="#read-NC" class="headerlink" title="read NC"></a>read NC</h4><p><em><strong>1. 介绍</strong></em><br>.nc（network Common Data Format）文件是气象上常用的数据格式，python上读取.nc使用较多的库为netCDF4这个库，下面将介绍这个库的具体方法。</p>
<p>安装很简单:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install netCDF4</span><br></pre></td></tr></table></figure>



<p>.nc文件介绍参考链接：<a href="https://blog.csdn.net/wildand/article/details/88899718">https://blog.csdn.net/wildand/article/details/88899718</a></p>
<p><em><strong>2. .nc文件的读取</strong></em></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#导入nc库</span><br><span class="line">import netCDF4 as nc</span><br><span class="line"></span><br><span class="line">filename = &#x27;2017-06-15_2017-06-17.nc&#x27;   # .nc文件名</span><br><span class="line">f = nc.Dataset(filename)   #读取.nc文件，传入f中。此时f包含了该.nc文件的全部信息</span><br></pre></td></tr></table></figure>

<p><strong>#step1： 查看.nc文件的全部变量，及该变量的全部信息（维度大小，单位等）</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">all_vars = f.variables.keys()   #获取所有变量名称</span><br><span class="line">print(len(all_vars))  #长度为18</span><br><span class="line"></span><br><span class="line">all_vars_info = f.variables.items()  #获取所有变量信息</span><br><span class="line">print(type(all_vars_info))   #输出为： odict_items 。这里将其转化为 list列表</span><br><span class="line">print(len(all_vars_info))   #长度为18</span><br><span class="line">all_vars_info = list(all_vars_info)  #此时每个变量的信息为其中一个列表</span><br></pre></td></tr></table></figure>

<p>如图：包含经纬度、时间、等变量名称<br><img src="https://p.ipic.vip/gem10a.png" alt="在这里插入图片描述"><br>看看 all_vars_info的前两个变量的信息，如下，显示了 shape unit name float32 fillvalue等信息</p>
<p><img src="https://p.ipic.vip/4tmpwe.png" alt="在这里插入图片描述"></p>
<p><strong>#step2： 查看.nc文件的单个变量，及该变量的全部信息（维度大小，单位等）</strong><br>如果对某个变量感兴趣（已知变量名)，想查看这个变量的信息，获取这个变量的数据，方法如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#我们要查看  ’u‘的信息</span><br><span class="line">var = &#x27;u&#x27;</span><br><span class="line">var_info = f.variables[var]   #获取变量信息</span><br><span class="line">var_data = f[var][:]   #获取变量的数据</span><br><span class="line">print(var_info)</span><br><span class="line">print(var_data.shape)  </span><br><span class="line"></span><br><span class="line">#很方便转化为array数组</span><br><span class="line">print(type(var_data))    #&lt;class &#x27;numpy.ma.core.MaskedArray&#x27;&gt;  .nc文件的变量数组都为Masked array</span><br><span class="line">var_data = np.array(var_data)  #转化为np.array数组</span><br><span class="line"></span><br><span class="line"># 读取数据</span><br><span class="line">data = nc.variables[&#x27;air&#x27;][:]</span><br><span class="line"></span><br><span class="line">print(data)</span><br></pre></td></tr></table></figure>

<p>输出如下：<br><img src="https://p.ipic.vip/9q17yk.png" alt="在这里插入图片描述"></p>
<p><strong>#step3： 列表形式记录所有变量信息</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">###最直接的办法，获取每个变量的缩写名字，标准名字(long_name),units和shape大小。这样很方便后续操作</span><br><span class="line">all_vars_name = []</span><br><span class="line">all_vars_long_name = []</span><br><span class="line">all_vars_units = []</span><br><span class="line">all_vars_shape = []</span><br><span class="line"></span><br><span class="line">for key in f1.variables.keys():</span><br><span class="line">    </span><br><span class="line">    all_vars_name.append(key)</span><br><span class="line">    all_vars_long_name.append(f1.variables[key].long_name)</span><br><span class="line">    all_vars_units.append(f1.variables[key].units)</span><br><span class="line">    all_vars_shape.append(f1.variables[key].shape)</span><br></pre></td></tr></table></figure>

<p>结果如下：<br><img src="https://p.ipic.vip/pw1sxx.png" alt="在这里插入图片描述"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#做成表格</span><br><span class="line">a_vars_info = pd.DataFrame(all_vars_name,columns = [&#x27;name&#x27;])</span><br><span class="line">a_vars_info[&#x27;long_name&#x27;] = all_vars_long_name</span><br><span class="line">a_vars_info[&#x27;units&#x27;] = all_vars_units</span><br><span class="line">a_vars_info[&#x27;shape&#x27;] = all_vars_shape</span><br></pre></td></tr></table></figure>

<p><img src="https://p.ipic.vip/70wg4j.png" alt="在这里插入图片描述"></p>
<p><strong>注意：</strong>完成上述操作之后，记得关掉该文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">f.close()  #关闭文件。如果文件关闭后，再使用f.variabels.items()等操作是行不通的。</span><br></pre></td></tr></table></figure>

<p><em><strong>3. nc文件的创建</strong></em></p>
<p><strong>#step1： 创建一个文件</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">f_w = nc.Dataset(&#x27;hecheng.nc&#x27;,&#x27;w&#x27;,format = &#x27;NETCDF4&#x27;)   #创建一个格式为.nc的，名字为 ‘hecheng.nc’的文件</span><br></pre></td></tr></table></figure>

<p>#step2： 写入一些基本的信息</p>
<p>.nc文件的里面的每个变量都有维度信息，比如，上面的 var&#x3D;‘u’,维度为 1237161*177。这里面的各个维度，并不是随便定义的，是与基础的变量信息相关的。<br>如[12,37,161,177] &#x3D; [time,level,latitude,longitude],第一个维度为时间信息，依次为 垂直层信息，纬度、经度信息。<br>所以，我们要先写入一些基本的信息：时间，垂直层，纬度，经度</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#time纬度为12。注意，第2个参数 表示维度，但是必须是 integer整型，也就是只能创建一个基础单一维度信息。</span><br><span class="line">#如果后面要创建一个变量维度&gt;1，则必须由前面的单一维度组合而来。后面会介绍。</span><br><span class="line"></span><br><span class="line">#确定基础变量的维度信息。相对与坐标系的各个轴(x,y,z)</span><br><span class="line">f_w.createDimension(&#x27;time&#x27;,12)  </span><br><span class="line">f_w.createDimension(&#x27;level&#x27;,37) </span><br><span class="line">f_w.createDimension(&#x27;lat&#x27;,161)   </span><br><span class="line">f_w.createDimension(&#x27;lon&#x27;,177)  </span><br><span class="line"></span><br><span class="line">##创建变量。参数依次为：‘变量名称’，‘数据类型’，‘基础维度信息’</span><br><span class="line">f_w.createVariable(&#x27;time&#x27;,np.int,(&#x27;time&#x27;))  </span><br><span class="line">f_w.createVariable(&#x27;level&#x27;,np.int,(&#x27;level&#x27;))  </span><br><span class="line">f_w.createVariable(&#x27;lat&#x27;,np.float32,(&#x27;lat&#x27;))  </span><br><span class="line">f_w.createVariable(&#x27;lon&#x27;,np.float32,(&#x27;lon&#x27;))</span><br><span class="line"></span><br><span class="line">#写入变量time的数据。维度必须与定义的一致。</span><br><span class="line">time = np.array([0,6,12,18,0,6,12,18,0,6,12,18])</span><br><span class="line">f_w.variables[&#x27;time&#x27;][:] = time  </span><br><span class="line"></span><br><span class="line">#新创建一个多维度变量，并写入数据，</span><br><span class="line">f_w.createVariable( &#x27;u&#x27;, np.float32, (&#x27;time&#x27;,&#x27;level&#x27;,&#x27;lat&#x27;,&#x27;lon&#x27;))</span><br><span class="line">var_data = np.ones(shape=(12,37,161,177), dtype = np.float32)</span><br><span class="line">f_w.variables[var][:] = var_data </span><br></pre></td></tr></table></figure>

<p>关闭文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">f_w.close()</span><br></pre></td></tr></table></figure>

<p>还可以写入fill_value等信息<br><img src="https://p.ipic.vip/cpfacp.png" alt="在这里插入图片描述"><br><img src="https://p.ipic.vip/rimhy5.png" alt="在这里插入图片描述"><br>按照上述方式创建完成后，用一些可视化软件打开，结果如上图。</p>
<p><strong>#step3： 创建群组</strong></p>
<p>如上图，所以变量都是平行的位置，如果变量特别多，将相同类型的变量放进同一个group中，会更加方便。<br>来看一个示例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">f_w = nc.Dataset(&#x27;haha4.nc&#x27;,&#x27;w&#x27;,format = &#x27;NETCDF4&#x27;)</span><br><span class="line"></span><br><span class="line">f_w.createDimension(&#x27;time&#x27;,12)</span><br><span class="line">f_w.createDimension(&#x27;level&#x27;,37)</span><br><span class="line">f_w.createDimension(&#x27;lat&#x27;,161)  </span><br><span class="line">f_w.createDimension(&#x27;lon&#x27;,177)</span><br><span class="line"></span><br><span class="line">f_w.createVariable(&#x27;time&#x27;,np.int,(&#x27;time&#x27;))</span><br><span class="line">f_w.createVariable(&#x27;level&#x27;,np.int,(&#x27;level&#x27;))</span><br><span class="line">f_w.createVariable(&#x27;lat&#x27;,np.float32,(&#x27;lat&#x27;))</span><br><span class="line">f_w.createVariable(&#x27;lon&#x27;,np.float32,(&#x27;lon&#x27;))</span><br><span class="line"></span><br><span class="line">time = np.array([0,6,12,18,0,6,12,18,0,6,12,18])</span><br><span class="line"></span><br><span class="line">f_w.variables[&#x27;time&#x27;][:] = time</span><br><span class="line">f_w.variables[&#x27;level&#x27;][:] = level</span><br><span class="line"></span><br><span class="line">f_w.createVariable( &#x27;q&#x27;, np.float32, (&#x27;time&#x27;,&#x27;level&#x27;,&#x27;lat&#x27;,&#x27;lon&#x27;))</span><br><span class="line">var_data = np.ones(shape=(12,37,161,177), dtype = np.float32)</span><br><span class="line">f_w.variables[&#x27;q&#x27;][:] = var_data </span><br><span class="line"></span><br><span class="line">#创建一个群组，名字为&#x27;wind&#x27;</span><br><span class="line">group1 = f_w.createGroup(&#x27;wind&#x27;) </span><br><span class="line"></span><br><span class="line">group1.createVariable( &#x27;u&#x27;, np.float32, (&#x27;time&#x27;,&#x27;level&#x27;,&#x27;lat&#x27;,&#x27;lon&#x27;))</span><br><span class="line">var_data = np.ones(shape=(12,37,161,177), dtype = np.float32)</span><br><span class="line">group1.variables[&#x27;u&#x27;][:] = var_data </span><br><span class="line"></span><br><span class="line">group1.createVariable( &#x27;v&#x27;, np.float32, (&#x27;time&#x27;,&#x27;level&#x27;,&#x27;lat&#x27;,&#x27;lon&#x27;))</span><br><span class="line">var_data = np.zeros(shape=(12,37,161,177), dtype = np.float32)</span><br><span class="line">group1.variables[&#x27;v&#x27;][:] = var_data </span><br><span class="line"></span><br><span class="line">group1.close  # 关闭群组， 注意，这里没有括号</span><br><span class="line"></span><br><span class="line">f_w.close()</span><br></pre></td></tr></table></figure>

<p>创建结果如下：<br><img src="https://p.ipic.vip/ihmwhb.png" alt="在这里插入图片描述"><br>看，group的信息出来了</p>
<p>**#step4：查看带有group的.nc文件的信息 **</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">f1 = nc.Dataset(&#x27;haha5.nc&#x27;)</span><br><span class="line">vars = f1.variables.keys()  #odict_keys([&#x27;time&#x27;, &#x27;level&#x27;, &#x27;lat&#x27;, &#x27;lon&#x27;, &#x27;q&#x27;])  看不到groups信息</span><br><span class="line">#通过以下命令</span><br><span class="line">group_name = f1.groups.keys()  #获取组名,输出为：odict_keys([&#x27;wind&#x27;])</span><br></pre></td></tr></table></figure>

<p>使用如下命令都能看到group内的变量的信息。<br><img src="https://p.ipic.vip/hci66q.png" alt="在这里插入图片描述"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#获取group内的变量的数据</span><br><span class="line">group_var_data = f1[&#x27;wind&#x27;][&#x27;u&#x27;][:]  </span><br><span class="line">print(group_var_data.shape)  #(12, 37, 161, 177)</span><br></pre></td></tr></table></figure>

<p><em><strong>4. 总结</strong></em></p>
<p>气象上常用除了.nc文件外，还有 hdf文件，这两者格式都差不多，但是我更爱.hdf格式文件<br>后面有机会再介绍.hdf文件的读写操作。</p>
<p>其他文件读写的部分方法见下方链接内的论坛讨论：</p>
<p>微信不能添加外部超链接，请<strong>复制链接</strong>至浏览器食用！</p>
<p>Python读取txt文件并绘制站点降水散点图：(by：平流层的萝卜)</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=36334">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=36334</a></p>
<p>Python读取html表格并存为excel：</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=89647">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=89647</a></p>
<p>Python读取Excel数据：(by：weinihou)</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=53175">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=53175</a></p>
<p>用Python批处理CSV文件（时间循环）：(by：云知道)</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=40741">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=40741</a></p>
<p>使用Python的netCDF4库读取.nc文件 和 创建.nc文件：(by：18393810639)</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=92817">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=92817</a></p>
<p>Python 创建 读写 nc文件 demo：(by：haysen)<br><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=68059">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=68059</a></p>
<p>Python读取nc数据和绘图：(by：平流层的萝卜)</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=36324">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=36324</a></p>
<p>气象可视化NC数据读取及显示效果：(by：wangyongtao0929)</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=96555">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=96555</a></p>
<p>Python处理ncep2.5°格点的nc数据，并批量出图到指定文件夹：(by：zhangxk14)</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=92011">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=92011</a></p>
<p>读写nc数据的方法（转载）：</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=22726">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=22726</a></p>
<p>windows下如何用xarray+cfgrib读取grib资料：(by：Eegle)</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=95915">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=95915</a></p>
<p>windows下如何将grib2文件转成nc文件：(by：Eegle)</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=93383">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=93383</a></p>
<p>使用Python读取GRIB文件：(by：ztftom)</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=6370">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=6370</a></p>
<p>Python读取micaps mdfs数据：(by：eeeee)</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=87865">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=87865</a></p>
<p>Python 读取micaps第14类数据，并用Basemap进行绘图：(by：18393810639)</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=90319">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=90319</a></p>
<p>风云4号AWX数据读取画图：(by：yuyue1314)</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=89296">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=89296</a></p>
<p>Python FY2E卫星HDF5格式的TBB数据画图：(by：chiqu296)</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=56315">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=56315</a></p>
<p>使用Python批量读取hdf5文件：(by：cwllsss)</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=95187">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=95187</a></p>
<p>使用Python 的h5py 和netCDF4读取和创建.nc和.hdf文件：(by：18393810639)</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=93873">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=93873</a></p>
<p>重磅更新！读取CINRAD雷达基数据的Python模块：(by：高空急流)</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=66878">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=66878</a></p>
<p>Python读取CMA SA雷达基数据文件及绘图&amp;&amp;叠加自动站风场数据：(by：张__QI)</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=39225">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=39225</a></p>
<p>Python读取全国自动站CMORPH数据并画图：(by：Masterpiece)</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=90192">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=90192</a></p>
<p>Python+CDO批处理CMIP5模式数据 插值：(by：JOJOweibo)</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=52929">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=52929</a></p>
<p>贡献一个读swan产品（bin.bz2格式）的函数：(by：schliezer)</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=92567">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=92567</a></p>
<p>基于Siphon和MetPy获取探空数据并绘图：(by：hzwjy)</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=89894">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=89894</a></p>
<p>Python处理探空：(by：lovechang1314)</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=52208">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=52208</a></p>
<p>基于GSI读取bufr文件：(by：张__QI)</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=39619">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=39619</a></p>
<p>Python 读取 Himawari binary 格式文件：(by：张__QI)</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=46882">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=46882</a></p>
<p>推广一个非常实用的Python3的CIMISS库：</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=95632">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=95632</a></p>
<p>我的Python学习历程（一、数据读取与存储）：(by：阿阿飞飞)</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=19100">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=19100</a></p>
<p>[求助] Python读取.AWX文件：</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=88179">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=88179</a></p>
<p>[求助] Python读取grads格式的ctl和dat格式的数据：</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=57801">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=57801</a></p>
<p>[求助] Python如何读取Micaps第四类数据：</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=95992">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=95992</a></p>
<p>[求助] Windows下如何用Python读取、处理Grib2格式数据：</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=95883">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=95883</a></p>
<p>[求助] 如何用Python自动读入NCEP数据的时间：</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=34892">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=34892</a></p>
<p>[求助] Python 读取特定格式TXT文本：</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=94981">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=94981</a></p>
<p>[求助] 关于读取nc文件结果不完全显示的问题：</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=95557">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=95557</a></p>
<p>[求助] Python处理Himawari-8 L1级数据：</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=89522">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=89522</a></p>
<p>[求助]读取雷达数据文件时报错：</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=90281">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=90281</a></p>
<p>[求助] 风云卫星FullMask_Grid.raw文件如何读取：</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=90074">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=90074</a></p>
<p>[求助] 怎么样读取一个月的数据画图？：</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=90024">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=90024</a></p>
<p>[求助] 求助读取nc文件：</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=88882">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=88882</a></p>
<p>[求助] Python 读取ECMWF ERA_interim 数据时间的问题</p>
<p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=46154">http://bbs.06climate.com/forum.php?mod=viewthread&amp;tid=46154</a></p>
<h3 id="EOF"><a href="#EOF" class="headerlink" title="EOF"></a>EOF</h3><p><a href="https://github.com/nicrie/xeofs">https://github.com/nicrie/xeofs</a></p>
<h3 id="Python-Plot"><a href="#Python-Plot" class="headerlink" title="Python Plot"></a>Python Plot</h3><h4 id="XY-plot"><a href="#XY-plot" class="headerlink" title="XY plot"></a>XY plot</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt </span><br><span class="line"></span><br><span class="line">N = <span class="number">10</span></span><br><span class="line">x = [-<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>]</span><br><span class="line">y = [<span class="number">1.224</span>,<span class="number">0.6785</span>,<span class="number">0.6446</span>,<span class="number">0.5833</span>,<span class="number">0.4638</span>,<span class="number">0.4261</span>,<span class="number">0.391</span>,<span class="number">0.4139</span>,<span class="number">0.3949</span>,<span class="number">0.3611</span>]</span><br><span class="line"></span><br><span class="line">colors = <span class="string">&#x27;blue&#x27;</span></span><br><span class="line">area = [i * <span class="number">200</span> <span class="keyword">for</span> i <span class="keyword">in</span> y]</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">10</span>,<span class="number">5</span>))</span><br><span class="line">plt.scatter(x, y, s=area, c=colors, alpha=<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line">labels = [<span class="string">&#x27;EN&#x27;</span>,<span class="string">&#x27;iter0&#x27;</span>,<span class="string">&#x27;iter1&#x27;</span>,<span class="string">&#x27;iter2&#x27;</span>,<span class="string">&#x27;iter3&#x27;</span>,<span class="string">&#x27;iter4&#x27;</span>,<span class="string">&#x27;iter5&#x27;</span>,<span class="string">&#x27;iter6&#x27;</span>,<span class="string">&#x27;iter7&#x27;</span>,<span class="string">&#x27;iter8&#x27;</span>]</span><br><span class="line">plt.xticks(x, labels,fontsize=<span class="number">14</span>)</span><br><span class="line">plt.yticks(fontsize=<span class="number">14</span>)</span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">&#x27;Iteration Steps&#x27;</span>, fontsize=<span class="number">18</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Tropical Q500 RMSE&#x27;</span>, fontsize=<span class="number">18</span>)</span><br><span class="line"></span><br><span class="line">plt.savefig(<span class="string">&#x27;/project/cas/ruyanc/WORK/plots/MOD/CAM5/Q500/RMSE_evo.pdf&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>







<h2 id="教程链接"><a href="#教程链接" class="headerlink" title="教程链接"></a>教程链接</h2><p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247484069&idx=1&sn=0506e4f9796e60533ce13a20323bdadb&chksm=fc10e7b0cb676ea63577ae5ca9ab3f2f8aca9914ff8c713400deebebae2df3664b429787c7cc&scene=21#wechat_redirect">构建便于气象海洋应用的Anaconda环境(window版本)</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247483830&idx=2&sn=7f87463bb186487518a121e53e79c85e&chksm=fc10e4a3cb676db5c5a8d321c3d79b60b8abb346233808bf7cb61a6009228c7db195c1f7418c&scene=21#wechat_redirect">构建适合大气与海洋应用的Anaconda环境</a>(Linux)</p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247483921&idx=2&sn=5a16ff34c742478f3c6baf61aa3c2d59&chksm=fc10e704cb676e12ae1ce6beca1fa97007097ced84dd09b07df78bb2a3e99859851e87282900&scene=21#wechat_redirect">python中操作NetCDF文件的常用命令</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247484123&idx=1&sn=28187bdbbe39ce87dbbd8af9a4676887&chksm=fc10e7cecb676ed8d922f55054c796b9c22320cd3830e9ffc8a8e6610d0a7bd7bb1167deaf69&scene=21#wechat_redirect">Python压缩NC格式，轻松节约近8成存储空间</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247483814&idx=1&sn=d89178afec78e14e56457cdb79c6826e&chksm=fc10e4b3cb676da5fc0920cbe2ba84ed8e975d0b3e41f380e6dc7ce7f870bee0f448fdd5b2da&scene=21#wechat_redirect">python爬取中央气象台台风网当前台风实况和预报数据</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247483982&idx=3&sn=4a39e461fcf348f8203e17e1a8655c3e&chksm=fc10e75bcb676e4d524f517e487318e5bf0d2aeaf9f684d65b246942260ff7aa53c290bc5cad&scene=21#wechat_redirect">python爬取中央气象台台风网当前台风实况和预报数据</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247484133&idx=1&sn=6a9483a93970baaa3ae1f269abdea2bf&chksm=fc10e7f0cb676ee693f84d71df460c8856c0e90ff71627d47fd8144d019214908f346f4346c8&scene=21#wechat_redirect">python提取建国以来影响某地的历史台风数据</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247484310&idx=1&sn=def65fc1529e811ed7991c3acc8fb05b&chksm=fc10e683cb676f9539e26849b532e7a559c98ba5cc2124b8f9cd60e020e1fb8dfdd93561ca57&scene=21#wechat_redirect">2015-2021年小时分辨率的台风实况数据</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247484170&idx=1&sn=91321223d83fb1388532b03c49a4467e&chksm=fc10e61fcb676f09b33afa54e9f9a01d394f27c10ed59ac717127955286654ff1aaca915a130&scene=21#wechat_redirect">python下载ERA5步骤及其绘制</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247484145&idx=1&sn=ba04b20184ea4ca4d3f883420728f938&chksm=fc10e7e4cb676ef2a8be776c73a58f80ca779f22b9deac3ade7df69804c00f80c07a59e93e1e&scene=21#wechat_redirect">python爬取中央气象台降水预报</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247484073&idx=1&sn=d88b3886618d4a9aa3c0da4c9d7c673e&chksm=fc10e7bccb676eaa73e9f4397fe60e3b216c7173b051491f5067e474111273fcb45f6b3b977c&scene=21#wechat_redirect">气象运维：python自动发送邮件</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247485344&idx=1&sn=b94d535a0327ce1332d8e80201d749fb&chksm=fc10e2b5cb676ba35143b535be4032b19702c603ae81e6ead8c4bc0b55696d0f40f30821628b&scene=21#wechat_redirect">python处理日期和时间的相关函数</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247485310&idx=1&sn=92b27481ac0dd8288c4b2f29e88b4aee&chksm=fc10e26bcb676b7de67072264087c5c2aac6d1b5b92aa368ded7963eec0281d9808452fec289&scene=21#wechat_redirect">python快速建立全球陆地&#x2F;海洋掩膜</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247484839&idx=5&sn=d4d65aca9ea9a72b50611c86ea91f99d&chksm=fc10e0b2cb6769a4898f8a204ee617b9c9b861d2af4e6508000d673e18028c4596727572ac2a&scene=21#wechat_redirect">python绘制不规则空间数据的填色图</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247483882&idx=2&sn=32fd090a2d53676ce8a2166190258aa1&chksm=fc10e4ffcb676de9e4b1fcb1196aa0995cbb0070bf963fd216d41a810f1f3569b093c738152c&scene=21#wechat_redirect">Python提取WRF模拟的台风路径</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247483871&idx=2&sn=ef229620b3a9d6f37d5a6a84be8d3185&chksm=fc10e4cacb676ddca1dbb678ae840e77ec5a2953117bdc28b7b2547ef01537dda1f4fad9e13a&scene=21#wechat_redirect">python绘制WRF模拟的台风路径gif动图</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247484763&idx=1&sn=16aedbf63c974314ca6e06247626b146&chksm=fc10e04ecb676958d0f025e46eee4fb298670b6c6dd57c5890afad753b1ae0dc46366a78a634&scene=21#wechat_redirect">让python快到飞起-numba加速</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247484632&idx=1&sn=03e98b2f2b14111fff9ee583168c39b8&chksm=fc10e1cdcb6768dbc4f50309bcf2794a8225a70de87993c9353d4050bebcf244c6b0973110f8&scene=21#wechat_redirect">让python快到飞起-cupy</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247484215&idx=1&sn=a3ec3a970c74cf939574b8ba48366b54&chksm=fc10e622cb676f3429a8ad57e7378ffe2a7f5bec0d638f2b8a963a3becfd2df6dbd51180997e&scene=21#wechat_redirect">xarray+dask处理大规模海洋气象数据</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247484178&idx=1&sn=5a353d6a8834934389bd112256cac3bd&chksm=fc10e607cb676f1164ce81141ef792e73c7986b9c014b32493fcecf8badaa3b46c03c73d8639&scene=21#wechat_redirect">python实现多进程任务—以读取grib写入nc为例</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247484205&idx=1&sn=47b2d15931c70847b70a5d447cae5e99&chksm=fc10e638cb676f2e29e9b6001d035f3e6e4fd52675bf5aba08171a4b001acb9b95f44c375148&scene=21#wechat_redirect">最大风速重现期的计算</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU1OTgwNTU2Mg==&mid=2247484197&idx=1&sn=c4e5cecca46e64e6209fff55322f62d4&chksm=fc10e630cb676f26e341af5252d28ff42c35679fe448b185a85223ff193c08f640e288cb17ed&scene=21#wechat_redirect">长期气象站资料的均一化订正——以最大风速为例</a></p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Python3 Notes-1</title>
    <url>/2022/05/01/Tool/Python3%20Notes-1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Python-基础学习笔记-1"><a href="#Python-基础学习笔记-1" class="headerlink" title="Python 基础学习笔记-1"></a>Python 基础学习笔记-1</h1><p>来源：<a href="https://www.runoob.com/python3/python3-tutorial.html">https://www.runoob.com/python3/python3-tutorial.html</a></p>
<h2 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h2><h3 id="python保留字"><a href="#python保留字" class="headerlink" title="python保留字"></a>python保留字</h3><p>保留字即关键字，我们不能把它们用作任何标识符名称。Python 的标准库提供了一个 keyword 模块，可以输出当前版本的所有关键字：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; import keyword</span><br><span class="line">&gt;&gt;&gt; keyword.kwlist</span><br><span class="line">[&#x27;False&#x27;, &#x27;None&#x27;, &#x27;True&#x27;, &#x27;and&#x27;, &#x27;as&#x27;, &#x27;assert&#x27;, &#x27;break&#x27;, &#x27;class&#x27;, &#x27;continue&#x27;, &#x27;def&#x27;, &#x27;del&#x27;, &#x27;elif&#x27;, &#x27;else&#x27;, &#x27;except&#x27;, &#x27;finally&#x27;, &#x27;for&#x27;, &#x27;from&#x27;, &#x27;global&#x27;, &#x27;if&#x27;, &#x27;import&#x27;, &#x27;in&#x27;, &#x27;is&#x27;, &#x27;lambda&#x27;, &#x27;nonlocal&#x27;, &#x27;not&#x27;, &#x27;or&#x27;, &#x27;pass&#x27;, &#x27;raise&#x27;, &#x27;return&#x27;, &#x27;try&#x27;, &#x27;while&#x27;, &#x27;with&#x27;, &#x27;yield&#x27;]</span><br></pre></td></tr></table></figure>

<h3 id="多行语句"><a href="#多行语句" class="headerlink" title="多行语句"></a>多行语句</h3><p>Python 通常是一行写完一条语句，但如果语句很长，我们可以使用反斜杠 <code>\</code> 来实现多行语句，例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">total = item_one + \</span><br><span class="line">        item_two + \</span><br><span class="line">        item_three</span><br></pre></td></tr></table></figure>

<p>在 [], {}, 或 () 中的多行语句，不需要使用反斜杠 ****，例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">total = [<span class="string">&#x27;item_one&#x27;</span>, <span class="string">&#x27;item_two&#x27;</span>, <span class="string">&#x27;item_three&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;item_four&#x27;</span>, <span class="string">&#x27;item_five&#x27;</span>]</span><br></pre></td></tr></table></figure>

<h3 id="字符串-String"><a href="#字符串-String" class="headerlink" title="字符串(String)"></a>字符串(String)</h3><ul>
<li>Python 中单引号 <strong>‘</strong> 和双引号 <strong>“</strong> 使用完全相同。</li>
<li>反斜杠可以用来转义，使用 <strong>r</strong> 可以让反斜杠不发生转义。 如 <strong>r”this is a line with \n”</strong> 则 <strong>\n</strong> 会显示，并不是换行。</li>
<li>字符串可以用 <strong>+</strong> 运算符连接在一起，用 ***** 运算符重复。</li>
<li>Python 中的字符串有两种索引方式，从左往右以 <strong>0</strong> 开始，从右往左以 <strong>-1</strong> 开始。</li>
</ul>
<h3 id="print-输出"><a href="#print-输出" class="headerlink" title="print 输出"></a>print 输出</h3><p><strong>print</strong> 默认输出是换行的，如果要实现不换行需要在变量末尾加上 **end&#x3D;””**：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"> </span><br><span class="line">x=<span class="string">&quot;a&quot;</span></span><br><span class="line">y=<span class="string">&quot;b&quot;</span></span><br><span class="line"><span class="comment"># 换行输出</span></span><br><span class="line"><span class="built_in">print</span>( x )</span><br><span class="line"><span class="built_in">print</span>( y )</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;---------&#x27;</span>)</span><br><span class="line"><span class="comment"># 不换行输出</span></span><br><span class="line"><span class="built_in">print</span>( x, end=<span class="string">&quot; &quot;</span> )</span><br><span class="line"><span class="built_in">print</span>( y, end=<span class="string">&quot; &quot;</span> )</span><br><span class="line"><span class="built_in">print</span>()</span><br></pre></td></tr></table></figure>

<p>以上实例执行结果为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a</span><br><span class="line">b</span><br><span class="line">---------</span><br><span class="line">a b</span><br></pre></td></tr></table></figure>

<h3 id="import-与-from…import"><a href="#import-与-from…import" class="headerlink" title="import 与 from…import"></a>import 与 from…import</h3><p>在 python 用 <strong>import</strong> 或者 <strong>from…import</strong> 来导入相应的模块。</p>
<p>将整个模块(somemodule)导入，格式为： <strong>import somemodule</strong></p>
<p>从某个模块中导入某个函数,格式为： <strong>from somemodule import somefunction</strong></p>
<p>从某个模块中导入多个函数,格式为： <strong>from somemodule import firstfunc, secondfunc, thirdfunc</strong></p>
<p>将某个模块中的全部函数导入，格式为： <strong>from somemodule import *</strong></p>
<p>以 time 模块为例：</p>
<p>1、将整个模块导入，例如：<strong>import time</strong>，在引用时格式为：**time.sleep(1)**。</p>
<p>2、将整个模块中全部函数导入，例如：**from time import *<strong>，在引用时格式为：</strong>sleep(1)**。</p>
<p>3、将模块中特定函数导入，例如：<strong>from time import sleep</strong>，在引用时格式为：**sleep(1)**。</p>
<p>4、将模块换个别名，例如：<strong>import time as abc</strong>，在引用时格式为：**abc.sleep(1)**。</p>
<h3 id="命令行参数"><a href="#命令行参数" class="headerlink" title="命令行参数"></a>命令行参数</h3><p>很多程序可以执行一些操作来查看一些基本信息，Python可以使用-h参数查看各参数帮助信息：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$ python -h</span><br><span class="line">usage: python [option] ... [-c cmd | -m mod | file | -] [arg] ...</span><br><span class="line">Options <span class="keyword">and</span> arguments (<span class="keyword">and</span> corresponding environment variables):</span><br><span class="line">-c cmd : program passed <span class="keyword">in</span> <span class="keyword">as</span> string (terminates option <span class="built_in">list</span>)</span><br><span class="line">-d     : debug output <span class="keyword">from</span> parser (also PYTHONDEBUG=x)</span><br><span class="line">-E     : ignore environment variables (such <span class="keyword">as</span> PYTHONPATH)</span><br><span class="line">-h     : <span class="built_in">print</span> this <span class="built_in">help</span> message <span class="keyword">and</span> exit</span><br><span class="line"></span><br><span class="line">[ etc. ]</span><br></pre></td></tr></table></figure>

<h3 id="help-函数"><a href="#help-函数" class="headerlink" title="help() 函数"></a>help() 函数</h3><p>调用 python 的 help() 函数可以打印输出一个函数的文档字符串：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 如下实例，查看 max 内置函数的参数列表和规范的文档</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">help</span>(<span class="built_in">max</span>)</span><br><span class="line">……显示帮助信息……</span><br></pre></td></tr></table></figure>

<p>如果仅仅想得到文档字符串：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(<span class="built_in">max</span>.__doc__)    <span class="comment"># 注意，doc的前后分别是两个下划线</span></span><br><span class="line"><span class="built_in">max</span>(iterable, *[, default=obj, key=func]) -&gt; value</span><br><span class="line"><span class="built_in">max</span>(arg1, arg2, *args, *[, key=func]) -&gt; value</span><br><span class="line"></span><br><span class="line">With a single iterable argument, <span class="keyword">return</span> its biggest item. The</span><br><span class="line">default keyword-only argument specifies an <span class="built_in">object</span> to <span class="keyword">return</span> <span class="keyword">if</span></span><br><span class="line">the provided iterable <span class="keyword">is</span> empty.</span><br><span class="line">With two <span class="keyword">or</span> more arguments, <span class="keyword">return</span> the largest argument.</span><br></pre></td></tr></table></figure>

<h3 id="附记"><a href="#附记" class="headerlink" title="附记"></a>附记</h3><h4 id="字符转换"><a href="#字符转换" class="headerlink" title="字符转换"></a>字符转换</h4><p>当字符串内容为浮点型要转换为整型时，无法直接用 int() 转换：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a=<span class="string">&#x27;2.1&#x27;</span>  <span class="comment"># 这是一个字符串</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">int</span>(a))</span><br></pre></td></tr></table></figure>

<p>会报错 **”invalid literal for int() “**。</p>
<p>需要把字符串先转化成 float 型再转换成 int 型：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a=<span class="string">&#x27;2.1&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">int</span>(<span class="built_in">float</span>(a)))</span><br></pre></td></tr></table></figure>

<p>输出 <strong>2</strong>。</p>
<h4 id="标准化输出"><a href="#标准化输出" class="headerlink" title="标准化输出"></a>标准化输出</h4><p>类似于 C&#x2F;C++ 的 <strong>printf</strong>，Python 的 <strong>print</strong> 也能实现格式化输出，方法是使用 <strong>%</strong> 操作符，它会将左边的字符串当做格式字符串，将右边的参数代入格式字符串：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;100 + 200 = %d&quot;</span> % <span class="number">300</span>) <span class="comment">#左边的%d被替换成右边的300</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;A的小写是%s&quot;</span> % <span class="string">&quot;a&quot;</span>) <span class="comment">#左边的%s被替换成右边的a</span></span><br></pre></td></tr></table></figure>

<p>得到的结果是：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">100</span> + <span class="number">200</span> = <span class="number">300</span></span><br><span class="line">A的小写是a</span><br></pre></td></tr></table></figure>

<p>如果要带入多个参数，则需要用 <strong>()</strong> 包裹代入的多个参数，参数与参数之间用逗号隔开，参数的顺序应该对应格式字符串中的顺序：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;%d + %d = %d&quot;</span> % (<span class="number">100</span>,<span class="number">200</span>,<span class="number">300</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;%s %s&quot;</span> % (<span class="string">&quot;world&quot;</span>,<span class="string">&quot;hello&quot;</span>))</span><br></pre></td></tr></table></figure>

<p>得到的结果是：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">100</span> + <span class="number">200</span> = 300world hello</span><br></pre></td></tr></table></figure>

<p>格式字符串中，不同占位符的含义：</p>
<ul>
<li><strong>%s</strong>： 作为字符串</li>
<li><strong>%d</strong>： 作为有符号十进制整数</li>
<li><strong>%u</strong>： 作为无符号十进制整数</li>
<li><strong>%o</strong>： 作为无符号八进制整数</li>
<li><strong>%x</strong>： 作为无符号十六进制整数，a～f采用小写形式</li>
<li><strong>%X</strong>： 作为无符号十六进制整数，A～F采用大写形式</li>
<li><strong>%f</strong>： 作为浮点数</li>
<li><strong>%e，%E</strong>： 作为浮点数，使用科学计数法</li>
<li><strong>%g，%G</strong>： 作为浮点数，使用最低有效数位</li>
</ul>
<h2 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h2><h3 id="多个变量赋值"><a href="#多个变量赋值" class="headerlink" title="多个变量赋值"></a>多个变量赋值</h3><p>Python允许你同时为多个变量赋值。例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = b = c = <span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>以上实例，创建一个整型对象，值为 1，从后向前赋值，三个变量被赋予相同的数值。</p>
<p>您也可以为多个对象指定多个变量。例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a, b, c = <span class="number">1</span>, <span class="number">2</span>, <span class="string">&quot;runoob&quot;</span></span><br></pre></td></tr></table></figure>

<p>以上实例，两个整型对象 1 和 2 的分配给变量 a 和 b，字符串对象 “runoob” 分配给变量 c。</p>
<h3 id="标准数据类型"><a href="#标准数据类型" class="headerlink" title="标准数据类型"></a>标准数据类型</h3><p>Python3 中常见的数据类型有：</p>
<ul>
<li>Number（数字）</li>
<li>String（字符串）</li>
<li>bool（布尔类型）</li>
<li>List（列表）</li>
<li>Tuple（元组）</li>
<li>Set（集合）</li>
<li>Dictionary（字典）</li>
</ul>
<p>Python3 的六个标准数据类型中：</p>
<ul>
<li><strong>不可变数据（3 个）：</strong>Number（数字）、String（字符串）、Tuple（元组）；</li>
<li><strong>可变数据（3 个）：</strong>List（列表）、Dictionary（字典）、Set（集合）。</li>
</ul>
<p>此外还有一些高级的数据类型，如: 字节数组类型(bytes)。</p>
<p>内置的 <code>type() </code>函数可以用来查询变量所指的对象类型。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; a, b, c, d = 20, 5.5, True, 4+3j</span><br><span class="line">&gt;&gt;&gt; print(type(a), type(b), type(c), type(d))</span><br><span class="line">&lt;class &#x27;int&#x27;&gt; &lt;class &#x27;float&#x27;&gt; &lt;class &#x27;bool&#x27;&gt; &lt;class &#x27;complex&#x27;&gt;</span><br></pre></td></tr></table></figure>

<p>您也可以使用del语句删除一些对象引用。</p>
<p>del语句的语法是：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">del</span> var1[,var2[,var3[....,varN]]]</span><br></pre></td></tr></table></figure>

<p>您可以通过使用del语句删除单个或多个对象。例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">del</span> var</span><br><span class="line"><span class="keyword">del</span> var_a, var_b</span><br></pre></td></tr></table></figure>

<h3 id="数值运算实例"><a href="#数值运算实例" class="headerlink" title="数值运算实例"></a>数值运算实例</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">5</span> + <span class="number">4</span> <span class="comment"># 加法</span></span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">4.3</span> - <span class="number">2</span> <span class="comment"># 减法</span></span><br><span class="line"><span class="number">2.3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">3</span> * <span class="number">7</span> <span class="comment"># 乘法</span></span><br><span class="line"><span class="number">21</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">2</span> / <span class="number">4</span> <span class="comment"># 除法，得到一个浮点数</span></span><br><span class="line"><span class="number">0.5</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">2</span> // <span class="number">4</span> <span class="comment"># 除法，得到一个整数</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">17</span> % <span class="number">3</span> <span class="comment"># 取余</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">2</span> ** <span class="number">5</span> <span class="comment"># 乘方</span></span><br><span class="line"><span class="number">32</span></span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong></p>
<ul>
<li>数值的除法包含两个运算符：**&#x2F;** 返回一个浮点数，**&#x2F;&#x2F;** 返回一个整数。</li>
<li>在混合计算时，Python会把整型转换成为浮点数。</li>
</ul>
<h3 id="String（字符串）"><a href="#String（字符串）" class="headerlink" title="String（字符串）"></a>String（字符串）</h3><p>Python中的字符串用单引号 <strong>‘</strong> 或双引号 <strong>“</strong> 括起来，同时使用反斜杠 <code>\</code>转义特殊字符。</p>
<p>字符串的截取的语法格式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">变量[头下标:尾下标]</span><br></pre></td></tr></table></figure>

<p>索引值以 0 为开始值，-1 为从末尾的开始位置。</p>
<p><img src="https://p.ipic.vip/11948v.jpg" alt="img"></p>
<p>加号 <strong>+</strong> 是字符串的连接符， 星号 ***** 表示复制当前字符串，与之结合的数字为复制的次数。</p>
<p><strong>注意：</strong></p>
<ul>
<li>与 C 字符串不同，Python 字符串不能被改变。向一个索引位置赋值，比如 <code>word[0] = &#39;m&#39;</code> 会导致错误。</li>
<li>反斜杠可以用来转义，使用r可以让反斜杠不发生转义。</li>
</ul>
<h3 id="bool（布尔类型）"><a href="#bool（布尔类型）" class="headerlink" title="bool（布尔类型）"></a>bool（布尔类型）</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = <span class="literal">True</span></span><br><span class="line">b = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 比较运算符</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">2</span> &lt; <span class="number">3</span>)   <span class="comment"># True</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">2</span> == <span class="number">3</span>)  <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 逻辑运算符</span></span><br><span class="line"><span class="built_in">print</span>(a <span class="keyword">and</span> b)  <span class="comment"># False</span></span><br><span class="line"><span class="built_in">print</span>(a <span class="keyword">or</span> b)   <span class="comment"># True</span></span><br><span class="line"><span class="built_in">print</span>(<span class="keyword">not</span> a)    <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 类型转换</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">int</span>(a))   <span class="comment"># 1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">float</span>(b)) <span class="comment"># 0.0</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>(a))   <span class="comment"># &quot;True&quot;</span></span><br></pre></td></tr></table></figure>

<p><strong>注意:</strong> 在 Python 中，所有非零的数字和非空的字符串、列表、元组等数据类型都被视为 True，只有 <strong>0、空字符串、空列表、空元组</strong>等被视为 False。因此，在进行布尔类型转换时，需要注意数据类型的真假性。</p>
<h3 id="List（列表）"><a href="#List（列表）" class="headerlink" title="List（列表）"></a>List（列表）</h3><p>List（列表） 是 Python 中使用最频繁的数据类型。</p>
<p>列表可以完成大多数集合类的数据结构实现。列表中元素的类型可以不相同，它支持数字，字符串甚至可以包含列表（所谓嵌套）。</p>
<p>列表是写在方括号 <strong>[]</strong> 之间、用逗号分隔开的元素列表。</p>
<p>和字符串一样，列表同样可以被索引和截取，列表被截取后返回一个包含所需元素的新列表，索引值以 <strong>0</strong> 为开始值，**-1** 为从末尾的开始位置。</p>
<p>加号 <strong>+</strong> 是列表连接运算符，星号 ***** 是重复操作。如下实例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">list</span> = [ <span class="string">&#x27;abcd&#x27;</span>, <span class="number">786</span> , <span class="number">2.23</span>, <span class="string">&#x27;runoob&#x27;</span>, <span class="number">70.2</span> ]</span><br><span class="line">tinylist = [<span class="number">123</span>, <span class="string">&#x27;runoob&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">list</span>)            <span class="comment"># 输出完整列表</span></span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">list</span>[<span class="number">0</span>])         <span class="comment"># 输出列表第一个元素</span></span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">list</span>[<span class="number">1</span>:<span class="number">3</span>])       <span class="comment"># 从第二个开始输出到第三个元素</span></span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">list</span>[<span class="number">2</span>:])        <span class="comment"># 输出从第三个元素开始的所有元素</span></span><br><span class="line"><span class="built_in">print</span> (tinylist * <span class="number">2</span>)    <span class="comment"># 输出两次列表</span></span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">list</span> + tinylist) <span class="comment"># 连接列表</span></span><br></pre></td></tr></table></figure>

<p>以上实例输出结果：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[<span class="string">&#x27;abcd&#x27;</span>, <span class="number">786</span>, <span class="number">2.23</span>, <span class="string">&#x27;runoob&#x27;</span>, <span class="number">70.2</span>]</span><br><span class="line">abcd</span><br><span class="line">[<span class="number">786</span>, <span class="number">2.23</span>]</span><br><span class="line">[<span class="number">2.23</span>, <span class="string">&#x27;runoob&#x27;</span>, <span class="number">70.2</span>]</span><br><span class="line">[<span class="number">123</span>, <span class="string">&#x27;runoob&#x27;</span>, <span class="number">123</span>, <span class="string">&#x27;runoob&#x27;</span>]</span><br><span class="line">[<span class="string">&#x27;abcd&#x27;</span>, <span class="number">786</span>, <span class="number">2.23</span>, <span class="string">&#x27;runoob&#x27;</span>, <span class="number">70.2</span>, <span class="number">123</span>, <span class="string">&#x27;runoob&#x27;</span>]</span><br></pre></td></tr></table></figure>

<p>与Python字符串不一样的是，列表中的元素是可以改变的</p>
<p><strong>注意：</strong></p>
<ul>
<li>1、List写在方括号之间，元素用逗号隔开。</li>
<li>2、和字符串一样，list可以被索引和切片。</li>
<li>3、List可以使用+操作符进行拼接。</li>
<li>4、List中的元素是可以改变的。</li>
</ul>
<p>Python 列表截取可以接收第三个参数，参数作用是截取的步长，以下实例在索引 1 到索引 4 的位置并设置为步长为 2（间隔一个位置）来截取字符串：</p>
<p><img src="https://p.ipic.vip/ke0jqg.png" alt="img"></p>
<p>如果第三个参数为负数表示逆向读取，以下实例用于翻转字符串：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">reverseWords</span>(<span class="params"><span class="built_in">input</span></span>): </span><br><span class="line">      </span><br><span class="line">    <span class="comment"># 通过空格将字符串分隔符，把各个单词分隔为列表</span></span><br><span class="line">    inputWords = <span class="built_in">input</span>.split(<span class="string">&quot; &quot;</span>) </span><br><span class="line">  </span><br><span class="line">    <span class="comment"># 翻转字符串</span></span><br><span class="line">    <span class="comment"># 假设列表 list = [1,2,3,4],  </span></span><br><span class="line">    <span class="comment"># list[0]=1, list[1]=2 ，而 -1 表示最后一个元素 list[-1]=4 ( 与 list[3]=4 一样) </span></span><br><span class="line">    <span class="comment"># inputWords[-1::-1] 有三个参数</span></span><br><span class="line">    <span class="comment"># 第一个参数 -1 表示最后一个元素</span></span><br><span class="line">    <span class="comment"># 第二个参数为空，表示移动到列表末尾</span></span><br><span class="line">    <span class="comment"># 第三个参数为步长，-1 表示逆向</span></span><br><span class="line">    inputWords=inputWords[-<span class="number">1</span>::-<span class="number">1</span>] </span><br><span class="line">  </span><br><span class="line">    <span class="comment"># 重新组合字符串</span></span><br><span class="line">    output = <span class="string">&#x27; &#x27;</span>.join(inputWords) </span><br><span class="line">      </span><br><span class="line">    <span class="keyword">return</span> output </span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>: </span><br><span class="line">    <span class="built_in">input</span> = <span class="string">&#x27;I like runoob&#x27;</span></span><br><span class="line">    rw = reverseWords(<span class="built_in">input</span>) </span><br><span class="line">    <span class="built_in">print</span>(rw)</span><br></pre></td></tr></table></figure>

<p>输出结果为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">runoob like I</span><br></pre></td></tr></table></figure>

<h3 id="Tuple（元组）"><a href="#Tuple（元组）" class="headerlink" title="Tuple（元组）"></a>Tuple（元组）</h3><p>元组（tuple）与列表类似，不同之处在于元组的元素不能修改。元组写在小括号 <strong>()</strong> 里，元素之间用逗号隔开。</p>
<p>元组中的元素类型也可以不相同：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">tuple</span> = ( <span class="string">&#x27;abcd&#x27;</span>, <span class="number">786</span> , <span class="number">2.23</span>, <span class="string">&#x27;runoob&#x27;</span>, <span class="number">70.2</span>  )</span><br><span class="line">tinytuple = (<span class="number">123</span>, <span class="string">&#x27;runoob&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">tuple</span>)             <span class="comment"># 输出完整元组</span></span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">tuple</span>[<span class="number">0</span>])          <span class="comment"># 输出元组的第一个元素</span></span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">tuple</span>[<span class="number">1</span>:<span class="number">3</span>])        <span class="comment"># 输出从第二个元素开始到第三个元素</span></span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">tuple</span>[<span class="number">2</span>:])         <span class="comment"># 输出从第三个元素开始的所有元素</span></span><br><span class="line"><span class="built_in">print</span> (tinytuple * <span class="number">2</span>)     <span class="comment"># 输出两次元组</span></span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">tuple</span> + tinytuple) <span class="comment"># 连接元组</span></span><br></pre></td></tr></table></figure>

<p>以上实例输出结果：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">(<span class="string">&#x27;abcd&#x27;</span>, <span class="number">786</span>, <span class="number">2.23</span>, <span class="string">&#x27;runoob&#x27;</span>, <span class="number">70.2</span>)</span><br><span class="line">abcd</span><br><span class="line">(<span class="number">786</span>, <span class="number">2.23</span>)</span><br><span class="line">(<span class="number">2.23</span>, <span class="string">&#x27;runoob&#x27;</span>, <span class="number">70.2</span>)</span><br><span class="line">(<span class="number">123</span>, <span class="string">&#x27;runoob&#x27;</span>, <span class="number">123</span>, <span class="string">&#x27;runoob&#x27;</span>)</span><br><span class="line">(<span class="string">&#x27;abcd&#x27;</span>, <span class="number">786</span>, <span class="number">2.23</span>, <span class="string">&#x27;runoob&#x27;</span>, <span class="number">70.2</span>, <span class="number">123</span>, <span class="string">&#x27;runoob&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>元组与字符串类似，可以被索引且下标索引从0开始，-1 为从末尾开始的位置。也可以进行截取（看上面，这里不再赘述）。</p>
<p>其实，可以把字符串看作一种特殊的元组。</p>
<p>虽然tuple的元素不可改变，但它可以包含可变的对象，比如list列表。</p>
<p>构造包含 0 个或 1 个元素的元组比较特殊，所以有一些额外的语法规则：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">tup1 = ()    <span class="comment"># 空元组</span></span><br><span class="line">tup2 = (<span class="number">20</span>,) <span class="comment"># 一个元素，需要在元素后添加逗号</span></span><br></pre></td></tr></table></figure>

<p>string、list 和 tuple 都属于 sequence（序列）。</p>
<p><strong>注意：</strong></p>
<ul>
<li>与字符串一样，元组的元素不能修改。</li>
<li>元组也可以被索引和切片，方法一样。</li>
<li>注意构造包含 0 或 1 个元素的元组的特殊语法规则。</li>
<li>元组也可以使用+操作符进行拼接。</li>
</ul>
<h3 id="Set（集合）"><a href="#Set（集合）" class="headerlink" title="Set（集合）"></a>Set（集合）</h3><p>Python 中的集合（Set）是一种无序、可变的数据类型，用于存储唯一的元素。</p>
<p>集合中的元素不会重复，并且可以进行交集、并集、差集等常见的集合操作。</p>
<p>在 Python 中，集合使用大括号 <strong>{}</strong> 表示，元素之间用逗号 <strong>,</strong> 分隔。</p>
<p>另外，也可以使用 <strong>set()</strong> 函数创建集合。</p>
<p><strong>注意：</strong>创建一个空集合必须用 <strong>set()</strong> 而不是 **{ }**，因为 <strong>{ }</strong> 是用来创建一个空字典。</p>
<p>创建格式：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">parame = &#123;value01,value02,...&#125;</span><br><span class="line">或者</span><br><span class="line"><span class="built_in">set</span>(value)</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"></span><br><span class="line">sites = &#123;<span class="string">&#x27;Google&#x27;</span>, <span class="string">&#x27;Taobao&#x27;</span>, <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Facebook&#x27;</span>, <span class="string">&#x27;Zhihu&#x27;</span>, <span class="string">&#x27;Baidu&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(sites)   <span class="comment"># 输出集合，重复的元素被自动去掉</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 成员测试</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;Runoob&#x27;</span> <span class="keyword">in</span> sites :</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Runoob 在集合中&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span> :</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Runoob 不在集合中&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># set可以进行集合运算</span></span><br><span class="line">a = <span class="built_in">set</span>(<span class="string">&#x27;abracadabra&#x27;</span>)</span><br><span class="line">b = <span class="built_in">set</span>(<span class="string">&#x27;alacazam&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a - b)     <span class="comment"># a 和 b 的差集</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a | b)     <span class="comment"># a 和 b 的并集</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a &amp; b)     <span class="comment"># a 和 b 的交集</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a ^ b)     <span class="comment"># a 和 b 中不同时存在的元素</span></span><br></pre></td></tr></table></figure>

<p>以上实例输出结果：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&#123;<span class="string">&#x27;Zhihu&#x27;</span>, <span class="string">&#x27;Baidu&#x27;</span>, <span class="string">&#x27;Taobao&#x27;</span>, <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Google&#x27;</span>, <span class="string">&#x27;Facebook&#x27;</span>&#125;</span><br><span class="line">Runoob 在集合中</span><br><span class="line">&#123;<span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;d&#x27;</span>&#125;</span><br><span class="line">&#123;<span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;d&#x27;</span>&#125;</span><br><span class="line">&#123;<span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;z&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;d&#x27;</span>&#125;</span><br><span class="line">&#123;<span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;a&#x27;</span>&#125;</span><br><span class="line">&#123;<span class="string">&#x27;z&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;d&#x27;</span>&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Dictionary（字典）"><a href="#Dictionary（字典）" class="headerlink" title="Dictionary（字典）"></a>Dictionary（字典）</h3><p>字典（dictionary）是Python中另一个非常有用的内置数据类型。</p>
<p>列表是有序的对象集合，字典是无序的对象集合。两者之间的区别在于：字典当中的元素是通过键来存取的，而不是通过偏移存取。</p>
<p>字典是一种映射类型，字典用 <strong>{ }</strong> 标识，它是一个无序的 <strong>键(key) : 值(value)</strong> 的集合。</p>
<p>键(key)必须使用不可变类型。</p>
<p>在同一个字典中，键(key)必须是唯一的。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">dict</span> = &#123;&#125;</span><br><span class="line"><span class="built_in">dict</span>[<span class="string">&#x27;one&#x27;</span>] = <span class="string">&quot;1 - 菜鸟教程&quot;</span></span><br><span class="line"><span class="built_in">dict</span>[<span class="number">2</span>]     = <span class="string">&quot;2 - 菜鸟工具&quot;</span></span><br><span class="line"></span><br><span class="line">tinydict = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;runoob&#x27;</span>,<span class="string">&#x27;code&#x27;</span>:<span class="number">1</span>, <span class="string">&#x27;site&#x27;</span>: <span class="string">&#x27;www.runoob.com&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">dict</span>[<span class="string">&#x27;one&#x27;</span>])       <span class="comment"># 输出键为 &#x27;one&#x27; 的值</span></span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">dict</span>[<span class="number">2</span>])           <span class="comment"># 输出键为 2 的值</span></span><br><span class="line"><span class="built_in">print</span> (tinydict)          <span class="comment"># 输出完整的字典</span></span><br><span class="line"><span class="built_in">print</span> (tinydict.keys())   <span class="comment"># 输出所有键</span></span><br><span class="line"><span class="built_in">print</span> (tinydict.values()) <span class="comment"># 输出所有值</span></span><br></pre></td></tr></table></figure>

<p>以上实例输出结果：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span> - 菜鸟教程</span><br><span class="line"><span class="number">2</span> - 菜鸟工具</span><br><span class="line">&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;runoob&#x27;</span>, <span class="string">&#x27;code&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;site&#x27;</span>: <span class="string">&#x27;www.runoob.com&#x27;</span>&#125;</span><br><span class="line">dict_keys([<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;code&#x27;</span>, <span class="string">&#x27;site&#x27;</span>])</span><br><span class="line">dict_values([<span class="string">&#x27;runoob&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;www.runoob.com&#x27;</span>])</span><br></pre></td></tr></table></figure>

<p>构造函数 dict() 可以直接从键值对序列中构建字典如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">dict</span>([(<span class="string">&#x27;Runoob&#x27;</span>, <span class="number">1</span>), (<span class="string">&#x27;Google&#x27;</span>, <span class="number">2</span>), (<span class="string">&#x27;Taobao&#x27;</span>, <span class="number">3</span>)])</span><br><span class="line">&#123;<span class="string">&#x27;Runoob&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;Google&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;Taobao&#x27;</span>: <span class="number">3</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>&#123;x: x**<span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> (<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>)&#125;</span><br><span class="line">&#123;<span class="number">2</span>: <span class="number">4</span>, <span class="number">4</span>: <span class="number">16</span>, <span class="number">6</span>: <span class="number">36</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">dict</span>(Runoob=<span class="number">1</span>, Google=<span class="number">2</span>, Taobao=<span class="number">3</span>)</span><br><span class="line">&#123;<span class="string">&#x27;Runoob&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;Google&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;Taobao&#x27;</span>: <span class="number">3</span>&#125;</span><br></pre></td></tr></table></figure>

<p><code>&#123;x: x**2 for x in (2, 4, 6)&#125;</code>该代码使用的是字典推导式，更多推导式内容可以参考：<a href="https://www.runoob.com/python3/python-comprehensions.html">Python 推导式</a>。</p>
<p>另外，字典类型也有一些内置的函数，例如 clear()、keys()、values() 等。</p>
<p><strong>注意：</strong></p>
<ul>
<li>字典是一种映射类型，它的元素是键值对。</li>
<li>字典的关键字必须为不可变类型，且不能重复。</li>
<li>创建空字典使用 **{ }**。</li>
</ul>
<h3 id="bytes-类型"><a href="#bytes-类型" class="headerlink" title="bytes 类型"></a>bytes 类型</h3><p>在 Python3 中，bytes 类型表示的是不可变的二进制序列（byte sequence）。</p>
<p>与字符串类型不同的是，bytes 类型中的元素是整数值（0 到 255 之间的整数），而不是 Unicode 字符。</p>
<p>bytes 类型通常用于处理二进制数据，比如图像文件、音频文件、视频文件等等。在网络编程中，也经常使用 bytes 类型来传输二进制数据。</p>
<p>创建 bytes 对象的方式有多种，最常见的方式是使用 b 前缀：</p>
<p>此外，也可以使用 bytes() 函数将其他类型的对象转换为 bytes 类型。bytes() 函数的第一个参数是要转换的对象，第二个参数是编码方式，如果省略第二个参数，则默认使用 UTF-8 编码：</p>
<p>与字符串类型类似，bytes 类型也支持许多操作和方法，如切片、拼接、查找、替换等等。同时，由于 bytes 类型是不可变的，因此在进行修改操作时需要创建一个新的 bytes 对象。例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = <span class="string">b&quot;hello&quot;</span></span><br><span class="line">y = x[<span class="number">1</span>:<span class="number">3</span>]  <span class="comment"># 切片操作，得到 b&quot;el&quot;</span></span><br><span class="line">z = x + <span class="string">b&quot;world&quot;</span>  <span class="comment"># 拼接操作，得到 b&quot;helloworld&quot;</span></span><br></pre></td></tr></table></figure>

<p>需要注意的是，bytes 类型中的元素是整数值，因此在进行比较操作时需要使用相应的整数值。例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = <span class="string">b&quot;hello&quot;</span></span><br><span class="line"><span class="keyword">if</span> x[<span class="number">0</span>] == <span class="built_in">ord</span>(<span class="string">&quot;h&quot;</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;The first element is &#x27;h&#x27;&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>其中 ord() 函数用于将字符转换为相应的整数值。</p>
<h3 id="Python数据类型转换"><a href="#Python数据类型转换" class="headerlink" title="Python数据类型转换"></a>Python数据类型转换</h3><p>有时候，我们需要对数据内置的类型进行转换，数据类型的转换，你只需要将数据类型作为函数名即可，在下一章节 <a href="https://www.runoob.com/python3/python3-type-conversion.html">Python3 数据类型转换</a> 会具体介绍。</p>
<p>以下几个内置的函数可以执行数据类型之间的转换。这些函数返回一个新的对象，表示转换的值。</p>
<table>
<thead>
<tr>
<th align="center">函数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">[int(x <a href="https://www.runoob.com/python3/python-func-int.html">,base])</a></td>
<td align="left">将x转换为一个整数</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/python3/python-func-float.html">float(x)</a></td>
<td align="left">将x转换到一个浮点数</td>
</tr>
<tr>
<td align="center">[complex(real <a href="https://www.runoob.com/python3/python-func-complex.html">,imag])</a></td>
<td align="left">创建一个复数</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/python3/python-func-str.html">str(x)</a></td>
<td align="left">将对象 x 转换为字符串</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/python3/python-func-repr.html">repr(x)</a></td>
<td align="left">将对象 x 转换为表达式字符串</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/python3/python-func-eval.html">eval(str)</a></td>
<td align="left">用来计算在字符串中的有效Python表达式,并返回一个对象</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/python3/python3-func-tuple.html">tuple(s)</a></td>
<td align="left">将序列 s 转换为一个元组</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/python3/python3-att-list-list.html">list(s)</a></td>
<td align="left">将序列 s 转换为一个列表</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/python3/python-func-set.html">set(s)</a></td>
<td align="left">转换为可变集合</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/python3/python-func-dict.html">dict(d)</a></td>
<td align="left">创建一个字典。d 必须是一个 (key, value)元组序列。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/python3/python-func-frozenset.html">frozenset(s)</a></td>
<td align="left">转换为不可变集合</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/python3/python-func-chr.html">chr(x)</a></td>
<td align="left">将一个整数转换为一个字符</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/python3/python-func-ord.html">ord(x)</a></td>
<td align="left">将一个字符转换为它的整数值</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/python3/python-func-hex.html">hex(x)</a></td>
<td align="left">将一个整数转换为一个十六进制字符串</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/python3/python-func-oct.html">oct(x)</a></td>
<td align="left">将一个整数转换为一个八进制字符串</td>
</tr>
</tbody></table>
<h3 id="附记-1"><a href="#附记-1" class="headerlink" title="附记"></a>附记</h3><h4 id="元组（小拓展）"><a href="#元组（小拓展）" class="headerlink" title="元组（小拓展）"></a>元组（小拓展）</h4><p>一般来说，函数的返回值一般为一个。</p>
<p>而函数返回多个值的时候，是以元组的方式返回的。</p>
<p>示例（命令行下）：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="keyword">def</span> <span class="title function_">example</span>(<span class="params">a,b</span>):</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> (a,b)</span><br><span class="line">...</span><br><span class="line">&gt;&gt;&gt;<span class="built_in">type</span>(example(<span class="number">3</span>,<span class="number">4</span>))</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;tuple&#x27;</span>&gt;</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>

<p>python中的函数还可以接收可变长参数，比如以 “*” 开头的的参数名，会将所有的参数收集到一个元组上。</p>
<p>例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">test</span>(<span class="params">*args</span>):</span><br><span class="line">    <span class="built_in">print</span>(args)</span><br><span class="line">    <span class="keyword">return</span> args</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(test(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)))    <span class="comment">#可以看见其函数的返回值是一个元组</span></span><br></pre></td></tr></table></figure>

<h3 id="list-补充"><a href="#list-补充" class="headerlink" title="list (补充)"></a>list (补充)</h3><p>在list的使用中，开始时很容易忽视的一点是：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">list</span> = [ <span class="string">&#x27;abcd&#x27;</span>, <span class="number">786</span> , <span class="number">2.23</span>, <span class="string">&#x27;runoob&#x27;</span>, <span class="number">70.2</span> ]</span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">list</span>[<span class="number">1</span>:<span class="number">3</span>])       <span class="comment"># 从第二个开始输出到第三个元素</span></span><br></pre></td></tr></table></figure>

<p>list[1:3] 其实输出的只有两个变量，即list中第二个元素到第三个元素，并不是第1 第2 第3三个元素，而且要注意的是</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span> (<span class="built_in">list</span>[<span class="number">2</span>])</span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">list</span>[<span class="number">2</span>:<span class="number">3</span>])</span><br></pre></td></tr></table></figure>

<p>这两句话打印的内容其实是一样的，</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">2.23</span></span><br><span class="line">[<span class="number">2.23</span>]</span><br></pre></td></tr></table></figure>

<p>但是第二句话有中括号，因此是不同的类型，用变量接收一下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = <span class="built_in">list</span>[<span class="number">2</span>]</span><br><span class="line">b = <span class="built_in">list</span>[<span class="number">2</span>:<span class="number">3</span>]</span><br><span class="line"><span class="built_in">type</span>(a) -&gt; &lt;<span class="keyword">class</span> <span class="string">&#x27;float&#x27;</span>&gt;</span><br><span class="line"><span class="built_in">type</span>(b) -&gt; &lt;<span class="keyword">class</span> <span class="string">&#x27;list&#x27;</span>&gt;</span><br></pre></td></tr></table></figure>

<p>关于下标的试验：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span> (<span class="built_in">list</span>[<span class="number">1</span>:<span class="number">0</span>])       <span class="comment"># 没有输出的值</span></span><br><span class="line"><span class="comment"># 获得结果 []</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">list</span>[<span class="number">1</span>:<span class="number">1</span>])       <span class="comment"># 没有输出的值</span></span><br><span class="line"><span class="comment"># 获得结果 []</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">list</span>[<span class="number">0</span>:<span class="number">1</span>])       <span class="comment"># 没有输出的值</span></span><br><span class="line"><span class="comment"># 获得结果 [&#x27;abcd&#x27;]</span></span><br></pre></td></tr></table></figure>

<p>其实中括号里的值还可以为负数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(arrtest[<span class="number">1</span>:-<span class="number">1</span>])    <span class="comment"># 从下标为1的数开始，输出到下标为4但不包含4的所有值</span></span><br><span class="line">[<span class="number">786</span>, <span class="number">2.23</span>, <span class="string">&#x27;runoob&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(arrtest[-<span class="number">3</span>:-<span class="number">2</span>])   <span class="comment"># 从下标为2的数开始，输出到下标为3但不包含3的所有值</span></span><br><span class="line">[<span class="number">2.23</span>]</span><br></pre></td></tr></table></figure>

<h3 id="变量声明（补充）"><a href="#变量声明（补充）" class="headerlink" title="变量声明（补充）"></a>变量声明（补充）</h3><p>python 与 C 语言和 Java 语言的一点不同，表现在它的变量不需要声明变量类型，这是因为像 C 语言和 Java 语言来说，它们是静态的，而 python 是动态的，变量的类型由赋予它的值来决定，例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = <span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = <span class="number">1.001</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = <span class="string">&quot;python&quot;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(a)</span><br><span class="line">python</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>

<p>第一次为变量 a 赋值为整型，第二次赋值是浮点数，第三次是一个字符串，最后输出时只保留了最后一次的赋值。</p>
<h3 id="字典（小拓展）"><a href="#字典（小拓展）" class="headerlink" title="字典（小拓展）"></a>字典（小拓展）</h3><p>输入 dict 的键值对，可直接用 <strong>items()</strong> 函数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dict1 = &#123;<span class="string">&#x27;abc&#x27;</span>:<span class="number">1</span>,<span class="string">&quot;cde&quot;</span>:<span class="number">2</span>,<span class="string">&quot;d&quot;</span>:<span class="number">4</span>,<span class="string">&quot;c&quot;</span>:<span class="number">567</span>,<span class="string">&quot;d&quot;</span>:<span class="string">&quot;key1&quot;</span>&#125;</span><br><span class="line"><span class="keyword">for</span> k,v <span class="keyword">in</span> dict1.items():</span><br><span class="line">    <span class="built_in">print</span>(k,<span class="string">&quot;:&quot;</span>,v)</span><br></pre></td></tr></table></figure>

<h3 id="集合与字典"><a href="#集合与字典" class="headerlink" title="集合与字典"></a>集合与字典</h3><p><strong>无序：</strong>集合是无序的，所以不支持索引；字典同样也是无序的，但由于其元素是由键（key）和值（value）两个属性组成的键值对，可以通过键（key）来进行索引</p>
<p><strong>元素唯一性：</strong>集合是无重复元素的序列，会自动去除重复元素；字典因为其key唯一性，所以也不会出现相同元素</p>
<h3 id="bool-值（补充）"><a href="#bool-值（补充）" class="headerlink" title="bool 值（补充）"></a>bool 值（补充）</h3><p>其他类型值转换 <strong>bool</strong> 值时除了 <strong>‘’、””、’’’’’’、””””””、0、()、[]、{}、None、0.0、0L、0.0+0.0j、False</strong> 为 <strong>False</strong> 外，其他都为 <strong>True</strong> 例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">bool</span>(-<span class="number">2</span>)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">bool</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure>

<h3 id="注意：列表、元组、集合有所区别-（新人特别容易入坑）"><a href="#注意：列表、元组、集合有所区别-（新人特别容易入坑）" class="headerlink" title="注意：列表、元组、集合有所区别 （新人特别容易入坑）"></a>注意：列表、元组、集合有所区别 （新人特别容易入坑）</h3><p>列表和元组不会把相同的值合并，但是集合会把相同的合并。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>clist = [<span class="string">&#x27;tom&#x27;</span>,<span class="string">&#x27;tom&#x27;</span>,<span class="string">&#x27;jerry&#x27;</span>]                <span class="comment">#测试列表功能</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span> (clist）</span><br><span class="line">[<span class="string">&#x27;tom&#x27;</span>,<span class="string">&#x27;tom&#x27;</span>,<span class="string">&#x27;jerry&#x27;</span>]</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;ctuple = (<span class="string">&#x27;tom&#x27;</span>,<span class="string">&#x27;tom&#x27;</span>,<span class="string">&#x27;jerry&#x27;</span>)           <span class="comment">#测试元组功能</span></span><br><span class="line">&gt;&gt;&gt;<span class="built_in">print</span>(ctuple)</span><br><span class="line">(<span class="string">&#x27;tom&#x27;</span>,<span class="string">&#x27;tom&#x27;</span>,<span class="string">&#x27;jerry&#x27;</span>) </span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;cset = &#123;<span class="string">&#x27;tom&#x27;</span>,<span class="string">&#x27;tom&#x27;</span>,<span class="string">&#x27;jerry&#x27;</span>&#125;                <span class="comment">#测试集合功能</span></span><br><span class="line">&gt;&gt;&gt;<span class="built_in">print</span>(cset)</span><br><span class="line">&#123;<span class="string">&#x27;tom&#x27;</span>,<span class="string">&#x27;jerry&#x27;</span>&#125;</span><br></pre></td></tr></table></figure>



<h2 id="数据类型转换"><a href="#数据类型转换" class="headerlink" title="数据类型转换"></a>数据类型转换</h2><p>有时候，我们需要对数据内置的类型进行转换，数据类型的转换，一般情况下你只需要将数据类型作为函数名即可。</p>
<p>Python 数据类型转换可以分为两种：</p>
<ul>
<li>隐式类型转换 - 自动完成</li>
<li>显式类型转换 - 需要使用类型函数来转换</li>
</ul>
<h3 id="隐式类型转换"><a href="#隐式类型转换" class="headerlink" title="隐式类型转换"></a>隐式类型转换</h3><p>在隐式类型转换中，Python 会自动将一种数据类型转换为另一种数据类型，不需要我们去干预。</p>
<p>以下实例中，我们对两种不同类型的数据进行运算，较低数据类型（整数）就会转换为较高数据类型（浮点数）以避免数据丢失。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">num_int = <span class="number">123</span></span><br><span class="line">num_flo = <span class="number">1.23</span></span><br><span class="line"></span><br><span class="line">num_new = num_int + num_flo</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;num_int 数据类型为:&quot;</span>,<span class="built_in">type</span>(num_int))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;num_flo 数据类型为:&quot;</span>,<span class="built_in">type</span>(num_flo))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;num_new 值为:&quot;</span>,num_new)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;num_new 数据类型为:&quot;</span>,<span class="built_in">type</span>(num_new))</span><br></pre></td></tr></table></figure>

<p>以上实例输出结果为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">num_int 数据类型为: &lt;<span class="keyword">class</span> <span class="string">&#x27;int&#x27;</span>&gt;</span><br><span class="line">num_flo 数据类型为: &lt;<span class="keyword">class</span> <span class="string">&#x27;float&#x27;</span>&gt;</span><br><span class="line">num_new: 值为: <span class="number">124.23</span></span><br><span class="line">num_new 数据类型为: &lt;<span class="keyword">class</span> <span class="string">&#x27;float&#x27;</span>&gt;</span><br></pre></td></tr></table></figure>

<p>代码解析：</p>
<ul>
<li>实例中我们对两个不同数据类型的变量 <code>num_int</code> 和 <code>num_flo</code> 进行相加运算，并存储在变量 <code>num_new</code> 中。</li>
<li>然后查看三个变量的数据类型。</li>
<li>在输出结果中，我们看到 <code>num_int</code> 是 <code>整型（integer）</code> ， <code>num_flo</code> 是 <code>浮点型（float）</code>。</li>
<li>同样，新的变量 <code>num_new</code> 是 <code>浮点型（float）</code>，这是因为 Python 会将较小的数据类型转换为较大的数据类型，以避免数据丢失。</li>
</ul>
<p>我们再看一个实例，整型数据与字符串类型的数据进行相加：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">num_int = <span class="number">123</span></span><br><span class="line">num_str = <span class="string">&quot;456&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;num_int 数据类型为:&quot;</span>,<span class="built_in">type</span>(num_int))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;num_str 数据类型为:&quot;</span>,<span class="built_in">type</span>(num_str))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(num_int+num_str)</span><br></pre></td></tr></table></figure>

<p>以上实例输出结果为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">num_int 数据类型为: &lt;<span class="keyword">class</span> <span class="string">&#x27;int&#x27;</span>&gt;</span><br><span class="line">num_str 数据类型为: &lt;<span class="keyword">class</span> <span class="string">&#x27;str&#x27;</span>&gt;</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;/runoob-test/test.py&quot;</span>, line <span class="number">7</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    <span class="built_in">print</span>(num_int+num_str)</span><br><span class="line">TypeError: unsupported operand <span class="built_in">type</span>(s) <span class="keyword">for</span> +: <span class="string">&#x27;int&#x27;</span> <span class="keyword">and</span> <span class="string">&#x27;str&#x27;</span></span><br></pre></td></tr></table></figure>

<p>从输出中可以看出，整型和字符串类型运算结果会报错，输出 TypeError。 Python 在这种情况下无法使用隐式转换。</p>
<p>但是，Python 为这些类型的情况提供了一种解决方案，称为显式转换。</p>
<h3 id="显式类型转换"><a href="#显式类型转换" class="headerlink" title="显式类型转换"></a>显式类型转换</h3><p>在显式类型转换中，用户将对象的数据类型转换为所需的数据类型。 我们使用 int()、float()、str() 等预定义函数来执行显式类型转换。</p>
<p><strong>int()</strong> 强制转换为整型：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = <span class="built_in">int</span>(<span class="number">1</span>)   <span class="comment"># x 输出结果为 1</span></span><br><span class="line">y = <span class="built_in">int</span>(<span class="number">2.8</span>) <span class="comment"># y 输出结果为 2</span></span><br><span class="line">z = <span class="built_in">int</span>(<span class="string">&quot;3&quot;</span>) <span class="comment"># z 输出结果为 3</span></span><br></pre></td></tr></table></figure>

<p><strong>float()</strong> 强制转换为浮点型：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = <span class="built_in">float</span>(<span class="number">1</span>)     <span class="comment"># x 输出结果为 1.0</span></span><br><span class="line">y = <span class="built_in">float</span>(<span class="number">2.8</span>)   <span class="comment"># y 输出结果为 2.8</span></span><br><span class="line">z = <span class="built_in">float</span>(<span class="string">&quot;3&quot;</span>)   <span class="comment"># z 输出结果为 3.0</span></span><br><span class="line">w = <span class="built_in">float</span>(<span class="string">&quot;4.2&quot;</span>) <span class="comment"># w 输出结果为 4.2</span></span><br></pre></td></tr></table></figure>

<p><strong>str()</strong> 强制转换为字符串类型：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = <span class="built_in">str</span>(<span class="string">&quot;s1&quot;</span>) <span class="comment"># x 输出结果为 &#x27;s1&#x27;</span></span><br><span class="line">y = <span class="built_in">str</span>(<span class="number">2</span>)    <span class="comment"># y 输出结果为 &#x27;2&#x27;</span></span><br><span class="line">z = <span class="built_in">str</span>(<span class="number">3.0</span>)  <span class="comment"># z 输出结果为 &#x27;3.0&#x27;</span></span><br></pre></td></tr></table></figure>

<p>整型和字符串类型进行运算，就可以用强制类型转换来完成：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">num_int = <span class="number">123</span></span><br><span class="line">num_str = <span class="string">&quot;456&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;num_int 数据类型为:&quot;</span>,<span class="built_in">type</span>(num_int))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;类型转换前，num_str 数据类型为:&quot;</span>,<span class="built_in">type</span>(num_str))</span><br><span class="line"></span><br><span class="line">num_str = <span class="built_in">int</span>(num_str)    <span class="comment"># 强制转换为整型</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;类型转换后，num_str 数据类型为:&quot;</span>,<span class="built_in">type</span>(num_str))</span><br><span class="line"></span><br><span class="line">num_sum = num_int + num_str</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;num_int 与 num_str 相加结果为:&quot;</span>,num_sum)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;sum 数据类型为:&quot;</span>,<span class="built_in">type</span>(num_sum))</span><br></pre></td></tr></table></figure>

<p>以上实例输出结果为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">num_int 数据类型为: &lt;<span class="keyword">class</span> <span class="string">&#x27;int&#x27;</span>&gt;</span><br><span class="line">类型转换前，num_str 数据类型为: &lt;<span class="keyword">class</span> <span class="string">&#x27;str&#x27;</span>&gt;</span><br><span class="line">类型转换后，num_str 数据类型为: &lt;<span class="keyword">class</span> <span class="string">&#x27;int&#x27;</span>&gt;</span><br><span class="line">num_int 与 num_str 相加结果为: <span class="number">579</span></span><br><span class="line"><span class="built_in">sum</span> 数据类型为: &lt;<span class="keyword">class</span> <span class="string">&#x27;int&#x27;</span>&gt;</span><br></pre></td></tr></table></figure>

<h3 id="附记-2"><a href="#附记-2" class="headerlink" title="附记"></a>附记</h3><h3 id="数据类型的高低之分"><a href="#数据类型的高低之分" class="headerlink" title="数据类型的高低之分"></a>数据类型的高低之分</h3><p>“较高数据类型”和”较低数据类型”是在隐式类型转换中用于描述数据精度的概念。精度可以理解为数据类型能够表示的信息量或详细程度。在Python中，数据类型的”高”和”低”主要根据它们的精度来判断。</p>
<p>这里的”较高”数据类型指的是能够表示更多信息（或更精确信息）的数据类型，而”较低”的数据类型则表示的信息较少。具体来说，比如浮点数就比整数”高”，因为浮点数不仅可以表示整数，还可以表示小数。所以在你的例子中，整数就会被自动转换为浮点数，以保证信息不丢失。</p>
<p>再比如，复数（complex）就比浮点数（float）和整数（int）”高”，因为复数可以表示实数和虚数，而浮点数和整数只能表示实数。所以在进行运算时，如果操作数包含复数，那么其他的浮点数或整数就会被转换为复数。</p>
<p>通常情况下，Python的数据类型的”高低”可以按照如下顺序理解：布尔（bool）&lt; 整型（int） &lt; 浮点型（float）&lt; 复数（complex）。这个顺序主要根据数据类型可以表示的信息范围和精度来确定的。</p>
<h3 id="不同数据类型之间能否随意转化"><a href="#不同数据类型之间能否随意转化" class="headerlink" title="不同数据类型之间能否随意转化"></a>不同数据类型之间能否随意转化</h3><p>虽然Python提供了一些内置的函数来实现不同数据类型之间的转换，如<code>int()</code>, <code>float()</code>, <code>str()</code>, <code>list()</code>, <code>tuple()</code>, <code>set()</code>等等，但并非所有类型的数据都可以被转换成其他任意类型。转换是否可行，主要取决于数据本身是否包含足够的信息来表示目标类型。</p>
<p>例如：</p>
<ol>
<li>你可以轻松地将整数转换为字符串，因为每一个整数都有一个明确的字符串表示（例如，整数123可以表示为字符串”123”）。</li>
<li>类似地，一个只包含数字字符的字符串（如”123”）可以被转换为一个整数或浮点数，因为这个字符串中包含了足够的信息来表示一个数字。</li>
</ol>
<p>然而：</p>
<ol>
<li>对于一个非数字字符串（如”Hello”），它无法被转换为一个整数或浮点数，因为这个字符串并不包含任何可以表示一个数字的信息。</li>
<li>对于一个列表或元组，它可以被转换为一个集合（如果它的元素是不可变的），但不能被转换为一个整数，因为一个集合或列表中的元素无法合理地表示为一个单独的数字。</li>
</ol>
<p>总的来说，数据类型的转换并非无限制，它取决于原始数据是否能够提供足够的信息来表示目标类型。当你在编程中进行类型转换时，需要注意这一点。</p>
<h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>在 Python3 中，注释不会影响程序的执行，但是会使代码更易于阅读和理解。</p>
<p>Python 中的注释有<strong>单行注释</strong>和<strong>多行注释</strong>。</p>
<p><strong>Python 中单行注释以 *<em>#*</em> 开头</strong>，例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 这是一个注释</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Hello, World!&quot;</span>)</span><br></pre></td></tr></table></figure>

<h3 id="多行注释"><a href="#多行注释" class="headerlink" title="多行注释"></a>多行注释</h3><p>在 Python中，多行字符串（由三个单引号 <strong>‘’’</strong> 或三个双引号 <strong>“””</strong> 包围的文本块）在某些情况下可以被视为一种实现多行注释的技巧。</p>
<p><em><em>多行注释用三个单引号 *</em>‘’’** 或者三个双引号 **”””*</em> 将注释括起来**，例如:</p>
<h4 id="1、单引号（’’’）"><a href="#1、单引号（’’’）" class="headerlink" title="1、单引号（’’’）"></a>1、单引号（’’’）</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3 </span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">这是多行注释，用三个单引号</span></span><br><span class="line"><span class="string">这是多行注释，用三个单引号 </span></span><br><span class="line"><span class="string">这是多行注释，用三个单引号</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Hello, World!&quot;</span>)</span><br></pre></td></tr></table></figure>

<h4 id="2、双引号（”””）"><a href="#2、双引号（”””）" class="headerlink" title="2、双引号（”””）"></a>2、双引号（”””）</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3 </span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">这是多行注释（字符串），用三个双引号</span></span><br><span class="line"><span class="string">这是多行注释（字符串），用三个双引号 </span></span><br><span class="line"><span class="string">这是多行注释（字符串），用三个双引号</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Hello, World!&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：多行注释可以嵌套使用，但是单行注释不能嵌套使用。</p>
<blockquote>
<p><strong>注意</strong>：虽然多行字符串在这里被当作多行注释使用，但它实际上是一个字符串，我们只要不使用它，它不会影响程序的运行。</p>
<p>这些字符串在代码中可以被放置在一些位置，而不引起实际的执行，从而达到注释的效果。</p>
</blockquote>
<h3 id="附记-3"><a href="#附记-3" class="headerlink" title="附记"></a>附记</h3><h4 id="输出函数的注释："><a href="#输出函数的注释：" class="headerlink" title="输出函数的注释："></a>输出函数的注释：</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">a</span>():</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;这是文档字符串&#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="built_in">print</span>(a.__doc__)</span><br></pre></td></tr></table></figure>

<p>输出结果为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">这是文档字符串</span><br></pre></td></tr></table></figure>

<p>当函数中有语句的时候，是无法输出函数的注释的:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">a</span>():</span><br><span class="line">    a=<span class="number">1</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;这是文档字符串&#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="built_in">print</span>(a.__doc__)</span><br></pre></td></tr></table></figure>

<p>输出结果为：<strong>None</strong></p>
<p>以下这种方式可以，所以注释应该放在函数的第一行：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">a</span>():</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;这是文档字符串&#x27;&#x27;&#x27;</span></span><br><span class="line">    a = <span class="number">1</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="built_in">print</span>(a.__doc__)</span><br><span class="line">这是文档字符串</span><br></pre></td></tr></table></figure>



<h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><p>Python 语言支持以下类型的运算符:</p>
<ul>
<li><a href="https://www.runoob.com/python3/python3-basic-operators.html#ysf1">算术运算符</a></li>
<li><a href="https://www.runoob.com/python3/python3-basic-operators.html#ysf2">比较（关系）运算符</a></li>
<li><a href="https://www.runoob.com/python3/python3-basic-operators.html#ysf3">赋值运算符</a></li>
<li><a href="https://www.runoob.com/python3/python3-basic-operators.html#ysf4">逻辑运算符</a></li>
<li><a href="https://www.runoob.com/python3/python3-basic-operators.html#ysf5">位运算符</a></li>
<li><a href="https://www.runoob.com/python3/python3-basic-operators.html#ysf6">成员运算符</a></li>
<li><a href="https://www.runoob.com/python3/python3-basic-operators.html#ysf7">身份运算符</a></li>
<li><a href="https://www.runoob.com/python3/python3-basic-operators.html#ysf8">运算符优先级</a></li>
</ul>
<p>接下来让我们一个个来学习Python的运算符。</p>
<h3 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h3><p>以下假设变量 <strong>a&#x3D;10</strong>，变量 <strong>b&#x3D;21</strong>：</p>
<table>
<thead>
<tr>
<th align="left">运算符</th>
<th align="left">描述</th>
<th align="left">实例</th>
</tr>
</thead>
<tbody><tr>
<td align="left">+</td>
<td align="left">加 - 两个对象相加</td>
<td align="left">a + b 输出结果 31</td>
</tr>
<tr>
<td align="left">-</td>
<td align="left">减 - 得到负数或是一个数减去另一个数</td>
<td align="left">a - b 输出结果 -11</td>
</tr>
<tr>
<td align="left">*</td>
<td align="left">乘 - 两个数相乘或是返回一个被重复若干次的字符串</td>
<td align="left">a * b 输出结果 210</td>
</tr>
<tr>
<td align="left">&#x2F;</td>
<td align="left">除 - x 除以 y</td>
<td align="left">b &#x2F; a 输出结果 2.1</td>
</tr>
<tr>
<td align="left">%</td>
<td align="left">取模 - 返回除法的余数</td>
<td align="left">b % a 输出结果 1</td>
</tr>
<tr>
<td align="left">**</td>
<td align="left">幂 - 返回x的y次幂</td>
<td align="left">a**b 为10的21次方</td>
</tr>
<tr>
<td align="left">&#x2F;&#x2F;</td>
<td align="left">取整除 - 往小的方向取整数</td>
<td align="left"><code>&gt;&gt;&gt; 9//2 4 &gt;&gt;&gt; -9//2 -5</code></td>
</tr>
</tbody></table>
<h3 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h3><p>以下假设变量 a 为 10，变量 b 为20：</p>
<table>
<thead>
<tr>
<th align="left">运算符</th>
<th align="left">描述</th>
<th align="left">实例</th>
</tr>
</thead>
<tbody><tr>
<td align="left">&#x3D;&#x3D;</td>
<td align="left">等于 - 比较对象是否相等</td>
<td align="left">(a &#x3D;&#x3D; b) 返回 False。</td>
</tr>
<tr>
<td align="left">!&#x3D;</td>
<td align="left">不等于 - 比较两个对象是否不相等</td>
<td align="left">(a !&#x3D; b) 返回 True。</td>
</tr>
<tr>
<td align="left">&gt;</td>
<td align="left">大于 - 返回x是否大于y</td>
<td align="left">(a &gt; b) 返回 False。</td>
</tr>
<tr>
<td align="left">&lt;</td>
<td align="left">小于 - 返回x是否小于y。所有比较运算符返回1表示真，返回0表示假。这分别与特殊的变量True和False等价。注意，这些变量名的大写。</td>
<td align="left">(a &lt; b) 返回 True。</td>
</tr>
<tr>
<td align="left">&gt;&#x3D;</td>
<td align="left">大于等于 - 返回x是否大于等于y。</td>
<td align="left">(a &gt;&#x3D; b) 返回 False。</td>
</tr>
<tr>
<td align="left">&lt;&#x3D;</td>
<td align="left">小于等于 - 返回x是否小于等于y。</td>
<td align="left">(a &lt;&#x3D; b) 返回 True。</td>
</tr>
</tbody></table>
<h3 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h3><p>以下假设变量a为10，变量b为20：</p>
<table>
<thead>
<tr>
<th align="left">运算符</th>
<th align="left">描述</th>
<th align="left">实例</th>
</tr>
</thead>
<tbody><tr>
<td align="left">&#x3D;</td>
<td align="left">简单的赋值运算符</td>
<td align="left">c &#x3D; a + b 将 a + b 的运算结果赋值为 c</td>
</tr>
<tr>
<td align="left">+&#x3D;</td>
<td align="left">加法赋值运算符</td>
<td align="left">c +&#x3D; a 等效于 c &#x3D; c + a</td>
</tr>
<tr>
<td align="left">-&#x3D;</td>
<td align="left">减法赋值运算符</td>
<td align="left">c -&#x3D; a 等效于 c &#x3D; c - a</td>
</tr>
<tr>
<td align="left">*&#x3D;</td>
<td align="left">乘法赋值运算符</td>
<td align="left">c *&#x3D; a 等效于 c &#x3D; c * a</td>
</tr>
<tr>
<td align="left">&#x2F;&#x3D;</td>
<td align="left">除法赋值运算符</td>
<td align="left">c &#x2F;&#x3D; a 等效于 c &#x3D; c &#x2F; a</td>
</tr>
<tr>
<td align="left">%&#x3D;</td>
<td align="left">取模赋值运算符</td>
<td align="left">c %&#x3D; a 等效于 c &#x3D; c % a</td>
</tr>
<tr>
<td align="left">**&#x3D;</td>
<td align="left">幂赋值运算符</td>
<td align="left">c **&#x3D; a 等效于 c &#x3D; c ** a</td>
</tr>
<tr>
<td align="left">&#x2F;&#x2F;&#x3D;</td>
<td align="left">取整除赋值运算符</td>
<td align="left">c &#x2F;&#x2F;&#x3D; a 等效于 c &#x3D; c &#x2F;&#x2F; a</td>
</tr>
<tr>
<td align="left">:&#x3D;</td>
<td align="left">海象运算符，可在表达式内部为变量赋值。<strong>Python3.8 版本新增运算符</strong>。</td>
<td align="left">在这个示例中，赋值表达式可以避免调用 len() 两次:<code>if (n := len(a)) &gt; 10:    print(f&quot;List is too long (&#123;n&#125; elements, expected &lt;= 10)&quot;)</code></td>
</tr>
</tbody></table>
<h3 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h3><p>按位运算符是把数字看作二进制来进行计算的。Python中的按位运算法则如下：</p>
<p>下表中变量 a 为 60，b 为 13二进制格式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = 0011 <span class="number">1100</span></span><br><span class="line"></span><br><span class="line">b = <span class="number">0000</span> <span class="number">1101</span></span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">a&amp;b = <span class="number">0000</span> <span class="number">1100</span></span><br><span class="line"></span><br><span class="line">a|b = 0011 <span class="number">1101</span></span><br><span class="line"></span><br><span class="line">a^b = 0011 0001</span><br><span class="line"></span><br><span class="line">~a  = <span class="number">1100</span> 0011</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">运算符</th>
<th align="left">描述</th>
<th align="left">实例</th>
</tr>
</thead>
<tbody><tr>
<td align="left">&amp;</td>
<td align="left">按位与运算符：参与运算的两个值,如果两个相应位都为1,则该位的结果为1,否则为0</td>
<td align="left">(a &amp; b) 输出结果 12 ，二进制解释： 0000 1100</td>
</tr>
<tr>
<td align="left">|</td>
<td align="left">按位或运算符：只要对应的二个二进位有一个为1时，结果位就为1。</td>
<td align="left">(a | b) 输出结果 61 ，二进制解释： 0011 1101</td>
</tr>
<tr>
<td align="left">^</td>
<td align="left">按位异或运算符：当两对应的二进位相异时，结果为1</td>
<td align="left">(a ^ b) 输出结果 49 ，二进制解释： 0011 0001</td>
</tr>
<tr>
<td align="left">~</td>
<td align="left">按位取反运算符：对数据的每个二进制位取反,即把1变为0,把0变为1。**~x** 类似于 <strong>-x-1</strong></td>
<td align="left">(~a ) 输出结果 -61 ，二进制解释： 1100 0011， 在一个有符号二进制数的补码形式。</td>
</tr>
<tr>
<td align="left">&lt;&lt;</td>
<td align="left">左移动运算符：运算数的各二进位全部左移若干位，由”&lt;&lt;”右边的数指定移动的位数，高位丢弃，低位补0。</td>
<td align="left">a &lt;&lt; 2 输出结果 240 ，二进制解释： 1111 0000</td>
</tr>
<tr>
<td align="left">&gt;&gt;</td>
<td align="left">右移动运算符：把”&gt;&gt;”左边的运算数的各二进位全部右移若干位，”&gt;&gt;”右边的数指定移动的位数</td>
<td align="left">a &gt;&gt; 2 输出结果 15 ，二进制解释： 0000 1111</td>
</tr>
</tbody></table>
<h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><p>Python语言支持逻辑运算符，以下假设变量 a 为 10, b为 20:</p>
<table>
<thead>
<tr>
<th align="left">运算符</th>
<th align="left">逻辑表达式</th>
<th align="left">描述</th>
<th align="left">实例</th>
</tr>
</thead>
<tbody><tr>
<td align="left">and</td>
<td align="left">x and y</td>
<td align="left">布尔”与” - 如果 x 为 False，x and y 返回 x 的值，否则返回 y 的计算值。</td>
<td align="left">(a and b) 返回 20。</td>
</tr>
<tr>
<td align="left">or</td>
<td align="left">x or y</td>
<td align="left">布尔”或” - 如果 x 是 True，它返回 x 的值，否则它返回 y 的计算值。</td>
<td align="left">(a or b) 返回 10。</td>
</tr>
<tr>
<td align="left">not</td>
<td align="left">not x</td>
<td align="left">布尔”非” - 如果 x 为 True，返回 False 。如果 x 为 False，它返回 True。</td>
<td align="left">not(a and b) 返回 False</td>
</tr>
</tbody></table>
<p>python 中的 and 从左到右计算表达式，若所有值均为真，则返回最后一个值，若存在假，返回第一个假值；</p>
<p>or 也是从左到有计算表达式，返回第一个为真的值；</p>
<p>其中数字 0 是假，其他都是真；</p>
<p>字符 “” 是假，其他都是真；</p>
<h3 id="成员运算符"><a href="#成员运算符" class="headerlink" title="成员运算符"></a>成员运算符</h3><p>除了以上的一些运算符之外，Python还支持成员运算符，测试实例中包含了一系列的成员，包括字符串，列表或元组。</p>
<table>
<thead>
<tr>
<th align="left">运算符</th>
<th align="left">描述</th>
<th align="left">实例</th>
</tr>
</thead>
<tbody><tr>
<td align="left">in</td>
<td align="left">如果在指定的序列中找到值返回 True，否则返回 False。</td>
<td align="left">x 在 y 序列中 , 如果 x 在 y 序列中返回 True。</td>
</tr>
<tr>
<td align="left">not in</td>
<td align="left">如果在指定的序列中没有找到值返回 True，否则返回 False。</td>
<td align="left">x 不在 y 序列中 , 如果 x 不在 y 序列中返回 True。</td>
</tr>
</tbody></table>
<h3 id="身份运算符"><a href="#身份运算符" class="headerlink" title="身份运算符"></a>身份运算符</h3><p>身份运算符用于比较两个对象的存储单元</p>
<table>
<thead>
<tr>
<th align="left">运算符</th>
<th align="left">描述</th>
<th align="left">实例</th>
</tr>
</thead>
<tbody><tr>
<td align="left">is</td>
<td align="left">is 是判断两个标识符是不是引用自一个对象</td>
<td align="left"><strong>x is y</strong>, 类似 <strong>id(x) &#x3D;&#x3D; id(y)</strong> , 如果引用的是同一个对象则返回 True，否则返回 False</td>
</tr>
<tr>
<td align="left">is not</td>
<td align="left">is not 是判断两个标识符是不是引用自不同对象</td>
<td align="left"><strong>x is not y</strong> ， 类似 **id(x) !&#x3D; id(y)**。如果引用的不是同一个对象则返回结果 True，否则返回 False。</td>
</tr>
</tbody></table>
<p>is 与 &#x3D;&#x3D; 区别：</p>
<p>is 用于判断两个变量引用对象是否为同一个， &#x3D;&#x3D; 用于判断引用变量的值是否相等。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = a</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b <span class="keyword">is</span> a </span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b == a</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = a[:]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b <span class="keyword">is</span> a</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b == a</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure>

<h3 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h3><p>以下表格列出了从最高到最低优先级的所有运算符， 相同单元格内的运算符具有相同优先级。 运算符均指二元运算，除非特别指出。 相同单元格内的运算符从左至右分组（除了幂运算是从右至左分组）：</p>
<table>
<thead>
<tr>
<th align="left">运算符</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>(expressions...)</code>,<code>[expressions...]</code>, <code>&#123;key: value...&#125;</code>, <code>&#123;expressions...&#125;</code></td>
<td align="left">圆括号的表达式</td>
</tr>
<tr>
<td align="left"><code>x[index]</code>, <code>x[index:index]</code>, <code>x(arguments...)</code>, <code>x.attribute</code></td>
<td align="left">读取，切片，调用，属性引用</td>
</tr>
<tr>
<td align="left">await x</td>
<td align="left">await 表达式</td>
</tr>
<tr>
<td align="left"><code>**</code></td>
<td align="left">乘方(指数)</td>
</tr>
<tr>
<td align="left"><code>+x</code>, <code>-x</code>, <code>~x</code></td>
<td align="left">正，负，按位非 NOT</td>
</tr>
<tr>
<td align="left"><code>*</code>, <code>@</code>, <code>/</code>, <code>//</code>, <code>%</code></td>
<td align="left">乘，矩阵乘，除，整除，取余</td>
</tr>
<tr>
<td align="left"><code>+</code>, <code>-</code></td>
<td align="left">加和减</td>
</tr>
<tr>
<td align="left"><code>&lt;&lt;</code>, <code>&gt;&gt;</code></td>
<td align="left">移位</td>
</tr>
<tr>
<td align="left"><code>&amp;</code></td>
<td align="left">按位与 AND</td>
</tr>
<tr>
<td align="left"><code>^</code></td>
<td align="left">按位异或 XOR</td>
</tr>
<tr>
<td align="left">&#96;</td>
<td align="left">&#96;</td>
</tr>
<tr>
<td align="left"><code>in,not in, is,is not, &lt;, &lt;=, &gt;, &gt;=, !=, ==</code></td>
<td align="left">比较运算，包括成员检测和标识号检测</td>
</tr>
<tr>
<td align="left"><code>not x</code></td>
<td align="left">逻辑非 NOT</td>
</tr>
<tr>
<td align="left"><code>and</code></td>
<td align="left">逻辑与 AND</td>
</tr>
<tr>
<td align="left"><code>or</code></td>
<td align="left">逻辑或 OR</td>
</tr>
<tr>
<td align="left"><code>if -- else</code></td>
<td align="left">条件表达式</td>
</tr>
<tr>
<td align="left"><code>lambda</code></td>
<td align="left">lambda 表达式</td>
</tr>
<tr>
<td align="left"><code>:=</code></td>
<td align="left">赋值表达式</td>
</tr>
</tbody></table>
<p>and 拥有更高优先级:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = <span class="literal">True</span></span><br><span class="line">y = <span class="literal">False</span></span><br><span class="line">z = <span class="literal">False</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> x <span class="keyword">or</span> y <span class="keyword">and</span> z:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;yes&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;no&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>以上实例先计算 <strong>y and z</strong> 并返回 False ，然后 <strong>x or False</strong> 返回 True</p>
<h3 id="附记-4"><a href="#附记-4" class="headerlink" title="附记"></a>附记</h3><h4 id="分别使用-bin，oct，hex-可输出数字的二进制，八进制，十六进制形式，例如："><a href="#分别使用-bin，oct，hex-可输出数字的二进制，八进制，十六进制形式，例如：" class="headerlink" title="分别使用 bin，oct，hex 可输出数字的二进制，八进制，十六进制形式，例如："></a>分别使用 bin，oct，hex 可输出数字的二进制，八进制，十六进制形式，例如：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; a=0b111100</span><br><span class="line">&gt;&gt;&gt; a=60</span><br><span class="line">&gt;&gt;&gt; bin(a)</span><br><span class="line">&#x27;0b111100&#x27;</span><br><span class="line">&gt;&gt;&gt; oct(a)</span><br><span class="line">&#x27;0o74&#x27;</span><br><span class="line">&gt;&gt;&gt; hex(a)</span><br><span class="line">&#x27;0x3c&#x27;</span><br></pre></td></tr></table></figure>

<h4 id="python-不使用-的哲学逻辑"><a href="#python-不使用-的哲学逻辑" class="headerlink" title="python 不使用 ++ 的哲学逻辑"></a>python 不使用 ++ 的哲学逻辑</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = <span class="number">5</span>  </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = <span class="number">5</span>  </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">id</span>(a)  </span><br><span class="line"><span class="number">162334512</span>  </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">id</span>(b)  </span><br><span class="line"><span class="number">162334512</span>  </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a <span class="keyword">is</span> b  </span><br><span class="line"><span class="literal">True</span>  </span><br></pre></td></tr></table></figure>

<p>python 中，变量是以内容为基准而不是像 c 中以变量名为基准，所以只要你的数字内容是5，不管你起什么名字，这个变量的 ID 是相同的，同时也就说明了 python 中一个变量可以以多个名称访问。</p>
<p>这样的设计逻辑决定了 python 中数字类型的值是不可变的，因为如果如上例，a 和 b 都是 5，当你改变了 a 时，b 也会跟着变，这当然不是我们希望的。</p>
<p>因此，正确的自增操作应该 a &#x3D; a + 1 或者 a +&#x3D; 1，当此 a 自增后，通过 id() 观察可知，id 值变化了，即 a 已经是新值的名称。</p>
<p>但是在交互式环境中，编译器会有一个小整数池的概念，会把（-5，256）间的数预先创建好，而当a和b超过这个范围的时候，两个变量就会指向不同的对象了，因此地址也会不一样，比如下例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a=<span class="number">1000</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b=<span class="number">1000</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">id</span>(a);<span class="built_in">id</span>(b)</span><br><span class="line"><span class="number">2236612366224</span></span><br><span class="line"><span class="number">2236617350384</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>

<h3 id="深刻理解-and、or-逻辑运算符"><a href="#深刻理解-and、or-逻辑运算符" class="headerlink" title="深刻理解 and、or 逻辑运算符:"></a>深刻理解 and、or 逻辑运算符:</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="number">0</span> <span class="keyword">and</span> <span class="number">1</span>)      <span class="comment"># =&gt;0,0等同于False</span></span><br><span class="line"><span class="built_in">print</span>(<span class="literal">False</span> <span class="keyword">and</span> <span class="number">1</span>)  <span class="comment"># =&gt;False</span></span><br><span class="line"><span class="built_in">print</span>(-<span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span>)     <span class="comment"># =&gt;1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">1</span> <span class="keyword">or</span> <span class="literal">False</span>)   <span class="comment"># =&gt;1,非零等同于True</span></span><br><span class="line"><span class="built_in">print</span>(<span class="literal">True</span> <span class="keyword">or</span> <span class="literal">False</span>)<span class="comment"># =&gt;True</span></span><br><span class="line"><span class="built_in">print</span>(-<span class="number">1</span> <span class="keyword">or</span> <span class="number">0</span>)      <span class="comment"># =&gt;-1</span></span><br></pre></td></tr></table></figure>

<ul>
<li>and：前面为假（0 或者 False）则表达式为假，否则表达式为后面的值；</li>
<li>or：前面为真（非 0 或者非 False）则表达式为前面的值，否则表达式为后面的值；</li>
</ul>
<p>优先级：<strong>not&gt;and&gt;or</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="number">1</span> <span class="keyword">and</span> <span class="number">0</span> <span class="keyword">or</span>  <span class="keyword">not</span> <span class="literal">False</span>) <span class="comment">#=&gt;True</span></span><br><span class="line"><span class="built_in">print</span>( <span class="keyword">not</span> <span class="literal">False</span> <span class="keyword">or</span> <span class="number">1</span> <span class="keyword">and</span> <span class="number">0</span>) <span class="comment">#=&gt;True</span></span><br><span class="line"><span class="built_in">print</span>( <span class="number">1</span> <span class="keyword">or</span> <span class="keyword">not</span> <span class="literal">True</span> <span class="keyword">and</span> <span class="number">0</span>)  <span class="comment">#=&gt;1</span></span><br></pre></td></tr></table></figure>

<h4 id="amp-、-amp-amp-的区别"><a href="#amp-、-amp-amp-的区别" class="headerlink" title="&amp;、&amp;&amp; 的区别"></a>&amp;、&amp;&amp; 的区别</h4><ul>
<li>最终结果一样。</li>
<li>&amp; 无论左边是 false 还是 true，右边都执行。</li>
<li>&amp;&amp; 具有短路效果，左边是 false, 右边不执行。</li>
<li>&amp;&amp; 效率更高，项目中推荐使用。</li>
</ul>
<h4 id="、-的区别"><a href="#、-的区别" class="headerlink" title="|、||的区别"></a>|、||的区别</h4><ul>
<li>最终的结果一样。</li>
<li>|无论左边是false还是true，右边都会执行。</li>
<li>||具有短路效果，左边是true,右边不执行。</li>
<li>||效果效率更高，项目中推荐使用。</li>
</ul>
<h2 id="数字（Number）"><a href="#数字（Number）" class="headerlink" title="数字（Number）"></a>数字（Number）</h2><p>Python 数字数据类型用于存储数值。</p>
<p>数据类型是不允许改变的，这就意味着如果改变数字数据类型的值，将重新分配内存空间。</p>
<p>以下实例在变量赋值时 Number 对象将被创建：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">var1 = <span class="number">1</span></span><br><span class="line">var2 = <span class="number">10</span></span><br></pre></td></tr></table></figure>

<p>您也可以使用del语句删除一些数字对象的引用。</p>
<p>del语句的语法是：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">del</span> var1[,var2[,var3[....,varN]]]</span><br></pre></td></tr></table></figure>

<p>您可以通过使用del语句删除单个或多个对象的引用，例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">del</span> var</span><br><span class="line"><span class="keyword">del</span> var_a, var_b</span><br></pre></td></tr></table></figure>

<p>Python 支持三种不同的数值类型：</p>
<ul>
<li><strong>整型(int)</strong> - 通常被称为是整型或整数，是正或负整数，不带小数点。Python3 整型是没有限制大小的，可以当作 Long 类型使用，所以 Python3 没有 Python2 的 Long 类型。布尔(bool)是整型的子类型。</li>
<li><strong>浮点型(float)</strong> - 浮点型由整数部分与小数部分组成，浮点型也可以使用科学计数法表示（2.5e2 &#x3D; 2.5 x 102 &#x3D; 250）</li>
<li><strong>复数( (complex))</strong> - 复数由实数部分和虚数部分构成，可以用a + bj,或者complex(a,b)表示， 复数的实部a和虚部b都是浮点型。</li>
</ul>
<p>我们可以使用十六进制和八进制来代表整数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>number = <span class="number">0xA0F</span> <span class="comment"># 十六进制</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>number</span><br><span class="line"><span class="number">2575</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>number=<span class="number">0o37</span> <span class="comment"># 八进制</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>number</span><br><span class="line"><span class="number">31</span></span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">int</th>
<th align="left">float</th>
<th align="left">complex</th>
</tr>
</thead>
<tbody><tr>
<td align="left">10</td>
<td align="left">0.0</td>
<td align="left">3.14j</td>
</tr>
<tr>
<td align="left">100</td>
<td align="left">15.20</td>
<td align="left">45.j</td>
</tr>
<tr>
<td align="left">-786</td>
<td align="left">-21.9</td>
<td align="left">9.322e-36j</td>
</tr>
<tr>
<td align="left">080</td>
<td align="left">32.3e+18</td>
<td align="left">.876j</td>
</tr>
<tr>
<td align="left">-0490</td>
<td align="left">-90.</td>
<td align="left">-.6545+0J</td>
</tr>
<tr>
<td align="left">-0x260</td>
<td align="left">-32.54e100</td>
<td align="left">3e+26J</td>
</tr>
<tr>
<td align="left">0x69</td>
<td align="left">70.2E-12</td>
<td align="left">4.53e-7j</td>
</tr>
</tbody></table>
<ul>
<li>Python支持复数，复数由实数部分和虚数部分构成，可以用a + bj,或者complex(a,b)表示， 复数的实部a和虚部b都是浮点型。</li>
</ul>
<h3 id="Python-数字类型转换"><a href="#Python-数字类型转换" class="headerlink" title="Python 数字类型转换"></a>Python 数字类型转换</h3><p>有时候，我们需要对数据内置的类型进行转换，数据类型的转换，你只需要将数据类型作为函数名即可。</p>
<ul>
<li><strong>int(x)</strong> 将x转换为一个整数。</li>
<li><strong>float(x)</strong> 将x转换到一个浮点数。</li>
<li><strong>complex(x)</strong> 将x转换到一个复数，实数部分为 x，虚数部分为 0。</li>
<li><strong>complex(x, y)</strong> 将 x 和 y 转换到一个复数，实数部分为 x，虚数部分为 y。x 和 y 是数字表达式。</li>
</ul>
<p>以下实例将浮点数变量 a 转换为整数：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; a = 1.0</span><br><span class="line">&gt;&gt;&gt; int(a)</span><br><span class="line">1</span><br></pre></td></tr></table></figure>

<h3 id="Python-数字运算"><a href="#Python-数字运算" class="headerlink" title="Python 数字运算"></a>Python 数字运算</h3><h5 id="Python-解释器可以作为一个简单的计算器，您可以在解释器里输入一个表达式，它将输出表达式的值。"><a href="#Python-解释器可以作为一个简单的计算器，您可以在解释器里输入一个表达式，它将输出表达式的值。" class="headerlink" title="Python 解释器可以作为一个简单的计算器，您可以在解释器里输入一个表达式，它将输出表达式的值。"></a>Python 解释器可以作为一个简单的计算器，您可以在解释器里输入一个表达式，它将输出表达式的值。</h5><p>表达式的语法很直白： <strong>+</strong>, <strong>-</strong>, ***** 和 <strong>&#x2F;</strong>, 和其它语言（如Pascal或C）里一样。例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">2</span> + <span class="number">2</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">50</span> - <span class="number">5</span>*<span class="number">6</span></span><br><span class="line"><span class="number">20</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>(<span class="number">50</span> - <span class="number">5</span>*<span class="number">6</span>) / <span class="number">4</span></span><br><span class="line"><span class="number">5.0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">8</span> / <span class="number">5</span>  <span class="comment"># 总是返回一个浮点数</span></span><br><span class="line"><span class="number">1.6</span></span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong>在不同的机器上浮点运算的结果可能会不一样。</p>
<p>在整数除法中，除法 <strong>&#x2F;</strong> 总是返回一个浮点数，如果只想得到整数的结果，丢弃可能的分数部分，可以使用运算符 <strong>&#x2F;&#x2F;</strong> ：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">17</span> / <span class="number">3</span>  <span class="comment"># 整数除法返回浮点型</span></span><br><span class="line"><span class="number">5.666666666666667</span></span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">17</span> // <span class="number">3</span>  <span class="comment"># 整数除法返回向下取整后的结果</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">17</span> % <span class="number">3</span>  <span class="comment"># ％操作符返回除法的余数</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">5</span> * <span class="number">3</span> + <span class="number">2</span> </span><br><span class="line"><span class="number">17</span></span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong><strong>&#x2F;&#x2F;</strong> 得到的并不一定是整数类型的数，它与分母分子的数据类型有关系。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">7</span>//<span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">7.0</span>//<span class="number">2</span></span><br><span class="line"><span class="number">3.0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">7</span>//<span class="number">2.0</span></span><br><span class="line"><span class="number">3.0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>

<p>等号 <strong>&#x3D;</strong> 用于给变量赋值。赋值之后，除了下一个提示符，解释器不会显示任何结果。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>width = <span class="number">20</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>height = <span class="number">5</span>*<span class="number">9</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>width * height</span><br><span class="line"><span class="number">900</span></span><br></pre></td></tr></table></figure>

<p>Python 可以使用 *<strong>*</strong> 操作来进行幂运算：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">5</span> ** <span class="number">2</span>  <span class="comment"># 5 的平方</span></span><br><span class="line"><span class="number">25</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">2</span> ** <span class="number">7</span>  <span class="comment"># 2的7次方</span></span><br><span class="line"><span class="number">128</span></span><br></pre></td></tr></table></figure>

<p>变量在使用前必须先”定义”（即赋予变量一个值），否则会出现错误：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>n   <span class="comment"># 尝试访问一个未定义的变量</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">NameError: name <span class="string">&#x27;n&#x27;</span> <span class="keyword">is</span> <span class="keyword">not</span> defined</span><br></pre></td></tr></table></figure>

<p>不同类型的数混合运算时会将整数转换为浮点数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">3</span> * <span class="number">3.75</span> / <span class="number">1.5</span></span><br><span class="line"><span class="number">7.5</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">7.0</span> / <span class="number">2</span></span><br><span class="line"><span class="number">3.5</span></span><br></pre></td></tr></table></figure>

<p>在交互模式中，最后被输出的表达式结果被赋值给变量 <strong>_</strong> 。例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>tax = <span class="number">12.5</span> / <span class="number">100</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>price = <span class="number">100.50</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>price * tax</span><br><span class="line"><span class="number">12.5625</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>price + _</span><br><span class="line"><span class="number">113.0625</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">round</span>(_, <span class="number">2</span>)</span><br><span class="line"><span class="number">113.06</span></span><br></pre></td></tr></table></figure>

<p>此处， <strong>_</strong> 变量应被用户视为只读变量。</p>
<h3 id="数学函数"><a href="#数学函数" class="headerlink" title="数学函数"></a>数学函数</h3><table>
<thead>
<tr>
<th align="left">函数</th>
<th align="left">返回值 ( 描述 )</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><a href="https://www.runoob.com/python3/python3-func-number-abs.html">abs(x)</a></td>
<td align="left">返回数字的绝对值，如abs(-10) 返回 10</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/python3-func-number-ceil.html">ceil(x)</a></td>
<td align="left">返回数字的上入整数，如math.ceil(4.1) 返回 5</td>
</tr>
<tr>
<td align="left">cmp(x, y)</td>
<td align="left">如果 x &lt; y 返回 -1, 如果 x &#x3D;&#x3D; y 返回 0, 如果 x &gt; y 返回 1。 <strong>Python 3 已废弃，使用 (x&gt;y)-(x&lt;y) 替换</strong>。</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/python3-func-number-exp.html">exp(x)</a></td>
<td align="left">返回e的x次幂(ex),如math.exp(1) 返回2.718281828459045</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/python3-func-number-fabs.html">fabs(x)</a></td>
<td align="left">以浮点数形式返回数字的绝对值，如math.fabs(-10) 返回10.0</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/python3-func-number-floor.html">floor(x)</a></td>
<td align="left">返回数字的下舍整数，如math.floor(4.9)返回 4</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/python3-func-number-log.html">log(x)</a></td>
<td align="left">如math.log(math.e)返回1.0,math.log(100,10)返回2.0</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/python3-func-number-log10.html">log10(x)</a></td>
<td align="left">返回以10为基数的x的对数，如math.log10(100)返回 2.0</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/python3-func-number-max.html">max(x1, x2,…)</a></td>
<td align="left">返回给定参数的最大值，参数可以为序列。</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/python3-func-number-min.html">min(x1, x2,…)</a></td>
<td align="left">返回给定参数的最小值，参数可以为序列。</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/python3-func-number-modf.html">modf(x)</a></td>
<td align="left">返回x的整数部分与小数部分，两部分的数值符号与x相同，整数部分以浮点型表示。</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/python3-func-number-pow.html">pow(x, y)</a></td>
<td align="left">x**y 运算后的值。</td>
</tr>
<tr>
<td align="left">[round(x <a href="https://www.runoob.com/python3/python3-func-number-round.html">,n])</a></td>
<td align="left">返回浮点数 x 的四舍五入值，如给出 n 值，则代表舍入到小数点后的位数。<strong>其实准确的说是保留值将保留到离上一位更近的一端。</strong></td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/python3-func-number-sqrt.html">sqrt(x)</a></td>
<td align="left">返回数字x的平方根。</td>
</tr>
</tbody></table>
<h3 id="随机数函数"><a href="#随机数函数" class="headerlink" title="随机数函数"></a>随机数函数</h3><p>随机数可以用于数学，游戏，安全等领域中，还经常被嵌入到算法中，用以提高算法效率，并提高程序的安全性。</p>
<p>Python包含以下常用随机数函数：</p>
<table>
<thead>
<tr>
<th align="left">函数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><a href="https://www.runoob.com/python3/python3-func-number-choice.html">choice(seq)</a></td>
<td align="left">从序列的元素中随机挑选一个元素，比如random.choice(range(10))，从0到9中随机挑选一个整数。</td>
</tr>
<tr>
<td align="left">[randrange (<a href="https://www.runoob.com/python3/python3-func-number-randrange.html">start,] stop [,step])</a></td>
<td align="left">从指定范围内，按指定基数递增的集合中获取一个随机数，基数默认值为 1</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/python3-func-number-random.html">random()</a></td>
<td align="left">随机生成下一个实数，它在[0,1)范围内。</td>
</tr>
<tr>
<td align="left">[seed(<a href="https://www.runoob.com/python3/python3-func-number-seed.html">x])</a></td>
<td align="left">改变随机数生成器的种子seed。如果你不了解其原理，你不必特别去设定seed，Python会帮你选择seed。</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/python3-func-number-shuffle.html">shuffle(lst)</a></td>
<td align="left">将序列的所有元素随机排序</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/python3-func-number-uniform.html">uniform(x, y)</a></td>
<td align="left">随机生成下一个实数，它在[x,y]范围内。</td>
</tr>
</tbody></table>
<hr>
<h3 id="三角函数"><a href="#三角函数" class="headerlink" title="三角函数"></a>三角函数</h3><p>Python包括以下三角函数：</p>
<table>
<thead>
<tr>
<th align="left">函数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><a href="https://www.runoob.com/python3/python3-func-number-acos.html">acos(x)</a></td>
<td align="left">返回x的反余弦弧度值。</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/python3-func-number-asin.html">asin(x)</a></td>
<td align="left">返回x的反正弦弧度值。</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/python3-func-number-atan.html">atan(x)</a></td>
<td align="left">返回x的反正切弧度值。</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/python3-func-number-atan2.html">atan2(y, x)</a></td>
<td align="left">返回给定的 X 及 Y 坐标值的反正切值。</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/python3-func-number-cos.html">cos(x)</a></td>
<td align="left">返回x的弧度的余弦值。</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/python3-func-number-hypot.html">hypot(x, y)</a></td>
<td align="left">返回欧几里德范数 sqrt(x<em>x + y</em>y)。</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/python3-func-number-sin.html">sin(x)</a></td>
<td align="left">返回的x弧度的正弦值。</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/python3-func-number-tan.html">tan(x)</a></td>
<td align="left">返回x弧度的正切值。</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/python3-func-number-degrees.html">degrees(x)</a></td>
<td align="left">将弧度转换为角度,如degrees(math.pi&#x2F;2) ， 返回90.0</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/python3-func-number-radians.html">radians(x)</a></td>
<td align="left">将角度转换为弧度</td>
</tr>
</tbody></table>
<hr>
<h3 id="数学常量"><a href="#数学常量" class="headerlink" title="数学常量"></a>数学常量</h3><table>
<thead>
<tr>
<th align="left">常量</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">pi</td>
<td align="left">数学常量 pi（圆周率，一般以π来表示）</td>
</tr>
<tr>
<td align="left">e</td>
<td align="left">数学常量 e，e即自然常数（自然常数）。</td>
</tr>
</tbody></table>
<h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><p>字符串是 Python 中最常用的数据类型。我们可以使用引号( <strong>‘</strong> 或 <strong>“</strong> )来创建字符串。</p>
<p>创建字符串很简单，只要为变量分配一个值即可。例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">var1 = <span class="string">&#x27;Hello World!&#x27;</span></span><br><span class="line">var2 = <span class="string">&quot;Runoob&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="Python-访问字符串中的值"><a href="#Python-访问字符串中的值" class="headerlink" title="Python 访问字符串中的值"></a>Python 访问字符串中的值</h3><p>Python 不支持单字符类型，单字符在 Python 中也是作为一个字符串使用。</p>
<p>Python 访问子字符串，可以使用方括号 <strong>[]</strong> 来截取字符串，字符串的截取的语法格式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">变量[头下标:尾下标]</span><br></pre></td></tr></table></figure>

<p>索引值以 <strong>0</strong> 为开始值，**-1** 为从末尾的开始位置。</p>
<p><img src="https://p.ipic.vip/11948v.jpg" alt="img"></p>
<p><img src="https://p.ipic.vip/jngqpp.png" alt="img"></p>
<h3 id="字符串更新"><a href="#字符串更新" class="headerlink" title="字符串更新"></a>字符串更新</h3><p>你可以截取字符串的一部分并与其他字段拼接，如下实例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"> </span><br><span class="line">var1 = <span class="string">&#x27;Hello World!&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;已更新字符串 : &quot;</span>, var1[:<span class="number">6</span>] + <span class="string">&#x27;Runoob!&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>以上实例执行结果</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">已更新字符串 :  Hello Runoob!</span><br></pre></td></tr></table></figure>

<h3 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h3><p>在需要在字符中使用特殊字符时，python 用反斜杠 *<em>*</em> 转义字符。如下表：</p>
<table>
<thead>
<tr>
<th align="left">转义字符</th>
<th align="left">描述</th>
<th align="left">实例</th>
</tr>
</thead>
<tbody><tr>
<td align="left">(在行尾时)</td>
<td align="left">续行符</td>
<td align="left"><code>&gt;&gt;&gt; print(&quot;line1 \ ... line2 \ ... line3&quot;) line1 line2 line3 &gt;&gt;&gt; </code></td>
</tr>
<tr>
<td align="left">\</td>
<td align="left">反斜杠符号</td>
<td align="left"><code>&gt;&gt;&gt; print(&quot;\\&quot;) \</code></td>
</tr>
<tr>
<td align="left">&#39;</td>
<td align="left">单引号</td>
<td align="left"><code>&gt;&gt;&gt; print(&#39;\&#39;&#39;) &#39;</code></td>
</tr>
<tr>
<td align="left">&quot;</td>
<td align="left">双引号</td>
<td align="left"><code>&gt;&gt;&gt; print(&quot;\&quot;&quot;) &quot;</code></td>
</tr>
<tr>
<td align="left">\a</td>
<td align="left">响铃</td>
<td align="left"><code>&gt;&gt;&gt; print(&quot;\a&quot;)</code>执行后电脑有响声。</td>
</tr>
<tr>
<td align="left">\b</td>
<td align="left">退格(Backspace)</td>
<td align="left"><code>&gt;&gt;&gt; print(&quot;Hello \b World!&quot;) Hello World!</code></td>
</tr>
<tr>
<td align="left">\000</td>
<td align="left">空</td>
<td align="left"><code>&gt;&gt;&gt; print(&quot;\000&quot;) &gt;&gt;&gt; </code></td>
</tr>
<tr>
<td align="left">\n</td>
<td align="left">换行</td>
<td align="left"><code>&gt;&gt;&gt; print(&quot;\n&quot;)  &gt;&gt;&gt;</code></td>
</tr>
<tr>
<td align="left">\v</td>
<td align="left">纵向制表符</td>
<td align="left"><code>&gt;&gt;&gt; print(&quot;Hello \v World!&quot;) Hello        World! &gt;&gt;&gt;</code></td>
</tr>
<tr>
<td align="left">\t</td>
<td align="left">横向制表符</td>
<td align="left"><code>&gt;&gt;&gt; print(&quot;Hello \t World!&quot;) Hello    World! &gt;&gt;&gt;</code></td>
</tr>
<tr>
<td align="left">\r</td>
<td align="left">回车，将 <strong>\r</strong> 后面的内容移到字符串开头，并逐一替换开头部分的字符，直至将 <strong>\r</strong> 后面的内容完全替换完成。</td>
<td align="left"><code>&gt;&gt;&gt; print(&quot;Hello\rWorld!&quot;) World! &gt;&gt;&gt; print(&#39;google runoob taobao\r123456&#39;) 123456 runoob taobao</code></td>
</tr>
<tr>
<td align="left">\f</td>
<td align="left">换页</td>
<td align="left"><code>&gt;&gt;&gt; print(&quot;Hello \f World!&quot;) Hello        World! &gt;&gt;&gt; </code></td>
</tr>
<tr>
<td align="left">\yyy</td>
<td align="left">八进制数，y 代表 0~7 的字符，例如：\012 代表换行。</td>
<td align="left"><code>&gt;&gt;&gt; print(&quot;\110\145\154\154\157\40\127\157\162\154\144\41&quot;) Hello World!</code></td>
</tr>
<tr>
<td align="left">\xyy</td>
<td align="left">十六进制数，以 \x 开头，y 代表的字符，例如：\x0a 代表换行</td>
<td align="left"><code>&gt;&gt;&gt; print(&quot;\x48\x65\x6c\x6c\x6f\x20\x57\x6f\x72\x6c\x64\x21&quot;) Hello World!</code></td>
</tr>
<tr>
<td align="left">\other</td>
<td align="left">其它的字符以普通格式输出</td>
<td align="left"></td>
</tr>
</tbody></table>
<p>使用 <strong>\r</strong> 实现百分比进度：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">101</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\r&#123;:3&#125;%&quot;</span>.<span class="built_in">format</span>(i),end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    time.sleep(<span class="number">0.05</span>)</span><br></pre></td></tr></table></figure>

<p>以下实例，我们使用了不同的转义字符来演示单引号、换行符、制表符、退格符、换页符、ASCII、二进制、八进制数和十六进制数的效果：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\&#x27;Hello, world!\&#x27;&#x27;</span>)  <span class="comment"># 输出：&#x27;Hello, world!&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Hello, world!\nHow are you?&quot;</span>)  <span class="comment"># 输出：Hello, world!</span></span><br><span class="line">                                        <span class="comment">#       How are you?</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Hello, world!\tHow are you?&quot;</span>)  <span class="comment"># 输出：Hello, world!    How are you?</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Hello,\b world!&quot;</span>)  <span class="comment"># 输出：Hello world!</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Hello,\f world!&quot;</span>)  <span class="comment"># 输出：</span></span><br><span class="line">                           <span class="comment"># Hello,</span></span><br><span class="line">                           <span class="comment">#  world!</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;A 对应的 ASCII 值为：&quot;</span>, <span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>))  <span class="comment"># 输出：A 对应的 ASCII 值为： 65</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\x41 为 A 的 ASCII 代码&quot;</span>)  <span class="comment"># 输出：A 为 A 的 ASCII 代码</span></span><br><span class="line"></span><br><span class="line">decimal_number = <span class="number">42</span></span><br><span class="line">binary_number = <span class="built_in">bin</span>(decimal_number)  <span class="comment"># 十进制转换为二进制</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;转换为二进制:&#x27;</span>, binary_number)  <span class="comment"># 转换为二进制: 0b101010</span></span><br><span class="line"></span><br><span class="line">octal_number = <span class="built_in">oct</span>(decimal_number)  <span class="comment"># 十进制转换为八进制</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;转换为八进制:&#x27;</span>, octal_number)  <span class="comment"># 转换为八进制: 0o52</span></span><br><span class="line"></span><br><span class="line">hexadecimal_number = <span class="built_in">hex</span>(decimal_number)  <span class="comment"># 十进制转换为十六进制</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;转换为十六进制:&#x27;</span>, hexadecimal_number) <span class="comment"># 转换为十六进制: 0x2a</span></span><br></pre></td></tr></table></figure>

<h3 id="字符串运算符"><a href="#字符串运算符" class="headerlink" title="字符串运算符"></a>字符串运算符</h3><p>下表实例变量 a 值为字符串 “Hello”，b 变量值为 “Python”：</p>
<table>
<thead>
<tr>
<th align="left">操作符</th>
<th align="left">描述</th>
<th align="left">实例</th>
</tr>
</thead>
<tbody><tr>
<td align="left">+</td>
<td align="left">字符串连接</td>
<td align="left">a + b 输出结果： HelloPython</td>
</tr>
<tr>
<td align="left">*</td>
<td align="left">重复输出字符串</td>
<td align="left">a*2 输出结果：HelloHello</td>
</tr>
<tr>
<td align="left">[]</td>
<td align="left">通过索引获取字符串中字符</td>
<td align="left">a[1] 输出结果 <strong>e</strong></td>
</tr>
<tr>
<td align="left">[ : ]</td>
<td align="left">截取字符串中的一部分，遵循<strong>左闭右开</strong>原则，str[0:2] 是不包含第 3 个字符的。</td>
<td align="left">a[1:4] 输出结果 <strong>ell</strong></td>
</tr>
<tr>
<td align="left">in</td>
<td align="left">成员运算符 - 如果字符串中包含给定的字符返回 True</td>
<td align="left"><strong>‘H’ in a</strong> 输出结果 True</td>
</tr>
<tr>
<td align="left">not in</td>
<td align="left">成员运算符 - 如果字符串中不包含给定的字符返回 True</td>
<td align="left"><strong>‘M’ not in a</strong> 输出结果 True</td>
</tr>
<tr>
<td align="left">r&#x2F;R</td>
<td align="left">原始字符串 - 原始字符串：所有的字符串都是直接按照字面的意思来使用，没有转义特殊或不能打印的字符。 原始字符串除在字符串的第一个引号前加上字母 <strong>r</strong>（可以大小写）以外，与普通字符串有着几乎完全相同的语法。</td>
<td align="left"><code>print( r&#39;\n&#39; ) print( R&#39;\n&#39; )</code></td>
</tr>
<tr>
<td align="left">%</td>
<td align="left">格式字符串</td>
<td align="left">请看下一节内</td>
</tr>
</tbody></table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"> </span><br><span class="line">a = <span class="string">&quot;Hello&quot;</span></span><br><span class="line">b = <span class="string">&quot;Python&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;a + b 输出结果：&quot;</span>, a + b)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;a * 2 输出结果：&quot;</span>, a * <span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;a[1] 输出结果：&quot;</span>, a[<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;a[1:4] 输出结果：&quot;</span>, a[<span class="number">1</span>:<span class="number">4</span>])</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span>( <span class="string">&quot;H&quot;</span> <span class="keyword">in</span> a) :</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;H 在变量 a 中&quot;</span>)</span><br><span class="line"><span class="keyword">else</span> :</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;H 不在变量 a 中&quot;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span>( <span class="string">&quot;M&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> a) :</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;M 不在变量 a 中&quot;</span>)</span><br><span class="line"><span class="keyword">else</span> :</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;M 在变量 a 中&quot;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">r&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">R&#x27;\n&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>以上实例输出结果为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a + b 输出结果： HelloPython</span><br><span class="line">a * <span class="number">2</span> 输出结果： HelloHello</span><br><span class="line">a[<span class="number">1</span>] 输出结果： e</span><br><span class="line">a[<span class="number">1</span>:<span class="number">4</span>] 输出结果： ell</span><br><span class="line">H 在变量 a 中</span><br><span class="line">M 不在变量 a 中</span><br><span class="line">\n</span><br><span class="line">\n</span><br></pre></td></tr></table></figure>

<h3 id="字符串格式化"><a href="#字符串格式化" class="headerlink" title="字符串格式化"></a>字符串格式化</h3><p>Python 支持格式化字符串的输出 。尽管这样可能会用到非常复杂的表达式，但最基本的用法是将一个值插入到一个有字符串格式符 %s 的字符串中。</p>
<p>在 Python 中，字符串格式化使用与 C 中 sprintf 函数一样的语法。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;我叫 %s 今年 %d 岁!&quot;</span> % (<span class="string">&#x27;小明&#x27;</span>, <span class="number">10</span>))</span><br></pre></td></tr></table></figure>

<p>以上实例输出结果：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">我叫 小明 今年 <span class="number">10</span> 岁!</span><br></pre></td></tr></table></figure>

<p>python字符串格式化符号:</p>
<table>
<thead>
<tr>
<th align="left">符  号</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">%c</td>
<td align="left">格式化字符及其ASCII码</td>
</tr>
<tr>
<td align="left">%s</td>
<td align="left">格式化字符串</td>
</tr>
<tr>
<td align="left">%d</td>
<td align="left">格式化整数</td>
</tr>
<tr>
<td align="left">%u</td>
<td align="left">格式化无符号整型</td>
</tr>
<tr>
<td align="left">%o</td>
<td align="left">格式化无符号八进制数</td>
</tr>
<tr>
<td align="left">%x</td>
<td align="left">格式化无符号十六进制数</td>
</tr>
<tr>
<td align="left">%X</td>
<td align="left">格式化无符号十六进制数（大写）</td>
</tr>
<tr>
<td align="left">%f</td>
<td align="left">格式化浮点数字，可指定小数点后的精度</td>
</tr>
<tr>
<td align="left">%e</td>
<td align="left">用科学计数法格式化浮点数</td>
</tr>
<tr>
<td align="left">%E</td>
<td align="left">作用同%e，用科学计数法格式化浮点数</td>
</tr>
<tr>
<td align="left">%g</td>
<td align="left">%f和%e的简写</td>
</tr>
<tr>
<td align="left">%G</td>
<td align="left">%f 和 %E 的简写</td>
</tr>
<tr>
<td align="left">%p</td>
<td align="left">用十六进制数格式化变量的地址</td>
</tr>
</tbody></table>
<p>格式化操作符辅助指令:</p>
<table>
<thead>
<tr>
<th align="left">符号</th>
<th align="left">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="left">*</td>
<td align="left">定义宽度或者小数点精度</td>
</tr>
<tr>
<td align="left">-</td>
<td align="left">用做左对齐</td>
</tr>
<tr>
<td align="left">+</td>
<td align="left">在正数前面显示加号( + )</td>
</tr>
<tr>
<td align="left"><sp></td>
<td align="left">在正数前面显示空格</td>
</tr>
<tr>
<td align="left">#</td>
<td align="left">在八进制数前面显示零(‘0’)，在十六进制前面显示’0x’或者’0X’(取决于用的是’x’还是’X’)</td>
</tr>
<tr>
<td align="left">0</td>
<td align="left">显示的数字前面填充’0’而不是默认的空格</td>
</tr>
<tr>
<td align="left">%</td>
<td align="left">‘%%’输出一个单一的’%’</td>
</tr>
<tr>
<td align="left">(var)</td>
<td align="left">映射变量(字典参数)</td>
</tr>
<tr>
<td align="left">m.n.</td>
<td align="left">m 是显示的最小总宽度,n 是小数点后的位数(如果可用的话)</td>
</tr>
</tbody></table>
<p>Python2.6 开始，新增了一种格式化字符串的函数 <a href="https://www.runoob.com/python/att-string-format.html">str.format()</a>，它增强了字符串格式化的功能。</p>
<h3 id="三引号"><a href="#三引号" class="headerlink" title="三引号"></a>三引号</h3><p>python三引号允许一个字符串跨多行，字符串中可以包含换行符、制表符以及其他特殊字符。实例如下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"> </span><br><span class="line">para_str = <span class="string">&quot;&quot;&quot;这是一个多行字符串的实例</span></span><br><span class="line"><span class="string">多行字符串可以使用制表符</span></span><br><span class="line"><span class="string">TAB ( \t )。</span></span><br><span class="line"><span class="string">也可以使用换行符 [ \n ]。</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="built_in">print</span> (para_str)</span><br></pre></td></tr></table></figure>

<p>以上实例执行结果为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">这是一个多行字符串的实例</span><br><span class="line">多行字符串可以使用制表符</span><br><span class="line">TAB (    )。</span><br><span class="line">也可以使用换行符 [ </span><br><span class="line"> ]。</span><br></pre></td></tr></table></figure>

<p>三引号让程序员从引号和特殊字符串的泥潭里面解脱出来，自始至终保持一小块字符串的格式是所谓的WYSIWYG（所见即所得）格式的。</p>
<p>一个典型的用例是，当你需要一块HTML或者SQL时，这时用字符串组合，特殊字符串转义将会非常的繁琐。</p>
<h3 id="f-string"><a href="#f-string" class="headerlink" title="f-string"></a>f-string</h3><p>f-string 是 python3.6 之后版本添加的，称之为字面量格式化字符串，是新的格式化字符串的语法。</p>
<p>之前我们习惯用百分号 (%):</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>name = <span class="string">&#x27;Runoob&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;Hello %s&#x27;</span> % name</span><br><span class="line"><span class="string">&#x27;Hello Runoob&#x27;</span></span><br></pre></td></tr></table></figure>

<p><strong>f-string</strong> 格式化字符串以 <strong>f</strong> 开头，后面跟着字符串，字符串中的表达式用大括号 {} 包起来，它会将变量或表达式计算后的值替换进去，实例如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>name = <span class="string">&#x27;Runoob&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">f&#x27;Hello <span class="subst">&#123;name&#125;</span>&#x27;</span>  <span class="comment"># 替换变量</span></span><br><span class="line"><span class="string">&#x27;Hello Runoob&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">f&#x27;<span class="subst">&#123;<span class="number">1</span>+<span class="number">2</span>&#125;</span>&#x27;</span>         <span class="comment"># 使用表达式</span></span><br><span class="line"><span class="string">&#x27;3&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>w = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;url&#x27;</span>: <span class="string">&#x27;www.runoob.com&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">f&#x27;<span class="subst">&#123;w[<span class="string">&quot;name&quot;</span>]&#125;</span>: <span class="subst">&#123;w[<span class="string">&quot;url&quot;</span>]&#125;</span>&#x27;</span></span><br><span class="line"><span class="string">&#x27;Runoob: www.runoob.com&#x27;</span></span><br></pre></td></tr></table></figure>

<p>用了这种方式明显更简单了，不用再去判断使用 %s，还是 %d。</p>
<p>在 Python 3.8 的版本中可以使用 <strong>&#x3D;</strong> 符号来拼接运算表达式与结果：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = <span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;x+<span class="number">1</span>&#125;</span>&#x27;</span>)   <span class="comment"># Python 3.6</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = <span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;x+<span class="number">1</span>=&#125;</span>&#x27;</span>)   <span class="comment"># Python 3.8</span></span><br><span class="line">x+<span class="number">1</span>=<span class="number">2</span></span><br></pre></td></tr></table></figure>

<h3 id="Unicode-字符串"><a href="#Unicode-字符串" class="headerlink" title="Unicode 字符串"></a>Unicode 字符串</h3><p>在Python2中，普通字符串是以8位ASCII码进行存储的，而Unicode字符串则存储为16位unicode字符串，这样能够表示更多的字符集。使用的语法是在字符串前面加上前缀 <strong>u</strong>。</p>
<p>在Python3中，所有的字符串都是Unicode字符串。</p>
<h3 id="Python-的字符串内建函数"><a href="#Python-的字符串内建函数" class="headerlink" title="Python 的字符串内建函数"></a>Python 的字符串内建函数</h3><p>Python 的字符串常用内建函数如下：</p>
<table>
<thead>
<tr>
<th align="left">序号</th>
<th align="left">方法及描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">1</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-string-capitalize.html">capitalize()</a> 将字符串的第一个字符转换为大写</td>
</tr>
<tr>
<td align="left">2</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-string-center.html">center(width, fillchar)</a>返回一个指定的宽度 width 居中的字符串，fillchar 为填充的字符，默认为空格。</td>
</tr>
<tr>
<td align="left">3</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-string-count.html">count(str, beg&#x3D; 0,end&#x3D;len(string))</a> 返回 str 在 string 里面出现的次数，如果 beg 或者 end 指定则返回指定范围内 str 出现的次数</td>
</tr>
<tr>
<td align="left">4</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-string-decode.html">bytes.decode(encoding&#x3D;”utf-8”, errors&#x3D;”strict”)</a> Python3 中没有 decode 方法，但我们可以使用 bytes 对象的 decode() 方法来解码给定的 bytes 对象，这个 bytes 对象可以由 str.encode() 来编码返回。</td>
</tr>
<tr>
<td align="left">5</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-string-encode.html">encode(encoding&#x3D;’UTF-8’,errors&#x3D;’strict’)</a> 以 encoding 指定的编码格式编码字符串，如果出错默认报一个ValueError 的异常，除非 errors 指定的是’ignore’或者’replace’</td>
</tr>
<tr>
<td align="left">6</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-string-endswith.html">endswith(suffix, beg&#x3D;0, end&#x3D;len(string))</a> 检查字符串是否以 suffix 结束，如果 beg 或者 end 指定则检查指定的范围内是否以 suffix 结束，如果是，返回 True,否则返回 False。</td>
</tr>
<tr>
<td align="left">7</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-string-expandtabs.html">expandtabs(tabsize&#x3D;8)</a> 把字符串 string 中的 tab 符号转为空格，tab 符号默认的空格数是 8 。</td>
</tr>
<tr>
<td align="left">8</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-string-find.html">find(str, beg&#x3D;0, end&#x3D;len(string))</a> 检测 str 是否包含在字符串中，如果指定范围 beg 和 end ，则检查是否包含在指定范围内，如果包含返回开始的索引值，否则返回-1</td>
</tr>
<tr>
<td align="left">9</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-string-index.html">index(str, beg&#x3D;0, end&#x3D;len(string))</a> 跟find()方法一样，只不过如果str不在字符串中会报一个异常。</td>
</tr>
<tr>
<td align="left">10</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-string-isalnum.html">isalnum()</a> 如果字符串至少有一个字符并且所有字符都是字母或数字则返 回 True，否则返回 False</td>
</tr>
<tr>
<td align="left">11</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-string-isalpha.html">isalpha()</a> 如果字符串至少有一个字符并且所有字符都是字母或中文字则返回 True, 否则返回 False</td>
</tr>
<tr>
<td align="left">12</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-string-isdigit.html">isdigit()</a> 如果字符串只包含数字则返回 True 否则返回 False..</td>
</tr>
<tr>
<td align="left">13</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-string-islower.html">islower()</a> 如果字符串中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是小写，则返回 True，否则返回 False</td>
</tr>
<tr>
<td align="left">14</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-string-isnumeric.html">isnumeric()</a> 如果字符串中只包含数字字符，则返回 True，否则返回 False</td>
</tr>
<tr>
<td align="left">15</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-string-isspace.html">isspace()</a> 如果字符串中只包含空白，则返回 True，否则返回 False.</td>
</tr>
<tr>
<td align="left">16</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-string-istitle.html">istitle()</a> 如果字符串是标题化的(见 title())则返回 True，否则返回 False</td>
</tr>
<tr>
<td align="left">17</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-string-isupper.html">isupper()</a> 如果字符串中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是大写，则返回 True，否则返回 False</td>
</tr>
<tr>
<td align="left">18</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-string-join.html">join(seq)</a> 以指定字符串作为分隔符，将 seq 中所有的元素(的字符串表示)合并为一个新的字符串</td>
</tr>
<tr>
<td align="left">19</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-string-len.html">len(string)</a> 返回字符串长度</td>
</tr>
<tr>
<td align="left">20</td>
<td align="left">[ljust(width<a href="https://www.runoob.com/python3/python3-string-ljust.html">, fillchar])</a> 返回一个原字符串左对齐,并使用 fillchar 填充至长度 width 的新字符串，fillchar 默认为空格。</td>
</tr>
<tr>
<td align="left">21</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-string-lower.html">lower()</a> 转换字符串中所有大写字符为小写.</td>
</tr>
<tr>
<td align="left">22</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-string-lstrip.html">lstrip()</a> 截掉字符串左边的空格或指定字符。</td>
</tr>
<tr>
<td align="left">23</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-string-maketrans.html">maketrans()</a> 创建字符映射的转换表，对于接受两个参数的最简单的调用方式，第一个参数是字符串，表示需要转换的字符，第二个参数也是字符串表示转换的目标。</td>
</tr>
<tr>
<td align="left">24</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-string-max.html">max(str)</a> 返回字符串 str 中最大的字母。</td>
</tr>
<tr>
<td align="left">25</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-string-min.html">min(str)</a> 返回字符串 str 中最小的字母。</td>
</tr>
<tr>
<td align="left">26</td>
<td align="left">[replace(old, new <a href="https://www.runoob.com/python3/python3-string-replace.html">, max])</a> 把 将字符串中的 old 替换成 new,如果 max 指定，则替换不超过 max 次。</td>
</tr>
<tr>
<td align="left">27</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-string-rfind.html">rfind(str, beg&#x3D;0,end&#x3D;len(string))</a> 类似于 find()函数，不过是从右边开始查找.</td>
</tr>
<tr>
<td align="left">28</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-string-rindex.html">rindex( str, beg&#x3D;0, end&#x3D;len(string))</a> 类似于 index()，不过是从右边开始.</td>
</tr>
<tr>
<td align="left">29</td>
<td align="left">[rjust(width,<a href="https://www.runoob.com/python3/python3-string-rjust.html">, fillchar])</a> 返回一个原字符串右对齐,并使用fillchar(默认空格）填充至长度 width 的新字符串</td>
</tr>
<tr>
<td align="left">30</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-string-rstrip.html">rstrip()</a> 删除字符串末尾的空格或指定字符。</td>
</tr>
<tr>
<td align="left">31</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-string-split.html">split(str&#x3D;””, num&#x3D;string.count(str))</a> 以 str 为分隔符截取字符串，如果 num 有指定值，则仅截取 num+1 个子字符串</td>
</tr>
<tr>
<td align="left">32</td>
<td align="left">[splitlines(<a href="https://www.runoob.com/python3/python3-string-splitlines.html">keepends])</a> 按照行(‘\r’, ‘\r\n’, \n’)分隔，返回一个包含各行作为元素的列表，如果参数 keepends 为 False，不包含换行符，如果为 True，则保留换行符。</td>
</tr>
<tr>
<td align="left">33</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-string-startswith.html">startswith(substr, beg&#x3D;0,end&#x3D;len(string))</a> 检查字符串是否是以指定子字符串 substr 开头，是则返回 True，否则返回 False。如果beg 和 end 指定值，则在指定范围内检查。</td>
</tr>
<tr>
<td align="left">34</td>
<td align="left">[strip(<a href="https://www.runoob.com/python3/python3-string-strip.html">chars])</a> 在字符串上执行 lstrip()和 rstrip()</td>
</tr>
<tr>
<td align="left">35</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-string-swapcase.html">swapcase()</a> 将字符串中大写转换为小写，小写转换为大写</td>
</tr>
<tr>
<td align="left">36</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-string-title.html">title()</a> 返回”标题化”的字符串,就是说所有单词都是以大写开始，其余字母均为小写(见 istitle())</td>
</tr>
<tr>
<td align="left">37</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-string-translate.html">translate(table, deletechars&#x3D;””)</a> 根据 table 给出的表(包含 256 个字符)转换 string 的字符, 要过滤掉的字符放到 deletechars 参数中</td>
</tr>
<tr>
<td align="left">38</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-string-upper.html">upper()</a> 转换字符串中的小写字母为大写</td>
</tr>
<tr>
<td align="left">39</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-string-zfill.html">zfill (width)</a> 返回长度为 width 的字符串，原字符串右对齐，前面填充0</td>
</tr>
<tr>
<td align="left">40</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-string-isdecimal.html">isdecimal()</a> 检查字符串是否只包含十进制字符，如果是返回 true，否则返回 false。</td>
</tr>
</tbody></table>
<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>序列中的每个值都有对应的位置值，称之为索引，第一个索引是 0，第二个索引是 1，依此类推。</p>
<p>Python 有 6 个序列的内置类型，但最常见的是列表和元组。</p>
<p>列表都可以进行的操作包括索引，切片，加，乘，检查成员。</p>
<p>此外，Python 已经内置确定序列的长度以及确定最大和最小的元素的方法。</p>
<p>列表是最常用的 Python 数据类型，它可以作为一个方括号内的逗号分隔值出现。</p>
<p>列表的数据项不需要具有相同的类型</p>
<p>创建一个列表，只要把逗号分隔的不同的数据项使用方括号括起来即可。如下所示：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list1 = [<span class="string">&#x27;Google&#x27;</span>, <span class="string">&#x27;Runoob&#x27;</span>, <span class="number">1997</span>, <span class="number">2000</span>]</span><br><span class="line">list2 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> ]</span><br><span class="line">list3 = [<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;d&quot;</span>]</span><br><span class="line">list4 = [<span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;green&#x27;</span>, <span class="string">&#x27;blue&#x27;</span>, <span class="string">&#x27;yellow&#x27;</span>, <span class="string">&#x27;white&#x27;</span>, <span class="string">&#x27;black&#x27;</span>]</span><br></pre></td></tr></table></figure>

<h3 id="访问列表中的值"><a href="#访问列表中的值" class="headerlink" title="访问列表中的值"></a>访问列表中的值</h3><p>与字符串的索引一样，列表索引从 <strong>0</strong> 开始，第二个索引是 <strong>1</strong>，依此类推。</p>
<p>通过索引列表可以进行截取、组合等操作。</p>
<p><img src="https://p.ipic.vip/pwuo1g.png" alt="img"></p>
<p>索引也可以从尾部开始，最后一个元素的索引为 <strong>-1</strong>，往前一位为 <strong>-2</strong>，以此类推。</p>
<p><img src="https://p.ipic.vip/63i51g.png" alt="img"></p>
<p>使用下标索引来访问列表中的值，同样你也可以使用方括号 <strong>[]</strong> 的形式截取字符，如下所示：</p>
<p><img src="https://p.ipic.vip/7sm97i.png" alt="img"></p>
<h3 id="更新列表"><a href="#更新列表" class="headerlink" title="更新列表"></a>更新列表</h3><p>你可以对列表的数据项进行修改或更新，你也可以使用 append() 方法来添加列表项，如下所示：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">list</span> = [<span class="string">&#x27;Google&#x27;</span>, <span class="string">&#x27;Runoob&#x27;</span>, <span class="number">1997</span>, <span class="number">2000</span>]</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;第三个元素为 : &quot;</span>, <span class="built_in">list</span>[<span class="number">2</span>])</span><br><span class="line"><span class="built_in">list</span>[<span class="number">2</span>] = <span class="number">2001</span></span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;更新后的第三个元素为 : &quot;</span>, <span class="built_in">list</span>[<span class="number">2</span>])</span><br><span class="line"> </span><br><span class="line">list1 = [<span class="string">&#x27;Google&#x27;</span>, <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Taobao&#x27;</span>]</span><br><span class="line">list1.append(<span class="string">&#x27;Baidu&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;更新后的列表 : &quot;</span>, list1)</span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong>我们会在接下来的章节讨论 <a href="https://www.runoob.com/python3/python3-att-list-append.html">append()</a> 方法的使用。</p>
<p>以上实例输出结果：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">第三个元素为 :  <span class="number">1997</span></span><br><span class="line">更新后的第三个元素为 :  <span class="number">2001</span></span><br><span class="line">更新后的列表 :  [<span class="string">&#x27;Google&#x27;</span>, <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Taobao&#x27;</span>, <span class="string">&#x27;Baidu&#x27;</span>]</span><br></pre></td></tr></table></figure>

<h3 id="删除列表元素"><a href="#删除列表元素" class="headerlink" title="删除列表元素"></a>删除列表元素</h3><p>可以使用 del 语句来删除列表的的元素，如下实例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">list</span> = [<span class="string">&#x27;Google&#x27;</span>, <span class="string">&#x27;Runoob&#x27;</span>, <span class="number">1997</span>, <span class="number">2000</span>]</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;原始列表 : &quot;</span>, <span class="built_in">list</span>)</span><br><span class="line"><span class="keyword">del</span> <span class="built_in">list</span>[<span class="number">2</span>]</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;删除第三个元素 : &quot;</span>, <span class="built_in">list</span>)</span><br></pre></td></tr></table></figure>

<p>以上实例输出结果：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">原始列表 :  [&#x27;Google&#x27;, &#x27;Runoob&#x27;, 1997, 2000]</span><br><span class="line">删除第三个元素 :  [&#x27;Google&#x27;, &#x27;Runoob&#x27;, 2000]</span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong>我们会在接下来的章节讨论 remove() 方法的使用</p>
<h3 id="Python列表脚本操作符"><a href="#Python列表脚本操作符" class="headerlink" title="Python列表脚本操作符"></a>Python列表脚本操作符</h3><p>列表对 + 和 * 的操作符与字符串相似。+ 号用于组合列表，* 号用于重复列表。</p>
<p>如下所示：</p>
<table>
<thead>
<tr>
<th align="left">Python 表达式</th>
<th align="left">结果</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">len([1, 2, 3])</td>
<td align="left">3</td>
<td align="left">长度</td>
</tr>
<tr>
<td align="left">[1, 2, 3] + [4, 5, 6]</td>
<td align="left">[1, 2, 3, 4, 5, 6]</td>
<td align="left">组合</td>
</tr>
<tr>
<td align="left">[‘Hi!’] * 4</td>
<td align="left">[‘Hi!’, ‘Hi!’, ‘Hi!’, ‘Hi!’]</td>
<td align="left">重复</td>
</tr>
<tr>
<td align="left">3 in [1, 2, 3]</td>
<td align="left">True</td>
<td align="left">元素是否存在于列表中</td>
</tr>
<tr>
<td align="left">for x in [1, 2, 3]: print(x, end&#x3D;” “)</td>
<td align="left">1 2 3</td>
<td align="left">迭代</td>
</tr>
</tbody></table>
<h3 id="Python-列表截取与拼接"><a href="#Python-列表截取与拼接" class="headerlink" title="Python 列表截取与拼接"></a>Python 列表截取与拼接</h3><p>Python 的列表截取与字符串操作类似，如下所示：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">L=[<span class="string">&#x27;Google&#x27;</span>, <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Taobao&#x27;</span>]</span><br></pre></td></tr></table></figure>

<p>操作：</p>
<table>
<thead>
<tr>
<th align="left">Python 表达式</th>
<th align="left">结果</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">L[2]</td>
<td align="left">‘Taobao’</td>
<td align="left">读取第三个元素</td>
</tr>
<tr>
<td align="left">L[-2]</td>
<td align="left">‘Runoob’</td>
<td align="left">从右侧开始读取倒数第二个元素: count from the right</td>
</tr>
<tr>
<td align="left">L[1:]</td>
<td align="left">[‘Runoob’, ‘Taobao’]</td>
<td align="left">输出从第二个元素开始后的所有元素</td>
</tr>
</tbody></table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;L=[<span class="string">&#x27;Google&#x27;</span>, <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Taobao&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L[<span class="number">2</span>]</span><br><span class="line"><span class="string">&#x27;Taobao&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L[-<span class="number">2</span>]</span><br><span class="line"><span class="string">&#x27;Runoob&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L[<span class="number">1</span>:]</span><br><span class="line">[<span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Taobao&#x27;</span>]</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>

<p>列表还支持拼接操作：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;squares = [<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>squares += [<span class="number">36</span>, <span class="number">49</span>, <span class="number">64</span>, <span class="number">81</span>, <span class="number">100</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>squares</span><br><span class="line">[<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>, <span class="number">36</span>, <span class="number">49</span>, <span class="number">64</span>, <span class="number">81</span>, <span class="number">100</span>]</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>

<h3 id="嵌套列表"><a href="#嵌套列表" class="headerlink" title="嵌套列表"></a>嵌套列表</h3><p>使用嵌套列表即在列表里创建其它列表，例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;a = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>n = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = [a, n]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x</span><br><span class="line">[[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>], [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x[<span class="number">0</span>]</span><br><span class="line">[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x[<span class="number">0</span>][<span class="number">1</span>]</span><br><span class="line"><span class="string">&#x27;b&#x27;</span></span><br></pre></td></tr></table></figure>

<h3 id="列表比较"><a href="#列表比较" class="headerlink" title="列表比较"></a>列表比较</h3><p>列表比较需要引入 <strong>operator</strong> 模块的 <strong>eq</strong> 方法（详见：<a href="https://www.runoob.com/python3/python-operator.html">Python operator 模块</a>）：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 导入 operator 模块</span></span><br><span class="line"><span class="keyword">import</span> operator</span><br><span class="line"></span><br><span class="line">a = [<span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line">b = [<span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">c = [<span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;operator.eq(a,b): &quot;</span>, operator.eq(a,b))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;operator.eq(c,b): &quot;</span>, operator.eq(c,b))</span><br></pre></td></tr></table></figure>

<p>以上代码输出结果为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">operator.eq(a,b):  <span class="literal">False</span></span><br><span class="line">operator.eq(c,b):  <span class="literal">True</span></span><br></pre></td></tr></table></figure>

<h3 id="Python列表函数-amp-方法"><a href="#Python列表函数-amp-方法" class="headerlink" title="Python列表函数&amp;方法"></a>Python列表函数&amp;方法</h3><h4 id="Python包含以下函数"><a href="#Python包含以下函数" class="headerlink" title="Python包含以下函数:"></a>Python包含以下函数:</h4><table>
<thead>
<tr>
<th align="left">序号</th>
<th align="left">函数</th>
</tr>
</thead>
<tbody><tr>
<td align="left">1</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-att-list-len.html">len(list)</a> 列表元素个数</td>
</tr>
<tr>
<td align="left">2</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-att-list-max.html">max(list)</a> 返回列表元素最大值</td>
</tr>
<tr>
<td align="left">3</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-att-list-min.html">min(list)</a> 返回列表元素最小值</td>
</tr>
<tr>
<td align="left">4</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-att-list-list.html">list(seq)</a> 将元组转换为列表</td>
</tr>
</tbody></table>
<h4 id="Python包含以下方法"><a href="#Python包含以下方法" class="headerlink" title="Python包含以下方法:"></a>Python包含以下方法:</h4><table>
<thead>
<tr>
<th align="left">序号</th>
<th align="left">方法</th>
</tr>
</thead>
<tbody><tr>
<td align="left">1</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-att-list-append.html">list.append(obj)</a> 在列表末尾添加新的对象</td>
</tr>
<tr>
<td align="left">2</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-att-list-count.html">list.count(obj)</a> 统计某个元素在列表中出现的次数</td>
</tr>
<tr>
<td align="left">3</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-att-list-extend.html">list.extend(seq)</a> 在列表末尾一次性追加另一个序列中的多个值（用新列表扩展原来的列表）</td>
</tr>
<tr>
<td align="left">4</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-att-list-index.html">list.index(obj)</a> 从列表中找出某个值第一个匹配项的索引位置</td>
</tr>
<tr>
<td align="left">5</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-att-list-insert.html">list.insert(index, obj)</a> 将对象插入列表</td>
</tr>
<tr>
<td align="left">6</td>
<td align="left">[list.pop(<a href="https://www.runoob.com/python3/python3-att-list-pop.html">index&#x3D;-1])</a> 移除列表中的一个元素（默认最后一个元素），并且返回该元素的值</td>
</tr>
<tr>
<td align="left">7</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-att-list-remove.html">list.remove(obj)</a> 移除列表中某个值的第一个匹配项</td>
</tr>
<tr>
<td align="left">8</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-att-list-reverse.html">list.reverse()</a> 反向列表中元素</td>
</tr>
<tr>
<td align="left">9</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-att-list-sort.html">list.sort( key&#x3D;None, reverse&#x3D;False)</a> 对原列表进行排序</td>
</tr>
<tr>
<td align="left">10</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-att-list-clear.html">list.clear()</a> 清空列表</td>
</tr>
<tr>
<td align="left">11</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-att-list-copy.html">list.copy()</a> 复制列表</td>
</tr>
</tbody></table>
<h2 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h2><p>Python 的元组与列表类似，不同之处在于元组的元素不能修改。</p>
<p>元组使用小括号 **( )**，列表使用方括号 **[ ]**。</p>
<p>元组创建很简单，只需要在括号中添加元素，并使用逗号隔开即可。</p>
<p><img src="https://p.ipic.vip/yrl56t.png" alt="img"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>tup1 = (<span class="string">&#x27;Google&#x27;</span>, <span class="string">&#x27;Runoob&#x27;</span>, <span class="number">1997</span>, <span class="number">2000</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tup2 = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> )</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tup3 = <span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;d&quot;</span>   <span class="comment">#  不需要括号也可以</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">type</span>(tup3)</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;tuple&#x27;</span>&gt;</span><br></pre></td></tr></table></figure>

<p>创建空元组</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">tup1 = ()</span><br></pre></td></tr></table></figure>

<p>元组中只包含一个元素时，需要在元素后面添加逗号 <strong>,</strong> ，否则括号会被当作运算符使用：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>tup1 = (<span class="number">50</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">type</span>(tup1)     <span class="comment"># 不加逗号，类型为整型</span></span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;int&#x27;</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tup1 = (<span class="number">50</span>,)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">type</span>(tup1)     <span class="comment"># 加上逗号，类型为元组</span></span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;tuple&#x27;</span>&gt;</span><br></pre></td></tr></table></figure>

<p>元组与字符串类似，下标索引从 0 开始，可以进行截取，组合等。</p>
<p><img src="https://p.ipic.vip/izq21x.png" alt="img"></p>
<h3 id="访问元组"><a href="#访问元组" class="headerlink" title="访问元组"></a>访问元组</h3><p>元组可以使用下标索引来访问元组中的值，如下实例:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"> </span><br><span class="line">tup1 = (<span class="string">&#x27;Google&#x27;</span>, <span class="string">&#x27;Runoob&#x27;</span>, <span class="number">1997</span>, <span class="number">2000</span>)</span><br><span class="line">tup2 = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span> )</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;tup1[0]: &quot;</span>, tup1[<span class="number">0</span>])</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;tup2[1:5]: &quot;</span>, tup2[<span class="number">1</span>:<span class="number">5</span>])</span><br></pre></td></tr></table></figure>

<p>以上实例输出结果：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">tup1[<span class="number">0</span>]:  Google</span><br><span class="line">tup2[<span class="number">1</span>:<span class="number">5</span>]:  (<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)</span><br></pre></td></tr></table></figure>

<h3 id="修改元组"><a href="#修改元组" class="headerlink" title="修改元组"></a>修改元组</h3><p>元组中的元素值是不允许修改的，但我们可以对元组进行连接组合，如下实例:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"> </span><br><span class="line">tup1 = (<span class="number">12</span>, <span class="number">34.56</span>)</span><br><span class="line">tup2 = (<span class="string">&#x27;abc&#x27;</span>, <span class="string">&#x27;xyz&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 以下修改元组元素操作是非法的。</span></span><br><span class="line"><span class="comment"># tup1[0] = 100</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 创建一个新的元组</span></span><br><span class="line">tup3 = tup1 + tup2</span><br><span class="line"><span class="built_in">print</span> (tup3)</span><br></pre></td></tr></table></figure>

<p>以上实例输出结果：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">(<span class="number">12</span>, <span class="number">34.56</span>, <span class="string">&#x27;abc&#x27;</span>, <span class="string">&#x27;xyz&#x27;</span>)</span><br></pre></td></tr></table></figure>

<h3 id="删除元组"><a href="#删除元组" class="headerlink" title="删除元组"></a>删除元组</h3><p>元组中的元素值是不允许删除的，但我们可以使用del语句来删除整个元组，如下实例:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"> </span><br><span class="line">tup = (<span class="string">&#x27;Google&#x27;</span>, <span class="string">&#x27;Runoob&#x27;</span>, <span class="number">1997</span>, <span class="number">2000</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (tup)</span><br><span class="line"><span class="keyword">del</span> tup</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;删除后的元组 tup : &quot;</span>)</span><br><span class="line"><span class="built_in">print</span> (tup)</span><br></pre></td></tr></table></figure>

<p>以上实例元组被删除后，输出变量会有异常信息，输出如下所示：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">删除后的元组 tup : </span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;test.py&quot;</span>, line <span class="number">8</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    <span class="built_in">print</span> (tup)</span><br><span class="line">NameError: name <span class="string">&#x27;tup&#x27;</span> <span class="keyword">is</span> <span class="keyword">not</span> defined</span><br></pre></td></tr></table></figure>

<h3 id="元组运算符"><a href="#元组运算符" class="headerlink" title="元组运算符"></a>元组运算符</h3><p>与字符串一样，元组之间可以使用 **+<strong>、</strong>+&#x3D;**和 ***** 号进行运算。这就意味着他们可以组合和复制，运算后会生成一个新的元组。</p>
<table>
<thead>
<tr>
<th align="left">Python 表达式</th>
<th align="left">结果</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>len((1, 2, 3))</code></td>
<td align="left">3</td>
<td align="left">计算元素个数</td>
</tr>
<tr>
<td align="left"><code>&gt;&gt;&gt; a = (1, 2, 3) &gt;&gt;&gt; b = (4, 5, 6) &gt;&gt;&gt; c = a+b &gt;&gt;&gt; c (1, 2, 3, 4, 5, 6)</code></td>
<td align="left">(1, 2, 3, 4, 5, 6)</td>
<td align="left">连接，c 就是一个新的元组，它包含了 a 和 b 中的所有元素。</td>
</tr>
<tr>
<td align="left"><code>&gt;&gt;&gt; a = (1, 2, 3) &gt;&gt;&gt; b = (4, 5, 6) &gt;&gt;&gt; a += b &gt;&gt;&gt; a (1, 2, 3, 4, 5, 6)</code></td>
<td align="left">(1, 2, 3, 4, 5, 6)</td>
<td align="left">连接，a 就变成了一个新的元组，它包含了 a 和 b 中的所有元素。</td>
</tr>
<tr>
<td align="left"><code>(&#39;Hi!&#39;,) * 4</code></td>
<td align="left">(‘Hi!’, ‘Hi!’, ‘Hi!’, ‘Hi!’)</td>
<td align="left">复制</td>
</tr>
<tr>
<td align="left"><code>3 in (1, 2, 3)</code></td>
<td align="left">True</td>
<td align="left">元素是否存在</td>
</tr>
<tr>
<td align="left"><code>for x in (1, 2, 3):     print (x, end=&quot; &quot;)</code></td>
<td align="left">1 2 3</td>
<td align="left">迭代</td>
</tr>
</tbody></table>
<h3 id="元组索引，截取"><a href="#元组索引，截取" class="headerlink" title="元组索引，截取"></a>元组索引，截取</h3><p>因为元组也是一个序列，所以我们可以访问元组中的指定位置的元素，也可以截取索引中的一段元素，如下所示：</p>
<p>元组：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">tup = (<span class="string">&#x27;Google&#x27;</span>, <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Taobao&#x27;</span>, <span class="string">&#x27;Wiki&#x27;</span>, <span class="string">&#x27;Weibo&#x27;</span>,<span class="string">&#x27;Weixin&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="https://p.ipic.vip/xxc59g.png" alt="img"></p>
<table>
<thead>
<tr>
<th align="left">Python 表达式</th>
<th align="left">结果</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">tup[1]</td>
<td align="left">‘Runoob’</td>
<td align="left">读取第二个元素</td>
</tr>
<tr>
<td align="left">tup[-2]</td>
<td align="left">‘Weibo’</td>
<td align="left">反向读取，读取倒数第二个元素</td>
</tr>
<tr>
<td align="left">tup[1:]</td>
<td align="left">(‘Runoob’, ‘Taobao’, ‘Wiki’, ‘Weibo’, ‘Weixin’)</td>
<td align="left">截取元素，从第二个开始后的所有元素。</td>
</tr>
<tr>
<td align="left">tup[1:4]</td>
<td align="left">(‘Runoob’, ‘Taobao’, ‘Wiki’)</td>
<td align="left">截取元素，从第二个开始到第四个元素（索引为 3）。</td>
</tr>
</tbody></table>
<p>运行实例如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>tup = (<span class="string">&#x27;Google&#x27;</span>, <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Taobao&#x27;</span>, <span class="string">&#x27;Wiki&#x27;</span>, <span class="string">&#x27;Weibo&#x27;</span>,<span class="string">&#x27;Weixin&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tup[<span class="number">1</span>]</span><br><span class="line"><span class="string">&#x27;Runoob&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tup[-<span class="number">2</span>]</span><br><span class="line"><span class="string">&#x27;Weibo&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tup[<span class="number">1</span>:]</span><br><span class="line">(<span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Taobao&#x27;</span>, <span class="string">&#x27;Wiki&#x27;</span>, <span class="string">&#x27;Weibo&#x27;</span>, <span class="string">&#x27;Weixin&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tup[<span class="number">1</span>:<span class="number">4</span>]</span><br><span class="line">(<span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Taobao&#x27;</span>, <span class="string">&#x27;Wiki&#x27;</span>)</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>

<h3 id="元组内置函数"><a href="#元组内置函数" class="headerlink" title="元组内置函数"></a>元组内置函数</h3><p>Python元组包含了以下内置函数</p>
<table>
<thead>
<tr>
<th align="left">序号</th>
<th align="left">方法及描述</th>
<th align="left">实例</th>
</tr>
</thead>
<tbody><tr>
<td align="left">1</td>
<td align="left">len(tuple) 计算元组元素个数。</td>
<td align="left"><code>&gt;&gt;&gt; tuple1 = (&#39;Google&#39;, &#39;Runoob&#39;, &#39;Taobao&#39;) &gt;&gt;&gt; len(tuple1) 3 &gt;&gt;&gt; </code></td>
</tr>
<tr>
<td align="left">2</td>
<td align="left">max(tuple) 返回元组中元素最大值。</td>
<td align="left"><code>&gt;&gt;&gt; tuple2 = (&#39;5&#39;, &#39;4&#39;, &#39;8&#39;) &gt;&gt;&gt; max(tuple2) &#39;8&#39; &gt;&gt;&gt; </code></td>
</tr>
<tr>
<td align="left">3</td>
<td align="left">min(tuple) 返回元组中元素最小值。</td>
<td align="left"><code>&gt;&gt;&gt; tuple2 = (&#39;5&#39;, &#39;4&#39;, &#39;8&#39;) &gt;&gt;&gt; min(tuple2) &#39;4&#39; &gt;&gt;&gt; </code></td>
</tr>
<tr>
<td align="left">4</td>
<td align="left">tuple(iterable) 将可迭代系列转换为元组。</td>
<td align="left"><code>&gt;&gt;&gt; list1= [&#39;Google&#39;, &#39;Taobao&#39;, &#39;Runoob&#39;, &#39;Baidu&#39;] &gt;&gt;&gt; tuple1=tuple(list1) &gt;&gt;&gt; tuple1 (&#39;Google&#39;, &#39;Taobao&#39;, &#39;Runoob&#39;, &#39;Baidu&#39;)</code></td>
</tr>
</tbody></table>
<h3 id="关于元组是不可变的"><a href="#关于元组是不可变的" class="headerlink" title="关于元组是不可变的"></a>关于元组是不可变的</h3><p>所谓元组的不可变指的是元组所指向的内存中的内容不可变。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>tup = (<span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;u&#x27;</span>, <span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;b&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tup[<span class="number">0</span>] = <span class="string">&#x27;g&#x27;</span>     <span class="comment"># 不支持修改元素</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: <span class="string">&#x27;tuple&#x27;</span> <span class="built_in">object</span> does <span class="keyword">not</span> support item assignment</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">id</span>(tup)     <span class="comment"># 查看内存地址</span></span><br><span class="line"><span class="number">4440687904</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tup = (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">id</span>(tup)</span><br><span class="line"><span class="number">4441088800</span>    <span class="comment"># 内存地址不一样了</span></span><br></pre></td></tr></table></figure>

<p>从以上实例可以看出，重新赋值的元组 tup，绑定到新的对象了，不是修改了原来的对象。</p>
<h2 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h2><p>字典是另一种可变容器模型，且可存储任意类型对象。</p>
<p>字典的每个键值 <strong>key&#x3D;&gt;value</strong> 对用冒号 <strong>:</strong> 分割，每个对之间用逗号(<strong>,</strong>)分割，整个字典包括在花括号 <strong>{}</strong> 中 ,格式如下所示：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">d = &#123;key1 : value1, key2 : value2, key3 : value3 &#125;</span><br></pre></td></tr></table></figure>

<p><strong>注意：****dict</strong> 作为 Python 的关键字和内置函数，变量名不建议命名为 <strong>dict</strong>。</p>
<p><img src="https://p.ipic.vip/p6w36x.png" alt="img"></p>
<p>键必须是唯一的，但值则不必。</p>
<p>值可以取任何数据类型，但键必须是不可变的，如字符串，数字。</p>
<p>一个简单的字典实例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">tinydict = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;runoob&#x27;</span>, <span class="string">&#x27;likes&#x27;</span>: <span class="number">123</span>, <span class="string">&#x27;url&#x27;</span>: <span class="string">&#x27;www.runoob.com&#x27;</span>&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://p.ipic.vip/y5ytno.png" alt="img"></p>
<p>也可如此创建字典：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">tinydict1 = &#123; <span class="string">&#x27;abc&#x27;</span>: <span class="number">456</span> &#125;</span><br><span class="line">tinydict2 = &#123; <span class="string">&#x27;abc&#x27;</span>: <span class="number">123</span>, <span class="number">98.6</span>: <span class="number">37</span> &#125;</span><br></pre></td></tr></table></figure>

<h3 id="创建空字典"><a href="#创建空字典" class="headerlink" title="创建空字典"></a>创建空字典</h3><p>使用大括号 <strong>{ }</strong> 创建空字典：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用大括号 &#123;&#125; 来创建空字典</span></span><br><span class="line">emptyDict = &#123;&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 打印字典</span></span><br><span class="line"><span class="built_in">print</span>(emptyDict)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 查看字典的数量</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Length:&quot;</span>, <span class="built_in">len</span>(emptyDict))</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 查看类型</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(emptyDict))</span><br></pre></td></tr></table></figure>

<p>以上实例输出结果：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&#123;&#125;</span><br><span class="line">Length: <span class="number">0</span></span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;dict&#x27;</span>&gt;</span><br></pre></td></tr></table></figure>

<p>使用内建函数 <strong>dict()</strong> 创建字典：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">emptyDict = <span class="built_in">dict</span>()</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 打印字典</span></span><br><span class="line"><span class="built_in">print</span>(emptyDict)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 查看字典的数量</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Length:&quot;</span>,<span class="built_in">len</span>(emptyDict))</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 查看类型</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(emptyDict))</span><br></pre></td></tr></table></figure>

<p>以上实例输出结果：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&#123;&#125;</span><br><span class="line">Length: <span class="number">0</span></span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;dict&#x27;</span>&gt;</span><br></pre></td></tr></table></figure>

<h3 id="访问字典里的值"><a href="#访问字典里的值" class="headerlink" title="访问字典里的值"></a>访问字典里的值</h3><p>把相应的键放入到方括号中，如下实例:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"> </span><br><span class="line">tinydict = &#123;<span class="string">&#x27;Name&#x27;</span>: <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Age&#x27;</span>: <span class="number">7</span>, <span class="string">&#x27;Class&#x27;</span>: <span class="string">&#x27;First&#x27;</span>&#125;</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;tinydict[&#x27;Name&#x27;]: &quot;</span>, tinydict[<span class="string">&#x27;Name&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;tinydict[&#x27;Age&#x27;]: &quot;</span>, tinydict[<span class="string">&#x27;Age&#x27;</span>])</span><br></pre></td></tr></table></figure>

<p>以上实例输出结果：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">tinydict[<span class="string">&#x27;Name&#x27;</span>]:  Runoob</span><br><span class="line">tinydict[<span class="string">&#x27;Age&#x27;</span>]:  <span class="number">7</span></span><br></pre></td></tr></table></figure>

<p>如果用字典里没有的键访问数据，会输出错误如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"> </span><br><span class="line">tinydict = &#123;<span class="string">&#x27;Name&#x27;</span>: <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Age&#x27;</span>: <span class="number">7</span>, <span class="string">&#x27;Class&#x27;</span>: <span class="string">&#x27;First&#x27;</span>&#125;</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;tinydict[&#x27;Alice&#x27;]: &quot;</span>, tinydict[<span class="string">&#x27;Alice&#x27;</span>])</span><br></pre></td></tr></table></figure>

<p>以上实例输出结果：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;test.py&quot;</span>, line <span class="number">5</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    <span class="built_in">print</span> (<span class="string">&quot;tinydict[&#x27;Alice&#x27;]: &quot;</span>, tinydict[<span class="string">&#x27;Alice&#x27;</span>])</span><br><span class="line">KeyError: <span class="string">&#x27;Alice&#x27;</span></span><br></pre></td></tr></table></figure>

<h3 id="修改字典"><a href="#修改字典" class="headerlink" title="修改字典"></a>修改字典</h3><p>向字典添加新内容的方法是增加新的键&#x2F;值对，修改或删除已有键&#x2F;值对如下实例:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"> </span><br><span class="line">tinydict = &#123;<span class="string">&#x27;Name&#x27;</span>: <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Age&#x27;</span>: <span class="number">7</span>, <span class="string">&#x27;Class&#x27;</span>: <span class="string">&#x27;First&#x27;</span>&#125;</span><br><span class="line"> </span><br><span class="line">tinydict[<span class="string">&#x27;Age&#x27;</span>] = <span class="number">8</span>               <span class="comment"># 更新 Age</span></span><br><span class="line">tinydict[<span class="string">&#x27;School&#x27;</span>] = <span class="string">&quot;菜鸟教程&quot;</span>  <span class="comment"># 添加信息</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;tinydict[&#x27;Age&#x27;]: &quot;</span>, tinydict[<span class="string">&#x27;Age&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;tinydict[&#x27;School&#x27;]: &quot;</span>, tinydict[<span class="string">&#x27;School&#x27;</span>])</span><br></pre></td></tr></table></figure>

<p>以上实例输出结果：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">tinydict[<span class="string">&#x27;Age&#x27;</span>]:  <span class="number">8</span></span><br><span class="line">tinydict[<span class="string">&#x27;School&#x27;</span>]:  菜鸟教程</span><br></pre></td></tr></table></figure>

<h3 id="删除字典元素"><a href="#删除字典元素" class="headerlink" title="删除字典元素"></a>删除字典元素</h3><p>能删单一的元素也能清空字典，清空只需一项操作。</p>
<p>显式删除一个字典用del命令，如下实例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"> </span><br><span class="line">tinydict = &#123;<span class="string">&#x27;Name&#x27;</span>: <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Age&#x27;</span>: <span class="number">7</span>, <span class="string">&#x27;Class&#x27;</span>: <span class="string">&#x27;First&#x27;</span>&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">del</span> tinydict[<span class="string">&#x27;Name&#x27;</span>] <span class="comment"># 删除键 &#x27;Name&#x27;</span></span><br><span class="line">tinydict.clear()     <span class="comment"># 清空字典</span></span><br><span class="line"><span class="keyword">del</span> tinydict         <span class="comment"># 删除字典</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;tinydict[&#x27;Age&#x27;]: &quot;</span>, tinydict[<span class="string">&#x27;Age&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;tinydict[&#x27;School&#x27;]: &quot;</span>, tinydict[<span class="string">&#x27;School&#x27;</span>])</span><br></pre></td></tr></table></figure>

<p>但这会引发一个异常，因为用执行 del 操作后字典不再存在：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;/runoob-test/test.py&quot;</span>, line <span class="number">9</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    <span class="built_in">print</span> (<span class="string">&quot;tinydict[&#x27;Age&#x27;]: &quot;</span>, tinydict[<span class="string">&#x27;Age&#x27;</span>])</span><br><span class="line">NameError: name <span class="string">&#x27;tinydict&#x27;</span> <span class="keyword">is</span> <span class="keyword">not</span> defined</span><br></pre></td></tr></table></figure>

<p><strong>注：</strong>del() 方法后面也会讨论。</p>
<h3 id="字典键的特性"><a href="#字典键的特性" class="headerlink" title="字典键的特性"></a>字典键的特性</h3><p>字典值可以是任何的 python 对象，既可以是标准的对象，也可以是用户定义的，但键不行。</p>
<p>两个重要的点需要记住：</p>
<p>1）不允许同一个键出现两次。创建时如果同一个键被赋值两次，后一个值会被记住，如下实例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"> </span><br><span class="line">tinydict = &#123;<span class="string">&#x27;Name&#x27;</span>: <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Age&#x27;</span>: <span class="number">7</span>, <span class="string">&#x27;Name&#x27;</span>: <span class="string">&#x27;小菜鸟&#x27;</span>&#125;</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;tinydict[&#x27;Name&#x27;]: &quot;</span>, tinydict[<span class="string">&#x27;Name&#x27;</span>])</span><br></pre></td></tr></table></figure>

<p>以上实例输出结果：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">tinydict[<span class="string">&#x27;Name&#x27;</span>]:  小菜鸟</span><br></pre></td></tr></table></figure>

<p>2）键必须不可变，所以可以用数字，字符串或元组充当，而用列表就不行，如下实例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"> </span><br><span class="line">tinydict = &#123;[<span class="string">&#x27;Name&#x27;</span>]: <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Age&#x27;</span>: <span class="number">7</span>&#125;</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;tinydict[&#x27;Name&#x27;]: &quot;</span>, tinydict[<span class="string">&#x27;Name&#x27;</span>])</span><br></pre></td></tr></table></figure>

<p>以上实例输出结果：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;test.py&quot;</span>, line <span class="number">3</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    tinydict = &#123;[<span class="string">&#x27;Name&#x27;</span>]: <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Age&#x27;</span>: <span class="number">7</span>&#125;</span><br><span class="line">TypeError: unhashable <span class="built_in">type</span>: <span class="string">&#x27;list&#x27;</span></span><br></pre></td></tr></table></figure>

<h3 id="字典内置函数-amp-方法"><a href="#字典内置函数-amp-方法" class="headerlink" title="字典内置函数&amp;方法"></a>字典内置函数&amp;方法</h3><h4 id="Python字典包含了以下内置函数："><a href="#Python字典包含了以下内置函数：" class="headerlink" title="Python字典包含了以下内置函数："></a>Python字典包含了以下内置函数：</h4><table>
<thead>
<tr>
<th align="left">序号</th>
<th align="left">函数及描述</th>
<th align="left">实例</th>
</tr>
</thead>
<tbody><tr>
<td align="left">1</td>
<td align="left">len(dict) 计算字典元素个数，即键的总数。</td>
<td align="left"><code>&gt;&gt;&gt; tinydict = &#123;&#39;Name&#39;: &#39;Runoob&#39;, &#39;Age&#39;: 7, &#39;Class&#39;: &#39;First&#39;&#125; &gt;&gt;&gt; len(tinydict) 3</code></td>
</tr>
<tr>
<td align="left">2</td>
<td align="left">str(dict) 输出字典，可以打印的字符串表示。</td>
<td align="left"><code>&gt;&gt;&gt; tinydict = &#123;&#39;Name&#39;: &#39;Runoob&#39;, &#39;Age&#39;: 7, &#39;Class&#39;: &#39;First&#39;&#125; &gt;&gt;&gt; str(tinydict) &quot;&#123;&#39;Name&#39;: &#39;Runoob&#39;, &#39;Class&#39;: &#39;First&#39;, &#39;Age&#39;: 7&#125;&quot;</code></td>
</tr>
<tr>
<td align="left">3</td>
<td align="left">type(variable) 返回输入的变量类型，如果变量是字典就返回字典类型。</td>
<td align="left"><code>&gt;&gt;&gt; tinydict = &#123;&#39;Name&#39;: &#39;Runoob&#39;, &#39;Age&#39;: 7, &#39;Class&#39;: &#39;First&#39;&#125; &gt;&gt;&gt; type(tinydict) &lt;class &#39;dict&#39;&gt;</code></td>
</tr>
</tbody></table>
<h4 id="Python字典包含了以下内置方法："><a href="#Python字典包含了以下内置方法：" class="headerlink" title="Python字典包含了以下内置方法："></a>Python字典包含了以下内置方法：</h4><table>
<thead>
<tr>
<th align="left">序号</th>
<th align="left">函数及描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">1</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-att-dictionary-clear.html">dict.clear()</a> 删除字典内所有元素</td>
</tr>
<tr>
<td align="left">2</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-att-dictionary-copy.html">dict.copy()</a> 返回一个字典的浅复制</td>
</tr>
<tr>
<td align="left">3</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-att-dictionary-fromkeys.html">dict.fromkeys()</a> 创建一个新字典，以序列seq中元素做字典的键，val为字典所有键对应的初始值</td>
</tr>
<tr>
<td align="left">4</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-att-dictionary-get.html">dict.get(key, default&#x3D;None)</a> 返回指定键的值，如果键不在字典中返回 default 设置的默认值</td>
</tr>
<tr>
<td align="left">5</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-att-dictionary-in.html">key in dict</a> 如果键在字典dict里返回true，否则返回false</td>
</tr>
<tr>
<td align="left">6</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-att-dictionary-items.html">dict.items()</a> 以列表返回一个视图对象</td>
</tr>
<tr>
<td align="left">7</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-att-dictionary-keys.html">dict.keys()</a> 返回一个视图对象</td>
</tr>
<tr>
<td align="left">8</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-att-dictionary-setdefault.html">dict.setdefault(key, default&#x3D;None)</a> 和get()类似, 但如果键不存在于字典中，将会添加键并将值设为default</td>
</tr>
<tr>
<td align="left">9</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-att-dictionary-update.html">dict.update(dict2)</a> 把字典dict2的键&#x2F;值对更新到dict里</td>
</tr>
<tr>
<td align="left">10</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-att-dictionary-values.html">dict.values()</a> 返回一个视图对象</td>
</tr>
<tr>
<td align="left">11</td>
<td align="left">[pop(key<a href="https://www.runoob.com/python3/python3-att-dictionary-pop.html">,default])</a> 删除字典 key（键）所对应的值，返回被删除的值。</td>
</tr>
<tr>
<td align="left">12</td>
<td align="left"><a href="https://www.runoob.com/python3/python3-att-dictionary-popitem.html">popitem()</a> 返回并删除字典中的最后一对键和值。</td>
</tr>
</tbody></table>
<h2 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h2><p>集合（set）是一个无序的不重复元素序列。</p>
<p>集合中的元素不会重复，并且可以进行交集、并集、差集等常见的集合操作。</p>
<p>可以使用大括号 <strong>{ }</strong> 创建集合，元素之间用逗号 <strong>,</strong> 分隔， 或者也可以使用 <strong>set()</strong> 函数创建集合。</p>
<p><strong>创建格式：</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">parame = &#123;value01,value02,...&#125;</span><br><span class="line">或者</span><br><span class="line"><span class="built_in">set</span>(value)</span><br></pre></td></tr></table></figure>

<p>以下是一个简单实例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">set1 = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;            <span class="comment"># 直接使用大括号创建集合</span></span><br><span class="line">set2 = <span class="built_in">set</span>([<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>])      <span class="comment"># 使用 set() 函数从列表创建集合</span></span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong>创建一个空集合必须用 <strong>set()</strong> 而不是 **{ }**，因为 <strong>{ }</strong> 是用来创建一个空字典。</p>
<p>更多实例演示：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>basket = &#123;<span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;orange&#x27;</span>, <span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;pear&#x27;</span>, <span class="string">&#x27;orange&#x27;</span>, <span class="string">&#x27;banana&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(basket)                      <span class="comment"># 这里演示的是去重功能</span></span><br><span class="line">&#123;<span class="string">&#x27;orange&#x27;</span>, <span class="string">&#x27;banana&#x27;</span>, <span class="string">&#x27;pear&#x27;</span>, <span class="string">&#x27;apple&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;orange&#x27;</span> <span class="keyword">in</span> basket                 <span class="comment"># 快速判断元素是否在集合内</span></span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;crabgrass&#x27;</span> <span class="keyword">in</span> basket</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment"># 下面展示两个集合间的运算.</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = <span class="built_in">set</span>(<span class="string">&#x27;abracadabra&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = <span class="built_in">set</span>(<span class="string">&#x27;alacazam&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a                                  </span><br><span class="line">&#123;<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a - b                              <span class="comment"># 集合a中包含而集合b中不包含的元素</span></span><br><span class="line">&#123;<span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;b&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a | b                              <span class="comment"># 集合a或b中包含的所有元素</span></span><br><span class="line">&#123;<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;z&#x27;</span>, <span class="string">&#x27;l&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a &amp; b                              <span class="comment"># 集合a和b中都包含了的元素</span></span><br><span class="line">&#123;<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;c&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a ^ b                              <span class="comment"># 不同时包含于a和b的元素</span></span><br><span class="line">&#123;<span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;z&#x27;</span>, <span class="string">&#x27;l&#x27;</span>&#125;</span><br></pre></td></tr></table></figure>

<p>类似列表推导式，同样集合支持集合推导式(Set comprehension):</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = &#123;x <span class="keyword">for</span> x <span class="keyword">in</span> <span class="string">&#x27;abracadabra&#x27;</span> <span class="keyword">if</span> x <span class="keyword">not</span> <span class="keyword">in</span> <span class="string">&#x27;abc&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">&#123;<span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;d&#x27;</span>&#125;</span><br></pre></td></tr></table></figure>

<h3 id="集合的基本操作"><a href="#集合的基本操作" class="headerlink" title="集合的基本操作"></a>集合的基本操作</h3><h4 id="添加元素"><a href="#添加元素" class="headerlink" title="添加元素"></a>添加元素</h4><p><strong>语法格式如下：</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s.add( x )</span><br></pre></td></tr></table></figure>

<p>将元素 x 添加到集合 s 中，如果元素已存在，则不进行任何操作。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>thisset = <span class="built_in">set</span>((<span class="string">&quot;Google&quot;</span>, <span class="string">&quot;Runoob&quot;</span>, <span class="string">&quot;Taobao&quot;</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>thisset.add(<span class="string">&quot;Facebook&quot;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(thisset)</span><br><span class="line">&#123;<span class="string">&#x27;Taobao&#x27;</span>, <span class="string">&#x27;Facebook&#x27;</span>, <span class="string">&#x27;Google&#x27;</span>, <span class="string">&#x27;Runoob&#x27;</span>&#125;</span><br></pre></td></tr></table></figure>

<p>还有一个方法，也可以添加元素，且参数可以是列表，元组，字典等，语法格式如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">s.update( x )</span><br></pre></td></tr></table></figure>

<p>x 可以有多个，用逗号分开。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>thisset = <span class="built_in">set</span>((<span class="string">&quot;Google&quot;</span>, <span class="string">&quot;Runoob&quot;</span>, <span class="string">&quot;Taobao&quot;</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>thisset.update(&#123;<span class="number">1</span>,<span class="number">3</span>&#125;)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(thisset)</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">3</span>, <span class="string">&#x27;Google&#x27;</span>, <span class="string">&#x27;Taobao&#x27;</span>, <span class="string">&#x27;Runoob&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>thisset.update([<span class="number">1</span>,<span class="number">4</span>],[<span class="number">5</span>,<span class="number">6</span>])  </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(thisset)</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="string">&#x27;Google&#x27;</span>, <span class="string">&#x27;Taobao&#x27;</span>, <span class="string">&#x27;Runoob&#x27;</span>&#125;</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>

<h4 id="移除元素"><a href="#移除元素" class="headerlink" title="移除元素"></a>移除元素</h4><p><strong>语法格式如下：</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s.remove( x )</span><br></pre></td></tr></table></figure>

<p>将元素 x 从集合 s 中移除，如果元素不存在，则会发生错误。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>thisset = <span class="built_in">set</span>((<span class="string">&quot;Google&quot;</span>, <span class="string">&quot;Runoob&quot;</span>, <span class="string">&quot;Taobao&quot;</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>thisset.remove(<span class="string">&quot;Taobao&quot;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(thisset)</span><br><span class="line">&#123;<span class="string">&#x27;Google&#x27;</span>, <span class="string">&#x27;Runoob&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>thisset.remove(<span class="string">&quot;Facebook&quot;</span>)   <span class="comment"># 不存在会发生错误</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">KeyError: <span class="string">&#x27;Facebook&#x27;</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>

<p>此外还有一个方法也是移除集合中的元素，且如果元素不存在，不会发生错误。格式如下所示：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">s.discard( x )</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>thisset = <span class="built_in">set</span>((<span class="string">&quot;Google&quot;</span>, <span class="string">&quot;Runoob&quot;</span>, <span class="string">&quot;Taobao&quot;</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>thisset.discard(<span class="string">&quot;Facebook&quot;</span>)  <span class="comment"># 不存在不会发生错误</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(thisset)</span><br><span class="line">&#123;<span class="string">&#x27;Taobao&#x27;</span>, <span class="string">&#x27;Google&#x27;</span>, <span class="string">&#x27;Runoob&#x27;</span>&#125;</span><br></pre></td></tr></table></figure>

<p>我们也可以设置随机删除集合中的一个元素，语法格式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s.pop() </span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">thisset = <span class="built_in">set</span>((<span class="string">&quot;Google&quot;</span>, <span class="string">&quot;Runoob&quot;</span>, <span class="string">&quot;Taobao&quot;</span>, <span class="string">&quot;Facebook&quot;</span>))</span><br><span class="line">x = thisset.pop()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(x)</span><br></pre></td></tr></table></figure>

<p>输出结果：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Runoob</span><br></pre></td></tr></table></figure>

<p>多次执行测试结果都不一样。</p>
<p>set 集合的 pop 方法会对集合进行无序的排列，然后将这个无序排列集合的左面第一个元素进行删除。</p>
<h4 id="计算元素的个数"><a href="#计算元素的个数" class="headerlink" title="计算元素的个数"></a>计算元素的个数</h4><p><strong>语法格式如下：</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">len</span>(s)</span><br></pre></td></tr></table></figure>

<p>计算集合 s 元素个数。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>thisset = <span class="built_in">set</span>((<span class="string">&quot;Google&quot;</span>, <span class="string">&quot;Runoob&quot;</span>, <span class="string">&quot;Taobao&quot;</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">len</span>(thisset)</span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure>

<h4 id="清空集合"><a href="#清空集合" class="headerlink" title="清空集合"></a>清空集合</h4><p><strong>语法格式如下：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">s.clear()</span><br></pre></td></tr></table></figure>

<p>清空集合 s。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>thisset = <span class="built_in">set</span>((<span class="string">&quot;Google&quot;</span>, <span class="string">&quot;Runoob&quot;</span>, <span class="string">&quot;Taobao&quot;</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>thisset.clear()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(thisset)</span><br><span class="line"><span class="built_in">set</span>()</span><br></pre></td></tr></table></figure>

<h3 id="判断元素是否在集合中存在"><a href="#判断元素是否在集合中存在" class="headerlink" title="判断元素是否在集合中存在"></a>判断元素是否在集合中存在</h3><p><strong>语法格式如下：</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x <span class="keyword">in</span> s</span><br></pre></td></tr></table></figure>

<p>判断元素 x 是否在集合 s 中，存在返回 True，不存在返回 False。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>thisset = <span class="built_in">set</span>((<span class="string">&quot;Google&quot;</span>, <span class="string">&quot;Runoob&quot;</span>, <span class="string">&quot;Taobao&quot;</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&quot;Runoob&quot;</span> <span class="keyword">in</span> thisset</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&quot;Facebook&quot;</span> <span class="keyword">in</span> thisset</span><br><span class="line"><span class="literal">False</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>

<h3 id="集合内置方法完整列表"><a href="#集合内置方法完整列表" class="headerlink" title="集合内置方法完整列表"></a>集合内置方法完整列表</h3><table>
<thead>
<tr>
<th align="left">方法</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><a href="https://www.runoob.com/python3/ref-set-add.html">add()</a></td>
<td align="left">为集合添加元素</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/ref-set-clear.html">clear()</a></td>
<td align="left">移除集合中的所有元素</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/ref-set-copy.html">copy()</a></td>
<td align="left">拷贝一个集合</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/ref-set-difference.html">difference()</a></td>
<td align="left">返回多个集合的差集</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/ref-set-difference_update.html">difference_update()</a></td>
<td align="left">移除集合中的元素，该元素在指定的集合也存在。</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/ref-set-discard.html">discard()</a></td>
<td align="left">删除集合中指定的元素</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/ref-set-intersection.html">intersection()</a></td>
<td align="left">返回集合的交集</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/ref-set-intersection_update.html">intersection_update()</a></td>
<td align="left">返回集合的交集。</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/ref-set-isdisjoint.html">isdisjoint()</a></td>
<td align="left">判断两个集合是否包含相同的元素，如果没有返回 True，否则返回 False。</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/ref-set-issubset.html">issubset()</a></td>
<td align="left">判断指定集合是否为该方法参数集合的子集。</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/ref-set-issuperset.html">issuperset()</a></td>
<td align="left">判断该方法的参数集合是否为指定集合的子集</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/ref-set-pop.html">pop()</a></td>
<td align="left">随机移除元素</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/ref-set-remove.html">remove()</a></td>
<td align="left">移除指定元素</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/ref-set-symmetric_difference.html">symmetric_difference()</a></td>
<td align="left">返回两个集合中不重复的元素集合。</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/ref-set-symmetric_difference_update.html">symmetric_difference_update()</a></td>
<td align="left">移除当前集合中在另外一个指定集合相同的元素，并将另外一个指定集合中不同的元素插入到当前集合中。</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/ref-set-union.html">union()</a></td>
<td align="left">返回两个集合的并集</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/ref-set-update.html">update()</a></td>
<td align="left">给集合添加元素</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/python3/python3-string-len.html">len()</a></td>
<td align="left"></td>
</tr>
</tbody></table>
<h2 id="条件控制"><a href="#条件控制" class="headerlink" title="条件控制"></a>条件控制</h2><p>Python 条件语句是通过一条或多条语句的执行结果（True 或者 False）来决定执行的代码块。</p>
<p>可以通过下图来简单了解条件语句的执行过程:</p>
<p><img src="https://p.ipic.vip/nqmeui.jpg" alt="img"></p>
<p>代码执行过程：</p>
<p><img src="https://static.runoob.com/images/mix/python-if.webp" alt="img"></p>
<h3 id="if-语句"><a href="#if-语句" class="headerlink" title="if 语句"></a>if 语句</h3><p>Python中if语句的一般形式如下所示：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> condition_1:</span><br><span class="line">    statement_block_1</span><br><span class="line"><span class="keyword">elif</span> condition_2:</span><br><span class="line">    statement_block_2</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    statement_block_3</span><br></pre></td></tr></table></figure>

<ul>
<li>如果 “condition_1” 为 True 将执行 “statement_block_1” 块语句</li>
<li>如果 “condition_1” 为False，将判断 “condition_2”</li>
<li>如果”condition_2” 为 True 将执行 “statement_block_2” 块语句</li>
<li>如果 “condition_2” 为False，将执行”statement_block_3”块语句</li>
</ul>
<p>Python 中用 <strong>elif</strong> 代替了 <strong>else if</strong>，所以if语句的关键字为：<strong>if – elif – else</strong>。</p>
<p><strong>注意：</strong></p>
<ul>
<li>1、每个条件后面要使用冒号 **:**，表示接下来是满足条件后要执行的语句块。</li>
<li>2、使用缩进来划分语句块，相同缩进数的语句在一起组成一个语句块。</li>
<li>3、在 Python 中没有 <strong>switch…case</strong> 语句，但在 Python3.10 版本添加了 <strong>match…case</strong>，功能也类似，详见下文。</li>
</ul>
<p>以下是一个简单的 if 实例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"> </span><br><span class="line">var1 = <span class="number">100</span></span><br><span class="line"><span class="keyword">if</span> var1:</span><br><span class="line">    <span class="built_in">print</span> (<span class="string">&quot;1 - if 表达式条件为 true&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span> (var1)</span><br><span class="line"> </span><br><span class="line">var2 = <span class="number">0</span></span><br><span class="line"><span class="keyword">if</span> var2:</span><br><span class="line">    <span class="built_in">print</span> (<span class="string">&quot;2 - if 表达式条件为 true&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span> (var2)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;Good bye!&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>执行以上代码，输出结果为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span> - <span class="keyword">if</span> 表达式条件为 true</span><br><span class="line"><span class="number">100</span></span><br><span class="line">Good bye!</span><br></pre></td></tr></table></figure>

<p>从结果可以看到由于变量 var2 为 0，所以对应的 if 内的语句没有执行。</p>
<p>以下实例演示了狗的年龄计算判断：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"> </span><br><span class="line">age = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入你家狗狗的年龄: &quot;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> age &lt;= <span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;你是在逗我吧!&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> age == <span class="number">1</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;相当于 14 岁的人。&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> age == <span class="number">2</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;相当于 22 岁的人。&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> age &gt; <span class="number">2</span>:</span><br><span class="line">    human = <span class="number">22</span> + (age -<span class="number">2</span>)*<span class="number">5</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;对应人类年龄: &quot;</span>, human)</span><br><span class="line"> </span><br><span class="line"><span class="comment">### 退出提示</span></span><br><span class="line"><span class="built_in">input</span>(<span class="string">&quot;点击 enter 键退出&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>将以上脚本保存在dog.py文件中，并执行该脚本：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$ python3 dog.py </span><br><span class="line">请输入你家狗狗的年龄: <span class="number">1</span></span><br><span class="line"></span><br><span class="line">相当于 <span class="number">14</span> 岁的人。</span><br><span class="line">点击 enter 键退出</span><br></pre></td></tr></table></figure>

<p>以下为if中常用的操作运算符:</p>
<table>
<thead>
<tr>
<th align="left">操作符</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>&lt;</code></td>
<td align="left">小于</td>
</tr>
<tr>
<td align="left"><code>&lt;=</code></td>
<td align="left">小于或等于</td>
</tr>
<tr>
<td align="left"><code>&gt;</code></td>
<td align="left">大于</td>
</tr>
<tr>
<td align="left"><code>&gt;=</code></td>
<td align="left">大于或等于</td>
</tr>
<tr>
<td align="left"><code>==</code></td>
<td align="left">等于，比较两个值是否相等</td>
</tr>
<tr>
<td align="left"><code>!=</code></td>
<td align="left">不等于</td>
</tr>
</tbody></table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 程序演示了 == 操作符</span></span><br><span class="line"><span class="comment"># 使用数字</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">5</span> == <span class="number">6</span>)</span><br><span class="line"><span class="comment"># 使用变量</span></span><br><span class="line">x = <span class="number">5</span></span><br><span class="line">y = <span class="number">8</span></span><br><span class="line"><span class="built_in">print</span>(x == y)</span><br></pre></td></tr></table></figure>

<p>以上实例输出结果：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure>

<p>high_low.py文件演示了数字的比较运算：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3 </span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 该实例演示了数字猜谜游戏</span></span><br><span class="line">number = <span class="number">7</span></span><br><span class="line">guess = -<span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;数字猜谜游戏!&quot;</span>)</span><br><span class="line"><span class="keyword">while</span> guess != number:</span><br><span class="line">    guess = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入你猜的数字：&quot;</span>))</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> guess == number:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;恭喜，你猜对了！&quot;</span>)</span><br><span class="line">    <span class="keyword">elif</span> guess &lt; number:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;猜的数字小了...&quot;</span>)</span><br><span class="line">    <span class="keyword">elif</span> guess &gt; number:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;猜的数字大了...&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>执行以上脚本，实例输出结果如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$ python3 high_low.py </span><br><span class="line">数字猜谜游戏!</span><br><span class="line">请输入你猜的数字：<span class="number">1</span></span><br><span class="line">猜的数字小了...</span><br><span class="line">请输入你猜的数字：<span class="number">9</span></span><br><span class="line">猜的数字大了...</span><br><span class="line">请输入你猜的数字：<span class="number">7</span></span><br><span class="line">恭喜，你猜对了！</span><br></pre></td></tr></table></figure>

<h3 id="if-嵌套"><a href="#if-嵌套" class="headerlink" title="if 嵌套"></a>if 嵌套</h3><p>在嵌套 if 语句中，可以把 if…elif…else 结构放在另外一个 if…elif…else 结构中。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if 表达式1:</span><br><span class="line">    语句</span><br><span class="line">    if 表达式2:</span><br><span class="line">        语句</span><br><span class="line">    elif 表达式3:</span><br><span class="line">        语句</span><br><span class="line">    else:</span><br><span class="line">        语句</span><br><span class="line">elif 表达式4:</span><br><span class="line">    语句</span><br><span class="line">else:</span><br><span class="line">    语句</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># !/usr/bin/python3</span></span><br><span class="line"> </span><br><span class="line">num=<span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;输入一个数字：&quot;</span>))</span><br><span class="line"><span class="keyword">if</span> num%<span class="number">2</span>==<span class="number">0</span>:</span><br><span class="line">    <span class="keyword">if</span> num%<span class="number">3</span>==<span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span> (<span class="string">&quot;你输入的数字可以整除 2 和 3&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span> (<span class="string">&quot;你输入的数字可以整除 2，但不能整除 3&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">if</span> num%<span class="number">3</span>==<span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span> (<span class="string">&quot;你输入的数字可以整除 3，但不能整除 2&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>  (<span class="string">&quot;你输入的数字不能整除 2 和 3&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>将以上程序保存到 test_if.py 文件中，执行后输出结果为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$ python3 test.py </span><br><span class="line">输入一个数字：<span class="number">6</span></span><br><span class="line">你输入的数字可以整除 <span class="number">2</span> 和 <span class="number">3</span></span><br></pre></td></tr></table></figure>

<h3 id="match…case"><a href="#match…case" class="headerlink" title="match…case"></a>match…case</h3><p>Python 3.10 增加了 <strong>match…case</strong> 的条件判断，不需要再使用一连串的 <strong>if-else</strong> 来判断了。</p>
<p>match 后的对象会依次与 case 后的内容进行匹配，如果匹配成功，则执行匹配到的表达式，否则直接跳过，**_** 可以匹配一切。</p>
<p>语法格式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">match subject:</span><br><span class="line">    case &lt;pattern_1&gt;:</span><br><span class="line">        &lt;action_1&gt;</span><br><span class="line">    case &lt;pattern_2&gt;:</span><br><span class="line">        &lt;action_2&gt;</span><br><span class="line">    case &lt;pattern_3&gt;:</span><br><span class="line">        &lt;action_3&gt;</span><br><span class="line">    case _:</span><br><span class="line">        &lt;action_wildcard&gt;</span><br></pre></td></tr></table></figure>

<p><strong>case _:</strong> 类似于 C 和 Java 中的 **default:**，当其他 case 都无法匹配时，匹配这条，保证永远会匹配成功。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">http_error</span>(<span class="params">status</span>):</span><br><span class="line">    match status:</span><br><span class="line">        case <span class="number">400</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;Bad request&quot;</span></span><br><span class="line">        case <span class="number">404</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;Not found&quot;</span></span><br><span class="line">        case <span class="number">418</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;I&#x27;m a teapot&quot;</span></span><br><span class="line">        case _:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;Something&#x27;s wrong with the internet&quot;</span></span><br><span class="line"></span><br><span class="line">mystatus=<span class="number">400</span></span><br><span class="line"><span class="built_in">print</span>(http_error(<span class="number">400</span>))</span><br></pre></td></tr></table></figure>

<p>以上是一个输出 HTTP 状态码的实例，输出结果为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Bad request</span><br></pre></td></tr></table></figure>

<p>一个 case 也可以设置多个匹配条件，条件使用 <strong>｜</strong> 隔开，例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">    case <span class="number">401</span>|<span class="number">403</span>|<span class="number">404</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Not allowed&quot;</span></span><br></pre></td></tr></table></figure>

<p><strong>match…case</strong> 更多内容参考：<a href="https://www.runoob.com/python3/python-match-case.html">Python match-case 语句</a></p>
<h2 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h2><p>本章节将为大家介绍 Python 循环语句的使用。</p>
<p>Python 中的循环语句有 for 和 while。</p>
<p>Python 循环语句的控制结构图如下所示：</p>
<p><img src="https://p.ipic.vip/7k7xdw.png" alt="img"></p>
<h2 id="while-循环"><a href="#while-循环" class="headerlink" title="while 循环"></a>while 循环</h2><p>Python 中 while 语句的一般形式：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> 判断条件(condition)：</span><br><span class="line">    执行语句(statements)……</span><br></pre></td></tr></table></figure>

<p>执行流程图如下：</p>
<p><img src="https://p.ipic.vip/b6ykma.jpg" alt="img"></p>
<p>同样需要注意冒号和缩进。另外，在 Python 中没有 do..while 循环。</p>
<p>以下实例使用了 while 来计算 1 到 100 的总和：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"> </span><br><span class="line">n = <span class="number">100</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line">counter = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> counter &lt;= n:</span><br><span class="line">    <span class="built_in">sum</span> = <span class="built_in">sum</span> + counter</span><br><span class="line">    counter += <span class="number">1</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;1 到 %d 之和为: %d&quot;</span> % (n,<span class="built_in">sum</span>))</span><br></pre></td></tr></table></figure>

<p>执行结果如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span> 到 <span class="number">100</span> 之和为: <span class="number">5050</span></span><br></pre></td></tr></table></figure>

<h3 id="无限循环"><a href="#无限循环" class="headerlink" title="无限循环"></a>无限循环</h3><p>我们可以通过设置条件表达式永远不为 false 来实现无限循环，实例如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"> </span><br><span class="line">var = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> var == <span class="number">1</span> :  <span class="comment"># 表达式永远为 true</span></span><br><span class="line">   num = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;输入一个数字  :&quot;</span>))</span><br><span class="line">   <span class="built_in">print</span> (<span class="string">&quot;你输入的数字是: &quot;</span>, num)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;Good bye!&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>执行以上脚本，输出结果如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">输入一个数字  :<span class="number">5</span></span><br><span class="line">你输入的数字是:  <span class="number">5</span></span><br><span class="line">输入一个数字  :</span><br></pre></td></tr></table></figure>

<p>你可以使用 <strong>CTRL+C</strong> 来退出当前的无限循环。</p>
<p>无限循环在服务器上客户端的实时请求非常有用。</p>
<h3 id="while-循环使用-else-语句"><a href="#while-循环使用-else-语句" class="headerlink" title="while 循环使用 else 语句"></a>while 循环使用 else 语句</h3><p>如果 while 后面的条件语句为 false 时，则执行 else 的语句块。</p>
<p>语法格式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> &lt;expr&gt;:</span><br><span class="line">    &lt;statement(s)&gt;</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    &lt;additional_statement(s)&gt;</span><br></pre></td></tr></table></figure>

<p>expr 条件语句为 true 则执行 statement(s) 语句块，如果为 false，则执行 additional_statement(s)。</p>
<p>循环输出数字，并判断大小：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"> </span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> count &lt; <span class="number">5</span>:</span><br><span class="line">   <span class="built_in">print</span> (count, <span class="string">&quot; 小于 5&quot;</span>)</span><br><span class="line">   count = count + <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   <span class="built_in">print</span> (count, <span class="string">&quot; 大于或等于 5&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>执行以上脚本，输出结果如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span>  小于 <span class="number">5</span></span><br><span class="line"><span class="number">1</span>  小于 <span class="number">5</span></span><br><span class="line"><span class="number">2</span>  小于 <span class="number">5</span></span><br><span class="line"><span class="number">3</span>  小于 <span class="number">5</span></span><br><span class="line"><span class="number">4</span>  小于 <span class="number">5</span></span><br><span class="line"><span class="number">5</span>  大于或等于 <span class="number">5</span></span><br></pre></td></tr></table></figure>

<h3 id="简单语句组"><a href="#简单语句组" class="headerlink" title="简单语句组"></a>简单语句组</h3><p>类似 if 语句的语法，如果你的 while 循环体中只有一条语句，你可以将该语句与 while 写在同一行中， 如下所示：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"> </span><br><span class="line">flag = <span class="number">1</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">while</span> (flag): <span class="built_in">print</span> (<span class="string">&#x27;欢迎访问菜鸟教程!&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;Good bye!&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong>以上的无限循环你可以使用 CTRL+C 来中断循环。</p>
<p>执行以上脚本，输出结果如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">欢迎访问菜鸟教程!</span><br><span class="line">欢迎访问菜鸟教程!</span><br><span class="line">欢迎访问菜鸟教程!</span><br><span class="line">欢迎访问菜鸟教程!</span><br><span class="line">欢迎访问菜鸟教程!</span><br><span class="line">……</span><br></pre></td></tr></table></figure>

<h3 id="for-语句"><a href="#for-语句" class="headerlink" title="for 语句"></a>for 语句</h3><p>Python for 循环可以遍历任何可迭代对象，如一个列表或者一个字符串。</p>
<p>for循环的一般格式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> &lt;variable&gt; <span class="keyword">in</span> &lt;sequence&gt;:</span><br><span class="line">    &lt;statements&gt;</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    &lt;statements&gt;</span><br></pre></td></tr></table></figure>

<p><strong>流程图：</strong></p>
<p><img src="https://p.ipic.vip/xgbkt0.jpg" alt="img"></p>
<p>Python for 循环实例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"> </span><br><span class="line">sites = [<span class="string">&quot;Baidu&quot;</span>, <span class="string">&quot;Google&quot;</span>,<span class="string">&quot;Runoob&quot;</span>,<span class="string">&quot;Taobao&quot;</span>]</span><br><span class="line"><span class="keyword">for</span> site <span class="keyword">in</span> sites:</span><br><span class="line">    <span class="built_in">print</span>(site)</span><br></pre></td></tr></table></figure>

<p>以上代码执行输出结果为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Baidu</span><br><span class="line">Google</span><br><span class="line">Runoob</span><br><span class="line">Taobao</span><br></pre></td></tr></table></figure>

<p>也可用于打印字符串中的每个字符：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"> </span><br><span class="line">word = <span class="string">&#x27;runoob&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> letter <span class="keyword">in</span> word:</span><br><span class="line">    <span class="built_in">print</span>(letter)</span><br></pre></td></tr></table></figure>

<p>以上代码执行输出结果为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">r</span><br><span class="line">u</span><br><span class="line">n</span><br><span class="line">o</span><br><span class="line">o</span><br><span class="line">b</span><br></pre></td></tr></table></figure>

<p>整数范围值可以配合 range() 函数使用：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#  1 到 5 的所有数字：</span></span><br><span class="line"><span class="keyword">for</span> number <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">6</span>):</span><br><span class="line">    <span class="built_in">print</span>(number)</span><br></pre></td></tr></table></figure>

<p>以上代码执行输出结果为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure>

<h3 id="for…else"><a href="#for…else" class="headerlink" title="for…else"></a>for…else</h3><p>在 Python 中，for…else 语句用于在循环结束后执行一段代码。</p>
<p>语法格式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> iterable:</span><br><span class="line">    <span class="comment"># 循环主体</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="comment"># 循环结束后执行的代码</span></span><br></pre></td></tr></table></figure>

<p>当循环执行完毕（即遍历完 iterable 中的所有元素）后，会执行 else 子句中的代码，如果在循环过程中遇到了 break 语句，则会中断循环，此时不会执行 else 子句。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>):</span><br><span class="line">  <span class="built_in">print</span>(x)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&quot;Finally finished!&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>执行脚本后，输出结果为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line">Finally finished!</span><br></pre></td></tr></table></figure>

<p>以下 for 实例中使用了 break 语句，break 语句用于跳出当前循环体，不会执行 else 子句：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"> </span><br><span class="line">sites = [<span class="string">&quot;Baidu&quot;</span>, <span class="string">&quot;Google&quot;</span>,<span class="string">&quot;Runoob&quot;</span>,<span class="string">&quot;Taobao&quot;</span>]</span><br><span class="line"><span class="keyword">for</span> site <span class="keyword">in</span> sites:</span><br><span class="line">    <span class="keyword">if</span> site == <span class="string">&quot;Runoob&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;菜鸟教程!&quot;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;循环数据 &quot;</span> + site)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;没有循环数据!&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;完成循环!&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>执行脚本后，在循环到 “Runoob”时会跳出循环体：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">循环数据 Baidu</span><br><span class="line">循环数据 Google</span><br><span class="line">菜鸟教程!</span><br><span class="line">完成循环!</span><br></pre></td></tr></table></figure>

<h3 id="range-函数"><a href="#range-函数" class="headerlink" title="range() 函数"></a>range() 函数</h3><p>如果你需要遍历数字序列，可以使用内置 range() 函数。它会生成数列，例如:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(i)</span><br><span class="line">...</span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure>

<p>你也可以使用 range() 指定区间的值：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>,<span class="number">9</span>) :</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"> </span><br><span class="line">    </span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">8</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>

<p>也可以使 range() 以指定数字开始并指定不同的增量(甚至可以是负数，有时这也叫做’步长’):</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">10</span>, <span class="number">3</span>) :</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"> </span><br><span class="line">    </span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">9</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>

<p>负数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(-<span class="number">10</span>, -<span class="number">100</span>, -<span class="number">30</span>) :</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"> </span><br><span class="line">    </span><br><span class="line">-<span class="number">10</span></span><br><span class="line">-<span class="number">40</span></span><br><span class="line">-<span class="number">70</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>

<p>您可以结合 range() 和 len() 函数以遍历一个序列的索引,如下所示:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;a = [<span class="string">&#x27;Google&#x27;</span>, <span class="string">&#x27;Baidu&#x27;</span>, <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Taobao&#x27;</span>, <span class="string">&#x27;QQ&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(a)):</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(i, a[i])</span><br><span class="line"><span class="meta">... </span></span><br><span class="line"><span class="number">0</span> Google</span><br><span class="line"><span class="number">1</span> Baidu</span><br><span class="line"><span class="number">2</span> Runoob</span><br><span class="line"><span class="number">3</span> Taobao</span><br><span class="line"><span class="number">4</span> QQ</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>

<p>还可以使用 range() 函数来创建一个列表：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">5</span>))</span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>

<h3 id="break-和-continue-语句及循环中的-else-子句"><a href="#break-和-continue-语句及循环中的-else-子句" class="headerlink" title="break 和 continue 语句及循环中的 else 子句"></a>break 和 continue 语句及循环中的 else 子句</h3><p><strong>break 执行流程图：</strong></p>
<p><img src="https://p.ipic.vip/ijy7tr.jpg" alt="img"></p>
<p><strong>continue 执行流程图：</strong></p>
<p><img src="https://p.ipic.vip/edyfgh.jpg" alt="img"></p>
<p>while 语句代码执行过程：</p>
<p><img src="https://static.runoob.com/images/mix/python-while.webp" alt="img"></p>
<p>for 语句代码执行过程：</p>
<p><img src="https://p.ipic.vip/qrxwux.png" alt="img"></p>
<p><strong>break</strong> 语句可以跳出 for 和 while 的循环体。如果你从 for 或 while 循环中终止，任何对应的循环 else 块将不执行。</p>
<p><strong>continue</strong> 语句被用来告诉 Python 跳过当前循环块中的剩余语句，然后继续进行下一轮循环。</p>
<p>while 中使用 break：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">n = <span class="number">5</span></span><br><span class="line"><span class="keyword">while</span> n &gt; <span class="number">0</span>:</span><br><span class="line">    n -= <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(n)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;循环结束。&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>输出结果为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">3</span><br><span class="line">循环结束。</span><br></pre></td></tr></table></figure>

<p>while 中使用 continue：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">n = <span class="number">5</span></span><br><span class="line"><span class="keyword">while</span> n &gt; <span class="number">0</span>:</span><br><span class="line">    n -= <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="built_in">print</span>(n)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;循环结束。&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>输出结果为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line">循环结束。</span><br></pre></td></tr></table></figure>

<p>更多实例如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> letter <span class="keyword">in</span> <span class="string">&#x27;Runoob&#x27;</span>:     <span class="comment"># 第一个实例</span></span><br><span class="line">   <span class="keyword">if</span> letter == <span class="string">&#x27;b&#x27;</span>:</span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">   <span class="built_in">print</span> (<span class="string">&#x27;当前字母为 :&#x27;</span>, letter)</span><br><span class="line">  </span><br><span class="line">var = <span class="number">10</span>                    <span class="comment"># 第二个实例</span></span><br><span class="line"><span class="keyword">while</span> var &gt; <span class="number">0</span>:              </span><br><span class="line">   <span class="built_in">print</span> (<span class="string">&#x27;当前变量值为 :&#x27;</span>, var)</span><br><span class="line">   var = var -<span class="number">1</span></span><br><span class="line">   <span class="keyword">if</span> var == <span class="number">5</span>:</span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;Good bye!&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>执行以上脚本输出结果为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">当前字母为 : R</span><br><span class="line">当前字母为 : u</span><br><span class="line">当前字母为 : n</span><br><span class="line">当前字母为 : o</span><br><span class="line">当前字母为 : o</span><br><span class="line">当前变量值为 : <span class="number">10</span></span><br><span class="line">当前变量值为 : <span class="number">9</span></span><br><span class="line">当前变量值为 : <span class="number">8</span></span><br><span class="line">当前变量值为 : <span class="number">7</span></span><br><span class="line">当前变量值为 : <span class="number">6</span></span><br><span class="line">Good bye!</span><br></pre></td></tr></table></figure>

<p>以下实例循环字符串 Runoob，碰到字母 o 跳过输出：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> letter <span class="keyword">in</span> <span class="string">&#x27;Runoob&#x27;</span>:     <span class="comment"># 第一个实例</span></span><br><span class="line">   <span class="keyword">if</span> letter == <span class="string">&#x27;o&#x27;</span>:        <span class="comment"># 字母为 o 时跳过输出</span></span><br><span class="line">      <span class="keyword">continue</span></span><br><span class="line">   <span class="built_in">print</span> (<span class="string">&#x27;当前字母 :&#x27;</span>, letter)</span><br><span class="line"> </span><br><span class="line">var = <span class="number">10</span>                    <span class="comment"># 第二个实例</span></span><br><span class="line"><span class="keyword">while</span> var &gt; <span class="number">0</span>:              </span><br><span class="line">   var = var -<span class="number">1</span></span><br><span class="line">   <span class="keyword">if</span> var == <span class="number">5</span>:             <span class="comment"># 变量为 5 时跳过输出</span></span><br><span class="line">      <span class="keyword">continue</span></span><br><span class="line">   <span class="built_in">print</span> (<span class="string">&#x27;当前变量值 :&#x27;</span>, var)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;Good bye!&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>执行以上脚本输出结果为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">当前字母 : R</span><br><span class="line">当前字母 : u</span><br><span class="line">当前字母 : n</span><br><span class="line">当前字母 : b</span><br><span class="line">当前变量值 : <span class="number">9</span></span><br><span class="line">当前变量值 : <span class="number">8</span></span><br><span class="line">当前变量值 : <span class="number">7</span></span><br><span class="line">当前变量值 : <span class="number">6</span></span><br><span class="line">当前变量值 : <span class="number">4</span></span><br><span class="line">当前变量值 : <span class="number">3</span></span><br><span class="line">当前变量值 : <span class="number">2</span></span><br><span class="line">当前变量值 : <span class="number">1</span></span><br><span class="line">当前变量值 : <span class="number">0</span></span><br><span class="line">Good bye!</span><br></pre></td></tr></table></figure>

<p>循环语句可以有 else 子句，它在穷尽列表(以for循环)或条件变为 false (以while循环)导致循环终止时被执行，但循环被 break 终止时不执行。</p>
<p>如下实例用于查询质数的循环例子:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="number">10</span>):</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, n):</span><br><span class="line">        <span class="keyword">if</span> n % x == <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>(n, <span class="string">&#x27;等于&#x27;</span>, x, <span class="string">&#x27;*&#x27;</span>, n//x)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># 循环中没有找到元素</span></span><br><span class="line">        <span class="built_in">print</span>(n, <span class="string">&#x27; 是质数&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>执行以上脚本输出结果为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span>  是质数</span><br><span class="line"><span class="number">3</span>  是质数</span><br><span class="line"><span class="number">4</span> 等于 <span class="number">2</span> * <span class="number">2</span></span><br><span class="line"><span class="number">5</span>  是质数</span><br><span class="line"><span class="number">6</span> 等于 <span class="number">2</span> * <span class="number">3</span></span><br><span class="line"><span class="number">7</span>  是质数</span><br><span class="line"><span class="number">8</span> 等于 <span class="number">2</span> * <span class="number">4</span></span><br><span class="line"><span class="number">9</span> 等于 <span class="number">3</span> * <span class="number">3</span></span><br></pre></td></tr></table></figure>

<h3 id="pass-语句"><a href="#pass-语句" class="headerlink" title="pass 语句"></a>pass 语句</h3><p>Python pass是空语句，是为了保持程序结构的完整性。</p>
<p>pass 不做任何事情，一般用做占位语句，如下实例</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">pass</span>  <span class="comment"># 等待键盘中断 (Ctrl+C)</span></span><br></pre></td></tr></table></figure>

<p>最小的类:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;class MyEmptyClass:</span><br><span class="line">...     pass</span><br></pre></td></tr></table></figure>

<p>以下实例在字母为 o 时 执行 pass 语句块:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> letter <span class="keyword">in</span> <span class="string">&#x27;Runoob&#x27;</span>: </span><br><span class="line">   <span class="keyword">if</span> letter == <span class="string">&#x27;o&#x27;</span>:</span><br><span class="line">      <span class="keyword">pass</span></span><br><span class="line">      <span class="built_in">print</span> (<span class="string">&#x27;执行 pass 块&#x27;</span>)</span><br><span class="line">   <span class="built_in">print</span> (<span class="string">&#x27;当前字母 :&#x27;</span>, letter)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;Good bye!&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>执行以上脚本输出结果为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">当前字母 : R</span><br><span class="line">当前字母 : u</span><br><span class="line">当前字母 : n</span><br><span class="line">执行 <span class="keyword">pass</span> 块</span><br><span class="line">当前字母 : o</span><br><span class="line">执行 <span class="keyword">pass</span> 块</span><br><span class="line">当前字母 : o</span><br><span class="line">当前字母 : b</span><br><span class="line">Good bye!</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Python3 Notes-2</title>
    <url>/2022/05/01/Tool/Python3%20Notes-2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Python-基础学习笔记-2"><a href="#Python-基础学习笔记-2" class="headerlink" title="Python 基础学习笔记-2"></a>Python 基础学习笔记-2</h1><p>来源：<a href="https://www.runoob.com/python3/python3-tutorial.html">https://www.runoob.com/python3/python3-tutorial.html</a></p>
<h2 id="编程第一步"><a href="#编程第一步" class="headerlink" title="编程第一步"></a>编程第一步</h2><p>下面我们尝试来写一个斐波纳契数列。</p>
<p>斐波那契数列是一个经典的数学问题，其中每个数字是前两个数字之和。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Fibonacci series: 斐波纳契数列</span></span><br><span class="line"><span class="comment"># 两个元素的总和确定了下一个数</span></span><br><span class="line">a, b = <span class="number">0</span>, <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> b &lt; <span class="number">10</span>:</span><br><span class="line">    <span class="built_in">print</span>(b)</span><br><span class="line">    a, b = b, a+b</span><br></pre></td></tr></table></figure>

<p>其中代码 <strong>a, b &#x3D; b, a+b</strong> 的计算方式为先计算右边表达式，然后同时赋值给左边，等价于：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">n=b</span><br><span class="line">m=a+b</span><br><span class="line">a=n</span><br><span class="line">b=m</span><br></pre></td></tr></table></figure>

<p>执行以上程序，输出结果为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">5</span><br><span class="line">8</span><br></pre></td></tr></table></figure>

<p>这个例子介绍了几个新特征。</p>
<p>第一行包含了一个复合赋值：变量 a 和 b 同时得到新值 0 和 1。最后一行再次使用了同样的方法，可以看到，右边的表达式会在赋值变动之前执行。右边表达式的执行顺序是从左往右的。</p>
<p>也可以使用 for 循环来实现：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">n = <span class="number">10</span></span><br><span class="line">a, b = <span class="number">0</span>, <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">    <span class="built_in">print</span>(b)</span><br><span class="line">    a, b = b, a + b</span><br></pre></td></tr></table></figure>

<h3 id="end-关键字"><a href="#end-关键字" class="headerlink" title="end 关键字"></a>end 关键字</h3><p>关键字end可以用于将结果输出到同一行，或者在输出的末尾添加不同的字符，实例如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Fibonacci series: 斐波纳契数列</span></span><br><span class="line"><span class="comment"># 两个元素的总和确定了下一个数</span></span><br><span class="line">a, b = <span class="number">0</span>, <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> b &lt; <span class="number">1000</span>:</span><br><span class="line">    <span class="built_in">print</span>(b, end=<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">    a, b = b, a+b</span><br></pre></td></tr></table></figure>

<p>执行以上程序，输出结果为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">13</span>,<span class="number">21</span>,<span class="number">34</span>,<span class="number">55</span>,<span class="number">89</span>,<span class="number">144</span>,<span class="number">233</span>,<span class="number">377</span>,<span class="number">610</span>,<span class="number">987</span>,</span><br></pre></td></tr></table></figure>



<h2 id="推导式"><a href="#推导式" class="headerlink" title="推导式"></a>推导式</h2><p>Python 推导式是一种独特的数据处理方式，可以从一个数据序列构建另一个新的数据序列的结构体。</p>
<p>Python 支持各种数据结构的推导式：</p>
<ul>
<li>列表(list)推导式</li>
<li>字典(dict)推导式</li>
<li>集合(set)推导式</li>
<li>元组(tuple)推导式</li>
</ul>
<h3 id="列表推导式"><a href="#列表推导式" class="headerlink" title="列表推导式"></a>列表推导式</h3><p>列表推导式格式为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[表达式 for 变量 in 列表] </span><br><span class="line">[out_exp_res for out_exp in input_list]</span><br><span class="line"></span><br><span class="line">或者 </span><br><span class="line"></span><br><span class="line">[表达式 for 变量 in 列表 if 条件]</span><br><span class="line">[out_exp_res for out_exp in input_list if condition]</span><br></pre></td></tr></table></figure>

<ul>
<li>out_exp_res：列表生成元素表达式，可以是有返回值的函数。</li>
<li>for out_exp in input_list：迭代 input_list 将 out_exp 传入到 out_exp_res 表达式中。</li>
<li>if condition：条件语句，可以过滤列表中不符合条件的值。</li>
</ul>
<p>过滤掉长度小于或等于3的字符串列表，并将剩下的转换成大写字母：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>names = [<span class="string">&#x27;Bob&#x27;</span>,<span class="string">&#x27;Tom&#x27;</span>,<span class="string">&#x27;alice&#x27;</span>,<span class="string">&#x27;Jerry&#x27;</span>,<span class="string">&#x27;Wendy&#x27;</span>,<span class="string">&#x27;Smith&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>new_names = [name.upper()<span class="keyword">for</span> name <span class="keyword">in</span> names <span class="keyword">if</span> <span class="built_in">len</span>(name)&gt;<span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(new_names)</span><br><span class="line">[<span class="string">&#x27;ALICE&#x27;</span>, <span class="string">&#x27;JERRY&#x27;</span>, <span class="string">&#x27;WENDY&#x27;</span>, <span class="string">&#x27;SMITH&#x27;</span>]</span><br></pre></td></tr></table></figure>

<p>计算 30 以内可以被 3 整除的整数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>multiples = [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">30</span>) <span class="keyword">if</span> i % <span class="number">3</span> == <span class="number">0</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(multiples)</span><br><span class="line">[<span class="number">0</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">15</span>, <span class="number">18</span>, <span class="number">21</span>, <span class="number">24</span>, <span class="number">27</span>]</span><br></pre></td></tr></table></figure>

<h3 id="字典推导式"><a href="#字典推导式" class="headerlink" title="字典推导式"></a>字典推导式</h3><p>字典推导基本格式：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&#123; key_expr: value_expr <span class="keyword">for</span> value <span class="keyword">in</span> collection &#125;</span><br><span class="line"></span><br><span class="line">或</span><br><span class="line"></span><br><span class="line">&#123; key_expr: value_expr <span class="keyword">for</span> value <span class="keyword">in</span> collection <span class="keyword">if</span> condition &#125;</span><br></pre></td></tr></table></figure>

<p>使用字符串及其长度创建字典：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">listdemo = [<span class="string">&#x27;Google&#x27;</span>,<span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Taobao&#x27;</span>]</span><br><span class="line"><span class="comment"># 将列表中各字符串值为键，各字符串的长度为值，组成键值对</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>newdict = &#123;key:<span class="built_in">len</span>(key) <span class="keyword">for</span> key <span class="keyword">in</span> listdemo&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>newdict</span><br><span class="line">&#123;<span class="string">&#x27;Google&#x27;</span>: <span class="number">6</span>, <span class="string">&#x27;Runoob&#x27;</span>: <span class="number">6</span>, <span class="string">&#x27;Taobao&#x27;</span>: <span class="number">6</span>&#125;</span><br></pre></td></tr></table></figure>

<p>提供三个数字，以三个数字为键，三个数字的平方为值来创建字典：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic = &#123;x: x**<span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> (<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>)&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic</span><br><span class="line">&#123;<span class="number">2</span>: <span class="number">4</span>, <span class="number">4</span>: <span class="number">16</span>, <span class="number">6</span>: <span class="number">36</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">type</span>(dic)</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;dict&#x27;</span>&gt;</span><br></pre></td></tr></table></figure>

<h3 id="集合推导式"><a href="#集合推导式" class="headerlink" title="集合推导式"></a>集合推导式</h3><p>集合推导式基本格式：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&#123; expression <span class="keyword">for</span> item <span class="keyword">in</span> <span class="type">Sequence</span> &#125;</span><br><span class="line">或</span><br><span class="line">&#123; expression <span class="keyword">for</span> item <span class="keyword">in</span> <span class="type">Sequence</span> <span class="keyword">if</span> conditional &#125;</span><br></pre></td></tr></table></figure>

<p>计算数字 1,2,3 的平方数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>setnew = &#123;i**<span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>setnew</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>&#125;</span><br></pre></td></tr></table></figure>

<p>判断不是 abc 的字母并输出：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = &#123;x <span class="keyword">for</span> x <span class="keyword">in</span> <span class="string">&#x27;abracadabra&#x27;</span> <span class="keyword">if</span> x <span class="keyword">not</span> <span class="keyword">in</span> <span class="string">&#x27;abc&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">&#123;<span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;r&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">type</span>(a)</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;set&#x27;</span>&gt;</span><br></pre></td></tr></table></figure>

<h3 id="元组推导式（生成器表达式）"><a href="#元组推导式（生成器表达式）" class="headerlink" title="元组推导式（生成器表达式）"></a>元组推导式（生成器表达式）</h3><p>元组推导式可以利用 range 区间、元组、列表、字典和集合等数据类型，快速生成一个满足指定需求的元组。</p>
<p>元组推导式基本格式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(expression for item in Sequence )</span><br><span class="line">或</span><br><span class="line">(expression for item in Sequence if conditional )</span><br></pre></td></tr></table></figure>

<p>元组推导式和列表推导式的用法也完全相同，只是元组推导式是用 <strong>()</strong> 圆括号将各部分括起来，而列表推导式用的是中括号 **[]**，另外元组推导式返回的结果是一个生成器对象。</p>
<p>例如，我们可以使用下面的代码生成一个包含数字 1~9 的元组：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = (x <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">10</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">&lt;generator <span class="built_in">object</span> &lt;genexpr&gt; at <span class="number">0x7faf6ee20a50</span>&gt;  <span class="comment"># 返回的是生成器对象</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">tuple</span>(a)       <span class="comment"># 使用 tuple() 函数，可以直接将生成器对象转换成元组</span></span><br><span class="line">(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>)</span><br></pre></td></tr></table></figure>



<h2 id="迭代器与生成器"><a href="#迭代器与生成器" class="headerlink" title="迭代器与生成器"></a>迭代器与生成器</h2>]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>R</title>
    <url>/2022/05/01/Tool/R/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="R语言安装-tar-gz包"><a href="#R语言安装-tar-gz包" class="headerlink" title="R语言安装.tar.gz包"></a>R语言安装.tar.gz包</h2><p>以ElemStatLearn包的安装为例</p>
<p>“package ‘ElemStatLearn’ is not available for this version of R</p>
<p>右键其中任何一个可以获得文件的地址；</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">packageurl &lt;- <span class="string">&quot;https://cran.r-project.org/src/contrib/Archive/ElemStatLearn/ElemStatLearn_2015.6.26.tar.gz&quot;</span></span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">install.packages(packageurl, repos=NULL, <span class="built_in">type</span>=<span class="string">&quot;source&quot;</span>)</span></span><br></pre></td></tr></table></figure>

<p>其他方法：将包现下载到本地，之后使用如下方法安装</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="operator">&gt;</span> packagedir <span class="operator">&lt;-</span> choose.files<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> install.packages<span class="punctuation">(</span>packagedir <span class="punctuation">,</span> repos<span class="operator">=</span><span class="literal">NULL</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>



<h4 id="wzcs-udunits2-path"><a href="#wzcs-udunits2-path" class="headerlink" title="wzcs udunits2 path"></a>wzcs udunits2 path</h4><p>install.packages(“udunits2”, configure.args &#x3D;”-with-udunits2-include&#x3D;&#x2F;public&#x2F;software&#x2F;mathlib&#x2F;udunits&#x2F;2.2.26&#x2F;intel&#x2F;include   -with-udunits2-lib&#x3D;&#x2F;public&#x2F;software&#x2F;mathlib&#x2F;udunits&#x2F;2.2.26&#x2F;intel&#x2F;lib”)</p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>RAP driver</title>
    <url>/2022/05/01/Tool/RAP%20driver/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="RAP-driver"><a href="#RAP-driver" class="headerlink" title="RAP driver"></a>RAP driver</h2><h4 id="参数文件"><a href="#参数文件" class="headerlink" title="参数文件"></a>参数文件</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget -c --mirror --no-parent --cut-dirs=7 \</span><br><span class="line">     --directory-prefix=. \</span><br><span class="line">     --force-directories \</span><br><span class="line">     -P parm \</span><br><span class="line">     -nH --no-host-directories \</span><br><span class="line">     https://www.nco.ncep.noaa.gov/pmb/codes/nwprod/rap.v5.1.20/parm/</span><br></pre></td></tr></table></figure>



<h4 id="初始场和边界条件"><a href="#初始场和边界条件" class="headerlink" title="初始场和边界条件"></a>初始场和边界条件</h4><p>✅ rap fix文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget -c --mirror --no-parent --cut-dirs=7 \</span><br><span class="line">     --directory-prefix=. \</span><br><span class="line">     --force-directories \</span><br><span class="line">     -P fix \</span><br><span class="line">     -nH --no-host-directories \</span><br><span class="line">     https://www.nco.ncep.noaa.gov/pmb/codes/nwprod/rap.v5.1.20/fix/</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget -c --mirror --no-parent --cut-dirs=7 \</span><br><span class="line">     --directory-prefix=. \</span><br><span class="line">     --force-directories \</span><br><span class="line">     -P fix \</span><br><span class="line">     -nH --no-host-directories \</span><br><span class="line">     https://www.nco.ncep.noaa.gov/pmb/codes/nwprod/hrrr.v4.1.20/fix/</span><br></pre></td></tr></table></figure>

<p>✅ crtm fix 文件</p>
<p><a href="https://github.com/JCSDA/crtm/blob/master/Get_CRTM_Binary_Files.sh">https://github.com/JCSDA/crtm/blob/master/Get_CRTM_Binary_Files.sh</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://bin.ssec.wisc.edu/pub/s4/CRTM/fix_REL-2.4.0.tgz</span><br></pre></td></tr></table></figure>

<p>✅ GFS 分析&#x2F;预报场</p>
<p>冷启动通常需要过去某些时间的场（analysis）＋边界未来演变。</p>
<ul>
<li>GDAS</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://nomads.ncep.noaa.gov/pub/data/nccf/com/gfs/prod/gdas.20250914/00/atmos/gdas.t00z.atmanl.nc</span><br></pre></td></tr></table></figure>

<ul>
<li>GFS</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">------------------------------------------------------------------------</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"> GFS 0.25° pgrb2  00–66 h 每 3 h 循环下载脚本</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"> 保存路径: ./gfs/YYYYMMDD/CCC/gfs.tCCz.pgrb2.0p25.fFFF</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">------------------------------------------------------------------------</span></span><br><span class="line">set -eu</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">=========== 用户可改参数 ================================================</span></span><br><span class="line">PDY=$&#123;PDY:-20250918&#125;          # 日期</span><br><span class="line">cyc_list=&quot;00 06 12 18&quot;        # 起报时刻</span><br><span class="line">fstart=24 ; fend=66 ; fstep=3  # 预报时段 00-66，步长 3h</span><br><span class="line">baseurl=&quot;https://nomads.ncep.noaa.gov/pub/data/nccf/com/gfs/prod&quot;</span><br><span class="line">outdir=&quot;./gfs/$&#123;PDY&#125;&quot;         # 本地根目录</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">========================================================================</span></span><br><span class="line"></span><br><span class="line">mkdir -p &quot;$&#123;outdir&#125;&quot;</span><br><span class="line"></span><br><span class="line">for cyc in $&#123;cyc_list&#125;; do</span><br><span class="line">  mkdir -p &quot;$&#123;outdir&#125;/$&#123;cyc&#125;&quot;</span><br><span class="line">  for (( f=fstart; f&lt;=fend; f=f+fstep )); do</span><br><span class="line">    # 格式化成 3 位数字</span><br><span class="line">    fff=$(printf &quot;%03d&quot; $f)</span><br><span class="line">    file=&quot;gfs.t$&#123;cyc&#125;z.pgrb2.0p25.f$&#123;fff&#125;&quot;</span><br><span class="line">    url=&quot;$&#123;baseurl&#125;/gfs.$&#123;PDY&#125;/$&#123;cyc&#125;/atmos/$&#123;file&#125;&quot;</span><br><span class="line">    echo &quot;[INFO] downloading  $url&quot;</span><br><span class="line">    # -c 断点续传，-O 显式指定存放路径</span><br><span class="line">    wget -c &quot;$&#123;url&#125;&quot; -O &quot;$&#123;outdir&#125;/$&#123;cyc&#125;/$&#123;file&#125;&quot;</span><br><span class="line">  done</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">echo &quot;[INFO] 全部下载完成 → $&#123;outdir&#125;&quot;</span><br></pre></td></tr></table></figure>

<ul>
<li>enkfgdas</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget -c --mirror --no-parent --cut-dirs=10 \</span><br><span class="line">     --directory-prefix=. \</span><br><span class="line">     --force-directories \</span><br><span class="line">     -P enkfgdas \</span><br><span class="line">     -nH --no-host-directories \</span><br><span class="line">     https://nomads.ncep.noaa.gov/pub/data/nccf/com/gfs/prod/enkfgdas.20250918/00/atmos/</span><br></pre></td></tr></table></figure>





<h4 id="陆面-x2F-下垫面资料"><a href="#陆面-x2F-下垫面资料" class="headerlink" title="陆面&#x2F;下垫面资料"></a>陆面&#x2F;下垫面资料</h4><p>✅ 海温资料（daily update）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://www.ncei.noaa.gov/data/sea-surface-temperature-optimum-interpolation/v2.1/access/avhrr/202509/oisst-avhrr-v02r01.20250914_preliminary.nc</span><br></pre></td></tr></table></figure>



<p>wget  <a href="https://nomads.ncep.noaa.gov/pub/data/nccf/com/rtofs/prod/rtofs.20250914/rtofs_glo_sst_20250914.tar.gz">https://nomads.ncep.noaa.gov/pub/data/nccf/com/rtofs/prod/rtofs.20250914/rtofs_glo_sst_20250914.tar.gz</a></p>
<p>wget <a href="https://nomads.ncep.noaa.gov/pub/data/nccf/com/rtofs/prod/rtofs.20250915/rtofs_glo_sst_20250915_hcasts.nc.gz">https://nomads.ncep.noaa.gov/pub/data/nccf/com/rtofs/prod/rtofs.20250915/rtofs_glo_sst_20250915_hcasts.nc.gz</a></p>
<ul>
<li>转换为grib2格式的文件</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cdo -f grb2 -setgridtype,regular -setunit,K -addc,273.15 -selname,sst oisst_global.nc oisst_global.grib2</span><br></pre></td></tr></table></figure>





<p>✅ 冰雪资料（daily update）</p>
<p>U.S. National Ice Center IMS Snow and Ice Products</p>
<p><a href="https://usicecenter.gov/Products/ImsData">https://usicecenter.gov/Products/ImsData</a></p>
<p>✅ 植被覆盖 GVF（weakly update）</p>
<p><a href="https://www.star.nesdis.noaa.gov/smcd/emb/land/others/documents/instructions_vi_gvf_dat_from_CLASS.pdf">https://www.star.nesdis.noaa.gov/smcd/emb/land/others/documents/instructions_vi_gvf_dat_from_CLASS.pdf</a></p>
<p><a href="https://www.aev.class.noaa.gov/saa/products/welcome">https://www.aev.class.noaa.gov/saa/products/welcome</a></p>
<p>JPSS_NGRN → Goto Cart → Place Order</p>
<h4 id="观测资料（用于分析-x2F-同化）"><a href="#观测资料（用于分析-x2F-同化）" class="headerlink" title="观测资料（用于分析&#x2F;同化）"></a>观测资料（用于分析&#x2F;同化）</h4><p>✅ obsproc 预处理后的数据文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget --mirror --no-parent --cut-dirs=8 \</span><br><span class="line">     --directory-prefix=. \</span><br><span class="line">     --force-directories \</span><br><span class="line">     -P rap.20250914 \</span><br><span class="line">     https://nomads.ncep.noaa.gov/pub/data/nccf/com/obsproc/prod/rap.20250914/</span><br></pre></td></tr></table></figure>

<p>wget <a href="https://nomads.ncep.noaa.gov/pub/data/nccf/com/obsproc/prod/gdas.20250914/gdas.t00z.prepbufr.nr">https://nomads.ncep.noaa.gov/pub/data/nccf/com/obsproc/prod/gdas.20250914/gdas.t00z.prepbufr.nr</a></p>
<p>wget –mirror –no-parent –cut-dirs&#x3D;7 <a href="https://nomads.ncep.noaa.gov/pub/data/nccf/com/gfs/prod/gfs.20250914/00/atmos/bufr.t00z/">https://nomads.ncep.noaa.gov/pub/data/nccf/com/gfs/prod/gfs.20250914/00/atmos/bufr.t00z/</a></p>
<p>⭕️ GTS</p>
<p>Global BUFR Data Stream: Ships and Buoy Observations from National Weather Service Telecommunications Gateway (NWS TG)</p>
<p><a href="https://www.ncei.noaa.gov/access/metadata/landing-page/bin/iso?id=gov.noaa.ncdc:C00953">https://www.ncei.noaa.gov/access/metadata/landing-page/bin/iso?id=gov.noaa.ncdc:C00953</a></p>
<p>⭕️ Aircraft</p>
<p>⭕️ Radiosonde</p>
<p>NWS US Radiosonde B &amp; C BUFR High Resolution</p>
<p><a href="https://www.ncei.noaa.gov/data/us-radiosonde-bufr/archive/">https://www.ncei.noaa.gov/data/us-radiosonde-bufr/archive/</a></p>
<p>⭕️ Surface</p>
<p>⭕️ Satwind</p>
<p>⭐️ bufr数据下载</p>
<p>实时：<a href="https://tgftp.nws.noaa.gov/SL.us008001/DF.bf/">https://tgftp.nws.noaa.gov/SL.us008001/DF.bf/</a></p>
<p>历史：<a href="https://gdex.ucar.edu/datasets/d337000/">https://gdex.ucar.edu/datasets/d337000/</a></p>
<h3 id="常规观测资料的预处理和质控"><a href="#常规观测资料的预处理和质控" class="headerlink" title="常规观测资料的预处理和质控"></a>常规观测资料的预处理和质控</h3><p><a href="https://obsproc-nwpc.readthedocs.io/zh-cn/latest/">https://obsproc-nwpc.readthedocs.io/zh-cn/latest/</a></p>
<h3 id="检查数据下载的完整性"><a href="#检查数据下载的完整性" class="headerlink" title="检查数据下载的完整性"></a>检查数据下载的完整性</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/sh<span class="comment">#</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">export</span> fname=<span class="string">&quot;global_satinfo.txt_rapv5_for_CIRS_FSR_ATMS_ABI_20190702&quot;</span></span></span><br><span class="line">for fname in *; do</span><br><span class="line">md5sum $fname &gt; check.txt</span><br><span class="line">md5sum -c check.txt</span><br><span class="line">rm check.txt</span><br><span class="line">done</span><br></pre></td></tr></table></figure>





<hr>
<p>以下为AI总结</p>
<h3 id="外部驱动数据类型汇总"><a href="#外部驱动数据类型汇总" class="headerlink" title="外部驱动数据类型汇总"></a>外部驱动数据类型汇总</h3><p>冷启动运行 RAP（就是没有已有 RAP 周期循环状态或者有限／缺失状态的情况下启动）通常需要以下外部驱动数据：</p>
<table>
<thead>
<tr>
<th>数据类型</th>
<th>作用／为什么需要</th>
<th>常见格式 &#x2F; 要素</th>
</tr>
</thead>
<tbody><tr>
<td>全局模式“初始场 &#x2F; 边界条件”（Initial Conditions &amp; Lateral Boundary Conditions, IC&#x2F;LBC）</td>
<td>用于给区域模式 (RAP) 的初始大气场、温度、湿度、风、地表状态等，以及边界的时间演变，用来驱动模型边界。</td>
<td>通常来自 GFS（或 NAM、GDAS 等）的大尺度气象场。格式 GRIB2 或 NEMSIO。包括多个气压层 + 地面变量 + 土壤温湿度等。</td>
</tr>
<tr>
<td>静态地表资料（Static &#x2F; “fix” 文件）</td>
<td>地形、高程，土地利用 &#x2F;覆盖类型，土壤类型，常年地面覆被（植被、水体、城市等），海岸线，常年气候背景（地表粗糙度、河网等）</td>
<td>NetCDF、GRIB 或定制静态文件。</td>
</tr>
<tr>
<td>海表温度 &#x2F; 冰盖 &#x2F;海冰覆盖 &#x2F;水面状态</td>
<td>用于边界面热量 &#x2F;水汽通量 &#x2F;反射率等地表–海面接口条件。</td>
<td>SST &#x2F;冰覆盖 &#x2F;海冰边界静态或近实况。</td>
</tr>
<tr>
<td>土壤状况 &#x2F;土壤湿度 &#x2F;土壤温度 &#x2F;冻土状态</td>
<td>地表与地下热量和水分交换很关键，需要初始土壤温湿度 &#x2F;温度分布。</td>
<td>多层土壤变量，有些资料可能在已有循环中，但冷启动时要从外部获取。</td>
</tr>
<tr>
<td>气象观测资料（用于分析／同化）</td>
<td>包括：地面观测（气温、湿度、压力、风速&#x2F;风向）、高空气球 (radiosondes)、商用飞机报文（Aircraft reports：AMDAR 等）、雷达资料、卫星资料（包括卫星辐射、遥感水汽、云 &#x2F;冰 &#x2F;辐射相关观测）</td>
<td>多种格式（BUFR, GRIB, 特定卫星的 Level-1／2 辐射数据等）</td>
</tr>
<tr>
<td>遥感产品 &#x2F; 雾 &#x2F;云 &#x2F;水汽 &#x2F;辐射资料</td>
<td>用于改善云、水汽、水露点等变量的初始状态和同化。</td>
<td>卫星 &#x2F;微波探测 &#x2F;红外／可见光等。</td>
</tr>
<tr>
<td>气象分析背景 &#x2F;气候气象背景统计项（误差协方差、背景场）</td>
<td>同化系统通常需要背景误差协方差、先验背景场、观测误差统计等，这些也算“驱动”或辅助资料。</td>
<td>通常来自历史资料或已有同化系统内部积累。</td>
</tr>
</tbody></table>
<h3 id="RAP-特定驱动-amp-关键来源"><a href="#RAP-特定驱动-amp-关键来源" class="headerlink" title="RAP 特定驱动 &amp;关键来源"></a>RAP 特定驱动 &amp;关键来源</h3><p>从文献和 NOAA&#x2F;NCEP 的资料里可以看到 RAP 在冷启动或一般运行中常用以下关键来源：</p>
<ul>
<li>RAP 的边界条件来源是 <strong>Global Forecast System (GFS)</strong> 模型。 <a href="https://repository.library.noaa.gov/view/noaa/31477/noaa_31477_DS1.pdf?utm_source=chatgpt.com">NOAA Institutional Repository+2nco.ncep.noaa.gov+2</a></li>
<li>RAP 的同化（analysis）系统使用多种观测：surface stations、radiosondes（高空气球）、商用飞机、雷达（radar reflectivity &amp; radial velocity 等）、卫星观察资料（水汽、云、辐射等） <a href="https://journals.ametsoc.org/view/journals/mwre/145/8/mwr-d-16-0398.1.xml?utm_source=chatgpt.com">美国气象学会期刊+2nco.ncep.noaa.gov+2</a></li>
<li>静态地形 &#x2F;地表覆盖等 fix 文件由 NOAA 提供。虽然我没找到公开 “RAP fix 文件完全包” 的清单细节，但在 UFS &#x2F; SRW 这样的系统里，“fix” 数据集是必须预先下载的。其内容包括地形、土地覆盖、水体、海岸线、植被&#x2F;植被类型、常年气候场等。 <a href="https://ufs-srweather-app.readthedocs.io/en/develop/UsersGuide/CustomizingTheWorkflow/InputOutputFiles.html?utm_source=chatgpt.com">ufs-srweather-app.readthedocs.io+1</a></li>
</ul>
<h3 id="下载／获取方式"><a href="#下载／获取方式" class="headerlink" title="下载／获取方式"></a>下载／获取方式</h3><p>下面是这些数据通常可以从 NOAA 或关联平台获取的方法／链接：</p>
<table>
<thead>
<tr>
<th>数据／资料</th>
<th>来源／平台</th>
<th>获取方式（FTP &#x2F; HTTP &#x2F; API）</th>
<th>注意事项</th>
</tr>
</thead>
<tbody><tr>
<td>GFS 模型数据（用于 IC &#x2F; LBC）</td>
<td>NOAA NOMADS &#x2F; NWS &#x2F; NCEP 公共模式数据仓库存档</td>
<td>HTTP 或 FTP，例如 NOMADS GRIB2 接口，也可能通过 AWS Open Data &#x2F; S3</td>
<td>要确保选择正确的周期（cycle time），变量（温度、风、湿度等），所需层数，时间范围。冷启动通常需要过去某些时间的场（analysis）＋边界未来演变。</td>
</tr>
<tr>
<td>RAP 自身的分析／预报检验数据</td>
<td>NOAA NCEI（Rapid Refresh &#x2F; RAP archive）</td>
<td>HTTP &#x2F; HTTPS &#x2F; THREDDS 服务 &#x2F;下载站点</td>
<td>若冷启动想对照或用做初始化，也可能用 RAP 的分析场。可能缺少某些观测驱动变量。 <a href="https://www.ncei.noaa.gov/products/weather-climate-models/rapid-refresh-update?utm_source=chatgpt.com">国家环境信息中心+1</a></td>
</tr>
<tr>
<td>观测资料（surface, radiosonde, aircraft, radar, satellite）</td>
<td>多个来源：NCEP &#x2F; NWS &#x2F; NOAA &#x2F; NASA &#x2F;卫星遥感机构 &#x2F;地面观测网 &#x2F;航空报文网络</td>
<td>通常通过 NOAA 的观测数据中心（如 NCEI, NWS）提供 BUFR 或其他格式；卫星资料通过 NOAA&#x2F;NASA 的卫星数据仓库；雷达资料可能通过国防或气象雷达站网络 &#x2F;NEXRAD &#x2F;NOAA Radar Ops 等。</td>
<td>要注意时间戳对齐、质量控制、空间缺口等问题。对于冷启动，初始分析质量很敏感观测资料是否包含完整。</td>
</tr>
<tr>
<td>静态地表资料（terrain, land cover, soil type, etc.）</td>
<td>NOAA &#x2F; USGS &#x2F;其他地面数据机构</td>
<td>下载“fix”文件集；可能 NOAA 提供；USGS 地形、土地覆盖数据库等</td>
<td>分辨率、格式要与模型网格匹配；可能需要投影&#x2F;重网格处理。</td>
</tr>
<tr>
<td>海表温度 &#x2F; 海冰覆盖</td>
<td>NOAA OISST &#x2F;冰冻海洋数据 &#x2F;卫星检验资料</td>
<td>NOAA 的 OISST 数据产品；冰情图 &#x2F;冰盖产品；静态或近实况产品通过 NOAA &#x2F;NASA 网站</td>
<td>要检查最新性、时间延迟；如果模拟包括海冰，条件要做得准确。</td>
</tr>
<tr>
<td>土壤温度／湿度等地表状态</td>
<td>如果已有循环则可从之前模拟中获取；否则可能需要外部气象再分析／重分析产品提供土壤状态（例如再分析资料）</td>
<td>NOAA &#x2F; NASA 再分析数据集（例如 NCEP Reanalysis, ERA5 等）或从类似 RAP archive 如果包含此类变量</td>
<td>冷启动时土壤状态可能是瓶颈，因为土壤调整／湿度分布可能很不准确，会导致地表–大气相互作用误差较大。</td>
</tr>
</tbody></table>
<h3 id="一个可能的冷启动流程（带下载步骤）"><a href="#一个可能的冷启动流程（带下载步骤）" class="headerlink" title="一个可能的冷启动流程（带下载步骤）"></a>一个可能的冷启动流程（带下载步骤）</h3><p>为了更清晰，这里举一个示例流程（假设你要冷启动 RAPv5，13-km 分辨率）：</p>
<ol>
<li>从 NOAA &#x2F; NOMADS 下载 GFS 的最新分析场（例如 00Z 分析）所需的变量：温度、风速（u, v）、湿度、水汽、气压、高度、地表压力、地面温度、土壤温度／湿度等。</li>
<li>下载静态地形 &#x2F;地表资料 fix 文件集：地形边界，高程，土地覆盖类型，水体掩膜（land&#x2F;water mask），植被类型等。</li>
<li>如果你的区域包含海岸或海面，获取最近的 SST &#x2F;海冰掩膜资料。</li>
<li>获取观测资料以用于分析同化：地面气象站、飞机报文、高空气球、卫星水汽&#x2F;云&#x2F;辐射 &#x2F;雷达反射率和径向速度等。</li>
<li>准备背景误差协方差 &#x2F;先验背景场，如果你的同化系统需要这类静态或半静态资料。</li>
<li>将这些资料格式化为模型所需格式（GRIB2&#x2F;NEMSIO&#x2F;或者模型专用输入格式），包括插值到模型网格。</li>
<li>配置 namelist／模式启动控制文件（指定初始时间、边界条件频率、同化窗口等）。</li>
</ol>
<hr>
<h3 id="初始场和边界条件-1"><a href="#初始场和边界条件-1" class="headerlink" title="初始场和边界条件"></a>初始场和边界条件</h3><ul>
<li><strong>GFS 分析&#x2F;预报场</strong><ul>
<li>用作 RAP 冷启动的初始条件和外部边界条件。</li>
<li><strong>数据源</strong>：<ul>
<li>NOAA NOMADS: <a href="https://nomads.ncep.noaa.gov/">https://nomads.ncep.noaa.gov</a></li>
<li>NCEI 数据归档: <a href="https://www.ncei.noaa.gov/">https://www.ncei.noaa.gov/</a></li>
</ul>
</li>
<li><strong>文件格式</strong>：GRIB2</li>
</ul>
</li>
</ul>
<h3 id="观测资料（用于分析-x2F-同化）-1"><a href="#观测资料（用于分析-x2F-同化）-1" class="headerlink" title="观测资料（用于分析&#x2F;同化）"></a>观测资料（用于分析&#x2F;同化）</h3><ul>
<li><strong>地面观测（SYNOP、METAR、SHIP、BUOY）</strong></li>
<li><strong>探空（RAOB）</strong></li>
<li><strong>飞机观测（ACARS、AMDAR）</strong></li>
<li><strong>卫星反演产品（GOES radiance、AMSU、IASI、ATMS 等）</strong></li>
<li><strong>雷达资料（NEXRAD Level II&#x2F;III，radial winds，reflectivity）</strong></li>
<li><strong>GPS 掩星、GPS PW</strong></li>
<li><strong>航空模式专用：PIREPs</strong><ul>
<li><strong>获取方式</strong>：<ul>
<li><strong>NCEP Data Tank &#x2F; NCEI</strong>: <a href="https://www.ncei.noaa.gov/">https://www.ncei.noaa.gov</a></li>
<li><strong>MADIS（Meteorological Assimilation Data Ingest System）</strong>: <a href="https://madis.ncep.noaa.gov/">https://madis.ncep.noaa.gov</a></li>
<li><strong>NOAA AWS S3 buckets</strong>（含部分雷达&#x2F;卫星数据）。</li>
<li>归档观测可通过 <code>AWS CLI</code> 或 <code>wget/curl</code> 获取。</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="陆面-x2F-下垫面资料-1"><a href="#陆面-x2F-下垫面资料-1" class="headerlink" title="陆面&#x2F;下垫面资料"></a>陆面&#x2F;下垫面资料</h3><ul>
<li><strong>土地利用&#x2F;地表类型</strong>（MODIS&#x2F;USGS NLCD）</li>
<li><strong>土壤湿度&#x2F;土壤温度（GFS 或 NLDAS）</strong></li>
<li><strong>积雪数据（IMS Daily Snow, SNODAS）</strong></li>
<li><strong>海表温度（RTG_SST, GHRSST）</strong><ul>
<li><strong>数据源</strong>：<ul>
<li>NCEP RTG_SST (<a href="https://nomads.ncep.noaa.gov/pub/data/nccf/com/rtgsst/prod/">https://nomads.ncep.noaa.gov/pub/data/nccf/com/rtgsst/prod/</a>)</li>
<li>NSIDC &#x2F; NOAA IMS (雪盖数据)</li>
<li>NASA LAADS DAAC (MODIS 数据)</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="化学-x2F-气溶胶数据（若启用）"><a href="#化学-x2F-气溶胶数据（若启用）" class="headerlink" title="化学&#x2F;气溶胶数据（若启用）"></a>化学&#x2F;气溶胶数据（若启用）</h3><ul>
<li><strong>SMOKE 模型产物或 HRRR-Smoke 初值</strong>（火点、排放数据）<ul>
<li><strong>来源</strong>：<ul>
<li>NOAA ARL &#x2F; EPA。</li>
<li>Fire INventory from NCAR (FINN)。</li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>RAP fix</title>
    <url>/2022/05/01/Tool/RAP%20fix/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="RAP-fix"><a href="#RAP-fix" class="headerlink" title="RAP fix"></a>RAP fix</h2><p><a href="https://www.nco.ncep.noaa.gov/pmb/codes/nwprod/rap.v5.1.20/fix/">https://www.nco.ncep.noaa.gov/pmb/codes/nwprod/rap.v5.1.20/fix/</a></p>
<p>下面把 RAP v5.1.20 <code>fix/</code> 目录（你贴出的 46 个文件 + smoke&#x2F; 子目录）按“用途分组”逐一说明：存什么数据、哪个模块用、是否需要随时间更新。<br>（“静态”&#x3D;一次下载即可；“动态”&#x3D;业务上需周期性替换）</p>
<hr>
<h3 id="GSI-同化核心配置（文本表）"><a href="#GSI-同化核心配置（文本表）" class="headerlink" title="GSI 同化核心配置（文本表）"></a>GSI 同化核心配置（文本表）</h3><ol>
<li><code>global_satinfo.txt_rapv5_for_CIRS_FSR_ATMS_ABI_20190702</code><br>静态 – 卫星通道使用开关、误差特征值，对应 2019-07-02 版 CrIS&#x2F;ATMS&#x2F;ABI 配置；<code>global_satinfo.txt</code> 的 RAPv5 专用快照。</li>
<li><code>rap_global_satinfo.txt</code><br>静态 – 业务默认卫星通道信息（read by GSI, satinfo）。</li>
<li><code>rap_global_ozinfo.txt</code><br>静态 – 臭氧卫星通道信息（omg_stats, ozo_info）。</li>
<li><code>rap_global_pcpinfo.txt</code><br>静态 – 降水反演&#x2F;质控阈值表（pcp_info）。</li>
<li><code>rap_anavinfo_arw_netcdf</code><br>静态 – 分析变量维度表：哪些变量在哪些网格、层数、是否平衡约束等；GSI 读入。</li>
<li><code>rap_nam_regional_convinfo</code> &#x2F; <code>_old</code><br>静态 – 常规观测（探空、地面、飞机、风廓线）误差参数、质控限值；<code>_old</code> 用于回滚试验。</li>
<li><code>nam_regional_convinfo_RAP.txt</code><br>静态 – NAM 区域版 convinfo 的 RAP 副本，保持与 NAM 同版本。</li>
<li><code>rap_nam_errtable.r3dv</code><br>静态 – 垂直相关误差表（3D-VAR 背景误差垂直相关长度）。</li>
</ol>
<hr>
<h3 id="背景误差与权重系数（二进制）"><a href="#背景误差与权重系数（二进制）" class="headerlink" title="背景误差与权重系数（二进制）"></a>背景误差与权重系数（二进制）</h3><ol start="9">
<li><code>rap_berror_stats_global</code><br>静态 – 3-D 背景误差标准差、水平&#x2F;垂直相关尺度；GSI 构造 B 矩阵。<br>10–25. <code>rap_wgt_91/130/185/187/189/195/200/221/236/242/252</code><br>静态 – 各 WRF 物理组合（mp_physics&#x3D;5, ra_lw_physics&#x3D;1…）对应的“自适应”背景误差权重；GSI 根据运行物理套件动态链接其中一个。</li>
</ol>
<hr>
<h3 id="地表-x2F-植被-x2F-陆面静态场"><a href="#地表-x2F-植被-x2F-陆面静态场" class="headerlink" title="地表&#x2F;植被&#x2F;陆面静态场"></a>地表&#x2F;植被&#x2F;陆面静态场</h3><ol start="26">
<li><code>rap_BIOME_NA_13km.bin</code><br>  静态 – 13 km 北美 16 类生物群区（BIOME）指数，NOAH-MP 植被参数。</li>
<li><code>rap_MCD12_2013_NA_13km.bin</code><br>  静态 – MODIS MCD12Q1 2013 年土地覆盖（IGBP 17 类）重采样到 13 km。</li>
<li><code>rap_RTG_SST_landmask.dat</code><br>  静态 – RTG 海温网格对应的陆域掩膜（0&#x3D;海，1&#x3D;陆）。</li>
<li><code>rap_gvf_VIIRS_4KM.MAX.1gd4r.new</code> &#x2F; <code>.MIN.1gd4r.new</code><br>  动态 – VIIRS 4 km 绿度分数（GVF）年最大&#x2F;最小值，用于火灾天气指数等。</li>
<li><code>rap_conus_slmask.grib2</code><br>  静态 – CONUS 15 km 海陆掩膜（0&#x2F;1）。</li>
</ol>
<hr>
<h3 id="地形与“smart”掩膜"><a href="#地形与“smart”掩膜" class="headerlink" title="地形与“smart”掩膜"></a>地形与“smart”掩膜</h3><ol start="31">
<li><code>rap_conus_elevtiles.grib2</code><br>  静态 – 15 km 地形高度（HGT）与坡度。<br>   32–36. <code>rap_smartmask*.grib2</code><br>  静态 – 地形-坡度-陆面类型综合掩膜：</li>
</ol>
<ul>
<li><code>ak3</code> &#x3D; Alaska 3 km，  </li>
<li><code>hi</code> &#x3D; Hawaii 3 km，  </li>
<li><code>pr</code> &#x3D; Puerto-Rico 2 km，  </li>
<li><code>pr1p25</code> &#x2F; <code>pr2p5</code> &#x3D; 1.25 km &#x2F; 2.5 km 分辨率版本。<br> 在 GSI 地形滤波、云掩膜、风质量控制时读取。<br>   37–41. <code>rap_smarttopo*.grb2</code><br> 静态 – 对应上述掩膜的“地形顶高度”场，用于复杂岛屿地形重力波拖曳参数化。</li>
</ul>
<hr>
<h3 id="卫星系数与仪器参数"><a href="#卫星系数与仪器参数" class="headerlink" title="卫星系数与仪器参数"></a>卫星系数与仪器参数</h3><ol start="42">
<li><code>rap_atms_beamwidth.txt</code><br>  静态 – ATMS 各通道波束宽度（度），用于定位&#x2F;重叠剔除。</li>
<li><code>rap_imgr_insat3d.SpcCoeff.bin</code> &#x2F; <code>.TauCoeff.bin</code><br>  静态 – INSAT-3D&#x2F;3DR 成像仪 RTTOV 系数（光谱与透过率），供辐射传输调用。</li>
</ol>
<hr>
<h3 id="实时黑名单-x2F-白名单（动态更新）"><a href="#实时黑名单-x2F-白名单（动态更新）" class="headerlink" title="实时黑名单&#x2F;白名单（动态更新）"></a>实时黑名单&#x2F;白名单（动态更新）</h3><ol start="44">
<li><code>rap_current_bad_aircraft.txt</code><br>  动态 – 当月飞机站号黑名单（TailNumber），GSI 自动剔除。</li>
<li><code>rap_current_mesonet_uselist.txt</code><br>  动态 – 通过 QC 考核的 Mesonet 站点白名单，仅列于此的台站才进入同化。</li>
<li><code>rap_gsd_sfcobs_provider.txt</code><br>  动态 – GSD 地面观测（METAR、SAO、Maritime）提供商代码与优先级表。</li>
</ol>
<hr>
<h3 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h3><ol start="47">
<li><code>rap_profdat</code><br>  静态 – 垂直层气压&#x2F;高度对照表，GSI 写 grads 输出时引用。</li>
<li><code>rap_gridspecs</code><br>  静态 – RAP 网格定义（投影类型、角点、分辨率、维数），GSI 与 post 统一读取。</li>
<li><code>smoke/</code> 子目录<br>  动态 – 含 <code>smoke-lat-lon-*.bin</code> 等，为 NOAA-EPA 联合烟雾预报系统（NESDIS HMS 热点、BlueSky 排放）提供静态掩膜与系数，RAP-Chem 运行时链接。</li>
</ol>
<hr>
<p><strong>带 “current” 或日期戳</strong> 的文件需每月&#x2F;季度重新拉取以保持业务同步。</p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>RAP ecflow</title>
    <url>/2022/05/01/Tool/RAP%20ecflow/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="RAP-ecflow"><a href="#RAP-ecflow" class="headerlink" title="RAP ecflow"></a>RAP ecflow</h2><h4 id="启用ecflow目录"><a href="#启用ecflow目录" class="headerlink" title="启用ecflow目录"></a>启用ecflow目录</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ecflow_server --port=3141</span><br></pre></td></tr></table></figure>

<h4 id="另开一个窗口，生成RAP作业集供ecFlow调用："><a href="#另开一个窗口，生成RAP作业集供ecFlow调用：" class="headerlink" title="另开一个窗口，生成RAP作业集供ecFlow调用："></a>另开一个窗口，生成RAP作业集供ecFlow调用：</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd $&#123;ROOT_DIR&#125;/workflow</span><br><span class="line">rm -rf sy_nwp_rap_v2020.def</span><br><span class="line">./sy_nwp_rap_v2020.py</span><br></pre></td></tr></table></figure>

<h4 id="加载作业集"><a href="#加载作业集" class="headerlink" title="加载作业集"></a>加载作业集</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ecflow_client --load=sy_nwp_rap_v2020.def</span><br><span class="line">ecflow_client --suites sy_nwp_rap_v2020</span><br></pre></td></tr></table></figure>

<h4 id="打开交互界面查看"><a href="#打开交互界面查看" class="headerlink" title="打开交互界面查看"></a>打开交互界面查看</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ecflow_ui</span><br></pre></td></tr></table></figure>

<p><a href="https://perillaroc.github.io/ecflow-tutorial-cn/chap02/use-ecflow-ui/">https://perillaroc.github.io/ecflow-tutorial-cn/chap02/use-ecflow-ui/</a></p>
<ul>
<li><p>选择 Servers 菜单 → Manage Servers →  Add Server：</p>
<p>为 ecflow 服务器取个名字（rap），添加 Host （localhost）和 Port（3141），点击添加按钮</p>
</li>
<li><p>选择 Tools 菜单 → Preferences：</p>
<p>左边栏选择 Menus → 将右侧 menu mode 修改为 Administrator</p>
</li>
<li><p>从 Servers 菜单的 All servers… 中选择要显示的服务</p>
<p>层层点击小三角，即可分层显示作业目录</p>
</li>
</ul>
<h3 id="作业流程说明"><a href="#作业流程说明" class="headerlink" title="作业流程说明"></a>作业流程说明</h3><p>第一次基本流程跑通：</p>
<p>Jrap_makebc → Jrap_analyses → jrap_updatebc → jrap_forecast → jrap_post → jrap_cleanup</p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>RAP run</title>
    <url>/2022/05/01/Tool/RAP%20run/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="RAP-run"><a href="#RAP-run" class="headerlink" title="RAP run"></a>RAP run</h2><h3 id="STEP-1-基础流程跑通（不含观测处理）："><a href="#STEP-1-基础流程跑通（不含观测处理）：" class="headerlink" title="STEP 1 基础流程跑通（不含观测处理）："></a>STEP 1 基础流程跑通（不含观测处理）：</h3><p>Jrap_makebc → Jrap_analyses → jrap_updatebc → jrap_forecast → jrap_post → jrap_cleanup</p>
<h4 id="JRAP-MAKEBC"><a href="#JRAP-MAKEBC" class="headerlink" title="JRAP_MAKEBC"></a>JRAP_MAKEBC</h4><p>实际调用scripts&#x2F;exrap_makebc.sh</p>
<h3 id="JRAP-ANALYSES"><a href="#JRAP-ANALYSES" class="headerlink" title="JRAP_ANALYSES"></a>JRAP_ANALYSES</h3><p>实际调用scripts&#x2F;exrap_analysis.sh</p>
<table>
<thead>
<tr>
<th>阶段</th>
<th>关键动作</th>
<th>目的</th>
</tr>
</thead>
<tbody><tr>
<td><strong>1. 环境准备</strong></td>
<td>进入 <code>$DATA/gsiprd</code>，设 OMP 线程 2，栈 500 M</td>
<td>为 GSI 提供运行环境</td>
</tr>
<tr>
<td><strong>2. 背景场获取</strong></td>
<td>按优先序查找：<br>① 部分循环 1 h 预报 (<code>rap_&#123;-1&#125;f001</code>)<br>② 最近完整循环 3 h 间隔预报 (<code>rap_&#123;-3/6/9…&#125;f03/06/09…</code>)<br>③ 冷启动用 <code>wrfinput_d01_$&#123;time_str&#125;</code></td>
<td>确保总有初始场可用，避免失败</td>
</tr>
<tr>
<td><strong>3. 卫星偏差文件</strong></td>
<td>回溯 120 个循环，定位最近一套 <code>radstat./satbias./satbias_pc.</code></td>
<td>为辐射资料提供偏差修正</td>
</tr>
<tr>
<td><strong>4. SST 更新</strong></td>
<td>仅在 01Z 循环，调用 <code>rap_process_sst</code> 把 RTG 0.083° GRIB2 插值到网格</td>
<td>保证海面温度时效性</td>
</tr>
<tr>
<td><strong>5. 观测资料软链接</strong></td>
<td>逐类检查 <code>prepbufr</code>、<code>mosaic</code>、<code>nasacloud</code>、<code>lghtng</code>、<code>nexrad</code>、<code>satwnd</code>、AMSU-A&#x2F;B、MHS、ATMS、CrIS、IASI、SEVIRI、AIRS、SSMIS、GOESND、EARS、DirectBroadcast 等 BUFR 文件；存在即 <code>ln -s</code> 到工作目录</td>
<td>为 GSI 提供所有可用观测</td>
</tr>
<tr>
<td><strong>6. 固定文件 &amp; CRTM 系数</strong></td>
<td>复制 <code>anavinfo</code>、<code>berror</code>、<code>convinfo</code>、<code>ozinfo</code>、<code>pcpinfo</code>、卫星角度&#x2F;光谱&#x2F;透射系数、地表发射率等；按 <code>satinfo</code> 列表自动链接 CRTM 系数</td>
<td>构建 GSI 所需的静态输入</td>
</tr>
<tr>
<td><strong>7. 集合 hybrid 背景误差</strong></td>
<td>查找最近 80 个成员的 GFS EnKF 预报，构建 <code>filelist03</code>，若成员足 80 则 <code>beta1_inv=0.15</code> 启用 hybrid</td>
<td>提高分析精度</td>
</tr>
<tr>
<td><strong>8. 第一轮 GSI（主要同化）</strong></td>
<td><code>mpiexec -n 192 ./rap_gsi</code> 读取 <code>gsiparm.anl</code>（<code>miter=2</code>）生成 <code>sigf03</code>（分析增量）</td>
<td>完成资料同化</td>
</tr>
<tr>
<td><strong>9. 诊断文件收集</strong></td>
<td>将 <code>pe*.$&#123;type&#125;_01/03</code> 合并为 <code>diag_$&#123;type&#125;_ges/anl.$&#123;PDY&#125;$&#123;cyc&#125;</code>，并打包 <code>radstat.rap_$&#123;PDY&#125;$&#123;cyc&#125;</code>、<code>satbias_out_$&#123;PDY&#125;$&#123;cyc&#125;</code> 供下次循环使用</td>
<td>支持偏差更新与后评估</td>
</tr>
<tr>
<td><strong>10. 第二轮 GSI（云分析&#x2F;增量更新）</strong></td>
<td>关闭 hybrid，设 <code>cloudanalysistype=6</code>，以 <code>sigf03_step1</code> 为初值再跑 GSI，输出最终 <code>wrf_inout</code></td>
<td>进一步优化湿度&#x2F;云场</td>
</tr>
<tr>
<td><strong>11. 积雪修剪</strong></td>
<td>00Z 循环调用 <code>rap_process_imssnow</code> 用 IMS 雪盖调整模式雪场</td>
<td>避免雪盖异常</td>
</tr>
<tr>
<td><strong>12. 结果输出</strong></td>
<td>把最终 <code>wrf_inout</code> 复制为 <code>rap.t$&#123;cyc&#125;z.wrf_inout</code> 到 <code>$COMOUT</code></td>
<td>供后续 forecast 任务使用</td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>RAP structure</title>
    <url>/2022/05/01/Tool/RAP%20structure/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="RAP-structure"><a href="#RAP-structure" class="headerlink" title="RAP structure"></a>RAP structure</h2><h3 id="sms-x2F-makesms-目录"><a href="#sms-x2F-makesms-目录" class="headerlink" title="sms&#x2F;makesms 目录"></a>sms&#x2F;makesms 目录</h3><hr>
<p>👉 归纳为一条主线：<br> <strong>mirror_ftp&#x2F;STARTTIME → MAKEBC&#x2F;UPDATEBC → ANALYSIS&#x2F;PROCESS(ENKF) → FCST&#x2F;FCST_Pcyc → POSTMGR&#x2F;产品生成（GEMPAK、SNDP） → SMOKEPREP（水汽&#x2F;气溶胶专项）</strong></p>
<p><strong>初始化</strong></p>
<ul>
<li><code>mirror_ftp</code> 下载外部数据</li>
<li><code>STARTTIME</code> 确定起报时刻</li>
<li><code>jrap_makebc_xx.bsub</code> 生成边界条件</li>
</ul>
<p><strong>循环更新</strong></p>
<ul>
<li><code>jrap_updatebc_xx.bsub</code> &#x2F; <code>jrap_updatebc_pcyc_xx.bsub</code> 周期更新</li>
</ul>
<p><strong>分析&#x2F;同化</strong></p>
<ul>
<li><code>jrap_analysis_xx.bsub</code> &#x2F; <code>jrap_analysis_pcyc_xx.bsub</code></li>
<li><code>jrap_process_xx.bsub</code> （包括 <code>enkf</code>）</li>
</ul>
<p><strong>数值预报</strong></p>
<ul>
<li><code>jrap_fcst_xx.bsub</code> （不同起报时次）</li>
<li><code>jrap_fcst_pcyc_xx.bsub</code> （循环预报）</li>
</ul>
<p><strong>后处理</strong></p>
<ul>
<li><code>jrap_postmgr_xx.bsub</code> 负责整体后处理调度</li>
<li><code>jrap_gempak_xx.bsub</code> 生成产品</li>
<li><code>jrap_sndp_xx.bsub</code> 探空后处理</li>
</ul>
<p><strong>专项处理</strong></p>
<ul>
<li><code>jrap_smokeprep_xx.bsub</code> &#x2F; <code>jrap_smokeprep_pcyc_xx.bsub</code> 烟雾准备</li>
</ul>
<hr>
<p>多个<strong>模板驱动的作业脚本批量生成器</strong>，用于快速生成 RAP 模型在 24 小时内所有整点（及偏循环）分析所需的 PBS 作业脚本，<strong>本身不运行模型，也不提交任务</strong>，仅为工作流准备脚本文件。举例说明如下：</p>
<h4 id="make-sms-analysis"><a href="#make-sms-analysis" class="headerlink" title="make_sms_analysis"></a>make_sms_analysis</h4><ul>
<li><strong>模板文件</strong>：<code>jrap_analysis_XX.bsub</code></li>
<li><strong>目标文件</strong>：<code>jrap_analysis_$&#123;cyc&#125;.bsub</code></li>
<li><strong>目的</strong>：为每个小时生成一个独立的 PBS 作业脚本，用于运行 RAP 全循环分析。</li>
<li><strong>模板文件</strong>：<code>jrap_analysis_pcyc_XX.bsub</code></li>
<li><strong>目标文件</strong>：<code>jrap_analysis_pcyc_$&#123;cyc&#125;.bsub</code></li>
<li><strong>作用</strong>：为偏循环（partial cycle）分析生成作业脚本，通常用于 RAP 在 03Z 和 15Z 的冷启动前处理。</li>
</ul>
<h4 id="make-sms-fcst"><a href="#make-sms-fcst" class="headerlink" title="make_sms_fcst"></a>make_sms_fcst</h4><ul>
<li><strong>模板文件</strong>：<code>jrap_fcst_XX.bsub</code></li>
<li><strong>目标文件</strong>：<code>jrap_fcst_$&#123;cyc&#125;.bsub</code></li>
<li><strong>目的</strong>：为每个小时生成一个独立的 PBS 作业脚本，用于运行 RAP 全循环预报。</li>
<li><strong>模板文件</strong>：<code>jrap_fcst_pcyc_XX.bsub</code></li>
<li><strong>目标文件</strong>：<code>jrap_fcst_pcyc_$&#123;cyc&#125;.bsub</code></li>
<li><strong>作用</strong>：为偏循环（partial cycle）预报生成作业脚本，通常用于 RAP 在 03Z 和 15Z 冷启动后的短周期预报。</li>
</ul>
<h3 id="sms-目录"><a href="#sms-目录" class="headerlink" title="sms 目录"></a>sms 目录</h3><h4 id="jrap-makebc-00-x2F-06-x2F-12-x2F-18-bsub"><a href="#jrap-makebc-00-x2F-06-x2F-12-x2F-18-bsub" class="headerlink" title="jrap_makebc_00&#x2F;06&#x2F;12&#x2F;18.bsub"></a>jrap_makebc_00&#x2F;06&#x2F;12&#x2F;18.bsub</h4><p><strong>RAP 模式“makebc”步骤的 PBS 批量提交脚本</strong>，功能一句话概括：</p>
<p>在 Cray 集群上申请 1 节点 128 核，加载编译&#x2F;库环境，调用业务驱动脚本 <code>JRAP_MAKEBC</code> 生成 RAP 区域边界条件与静态链接库，并把标准输出&#x2F;错误写到指定路径。</p>
<p>最后一行：<code>$&#123;NWROOT&#125;/rap.$&#123;rap_ver&#125;/jobs/JRAP_MAKEBC</code>，完成：</p>
<ul>
<li>设置日期、目录、路径；</li>
<li>执行 <code>exrap_makebc.sh</code> 生成边界&#x2F;静态场；</li>
<li>输出归档到 <code>/com/</code> 与 <code>/nwges/rapbc</code>。</li>
</ul>
<h4 id="jrap-process-XX-bsub"><a href="#jrap-process-XX-bsub" class="headerlink" title="jrap_process_XX.bsub"></a>jrap_process_XX.bsub</h4><p><strong>PBS 作业脚本模板</strong>，用于提交 RAP 模型某一小时（XX）的 <strong>水凝物处理任务</strong>，负责加载环境、运行水汽&#x2F;水凝物处理脚本 <code>JRAP_PROCESS_HYDRO</code>，提取并加工雷达、降水、云水等相关变量，并<strong>主动触发下一个小时的分析与烟雾预处理任务</strong>，是 RAP 实时循环系统中<strong>水凝物产品生成与循环推进的关键环节</strong>。</p>
<p>提交下一步任务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">qsub <span class="variable">$&#123;NWROOT&#125;</span>/rap.<span class="variable">$&#123;rap_ver&#125;</span>/sms/jrap_analysis_XX.bsub</span><br><span class="line">qsub <span class="variable">$&#123;NWROOT&#125;</span>/rap.<span class="variable">$&#123;rap_ver&#125;</span>/sms/jrap_smokeprep_XX.bsub</span><br></pre></td></tr></table></figure>

<h4 id="jrap-analysis-XX-bsub"><a href="#jrap-analysis-XX-bsub" class="headerlink" title="jrap_analysis_XX.bsub"></a>jrap_analysis_XX.bsub</h4><p><strong>PBS 作业脚本模板</strong>，用于提交 RAP 模型某一小时（XX）的<strong>分析任务</strong>，负责加载环境、运行分析主脚本 <code>JRAP_ANALYSIS</code>，在完成后自动提交<strong>边界条件更新任务</strong>，是 RAP 实时循环系统中<strong>分析环节的标准作业入口</strong>。</p>
<p>提交后续任务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">qsub <span class="variable">$&#123;NWROOT&#125;</span>/rap.<span class="variable">$&#123;rap_ver&#125;</span>/sms/jrap_updatebc_XX.bsub</span><br></pre></td></tr></table></figure>

<h4 id="jrap-smokeprep-XX-bsub"><a href="#jrap-smokeprep-XX-bsub" class="headerlink" title="jrap_smokeprep_XX.bsub"></a>jrap_smokeprep_XX.bsub</h4><p><strong>PBS 作业脚本模板</strong>，用于提交 RAP 模型某一小时（XX）的 <strong>烟雾预处理任务</strong>，负责加载环境、运行烟雾初始场生成脚本 <code>JRAP_PREP_SMOKE</code>，将火灾排放数据转化为 WRF 可用的烟雾初始场，是 RAP 空气质量模块中<strong>烟雾模拟的前置关键环节</strong>。</p>
<h4 id="jrap-analysis-pcyc-XX-bsub"><a href="#jrap-analysis-pcyc-XX-bsub" class="headerlink" title="jrap_analysis_pcyc_XX.bsub"></a>jrap_analysis_pcyc_XX.bsub</h4><p> <strong>PBS 作业脚本模板</strong>，用于提交 RAP 模型某一小时（XX）的<strong>偏循环分析任务</strong>，负责加载环境、运行偏循环分析主脚本 <code>JRAP_ANALYSIS_PCYC</code>，并在完成后提交<strong>偏循环边界条件更新任务</strong>，是 RAP 实时循环系统中<strong>冷启动过渡与快速更新的关键环节</strong>。</p>
<p>提交后续任务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">qsub <span class="variable">$&#123;NWROOT&#125;</span>/rap.<span class="variable">$&#123;rap_ver&#125;</span>/sms/jrap_updatebc_pcyc_XX.bsub</span><br></pre></td></tr></table></figure>

<h4 id="jrap-updatebc-XX-bsub"><a href="#jrap-updatebc-XX-bsub" class="headerlink" title="jrap_updatebc_XX.bsub"></a>jrap_updatebc_XX.bsub</h4><p> <strong>PBS 作业脚本模板</strong>，用于提交 RAP 模型某一小时（XX）的<strong>边界条件更新任务</strong>，负责加载环境、运行更新主脚本 <code>JRAP_UPDATEBC</code>，并在完成后自动提交<strong>预报任务</strong>和<strong>后处理管理任务</strong>，是 RAP 实时循环系统中<strong>连接分析与预报的关键环节</strong>。</p>
<p>提交后续任务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">qsub $&#123;NWROOT&#125;/rap.$&#123;rap_ver&#125;/sms/jrap_fcst_XX.bsub</span><br><span class="line">qsub $&#123;NWROOT&#125;/rap.$&#123;rap_ver&#125;/sms/jrap_postmgr_XX.bsub</span><br></pre></td></tr></table></figure>

<h4 id="jrap-fcst-XX-bsub"><a href="#jrap-fcst-XX-bsub" class="headerlink" title="jrap_fcst_XX.bsub"></a>jrap_fcst_XX.bsub</h4><p><strong>PBS 作业脚本模板</strong>，用于提交 RAP 模型某一小时（XX）的<strong>预报任务</strong>，负责加载环境、运行 WRF-ARW 主程序，完成从分析场出发的短期数值天气预报，是 RAP 实时循环系统中<strong>最核心的预报环节</strong>。</p>
<h4 id="jrap-postmgr-XX-bsub"><a href="#jrap-postmgr-XX-bsub" class="headerlink" title="jrap_postmgr_XX.bsub"></a>jrap_postmgr_XX.bsub</h4><p><strong>PBS 作业脚本模板</strong>，用于提交 RAP 模型某一小时（XX）的<strong>后处理管理任务</strong>，负责加载环境、运行后处理调度脚本 <code>JRAP_POSTMGR</code>，完成预报产品的生成、分发和清理，是 RAP 实时循环系统中<strong>产品输出与归档的关键环节</strong>。</p>
<h4 id="jrap-fcst-pcyc-XX-bsub"><a href="#jrap-fcst-pcyc-XX-bsub" class="headerlink" title="jrap_fcst_pcyc_XX.bsub"></a>jrap_fcst_pcyc_XX.bsub</h4><p><strong>PBS 作业脚本模板</strong>，用于提交 RAP 模型某一小时（XX）的<strong>偏循环预报任务</strong>，负责加载环境、运行短周期 WRF 预报主脚本 <code>JRAP_FORECAST_PCYC</code>，并<strong>主动触发下一个小时的偏循环分析与烟雾预处理任务</strong>，是 RAP 快速更新循环中<strong>驱动链式推进的关键环节</strong>。</p>
<p>提交下一步任务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">qsub <span class="variable">$&#123;NWROOT&#125;</span>/rap.<span class="variable">$&#123;rap_ver&#125;</span>/sms/jrap_analysis_pcyc_YY.bsub</span><br><span class="line">qsub <span class="variable">$&#123;NWROOT&#125;</span>/rap.<span class="variable">$&#123;rap_ver&#125;</span>/sms/jrap_smokeprep_pcyc_YY.bsub</span><br></pre></td></tr></table></figure>

<h4 id="jrap-sndp-XX-bsub"><a href="#jrap-sndp-XX-bsub" class="headerlink" title="jrap_sndp_XX.bsub"></a>jrap_sndp_XX.bsub</h4><p><strong>PBS 作业脚本模板</strong>，用于提交 RAP 模型某一小时（XX）的 <strong>探空报处理任务</strong>，负责加载环境、运行探空后处理脚本 <code>JRAP_POSTSND</code>，将 WRF 预报结果转换为 BUFR 格式探空报文，是 RAP 实时循环系统中<strong>观测产品生成与验证支持的关键环节</strong>。</p>
<h4 id="jrap-gempak-XX-bsub"><a href="#jrap-gempak-XX-bsub" class="headerlink" title="jrap_gempak_XX.bsub"></a>jrap_gempak_XX.bsub</h4><p><strong>PBS 作业脚本模板</strong>，用于提交 RAP 模型某一小时（XX）的 <strong>GEMPAK 后处理任务</strong>，负责加载环境、运行 GEMPAK 产品生成脚本 <code>JRAP_GEMPAK</code>，将 WRF 预报结果转换为 GEMPAK 格式图形产品，是 RAP 实时循环系统中<strong>图形产品生成的关键环节</strong>。</p>
<h3 id="jobs-目录"><a href="#jobs-目录" class="headerlink" title="jobs 目录"></a>jobs 目录</h3><hr>
<p>👉 总体顺序可以理解为：<br> <strong>MAKEBC&#x2F;UPDATEBC → ANALYSIS → FORECAST → POST&#x2F;产品生成 → CLEANUP</strong><br> （其中 PCYC 版本用于循环预报，RESTART 用于恢复）。</p>
<p>逻辑顺序大致可以分为以下几个阶段：</p>
<ol>
<li><strong>准备边界条件（BC）</strong><ul>
<li><code>JRAP_MAKEBC</code>：生成初始和边界条件。</li>
<li><code>JRAP_UPDATEBC</code> &#x2F; <code>JRAP_UPDATEBC_PCYC</code>：周期性更新边界条件。</li>
</ul>
</li>
<li><strong>分析与初值准备</strong><ul>
<li><code>JRAP_ANALYSIS</code>：进行初始分析。</li>
<li><code>JRAP_ANALYSIS_PCYC</code>：周期性分析。</li>
</ul>
</li>
<li><strong>预报计算</strong><ul>
<li><code>JRAP_FORECAST</code>：主预报作业。</li>
<li><code>JRAP_FORECAST_PCYC</code>：周期性预报。</li>
<li><code>JRAP_FORECAST_RESTART</code>：断点续跑&#x2F;重启。</li>
</ul>
</li>
<li><strong>后处理与产品生成</strong><ul>
<li><code>JRAP_POST</code>：主后处理。</li>
<li><code>JRAP_POSTMGR</code>：后处理管理。</li>
<li><code>JRAP_POSTSND</code>：探空&#x2F;点位后处理。</li>
<li><code>JRAP_GEMPAK</code> &#x2F; <code>JRAP_GEMPAK_META</code>：生成可视化产品。</li>
<li><code>JRAP_WRFBUFR</code>：生成 BUFR 格式数据。</li>
<li><code>JRAP_PREP_SMOKE</code> &#x2F; <code>JRAP_PREP_SMOKE_PCYC</code>：烟雾&#x2F;气溶胶数据准备。</li>
<li><code>JRAP_PROCESS_HYDRO</code>：水文相关处理。</li>
</ul>
</li>
<li><strong>清理阶段</strong><ul>
<li><code>JRAP_CLEANUP</code>：删除临时文件，释放空间。</li>
</ul>
</li>
</ol>
<hr>
<h4 id="JRAP-MAKEBC"><a href="#JRAP-MAKEBC" class="headerlink" title="JRAP_MAKEBC"></a>JRAP_MAKEBC</h4><ol>
<li>用 <code>setpdy.sh</code> + <code>compath.py</code> 获取时间戳与标准路径；</li>
<li>用 <code>mkdir</code>&#x2F;<code>env</code>&#x2F;<code>postmsg</code> 完成目录、日志、状态管理；</li>
<li><strong>唯一核心调用</strong>是 <code>exrap_makebc.sh</code>（或由 <code>$&#123;RAP_MAKEBCSH&#125;</code> 重定义），由它完成真正的 WPS 预处理、初始场裁剪和边界文件生成。</li>
</ol>
<h4 id="JRAP-ANALYSIS"><a href="#JRAP-ANALYSIS" class="headerlink" title="JRAP_ANALYSIS"></a>JRAP_ANALYSIS</h4><ol>
<li>用 <code>setpdy.sh</code> + <code>compath.py</code> 构造时间戳与目录；</li>
<li>用 <code>mkdir</code>&#x2F;<code>env</code>&#x2F;<code>postmsg</code> 完成目录、日志、状态管理；</li>
<li><strong>唯一核心调用</strong>是 <code>exrap_analysis.sh</code>（或由 <code>$&#123;RAP_ANALSH&#125;</code> 重定义的路径），由它完成真正的分析流程。</li>
</ol>
<h4 id="JRAP-FORECAST"><a href="#JRAP-FORECAST" class="headerlink" title="JRAP_FORECAST"></a>JRAP_FORECAST</h4><ol>
<li>用 <code>setpdy.sh</code> + <code>compath.py</code> 构造时间戳与目录；</li>
<li>用 <code>mkdir</code>&#x2F;<code>env</code>&#x2F;<code>postmsg</code> 完成目录、日志、状态管理；</li>
<li><strong>唯一核心调用</strong>是 <code>exrap_fcst.sh</code>（或由 <code>$&#123;RAP_FCSTSH&#125;</code> 重定义），由它完成真正的 WRF 预报积分。</li>
</ol>
<h4 id="JRAP-UPDATEBC"><a href="#JRAP-UPDATEBC" class="headerlink" title="JRAP_UPDATEBC"></a>JRAP_UPDATEBC</h4><ol>
<li>用 <code>setpdy.sh</code> + <code>compath.py</code> 获取时间戳与标准路径；</li>
<li>用 <code>mkdir</code>&#x2F;<code>env</code>&#x2F;<code>postmsg</code> 完成目录、日志、状态管理；</li>
<li><strong>唯一核心调用</strong>是 <code>exrap_updatebc.sh</code>（或由 <code>$&#123;RAP_UPDATEBCSH&#125;</code> 重定义），由它完成真正的边界条件文件更新。</li>
</ol>
<h4 id="JRAP-POSTMGR"><a href="#JRAP-POSTMGR" class="headerlink" title="JRAP_POSTMGR"></a>JRAP_POSTMGR</h4><ol>
<li>用 <code>setpdy.sh</code> + <code>compath.py</code> 获取时间戳与标准路径；</li>
<li>用 <code>mkdir</code>&#x2F;<code>env</code>&#x2F;<code>postmsg</code> 完成目录、日志、状态管理；</li>
<li><strong>唯一核心调用</strong>是 <code>exrap_postmgr.sh</code>（或由 <code>$&#123;RAP_POSTMGRSH&#125;</code> 重定义），由它监控 WRF 预报进度，并按需触发后续后处理任务（如 UPP、图形生成、BUFR 转换等）。</li>
</ol>
<h4 id="JRAP-POST"><a href="#JRAP-POST" class="headerlink" title="JRAP_POST"></a>JRAP_POST</h4><ol>
<li>用 <code>setpdy.sh</code> + <code>compath.py</code> 获取时间戳与标准路径；</li>
<li>用 <code>mkdir</code>&#x2F;<code>env</code>&#x2F;<code>postmsg</code> 完成目录、日志、状态管理；</li>
<li><strong>唯一核心调用</strong>是 <code>exrap_post.sh</code>（或由 <code>$&#123;RAP_POSTSH&#125;</code> 重定义），由它完成真正的 UPP 转换、GRIB2 产品生成及 WMO 报文输出。</li>
</ol>
<h4 id="JRAP-WRFBUFR"><a href="#JRAP-WRFBUFR" class="headerlink" title="JRAP_WRFBUFR"></a>JRAP_WRFBUFR</h4><ol>
<li>用 <code>setpdy.sh</code> + <code>compath.py</code> 构造时间戳与目录；</li>
<li>用 <code>mkdir</code>&#x2F;<code>env</code>&#x2F;<code>postmsg</code> 完成目录、日志、状态管理；</li>
<li><strong>唯一核心调用</strong>是 <code>exrap_wrfbufr.sh</code>（或由 <code>$&#123;RAP_WRFBUFRSH&#125;</code> 重定义），负责将 WRF 预报输出直接转换为 BUFR 格式探空报文，供观测对比和同化系统使用。</li>
</ol>
<h4 id="JRAP-POSTSND"><a href="#JRAP-POSTSND" class="headerlink" title="JRAP_POSTSND"></a>JRAP_POSTSND</h4><ol>
<li>用 <code>setpdy.sh</code> + <code>compath.py</code> 获取时间戳与标准路径；</li>
<li>用 <code>mkdir</code>&#x2F;<code>env</code>&#x2F;<code>postmsg</code> 完成目录、日志、状态管理；</li>
<li><strong>唯一核心调用</strong>是 <code>exrap_postsnd.sh</code>（或由 <code>$&#123;RAP_SNDPSH&#125;</code> 重定义），在生成探空报文的基础上，可能包含额外的后处理步骤，以适配特定的下游产品生成需求。</li>
</ol>
<h4 id="JRAP-PROCESS-HYDRO"><a href="#JRAP-PROCESS-HYDRO" class="headerlink" title="JRAP_PROCESS_HYDRO"></a>JRAP_PROCESS_HYDRO</h4><ol>
<li>用 <code>setpdy.sh</code> + <code>compath.py</code> 获取时间戳与标准路径；</li>
<li>用 <code>mkdir</code>&#x2F;<code>env</code>&#x2F;<code>postmsg</code> 完成目录、日志、状态管理；</li>
<li><strong>唯一核心调用</strong>是 <code>exrap_process_hydro.sh</code>（或由 <code>$&#123;RAP_PROCESSSH&#125;</code> 重定义），由它完成真正的水凝物处理流程。</li>
</ol>
<h4 id="JRAP-GEMPAK"><a href="#JRAP-GEMPAK" class="headerlink" title="JRAP_GEMPAK"></a>JRAP_GEMPAK</h4><ol>
<li>用 <code>setpdy.sh</code> + <code>compath.py</code> 获取时间戳与输入路径；</li>
<li>用 <code>mkdir</code>&#x2F;<code>echo</code>&#x2F;<code>chmod</code> 构造 MPMD 命令文件 <code>poescript</code>；</li>
<li><strong>唯一核心调用</strong>是 <code>cfp</code>+<code>mpiexec</code>，并发执行 <code>exrap_nawips.sh</code>，将 WRF GRIB2 输出转换为 GEMPAK 格式图形文件（rap、rap20、rap13、rap32、rapak、raphi 六套分辨率）。</li>
</ol>
<h4 id="JRAP-CLEANUP"><a href="#JRAP-CLEANUP" class="headerlink" title="JRAP_CLEANUP"></a>JRAP_CLEANUP</h4><ol>
<li><p>用 <code>setpdy.sh</code> 获取时间戳；</p>
</li>
<li><p>用 <code>printf</code> 构造循环小时；</p>
</li>
<li><p><strong>唯一实质性操作</strong>是 <code>rm</code> 批量删除临时目录，实现 RAP 循环结束后的 <strong>自动清盘</strong>。</p>
</li>
</ol>
<h3 id="scripts-目录"><a href="#scripts-目录" class="headerlink" title="scripts 目录"></a>scripts 目录</h3><hr>
<p>👉 综合来看，整个系统的作业顺序大体是：<br> <strong>MAKEBC&#x2F;UPDATEBC → ANALYSIS → FCST → POST（多类产品生成） → 特殊模块处理（SMOKE&#x2F;HYDRO）</strong></p>
<ol>
<li><strong>初始准备</strong><ul>
<li><code>exrap_makebc.sh</code> 生成初始边界条件。</li>
<li><code>exrap_updatebc.sh</code> &#x2F; <code>exrap_updatebc_pcyc.sh</code> 更新边界条件（定期运行）。</li>
</ul>
</li>
<li><strong>分析（同化&#x2F;初值准备）</strong><ul>
<li><code>exrap_analysis.sh</code>：基准分析。</li>
<li><code>exrap_analysis_pcyc.sh</code>：周期性分析。</li>
</ul>
</li>
<li><strong>数值预报</strong><ul>
<li><code>exrap_fcst.sh</code>：主预报作业。</li>
<li><code>exrap_fcst_pcyc.sh</code>：循环预报。</li>
<li><code>exrap_fcst_restart.sh</code>：断点续跑。</li>
</ul>
</li>
<li><strong>后处理&#x2F;产品生成</strong><ul>
<li><code>exrap_post.sh</code>：主后处理。</li>
<li><code>exrap_postmgr.sh</code>：后处理调度管理。</li>
<li><code>exrap_postsnd.sh</code>：探空产品生成。</li>
<li><code>exrap_wrfbufr.sh</code>：BUFR 格式数据输出。</li>
<li><code>exrap_gempak_meta.sh</code>：GEMPAK 元数据。</li>
<li><code>exrap_nawips.sh</code>：NAWIPS 可视化产品。</li>
</ul>
</li>
<li><strong>专项处理</strong><ul>
<li><code>exrap_prep_smoke.sh</code>：烟雾&#x2F;气溶胶输入准备。</li>
<li><code>exrap_process_hydro.sh</code>：水文数据处理。</li>
</ul>
</li>
</ol>
<hr>
<h4 id="exrap-makebc-sh"><a href="#exrap-makebc-sh" class="headerlink" title="exrap_makebc.sh"></a>exrap_makebc.sh</h4><p>⭕️ 核心程序（可执行文件）</p>
<table>
<thead>
<tr>
<th align="left">程序名</th>
<th align="left">路径变量</th>
<th align="left">作用</th>
<th align="left">调用方式</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong><code>rap_wps_ungrib</code></strong></td>
<td align="left"><code>$EXECrap/rap_wps_ungrib</code></td>
<td align="left">WPS 的 ungrib 模块，用于解码 GRIB 文件</td>
<td align="left">直接执行，重定向输出到 <code>.out</code> 文件</td>
</tr>
<tr>
<td align="left"><strong><code>rap_wps_metgrid</code></strong></td>
<td align="left"><code>$EXECrap/rap_wps_metgrid</code></td>
<td align="left">WPS 的 metgrid 模块，用于将 ungrib 输出插值到模型网格</td>
<td align="left">通过 <code>mpiexec</code> 并行执行</td>
</tr>
<tr>
<td align="left"><strong><code>rap_real_wpsdfi_bd.sh</code></strong></td>
<td align="left"><code>$USHrap/rap_real_wpsdfi_bd.sh</code></td>
<td align="left">调用 WRF REAL 程序，生成边界条件（BC）和输入文件</td>
<td align="left">循环调用 00&#x2F;03&#x2F;06&#x2F;09&#x2F;12 小时</td>
</tr>
<tr>
<td align="left"><strong><code>tar</code></strong></td>
<td align="left">系统路径</td>
<td align="left">打包 metgrid 输出文件为 <code>.tar</code> 归档</td>
<td align="left"><code>mpiexec -n 1 tar -cvf ...</code></td>
</tr>
</tbody></table>
<p>⭕️ 系统工具与命令</p>
<table>
<thead>
<tr>
<th align="left">工具</th>
<th align="left">用途</th>
<th align="left">示例</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong><code>cut</code></strong></td>
<td align="left">提取时间字符串中的年月日时分</td>
<td align="left"><code>syyyy=</code>echo ${START_TIME}</td>
<td>cut -c1-4&#96;&#96;</td>
</tr>
<tr>
<td align="left"><strong><code>sed</code></strong></td>
<td align="left">替换 namelist.wps 中的时间、间隔、前缀等字段</td>
<td align="left"><code>sed &quot;s/.../.../&quot;</code></td>
<td></td>
</tr>
<tr>
<td align="left"><strong><code>cat</code></strong></td>
<td align="left">合并 GRIB 文件（pgrb2a + pgrb2b）</td>
<td align="left"><code>cat gfs.t$&#123;hh&#125;z.pgrb2a.* gfs.t$&#123;hh&#125;z.pgrb2b.* &gt; ...</code></td>
<td></td>
</tr>
<tr>
<td align="left"><strong><code>ln -s</code></strong></td>
<td align="left">创建符号链接（GRIBFILE.XXX、SST、常量文件）</td>
<td align="left"><code>ln -s $&#123;gribfiles[$&#123;n&#125;]&#125; GRIBFILE.$&#123;id&#125;</code></td>
<td></td>
</tr>
<tr>
<td align="left"><strong><code>cp</code></strong></td>
<td align="left">复制 namelist、静态文件、可执行文件等</td>
<td align="left"><code>cp $PARMrap/rap_namelist.wps ...</code></td>
<td></td>
</tr>
<tr>
<td align="left"><strong><code>rm</code></strong></td>
<td align="left">删除旧链接或文件</td>
<td align="left"><code>rm -f Vtable</code></td>
<td></td>
</tr>
<tr>
<td align="left"><strong><code>ls</code></strong></td>
<td align="left">列出 GRIB 文件</td>
<td align="left"><code>ls -1 gfs.t$&#123;hh&#125;z.pgrb2.0p25.f0[0-6]?</code></td>
<td></td>
</tr>
<tr>
<td align="left"><strong><code>sort</code></strong></td>
<td align="left">排序文件列表</td>
<td align="left">&#96;ls …</td>
<td>sort&#96;</td>
</tr>
<tr>
<td align="left"><strong><code>echo</code></strong></td>
<td align="left">输出信息或写入时间戳</td>
<td align="left"><code>echo $&#123;START_TIME&#125; &gt; STARTTIME</code></td>
<td></td>
</tr>
<tr>
<td align="left"><strong><code>date</code></strong></td>
<td align="left">获取当前时间（用于日志）</td>
<td align="left"><code>echo &quot;completed at </code>${DATE}<code>&quot;</code></td>
<td></td>
</tr>
<tr>
<td align="left"><strong><code>mpiexec</code></strong></td>
<td align="left">并行执行 metgrid 和 tar</td>
<td align="left"><code>mpiexec -n 128 ./rap_wps_metgrid</code></td>
<td></td>
</tr>
<tr>
<td align="left"><strong><code>cpreq</code></strong></td>
<td align="left">NCEP 专用工具，复制文件并检查是否成功</td>
<td align="left"><code>cpreq $&#123;COMINgfs&#125;/... .</code></td>
<td></td>
</tr>
</tbody></table>
<p>⭕️ 主要输入文件（Input）</p>
<table>
<thead>
<tr>
<th align="left">文件类型</th>
<th align="left">来源路径</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong>GFS GRIB 文件</strong></td>
<td align="left"><code>$COMINgfs/gfs.$&#123;ymd&#125;/$&#123;hh&#125;/atmos/gfs.t$&#123;hh&#125;z.pgrb2.0p25.fXXX</code></td>
<td align="left">主预报输入，分为 <code>pgrb2a</code> 和 <code>pgrb2b</code></td>
</tr>
<tr>
<td align="left"><strong>SST GRIB 文件</strong></td>
<td align="left"><code>$COMINsst/nsst.$&#123;ymd&#125;/rtgssthr_grb_0.083.grib2</code></td>
<td align="left">海温数据，用于 surface 边界</td>
</tr>
<tr>
<td align="left"><strong>Vtable</strong></td>
<td align="left"><code>$PARMrap/rap_Vtable.$&#123;SOURCE&#125;</code></td>
<td align="left">告诉 ungrib 如何解码 GRIB 文件</td>
</tr>
<tr>
<td align="left"><strong>namelist.wps</strong></td>
<td align="left"><code>$PARMrap/rap_namelist.wps</code></td>
<td align="left">WPS 配置文件模板</td>
</tr>
<tr>
<td align="left"><strong>metgrid.tbl</strong></td>
<td align="left"><code>$PARMrap/rap_metgrid.tbl</code></td>
<td align="left">告诉 metgrid 如何处理字段</td>
</tr>
<tr>
<td align="left"><strong>geo_em.d01.nc</strong></td>
<td align="left"><code>$FIXrap/rap_geo_em.d01.nc</code></td>
<td align="left">静态地理数据文件（地形、土地利用等）</td>
</tr>
<tr>
<td align="left"><strong>常量文件</strong></td>
<td align="left"><code>$PARMrap/QNWFA_QNIFA_Monthly_GFS</code></td>
<td align="left">气溶胶背景场等常量数据</td>
</tr>
</tbody></table>
<p>⭕️ 主要输出文件（Output）</p>
<table>
<thead>
<tr>
<th align="left">文件类型</th>
<th align="left">路径</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong>ungrib 输出</strong></td>
<td align="left">当前工作目录</td>
<td align="left"><code>FILE:YYYY-MM-DD_HH</code> 格式，解码后的中间文件</td>
</tr>
<tr>
<td align="left"><strong>metgrid 输出</strong></td>
<td align="left">当前工作目录</td>
<td align="left"><code>met_em.d01.YYYY-MM-DD_HH:00:00.nc</code> 插值后的输入文件</td>
</tr>
<tr>
<td align="left"><strong>REAL 输出</strong></td>
<td align="left"><code>$DATA/tar</code></td>
<td align="left">边界条件 <code>wrfbdy_d01</code> 和输入 <code>wrfinput_d01</code> 等</td>
</tr>
<tr>
<td align="left"><strong>打包归档</strong></td>
<td align="left"><code>$COMOUT/rap.t$&#123;cyc&#125;z.makebc.tar</code></td>
<td align="left">所有 metgrid 输出打包为 <code>.tar</code> 文件</td>
</tr>
<tr>
<td align="left"><strong>日志文件</strong></td>
<td align="left">当前工作目录</td>
<td align="left"><code>ungribgfs.out</code>、<code>ungribsst.out</code>、标准输出等</td>
</tr>
</tbody></table>
<p>⭕️ 辅助脚本与模块</p>
<table>
<thead>
<tr>
<th align="left">名称</th>
<th align="left">路径</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong><code>prep_step</code></strong></td>
<td align="left">环境脚本</td>
<td align="left">初始化程序运行环境（如 <code>pgm</code> 变量）</td>
</tr>
<tr>
<td align="left"><strong><code>err_chk</code></strong></td>
<td align="left">环境函数</td>
<td align="left">检查程序返回值，失败则退出</td>
</tr>
<tr>
<td align="left"><strong><code>postmsg</code></strong></td>
<td align="left">环境函数</td>
<td align="left">向系统日志发送完成信息</td>
</tr>
</tbody></table>
<ol>
<li><p>准备阶段<br>├── 设置时间变量<br>├── 复制 namelist.wps、Vtable、geo_em.d01.nc<br>└── 下载 GFS 和 SST GRIB 文件</p>
</li>
<li><p>ungrib 阶段<br>├── GFS ungrib → FILE:YYYY-MM-DD_HH<br>└── SST ungrib → sst:YYYY-MM-DD_HH</p>
</li>
<li><p>metgrid 阶段<br>└── 插值生成 met_em.d01.YYYY-MM-DD_HH:00:00.nc</p>
</li>
<li><p>REAL 阶段<br>└── 调用 rap_real_wpsdfi_bd.sh 生成 wrfinput 和 wrfbdy</p>
</li>
<li><p>打包阶段<br>└── tar 打包 met_em.*.nc → rap.t${cyc}z.makebc.tar</p>
</li>
</ol>
<h4 id="exrap-analysis-sh"><a href="#exrap-analysis-sh" class="headerlink" title="exrap_analysis.sh"></a>exrap_analysis.sh</h4><p>⭕️ 核心分析程序（GSI）</p>
<table>
<thead>
<tr>
<th align="left">程序名</th>
<th align="left">调用路径</th>
<th align="left">作用</th>
<th align="left">调用方式</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong><code>rap_gsi</code></strong></td>
<td align="left"><code>$&#123;EXECrap&#125;/rap_gsi</code></td>
<td align="left"><strong>主分析程序</strong>，执行变分同化（GSI）</td>
<td align="left"><code>mpiexec -n 192 -ppn 64 ./rap_gsi &lt; gsiparm.anl</code></td>
</tr>
</tbody></table>
<p>⭕️ 冷启动辅助程序（表面变量循环）</p>
<table>
<thead>
<tr>
<th align="left">程序名</th>
<th align="left">调用路径</th>
<th align="left">作用</th>
<th align="left">调用方式</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong><code>rap_full_cycle_surface</code></strong></td>
<td align="left"><code>$&#123;EXECrap&#125;/rap_full_cycle_surface</code></td>
<td align="left">冷启动时循环表面变量（如土壤湿度、温度）</td>
<td align="left"><code>mpiexec -n 1 -ppn 1 ./rap_full_cycle_surface</code></td>
</tr>
<tr>
<td align="left"><strong><code>rap_surface_consistcheck</code></strong></td>
<td align="left"><code>$&#123;EXECrap&#125;/rap_surface_consistcheck</code></td>
<td align="left">检查表面变量一致性</td>
<td align="left"><code>mpiexec -n 1 -ppn 1 ./rap_surface_consistcheck</code></td>
</tr>
</tbody></table>
<p>⭕️ 卫星资料处理程序</p>
<table>
<thead>
<tr>
<th align="left">程序名</th>
<th align="left">调用路径</th>
<th align="left">作用</th>
<th align="left">调用方式</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong><code>rap_update_gvf</code></strong></td>
<td align="left"><code>$&#123;EXECrap&#125;/rap_update_gvf</code></td>
<td align="left">更新绿度植被覆盖（GVF）资料</td>
<td align="left"><code>mpiexec -n 1 -ppn 1 ./rap_update_gvf</code></td>
</tr>
</tbody></table>
<p>⭕️ 系统工具（非自定义程序）</p>
<table>
<thead>
<tr>
<th align="left">工具名</th>
<th align="left">来源</th>
<th align="left">作用</th>
<th align="left">调用方式</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong><code>ndate</code></strong></td>
<td align="left"><code>$&#123;NDATE&#125;</code>（环境变量）</td>
<td align="left">日期时间计算（如前一时刻）</td>
<td align="left"><code>PCYC_TIME=</code><em>N<strong>D</strong>A**TE</em>−1START_TIME&#96;&#96;</td>
</tr>
<tr>
<td align="left"><strong><code>stat</code></strong></td>
<td align="left">系统命令</td>
<td align="left">检查文件大小是否完整</td>
<td align="left"><code>filesize=$(stat -c%s filename)</code></td>
</tr>
<tr>
<td align="left"><strong><code>mpiexec</code></strong></td>
<td align="left">系统命令</td>
<td align="left">启动MPI并行任务</td>
<td align="left">所有并行程序均通过 <code>mpiexec</code> 启动</td>
</tr>
</tbody></table>
<p>⭕️ 脚本内部调用的辅助脚本</p>
<table>
<thead>
<tr>
<th align="left">脚本名</th>
<th align="left">调用路径</th>
<th align="left">作用</th>
<th align="left">调用方式</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong><code>rap_gsiparm.anl.sh</code></strong></td>
<td align="left"><code>$&#123;PARMrap&#125;/rap_gsiparm.anl.sh</code></td>
<td align="left">动态生成GSI的namelist参数</td>
<td align="left"><code>. $&#123;PARMrap&#125;/rap_gsiparm.anl.sh</code></td>
</tr>
</tbody></table>
<p>⭕️ 固定文件与输入数据（非程序，但关键）</p>
<table>
<thead>
<tr>
<th align="left">类别</th>
<th align="left">文件名示例</th>
<th align="left">来源路径</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left">背景场</td>
<td align="left"><code>wrfinput_d01_&lt;time&gt;</code></td>
<td align="left"><code>$&#123;RAPBC&#125;/</code></td>
<td align="left">冷启动初始场</td>
</tr>
<tr>
<td align="left">观测资料</td>
<td align="left"><code>prepbufr</code>, <code>*.bufr_d</code></td>
<td align="left"><code>$&#123;PREPDIR&#125;/</code></td>
<td align="left">各类观测（雷达、卫星、探空等）</td>
</tr>
<tr>
<td align="left">固定参数</td>
<td align="left"><code>rap_anavinfo_arw_netcdf</code>, <code>berror_stats</code>, <code>satinfo</code>, <code>convinfo</code> 等</td>
<td align="left"><code>$&#123;FIXrap&#125;/</code></td>
<td align="left">GSI所需的固定配置</td>
</tr>
<tr>
<td align="left">CRTM系数</td>
<td align="left"><code>*.SpcCoeff.bin</code>, <code>*.TauCoeff.bin</code>, <code>EmisCoeff.bin</code> 等</td>
<td align="left"><code>$&#123;FIXcrtm&#125;/</code></td>
<td align="left">辐射传输模型CRTM所需系数</td>
</tr>
</tbody></table>
<h4 id="exrap-fcst-sh"><a href="#exrap-fcst-sh" class="headerlink" title="exrap_fcst.sh"></a>exrap_fcst.sh</h4><p>⭕️ 核心预报程序（WRF 主程序）</p>
<table>
<thead>
<tr>
<th align="left">程序名</th>
<th align="left">调用路径</th>
<th align="left">作用</th>
<th align="left">调用方式</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong><code>rap_wrfarw_fcst</code></strong></td>
<td align="left"><code>$&#123;EXECrap&#125;/rap_wrfarw_fcst</code></td>
<td align="left"><strong>WRF-ARW 主预报程序</strong>，执行数值预报积分</td>
<td align="left">由 <code>rap_run_wrf.sh</code> 脚本调用</td>
</tr>
</tbody></table>
<hr>
<p>⭕️ 脚本&#x2F;包装器（非二进制程序，但可执行）</p>
<table>
<thead>
<tr>
<th align="left">脚本名</th>
<th align="left">调用路径</th>
<th align="left">作用</th>
<th align="left">调用方式</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong><code>rap_run_wrf.sh</code></strong></td>
<td align="left"><code>$&#123;USHrap&#125;/rap_run_wrf.sh</code></td>
<td align="left"><strong>WRF 执行包装器脚本</strong>，负责 MPI 配置、节点分配、启动 WRF 主程序</td>
<td align="left"><code>rap_run_wrf.sh rap_wrfarw_fcst run_wrf_config</code></td>
</tr>
<tr>
<td align="left"><strong><code>rap_smoke_wrfinput.ksh</code></strong></td>
<td align="left"><code>$&#123;HOMErap&#125;/ush/rap_smoke_wrfinput.ksh</code></td>
<td align="left">为烟雾模块生成初始场</td>
<td align="left"><code>rap_smoke_wrfinput.ksh wrfinput_d01</code></td>
</tr>
<tr>
<td align="left"><strong><code>rap_cycle_smoke.ksh</code></strong></td>
<td align="left"><code>$&#123;HOMErap&#125;/ush/rap_cycle_smoke.ksh</code></td>
<td align="left">循环烟雾变量（如 PM2.5、CO）</td>
<td align="left"><code>rap_cycle_smoke.ksh wrfinput_d01</code></td>
</tr>
</tbody></table>
<p>⭕️ 系统工具（标准 Unix 命令）</p>
<table>
<thead>
<tr>
<th align="left">工具名</th>
<th align="left">来源</th>
<th align="left">作用</th>
<th align="left">调用方式</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong><code>ndate</code></strong></td>
<td align="left"><code>$&#123;NDATE&#125;</code>（环境变量）</td>
<td align="left">计算预报结束时间、DFI 起止时间</td>
<td align="left"><code>END_TIME=</code><em>N<strong>D</strong>A**TE</em>+{FCST_LENGTH} $START_TIME&#96;&#96;</td>
<td></td>
</tr>
<tr>
<td align="left"><strong><code>cut</code></strong></td>
<td align="left">系统命令</td>
<td align="left">从时间字符串中提取年月日时分</td>
<td align="left"><code>syyyy=</code>echo ${START_TIME}</td>
<td>cut -c1-4&#96;&#96; 等</td>
</tr>
<tr>
<td align="left"><strong><code>sed</code></strong></td>
<td align="left">系统命令</td>
<td align="left">动态替换 <code>namelist.input</code> 中的时间参数</td>
<td align="left">多次用于更新 WRF 配置文件</td>
<td></td>
</tr>
<tr>
<td align="left"><strong><code>cat</code> &#x2F; <code>echo</code> &#x2F; <code>mv</code> &#x2F; <code>cp</code> &#x2F; <code>ln -s</code></strong></td>
<td align="left">系统命令</td>
<td align="left">文件操作、链接、重命名、输出日志</td>
<td align="left">多次使用</td>
<td></td>
</tr>
</tbody></table>
<p>⭕️ 输入输出文件（非程序，但关键）</p>
<table>
<thead>
<tr>
<th align="left">文件类型</th>
<th align="left">文件名</th>
<th align="left">来源路径</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left">初始场</td>
<td align="left"><code>wrfinput_d01</code></td>
<td align="left"><code>$&#123;COMIN&#125;/rap.t$&#123;cyc&#125;z.wrf_inout</code></td>
<td align="left">WRF 初始条件</td>
</tr>
<tr>
<td align="left">边界条件</td>
<td align="left"><code>wrfbdy_d01</code></td>
<td align="left"><code>$&#123;COMIN&#125;/rap.t$&#123;cyc&#125;z.wrfbdy</code> 或 <code>$&#123;BOUNDARY&#125;/</code></td>
<td align="left">WRF 边界条件</td>
</tr>
<tr>
<td align="left">配置文件</td>
<td align="left"><code>namelist.input</code></td>
<td align="left"><code>$&#123;PARMrap&#125;/rap_wrf.nl</code></td>
<td align="left">WRF 主配置文件，被 <code>sed</code> 动态修改</td>
</tr>
<tr>
<td align="left">运行配置</td>
<td align="left"><code>run_wrf_config</code></td>
<td align="left">当前目录生成</td>
<td align="left">指定 MPI 排布、线程数、I&#x2F;O 配置等</td>
</tr>
<tr>
<td align="left">数据表文件</td>
<td align="left"><code>LANDUSE.TBL</code>, <code>RRTM_DATA</code>, <code>VEGPARM.TBL</code> 等</td>
<td align="left"><code>$&#123;PARMrap&#125;/rap_run_*</code></td>
<td align="left">WRF 所需的物理参数表，均通过 <code>ln -s</code> 链接</td>
</tr>
</tbody></table>
<h4 id="exrap-fcst-restart-sh"><a href="#exrap-fcst-restart-sh" class="headerlink" title="exrap_fcst_restart.sh"></a>exrap_fcst_restart.sh</h4><p>是一个 <strong>WRF 预报重启脚本</strong>，负责从已完成的预报文件中恢复状态，更新 WRF namelist 文件，运行 WRF 模型继续预报，并将结果输出到指定目录。</p>
<p>⭕️ 核心程序</p>
<table>
<thead>
<tr>
<th align="left">程序名</th>
<th align="left">调用路径</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>rap_wrfarw_fcst</code></td>
<td align="left"><code>$&#123;EXECrap&#125;/rap_wrfarw_fcst</code></td>
<td align="left">运行 WRF 模型的预报任务</td>
</tr>
<tr>
<td align="left"><code>ncatted</code></td>
<td align="left">系统工具</td>
<td align="left">修改 NetCDF 文件的元数据</td>
</tr>
</tbody></table>
<p>⭕️ 系统工具</p>
<table>
<thead>
<tr>
<th align="left">程序名</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>set</code></td>
<td align="left">设置脚本调试模式（<code>set -x</code>），便于跟踪脚本执行过程</td>
</tr>
<tr>
<td align="left"><code>cd</code></td>
<td align="left">切换工作目录到 <code>$DATA</code></td>
</tr>
<tr>
<td align="left"><code>cp</code></td>
<td align="left">复制文件，用于准备输入文件和配置文件</td>
</tr>
<tr>
<td align="left"><code>rm</code></td>
<td align="left">删除文件，清理临时文件</td>
</tr>
<tr>
<td align="left"><code>ls</code></td>
<td align="left">列出目录中的文件，用于获取文件列表</td>
</tr>
<tr>
<td align="left"><code>cut</code></td>
<td align="left">从字符串中提取特定部分，用于解析日期和时间</td>
</tr>
<tr>
<td align="left"><code>head</code></td>
<td align="left">提取文件的前几行，用于获取第一个文件名</td>
</tr>
<tr>
<td align="left"><code>tail</code></td>
<td align="left">提取文件的最后几行，用于获取最后一个文件名</td>
</tr>
<tr>
<td align="left"><code>basename</code></td>
<td align="left">提取文件名，去除路径部分</td>
</tr>
<tr>
<td align="left"><code>date</code></td>
<td align="left">获取当前日期和时间，用于时间计算</td>
</tr>
<tr>
<td align="left"><code>expr</code></td>
<td align="left">执行算术运算，用于递增变量 <code>n</code></td>
</tr>
<tr>
<td align="left"><code>sed</code></td>
<td align="left">用于更新 namelist 文件中的时间、间隔等参数</td>
</tr>
<tr>
<td align="left"><code>mv</code></td>
<td align="left">移动或重命名文件</td>
</tr>
<tr>
<td align="left"><code>ln -s</code></td>
<td align="left">创建符号链接，用于链接到输入文件和配置文件</td>
</tr>
<tr>
<td align="left"><code>module</code></td>
<td align="left">加载或卸载模块，用于设置运行环境</td>
</tr>
<tr>
<td align="left"><code>postmsg</code></td>
<td align="left">向事件管理器（ECF&#x2F;SMS）回传完成状态</td>
</tr>
<tr>
<td align="left"><code>err_exit</code></td>
<td align="left">自定义函数，用于在发生错误时退出脚本</td>
</tr>
</tbody></table>
<p>⭕️ 输入输出文件</p>
<ul>
<li>输入文件</li>
</ul>
<table>
<thead>
<tr>
<th align="left">文件名</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>wrfbdy_d01</code></td>
<td align="left">WRF 边界条件文件</td>
</tr>
<tr>
<td align="left"><code>wrfout_d01_*</code></td>
<td align="left">WRF 预报输出文件，包含气象数据</td>
</tr>
<tr>
<td align="left"><code>fcstdone*</code></td>
<td align="left">标记已完成的预报小时文件</td>
</tr>
<tr>
<td align="left"><code>rap_wrf_restart.nl</code></td>
<td align="left">WRF 预报 namelist 模板文件</td>
</tr>
<tr>
<td align="left"><code>rap_run_*</code></td>
<td align="left">WRF 预报所需的各种参数表文件</td>
</tr>
</tbody></table>
<ul>
<li>输出文件</li>
</ul>
<table>
<thead>
<tr>
<th align="left">文件名</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>namelist.input</code></td>
<td align="left">生成的 WRF namelist 文件</td>
</tr>
<tr>
<td align="left"><code>rsl.out.0000</code></td>
<td align="left">WRF 预报的标准输出日志文件</td>
</tr>
<tr>
<td align="left"><code>wrfout_d01_*</code></td>
<td align="left">更新后的 WRF 预报输出文件</td>
</tr>
<tr>
<td align="left"><code>fcstdone*</code></td>
<td align="left">更新后的标记文件，表示预报小时已完成</td>
</tr>
</tbody></table>
<h4 id="exrap-makebc-sh-1"><a href="#exrap-makebc-sh-1" class="headerlink" title="exrap_makebc.sh"></a>exrap_makebc.sh</h4><p>是一个 <strong>WPS 数据准备脚本</strong>，负责从 GFS 和 SST 数据中提取气象信息，运行 ungrib 和 metgrid 程序，生成 WRF 模型所需的气象网格数据和边界条件文件，并将最终结果打包归档。</p>
<p>⭕️ 核心程序</p>
<table>
<thead>
<tr>
<th align="left">程序名</th>
<th align="left">调用路径</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>rap_wps_ungrib</code></td>
<td align="left"><code>$&#123;EXECrap&#125;/rap_wps_ungrib</code></td>
<td align="left">将 GFS GRIB 文件转换为 WPS 格式，供后续处理使用</td>
</tr>
<tr>
<td align="left"><code>rap_wps_metgrid</code></td>
<td align="left"><code>$&#123;EXECrap&#125;/rap_wps_metgrid</code></td>
<td align="left">运行 WPS 的 metgrid 程序，生成气象网格数据</td>
</tr>
<tr>
<td align="left"><code>rap_real_wpsdfi_bd.sh</code></td>
<td align="left"><code>$&#123;USHrap&#125;/rap_real_wpsdfi_bd.sh</code></td>
<td align="left">运行 REAL 程序，生成边界条件和输入文件</td>
</tr>
</tbody></table>
<p>⭕️ 系统工具</p>
<table>
<thead>
<tr>
<th align="left">程序名</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>setpdy.sh</code></td>
<td align="left">生成当前 cycle 的年月日字串，输出 <code>./PDY</code> 文件供后续 <code>source</code></td>
</tr>
<tr>
<td align="left"><code>cpreq</code></td>
<td align="left">复制文件，类似于 <code>cp</code>，但可能包含额外的错误检查或日志记录</td>
</tr>
<tr>
<td align="left"><code>cat</code></td>
<td align="left">合并文件内容，将多个文件内容合并为一个文件</td>
</tr>
<tr>
<td align="left"><code>ln -s</code></td>
<td align="left">创建符号链接，用于链接到 WPS 的 Vtable 文件和 GFS GRIB 文件</td>
</tr>
<tr>
<td align="left"><code>sed</code></td>
<td align="left">用于更新 namelist 文件中的时间、间隔等参数</td>
</tr>
<tr>
<td align="left"><code>cut</code></td>
<td align="left">从字符串中提取特定部分，用于解析日期和时间</td>
</tr>
<tr>
<td align="left"><code>date</code></td>
<td align="left">获取当前日期和时间</td>
</tr>
<tr>
<td align="left"><code>mkdir</code></td>
<td align="left">创建目录</td>
</tr>
<tr>
<td align="left"><code>rm</code></td>
<td align="left">删除文件或目录</td>
</tr>
<tr>
<td align="left"><code>cp</code></td>
<td align="left">复制文件或目录</td>
</tr>
<tr>
<td align="left"><code>mv</code></td>
<td align="left">移动或重命名文件或目录</td>
</tr>
<tr>
<td align="left"><code>tar</code></td>
<td align="left">打包文件，生成 tar 归档文件</td>
</tr>
<tr>
<td align="left"><code>mpiexec</code></td>
<td align="left">启动并行任务，运行 metgrid 程序</td>
</tr>
<tr>
<td align="left"><code>postmsg</code></td>
<td align="left">向事件管理器（ECF&#x2F;SMS）回传完成状态</td>
</tr>
</tbody></table>
<p>⭕️ 输入输出文件</p>
<ul>
<li>输入文件</li>
</ul>
<table>
<thead>
<tr>
<th align="left">文件名</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>gfs.t$&#123;start_hour&#125;z.pgrb2.0p25.f000</code></td>
<td align="left">GFS GRIB 文件，包含初始时刻的气象数据</td>
</tr>
<tr>
<td align="left"><code>gfs.t$&#123;start_hour&#125;z.pgrb2.0p25.f003</code></td>
<td align="left">GFS GRIB 文件，包含 3 小时后的气象数据</td>
</tr>
<tr>
<td align="left"><code>...</code></td>
<td align="left">其他 GFS GRIB 文件，覆盖整个预报周期</td>
</tr>
<tr>
<td align="left"><code>rtgssthr_grb_0.083.grib2</code></td>
<td align="left">SST GRIB 文件，包含海表温度数据</td>
</tr>
<tr>
<td align="left"><code>rap_namelist.wps</code></td>
<td align="left">WPS 的 namelist 文件模板</td>
</tr>
<tr>
<td align="left"><code>rap_metgrid.tbl</code></td>
<td align="left">WPS 的 metgrid 表文件</td>
</tr>
<tr>
<td align="left"><code>rap_geo_em.d01.nc</code></td>
<td align="left">地理网格静态文件</td>
</tr>
</tbody></table>
<ul>
<li>输出文件</li>
</ul>
<table>
<thead>
<tr>
<th align="left">文件名</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>ungribgfs.out</code></td>
<td align="left">GFS ungrib 程序的输出日志</td>
</tr>
<tr>
<td align="left"><code>ungribsst.out</code></td>
<td align="left">SST ungrib 程序的输出日志</td>
</tr>
<tr>
<td align="left"><code>met_em.d01.nc</code></td>
<td align="left">metgrid 生成的气象网格文件</td>
</tr>
<tr>
<td align="left"><code>rap.t$&#123;cyc&#125;z.makebc.tar</code></td>
<td align="left">打包后的边界条件文件，供后续使用</td>
</tr>
</tbody></table>
<h4 id="exrap-updatebc-sh"><a href="#exrap-updatebc-sh" class="headerlink" title="exrap_updatebc.sh"></a>exrap_updatebc.sh</h4><p>⭕️ 核心程序（唯一主程序）</p>
<table>
<thead>
<tr>
<th align="left">程序名</th>
<th align="left">调用路径</th>
<th align="left">作用</th>
<th align="left">调用方式</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong><code>rap_update_bc</code></strong></td>
<td align="left"><code>$&#123;EXECrap&#125;/rap_update_bc</code></td>
<td align="left"><strong>更新边界条件（BC）核心程序</strong>，根据分析场更新 WRF 边界文件 <code>wrfbdy_d01</code></td>
<td align="left"><code>./rap_update_bc &gt;&gt; $DATA/$pgmout 2&gt;errfile</code></td>
</tr>
</tbody></table>
<p>⭕️ 系统工具（非自定义程序）</p>
<table>
<thead>
<tr>
<th align="left">工具名</th>
<th align="left">来源</th>
<th align="left">作用</th>
<th align="left">调用方式</th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong><code>ndate</code></strong></td>
<td align="left"><code>$&#123;NDATE&#125;</code>（环境变量）</td>
<td align="left">计算预报结束时间（如 <code>END_TIME</code>）</td>
<td align="left"><code>END_TIME=</code><em>N<strong>D</strong>A**TE</em>+{FCST_LENGTH} $START_TIME&#96;&#96;</td>
<td></td>
<td></td>
</tr>
<tr>
<td align="left"><strong><code>stat</code></strong></td>
<td align="left">系统命令</td>
<td align="left">检查边界文件大小是否完整（避免并发写入不完整）</td>
<td align="left"><code>filesize=$(stat -c%s $&#123;XX[0]&#125;)</code></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="left"><strong><code>awk</code></strong></td>
<td align="left">系统命令</td>
<td align="left">从文件名中提取时间戳</td>
<td align="left">&#96;echo ${XX[0]}</td>
<td>awk ‘BEGIN {FS&#x3D;”&#x2F;“} {print $NF}’</td>
<td>cut -c12-&#96;</td>
</tr>
<tr>
<td align="left"><strong><code>cut</code></strong></td>
<td align="left">系统命令</td>
<td align="left">从时间字符串中提取年月日时分</td>
<td align="left"><code>syyyy=</code>echo ${START_TIME}</td>
<td>cut -c1-4&#96;&#96; 等</td>
<td></td>
</tr>
<tr>
<td align="left"><strong><code>ls</code> &#x2F; <code>sort</code> &#x2F; <code>sleep</code> &#x2F; <code>expr</code></strong></td>
<td align="left">系统命令</td>
<td align="left">文件列表、排序、等待、计数等常规操作</td>
<td align="left">多次使用</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<p>⭕️ 输入输出文件（非程序，但关键）</p>
<table>
<thead>
<tr>
<th align="left">文件类型</th>
<th align="left">文件名</th>
<th align="left">来源路径</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left">初始场</td>
<td align="left"><code>wrf_inout</code></td>
<td align="left"><code>$&#123;DATA&#125;/gsiprd/wrf_inout</code></td>
<td align="left">被链接为 <code>wrfinput_d01</code> 和 <code>wrfvar_output</code></td>
</tr>
<tr>
<td align="left">边界条件</td>
<td align="left"><code>wrfbdy_d01.*</code></td>
<td align="left"><code>$&#123;RAPBC&#125;/</code></td>
<td align="left">被查找并拷贝为 <code>wrfbdy_d01</code></td>
</tr>
<tr>
<td align="left">参数文件</td>
<td align="left"><code>rap_update_bc_parame.in</code></td>
<td align="left"><code>$&#123;PARMrap&#125;/rap_update_bc_parame.in</code></td>
<td align="left">被拷贝为 <code>parame.in</code>，作为 <code>rap_update_bc</code> 的输入参数</td>
</tr>
<tr>
<td align="left">输出文件</td>
<td align="left"><code>wrfbdy_d01</code></td>
<td align="left">当前目录，最终拷贝到 <code>$&#123;COMOUT&#125;/rap.t$&#123;cyc&#125;z.wrfbdy</code></td>
<td align="left">更新后的边界条件文件</td>
</tr>
</tbody></table>
<h4 id="exrap-postmgr-sh"><a href="#exrap-postmgr-sh" class="headerlink" title="exrap_postmgr.sh"></a>exrap_postmgr.sh</h4><p>是一个 <strong>后处理管理脚本</strong>，负责监控 RAP 预报任务的进度，当每个预报小时完成时，通过 <code>ecflow_client</code> 通知 ECFLOW 调度系统释放对应的后处理任务（如 UPP、BUFR 转换等）。</p>
<p>⭕️ 核心程序</p>
<table>
<thead>
<tr>
<th align="left">程序名</th>
<th align="left">调用路径</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>ecflow_client</code></td>
<td align="left">直接调用</td>
<td align="left">通知 ECFLOW 调度系统释放后续任务（如后处理、BUFR 转换等）</td>
</tr>
</tbody></table>
<hr>
<p>⭕️ 系统工具</p>
<table>
<thead>
<tr>
<th align="left">程序名</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>set</code></td>
<td align="left">设置脚本调试模式（<code>set -x</code>），便于跟踪脚本执行过程</td>
</tr>
<tr>
<td align="left"><code>cd</code></td>
<td align="left">切换工作目录到 <code>$DATA</code></td>
</tr>
<tr>
<td align="left"><code>rm</code></td>
<td align="left">删除文件 <code>posthours</code>（若存在）</td>
</tr>
<tr>
<td align="left"><code>echo</code></td>
<td align="left">将小时数追加到文件 <code>posthours</code></td>
</tr>
<tr>
<td align="left"><code>cat</code></td>
<td align="left">读取文件 <code>posthours</code> 内容到变量 <code>postjobs</code></td>
</tr>
<tr>
<td align="left"><code>cut</code></td>
<td align="left">从 <code>$START_TIME</code> 中提取年、月、日、时</td>
</tr>
<tr>
<td align="left"><code>sleep</code></td>
<td align="left">暂停脚本执行，等待 10 秒</td>
</tr>
<tr>
<td align="left"><code>wc</code></td>
<td align="left">统计 <code>postjobs</code> 中剩余的小时数</td>
</tr>
<tr>
<td align="left"><code>err_exit</code></td>
<td align="left">自定义函数，用于在发生错误时退出脚本</td>
</tr>
</tbody></table>
<p>⭕️ 输入输出文件</p>
<ul>
<li>输入文件</li>
</ul>
<table>
<thead>
<tr>
<th align="left">文件名</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>fcstdone$&#123;fhr&#125;00.$&#123;shh&#125;</code></td>
<td align="left">标记特定预报小时（如 <code>f0000</code>）的 WRF 预报任务是否完成</td>
</tr>
</tbody></table>
<ul>
<li>输出文件</li>
</ul>
<table>
<thead>
<tr>
<th align="left">文件名</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>posthours</code></td>
<td align="left">存储需要监控的预报小时列表</td>
</tr>
</tbody></table>
<h4 id="exrap-post-sh"><a href="#exrap-post-sh" class="headerlink" title="exrap_post.sh"></a>exrap_post.sh</h4><p>是一个 <strong>RAP 后处理脚本</strong>，负责从 WRF 预报输出中提取和转换气象数据，生成多种 GRIB2 格式的分析和预报产品，并将这些产品发送到下游系统（如 DBN、ECFLOW）。</p>
<p>⭕️ 核心程序</p>
<table>
<thead>
<tr>
<th align="left">程序名</th>
<th align="left">调用路径</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>rap_wrfpost</code></td>
<td align="left"><code>$&#123;EXECrap&#125;/rap_wrfpost</code></td>
<td align="left">运行 WRF 后处理程序，生成 GRIB2 格式的分析和预报产品</td>
</tr>
<tr>
<td align="left"><code>rap_update_fields</code></td>
<td align="left"><code>$&#123;EXECrap&#125;/rap_update_fields</code></td>
<td align="left">更新 WRF 输出字段，用于特定分析处理</td>
</tr>
<tr>
<td align="left"><code>rap_subflds_g2</code></td>
<td align="left"><code>$&#123;EXECrap&#125;/rap_subflds_g2</code></td>
<td align="left">提取和处理特定字段（如降水、积雪等），生成 3 小时累积产品</td>
</tr>
<tr>
<td align="left"><code>rap_mkawp.sh</code></td>
<td align="left"><code>$&#123;USHrap&#125;/rap_mkawp.sh</code></td>
<td align="left">转换 WRF 输出到 AWIPS 格式</td>
</tr>
<tr>
<td align="left"><code>rap_smartinit.sh</code></td>
<td align="left"><code>$&#123;USHrap&#125;/rap_smartinit.sh</code></td>
<td align="left">为特定子域生成初始化文件</td>
</tr>
<tr>
<td align="left"><code>rap_smoke.sh</code></td>
<td align="left"><code>$&#123;USHrap&#125;/rap_smoke.sh</code></td>
<td align="left">生成烟雾相关产品</td>
</tr>
<tr>
<td align="left"><code>rap_smoke_wmo.sh</code></td>
<td align="left"><code>$&#123;USHrap&#125;/rap_smoke_wmo.sh</code></td>
<td align="left">生成烟雾 WMO 格式产品</td>
</tr>
</tbody></table>
<p>⭕️ 系统工具</p>
<table>
<thead>
<tr>
<th align="left">程序名</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>set</code></td>
<td align="left">设置脚本调试模式（<code>set -x</code>），便于跟踪脚本执行过程</td>
</tr>
<tr>
<td align="left"><code>cd</code></td>
<td align="left">切换工作目录到 <code>$DATA</code></td>
</tr>
<tr>
<td align="left"><code>rm</code></td>
<td align="left">删除临时文件和目录</td>
</tr>
<tr>
<td align="left"><code>ln -s</code></td>
<td align="left">创建符号链接，用于链接到输入文件和配置文件</td>
</tr>
<tr>
<td align="left"><code>cat</code></td>
<td align="left">合并文件内容，将多个文件内容合并为一个文件</td>
</tr>
<tr>
<td align="left"><code>cut</code></td>
<td align="left">从字符串中提取特定部分，用于解析日期和时间</td>
</tr>
<tr>
<td align="left"><code>stat</code></td>
<td align="left">获取文件大小，用于检查文件完整性</td>
</tr>
<tr>
<td align="left"><code>sleep</code></td>
<td align="left">暂停脚本执行，等待指定时间</td>
</tr>
<tr>
<td align="left"><code>grep</code></td>
<td align="left">从文件中提取匹配特定模式的行</td>
</tr>
<tr>
<td align="left"><code>wc</code></td>
<td align="left">统计文件中的行数</td>
</tr>
<tr>
<td align="left"><code>expr</code></td>
<td align="left">执行算术运算</td>
</tr>
<tr>
<td align="left"><code>mpiexec</code></td>
<td align="left">启动并行任务，运行后处理程序</td>
</tr>
<tr>
<td align="left"><code>postmsg</code></td>
<td align="left">向事件管理器（ECF&#x2F;SMS）回传完成状态</td>
</tr>
<tr>
<td align="left"><code>err_exit</code></td>
<td align="left">自定义函数，用于在发生错误时退出脚本</td>
</tr>
<tr>
<td align="left"><code>ecflow_client</code></td>
<td align="left">通知 ECFLOW 调度系统释放后续任务</td>
</tr>
<tr>
<td align="left"><code>dbn_alert</code></td>
<td align="left">向 DBN 系统发送警报，通知产品生成完成</td>
</tr>
</tbody></table>
<p>⭕️ 输入输出文件</p>
<ul>
<li>输入文件</li>
</ul>
<table>
<thead>
<tr>
<th align="left">文件名</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>wrfout_d01_$&#123;timestr2&#125;</code></td>
<td align="left">WRF 预报输出文件，包含气象数据</td>
</tr>
<tr>
<td align="left"><code>wrfinput_d01</code></td>
<td align="left">WRF 分析输入文件，用于特定分析处理</td>
</tr>
<tr>
<td align="left"><code>wrfout_analyzed_d01</code></td>
<td align="left">WRF 分析输出文件，用于特定分析处理</td>
</tr>
<tr>
<td align="left"><code>rap_parmlist_*.txt</code></td>
<td align="left">参数列表文件，定义需要处理的字段</td>
</tr>
<tr>
<td align="left"><code>rap_vector_fields.txt</code></td>
<td align="left">定义需要处理的矢量字段</td>
</tr>
<tr>
<td align="left"><code>rap_budget_fields.txt</code></td>
<td align="left">定义需要使用预算插值的字段</td>
</tr>
<tr>
<td align="left"><code>rap_neighbor_fields.txt</code></td>
<td align="left">定义需要使用邻近插值的字段</td>
</tr>
</tbody></table>
<ul>
<li>输出文件</li>
</ul>
<table>
<thead>
<tr>
<th align="left">文件名</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>WRFNAT$&#123;fhr&#125;.tm00</code></td>
<td align="left">生成的 GRIB2 格式自然网格文件</td>
</tr>
<tr>
<td align="left"><code>WRFPRS$&#123;fhr&#125;.tm00</code></td>
<td align="left">生成的 GRIB2 格式压力网格文件</td>
</tr>
<tr>
<td align="left"><code>WRFMSL$&#123;fhr&#125;.tm00</code></td>
<td align="left">生成的 GRIB2 格式海平面网格文件</td>
</tr>
<tr>
<td align="left"><code>rap.$&#123;cycle&#125;.wrfnatf$&#123;fhr&#125;.grib2</code></td>
<td align="left">输出的 GRIB2 格式自然网格文件</td>
</tr>
<tr>
<td align="left"><code>rap.$&#123;cycle&#125;.wrfprsf$&#123;fhr&#125;.grib2</code></td>
<td align="left">输出的 GRIB2 格式压力网格文件</td>
</tr>
<tr>
<td align="left"><code>rap.$&#123;cycle&#125;.wrfmslf$&#123;fhr&#125;.grib2</code></td>
<td align="left">输出的 GRIB2 格式海平面网格文件</td>
</tr>
<tr>
<td align="left"><code>rap.$&#123;cycle&#125;.awp$&#123;grid&#125;bgrbf$&#123;fhr&#125;.grib2</code></td>
<td align="left">输出的 GRIB2 格式子域网格文件</td>
</tr>
<tr>
<td align="left"><code>rap.$&#123;cycle&#125;.awp$&#123;grid&#125;pgrbf$&#123;fhr&#125;.grib2</code></td>
<td align="left">输出的 GRIB2 格式子域网格文件</td>
</tr>
<tr>
<td align="left"><code>rap.$&#123;cycle&#125;.awip32f$&#123;fhr&#125;.grib2</code></td>
<td align="left">输出的 GRIB2 格式 AWIP32 网格文件</td>
</tr>
<tr>
<td align="left"><code>rap.$&#123;cycle&#125;.gtg130f$&#123;fhr&#125;.grib2</code></td>
<td align="left">输出的 GRIB2 格式 GTG 网格文件</td>
</tr>
</tbody></table>
<h4 id="exrap-wrfbufr-sh"><a href="#exrap-wrfbufr-sh" class="headerlink" title="exrap_wrfbufr.sh"></a>exrap_wrfbufr.sh</h4><p><code>exrap_wrfbufr.sh</code> 是一个 <strong>WRF → BUFR 转换脚本</strong>，负责从 WRF 预报输出中提取气象数据，转换为 BUFR 格式探空报文，并将这些报文发送到下游系统（如 DBN、ECFLOW）。</p>
<p>⭕️ 核心程序</p>
<table>
<thead>
<tr>
<th align="left">程序名</th>
<th align="left">调用路径</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>rap_wrfbufr</code></td>
<td align="left"><code>$&#123;EXECrap&#125;/rap_wrfbufr</code></td>
<td align="left">运行 WRF → BUFR 转换程序，将 WRF 预报输出转换为 BUFR 格式</td>
</tr>
</tbody></table>
<p>⭕️ 系统工具</p>
<table>
<thead>
<tr>
<th align="left">程序名</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>set</code></td>
<td align="left">设置脚本调试模式（<code>set -x</code>），便于跟踪脚本执行过程</td>
</tr>
<tr>
<td align="left"><code>cd</code></td>
<td align="left">切换工作目录到 <code>$DATA</code></td>
</tr>
<tr>
<td align="left"><code>cp</code></td>
<td align="left">复制文件，用于准备输入文件和配置文件</td>
</tr>
<tr>
<td align="left"><code>rm</code></td>
<td align="left">删除临时文件和目录</td>
</tr>
<tr>
<td align="left"><code>ln -s</code></td>
<td align="left">创建符号链接，用于链接到输入文件和配置文件</td>
</tr>
<tr>
<td align="left"><code>stat</code></td>
<td align="left">获取文件大小，用于检查文件完整性</td>
</tr>
<tr>
<td align="left"><code>cut</code></td>
<td align="left">从字符串中提取特定部分，用于解析日期和时间</td>
</tr>
<tr>
<td align="left"><code>date</code></td>
<td align="left">获取当前日期和时间</td>
</tr>
<tr>
<td align="left"><code>mpiexec</code></td>
<td align="left">启动并行任务，运行 WRF → BUFR 转换程序</td>
</tr>
<tr>
<td align="left"><code>postmsg</code></td>
<td align="left">向事件管理器（ECF&#x2F;SMS）回传完成状态</td>
</tr>
<tr>
<td align="left"><code>err_exit</code></td>
<td align="left">自定义函数，用于在发生错误时退出脚本</td>
</tr>
</tbody></table>
<p>⭕️ 输入输出文件</p>
<ul>
<li>输入文件</li>
</ul>
<table>
<thead>
<tr>
<th align="left">文件名</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>wrfout_d01_$&#123;timeform&#125;</code></td>
<td align="left">WRF 预报输出文件，包含气象数据</td>
</tr>
<tr>
<td align="left"><code>wrfinput_d01</code></td>
<td align="left">WRF 分析输入文件，用于特定分析处理</td>
</tr>
<tr>
<td align="left"><code>rap_profdat</code></td>
<td align="left">配置文件，包含 BUFR 转换所需参数</td>
</tr>
<tr>
<td align="left"><code>rapGES_FCYC/rap_$&#123;CYC_TIME&#125;f0$counterhr</code></td>
<td align="left">前一小时的 WRF 预报文件，用于小时平均字段</td>
</tr>
</tbody></table>
<ul>
<li>输出文件</li>
</ul>
<table>
<thead>
<tr>
<th align="left">文件名</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>profilm.c1.tm00</code></td>
<td align="left">生成的 BUFR 格式探空报文文件</td>
</tr>
<tr>
<td align="left"><code>profilm.c1.f$&#123;fhr&#125;</code></td>
<td align="left">重命名后的 BUFR 文件，用于后续处理</td>
</tr>
</tbody></table>
<h4 id="exrap-postsnd-sh"><a href="#exrap-postsnd-sh" class="headerlink" title="exrap_postsnd.sh"></a>exrap_postsnd.sh</h4><p>是一个 <strong>探空报文生成脚本</strong>，负责从 WRF 预报输出中提取探空数据，生成 BUFR 格式探空报文，并将这些报文发送到下游系统（如 DBN、GEMPAK）。</p>
<p>⭕️ 核心程序</p>
<table>
<thead>
<tr>
<th align="left">程序名</th>
<th align="left">调用路径</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>rap_sndp</code></td>
<td align="left"><code>$&#123;EXECrap&#125;/rap_sndp</code></td>
<td align="left">生成探空报文（BUFR 格式）</td>
</tr>
<tr>
<td align="left"><code>rap_stnmlist</code></td>
<td align="left"><code>$&#123;EXECrap&#125;/rap_stnmlist</code></td>
<td align="left">将 BUFR 文件分解为单站文件</td>
</tr>
<tr>
<td align="left"><code>rap_bfr2gpk.sh</code></td>
<td align="left"><code>$&#123;USHrap&#125;/rap_bfr2gpk.sh</code></td>
<td align="left">将 BUFR 文件转换为 GEMPAK 格式</td>
</tr>
</tbody></table>
<p>⭕️ 系统工具</p>
<table>
<thead>
<tr>
<th align="left">程序名</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>set</code></td>
<td align="left">设置脚本调试模式（<code>set -x</code>），便于跟踪脚本执行过程</td>
</tr>
<tr>
<td align="left"><code>cd</code></td>
<td align="left">切换工作目录到 <code>$DATA</code></td>
</tr>
<tr>
<td align="left"><code>cp</code></td>
<td align="left">复制文件，用于准备输入文件和配置文件</td>
</tr>
<tr>
<td align="left"><code>rm</code></td>
<td align="left">删除临时文件和目录</td>
</tr>
<tr>
<td align="left"><code>ln -s</code></td>
<td align="left">创建符号链接，用于链接到输入文件和配置文件</td>
</tr>
<tr>
<td align="left"><code>cat</code></td>
<td align="left">合并文件内容，将多个文件内容合并为一个文件</td>
</tr>
<tr>
<td align="left"><code>mv</code></td>
<td align="left">移动或重命名文件</td>
</tr>
<tr>
<td align="left"><code>tar</code></td>
<td align="left">打包文件，生成 tar 归档文件</td>
</tr>
<tr>
<td align="left"><code>gzip</code></td>
<td align="left">压缩文件，生成 gzip 压缩文件</td>
</tr>
<tr>
<td align="left"><code>cwordsh</code></td>
<td align="left">用于块化&#x2F;解块化 BUFR 文件，使其与 GEMPAK 兼容</td>
</tr>
<tr>
<td align="left"><code>postmsg</code></td>
<td align="left">向事件管理器（ECF&#x2F;SMS）回传完成状态</td>
</tr>
<tr>
<td align="left"><code>err_exit</code></td>
<td align="left">自定义函数，用于在发生错误时退出脚本</td>
</tr>
<tr>
<td align="left"><code>dbn_alert</code></td>
<td align="left">向 DBN 系统发送警报，通知产品生成完成</td>
</tr>
</tbody></table>
<p>⭕️ 输入输出文件</p>
<ul>
<li>输入文件</li>
</ul>
<table>
<thead>
<tr>
<th align="left">文件名</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>profilm.c1.f$&#123;fhr&#125;</code></td>
<td align="left">WRF → BUFR 转换后的探空报文文件</td>
</tr>
<tr>
<td align="left"><code>rap_bufr.tbl</code></td>
<td align="left">BUFR 表文件，定义 BUFR 消息结构</td>
</tr>
<tr>
<td align="left"><code>rap_modtop.parm</code></td>
<td align="left">参数文件，定义探空报文生成所需参数</td>
</tr>
<tr>
<td align="left"><code>rap_sndp.parm.mono</code></td>
<td align="left">参数文件，定义探空报文生成所需参数</td>
</tr>
<tr>
<td align="left"><code>class1.bufr</code></td>
<td align="left">生成的 BUFR 格式探空报文文件</td>
</tr>
</tbody></table>
<ul>
<li>输出文件</li>
</ul>
<table>
<thead>
<tr>
<th align="left">文件名</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>profilm.c1.$&#123;tmmark&#125;</code></td>
<td align="left">合并后的探空报文文件</td>
</tr>
<tr>
<td align="left"><code>class1.bufr_unblock</code></td>
<td align="left">解块化的 BUFR 文件</td>
</tr>
<tr>
<td align="left"><code>class1.bufr_block</code></td>
<td align="left">块化的 BUFR 文件</td>
</tr>
<tr>
<td align="left"><code>rap.t$&#123;cyc&#125;z.class1.bufr.$&#123;tmmark&#125;</code></td>
<td align="left">输出的 BUFR 格式探空报文文件</td>
</tr>
<tr>
<td align="left"><code>rap.$&#123;cycle&#125;.bufrsnd.tar.gz</code></td>
<td align="left">压缩的探空报文文件归档</td>
</tr>
<tr>
<td align="left"><code>rap.$&#123;cycle&#125;.bufrsnd.tar.gz</code></td>
<td align="left">输出的压缩探空报文文件归档</td>
</tr>
</tbody></table>
<h4 id="exrap-process-hydro-sh"><a href="#exrap-process-hydro-sh" class="headerlink" title="exrap_process_hydro.sh"></a>exrap_process_hydro.sh</h4><p>是一个 <strong>水凝物处理脚本</strong>，负责从多种数据源（如雷达反射率、Langley 云、闪电数据）中提取和处理气象数据，生成 BUFR 格式的分析产品，并将这些产品发送到下游系统（如 DBN）。</p>
<p>⭕️ 核心程序</p>
<table>
<thead>
<tr>
<th align="left">程序名</th>
<th align="left">调用路径</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>rap_process_mosaic</code></td>
<td align="left"><code>$&#123;EXECrap&#125;/rap_process_mosaic</code></td>
<td align="left">处理雷达马赛克数据，生成 BUFR 格式的反射率产品</td>
</tr>
<tr>
<td align="left"><code>rap_process_cloud</code></td>
<td align="left"><code>$&#123;EXECrap&#125;/rap_process_cloud</code></td>
<td align="left">处理 Langley 云数据，生成 BUFR 格式的云产品</td>
</tr>
<tr>
<td align="left"><code>rap_process_lightning</code></td>
<td align="left"><code>$&#123;EXECrap&#125;/rap_process_lightning</code></td>
<td align="left">处理闪电数据，生成 BUFR 格式的闪电产品</td>
</tr>
</tbody></table>
<p>⭕️ 系统工具</p>
<table>
<thead>
<tr>
<th align="left">程序名</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>set</code></td>
<td align="left">设置脚本调试模式（<code>set -x</code>），便于跟踪脚本执行过程</td>
</tr>
<tr>
<td align="left"><code>cd</code></td>
<td align="left">切换工作目录到 <code>$DATA</code></td>
</tr>
<tr>
<td align="left"><code>cp</code></td>
<td align="left">复制文件，用于准备输入文件和配置文件</td>
</tr>
<tr>
<td align="left"><code>rm</code></td>
<td align="left">删除临时文件和目录</td>
</tr>
<tr>
<td align="left"><code>ln -s</code></td>
<td align="left">创建符号链接，用于链接到输入文件和配置文件</td>
</tr>
<tr>
<td align="left"><code>gzip</code></td>
<td align="left">解压缩 <code>.gz</code> 文件</td>
</tr>
<tr>
<td align="left"><code>date</code></td>
<td align="left">获取当前日期和时间</td>
</tr>
<tr>
<td align="left"><code>cut</code></td>
<td align="left">从字符串中提取特定部分，用于解析日期和时间</td>
</tr>
<tr>
<td align="left"><code>ls</code></td>
<td align="left">列出目录中的文件，用于检查文件存在性</td>
</tr>
<tr>
<td align="left"><code>wc</code></td>
<td align="left">统计文件中的行数</td>
</tr>
<tr>
<td align="left"><code>more</code></td>
<td align="left">查看文件内容</td>
</tr>
<tr>
<td align="left"><code>time</code></td>
<td align="left">测量程序运行时间</td>
</tr>
<tr>
<td align="left"><code>mpiexec</code></td>
<td align="left">启动并行任务，运行核心处理程序</td>
</tr>
<tr>
<td align="left"><code>mail.py</code></td>
<td align="left">发送邮件通知，用于错误报告</td>
</tr>
<tr>
<td align="left"><code>postmsg</code></td>
<td align="left">向事件管理器（ECF&#x2F;SMS）回传完成状态</td>
</tr>
<tr>
<td align="left"><code>err_exit</code></td>
<td align="left">自定义函数，用于在发生错误时退出脚本</td>
</tr>
</tbody></table>
<p>⭕️ 输入输出文件</p>
<ul>
<li>输入文件</li>
</ul>
<table>
<thead>
<tr>
<th align="left">文件名</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>rap_prepobs.bufrtable</code></td>
<td align="left">BUFR 表文件，定义 BUFR 消息结构</td>
</tr>
<tr>
<td align="left"><code>rap_geo_em.d01.nc</code></td>
<td align="left">地理网格静态文件</td>
</tr>
<tr>
<td align="left"><code>MergedReflectivityQC_*_$&#123;PDY&#125;-$&#123;cyc&#125;????.grib2.gz</code></td>
<td align="left">雷达反射率 GRIB2 文件（NSSL 格式）</td>
</tr>
<tr>
<td align="left"><code>MREF3D33L.$&#123;PDY&#125;.$&#123;HH&#125;$&#123;mm&#125;00.gz</code></td>
<td align="left">雷达反射率二进制文件（8 瓦片格式）</td>
</tr>
<tr>
<td align="left"><code>tile1-8/$&#123;PDY&#125;_$&#123;cyc&#125;00.mosaic</code></td>
<td align="left">雷达反射率二进制文件（81 瓦片格式）</td>
</tr>
<tr>
<td align="left"><code>rap.t$&#123;cyc&#125;z.lgycld.tm00.bufr_d</code></td>
<td align="left">Langley 云数据 BUFR 文件</td>
</tr>
<tr>
<td align="left"><code>rap.t$&#123;cyc&#125;z.lghtng.tm00.bufr_d</code></td>
<td align="left">闪电数据 BUFR 文件</td>
</tr>
</tbody></table>
<ul>
<li>输出文件</li>
</ul>
<table>
<thead>
<tr>
<th align="left">文件名</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>NSSLRefInGSI.bufr</code></td>
<td align="left">生成的 NSSL 反射率 BUFR 文件</td>
</tr>
<tr>
<td align="left"><code>NASALaRCCloudInGSI.bufr</code></td>
<td align="left">生成的 Langley 云 BUFR 文件</td>
</tr>
<tr>
<td align="left"><code>LightningInGSI.bufr</code></td>
<td align="left">生成的闪电 BUFR 文件</td>
</tr>
<tr>
<td align="left"><code>rap.t$&#123;cyc&#125;z.mosaic.bufr</code></td>
<td align="left">输出的马赛克 BUFR 文件</td>
</tr>
<tr>
<td align="left"><code>rap.t$&#123;cyc&#125;z.nasacloud.bufr</code></td>
<td align="left">输出的云 BUFR 文件</td>
</tr>
<tr>
<td align="left"><code>rap.t$&#123;cyc&#125;z.lghtng.bufr</code></td>
<td align="left">输出的闪电 BUFR 文件</td>
</tr>
</tbody></table>
<h4 id="exrap-nawips-sh"><a href="#exrap-nawips-sh" class="headerlink" title="exrap_nawips.sh"></a>exrap_nawips.sh</h4><p>是一个 <strong>GRIB 转 GEMPAK 脚本</strong>，负责将 NCEP GRIB 文件转换为 GEMPAK 格式，并生成特定层次（如 ZAGL、theta）的产品，最终将这些产品发送到下游系统（如 DBN、ECFLOW）。</p>
<p>⭕️ 核心程序</p>
<table>
<thead>
<tr>
<th align="left">程序名</th>
<th align="left">调用路径</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>nagrib2</code></td>
<td align="left"><code>$&#123;GEMEXE&#125;/nagrib2</code></td>
<td align="left">将 GRIB 文件转换为 GEMPAK 格式</td>
</tr>
<tr>
<td align="left"><code>gdvint</code></td>
<td align="left"><code>$&#123;GEMEXE&#125;/gdvint</code></td>
<td align="left">在 GEMPAK 中处理垂直插值，生成特定层次的产品</td>
</tr>
</tbody></table>
<p>⭕️ 系统工具</p>
<table>
<thead>
<tr>
<th align="left">程序名</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>set</code></td>
<td align="left">设置脚本调试模式（<code>set -x</code>），便于跟踪脚本执行过程</td>
</tr>
<tr>
<td align="left"><code>mkdir</code></td>
<td align="left">创建目录</td>
</tr>
<tr>
<td align="left"><code>cd</code></td>
<td align="left">切换工作目录</td>
</tr>
<tr>
<td align="left"><code>cp</code></td>
<td align="left">复制文件，用于准备输入文件和配置文件</td>
</tr>
<tr>
<td align="left"><code>sleep</code></td>
<td align="left">暂停脚本执行，等待指定时间</td>
</tr>
<tr>
<td align="left"><code>let</code></td>
<td align="left">执行算术运算</td>
</tr>
<tr>
<td align="left"><code>typeset</code></td>
<td align="left">设置变量格式（如补零）</td>
</tr>
<tr>
<td align="left"><code>postmsg</code></td>
<td align="left">向事件管理器（ECF&#x2F;SMS）回传完成状态</td>
</tr>
<tr>
<td align="left"><code>err_exit</code></td>
<td align="left">自定义函数，用于在发生错误时退出脚本</td>
</tr>
<tr>
<td align="left"><code>ecflow_client</code></td>
<td align="left">通知 ECFLOW 调度系统释放后续任务</td>
</tr>
</tbody></table>
<p>⭕️ 输入输出文件</p>
<ul>
<li>输入文件</li>
</ul>
<table>
<thead>
<tr>
<th align="left">文件名</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>g2varsncep1.tbl</code></td>
<td align="left">GEMPAK 表文件，定义 GRIB2 到 GEMPAK 的变量映射</td>
</tr>
<tr>
<td align="left"><code>g2vcrdncep1.tbl</code></td>
<td align="left">GEMPAK 表文件，定义 GRIB2 坐标信息</td>
</tr>
<tr>
<td align="left"><code>g2varswmo2.tbl</code></td>
<td align="left">GEMPAK 表文件，定义 WMO 标准的 GRIB2 变量映射</td>
</tr>
<tr>
<td align="left"><code>g2vcrdwmo2.tbl</code></td>
<td align="left">GEMPAK 表文件，定义 WMO 标准的 GRIB2 坐标信息</td>
</tr>
<tr>
<td align="left"><code>$&#123;model&#125;.$&#123;cycle&#125;.$&#123;GRIB&#125;$&#123;fhr&#125;$&#123;EXT&#125;</code></td>
<td align="left">输入的 GRIB 文件，包含气象数据</td>
</tr>
</tbody></table>
<p>⭕️ 输出文件</p>
<table>
<thead>
<tr>
<th align="left">文件名</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>$&#123;RUN&#125;_$&#123;PDY&#125;$&#123;cyc&#125;f$&#123;fhr3&#125;</code></td>
<td align="left">输出的 GEMPAK 格式网格文件</td>
</tr>
<tr>
<td align="left"><code>$&#123;RUN&#125;_$&#123;PDY&#125;$&#123;cyc&#125;f$&#123;fhr3&#125;.idx</code></td>
<td align="left">输出的 GEMPAK 索引文件</td>
</tr>
</tbody></table>
<h4 id="exrap-gempak-meta-sh"><a href="#exrap-gempak-meta-sh" class="headerlink" title="exrap_gempak_meta.sh"></a>exrap_gempak_meta.sh</h4><p>是一个 <strong>并行任务调度脚本</strong>，负责从 <code>$FIXgempak/rap_meta</code> 中读取命令列表，生成并行脚本 <code>poescript</code>，并通过 <code>mpirun.lsf</code> 启动并行任务，完成 GEMPAK 元数据处理。</p>
<p>⭕️ 核心程序</p>
<table>
<thead>
<tr>
<th align="left">程序名</th>
<th align="left">调用路径</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>mpirun.lsf</code></td>
<td align="left">直接调用</td>
<td align="left">启动并行任务，运行生成的并行脚本 <code>poescript</code></td>
</tr>
</tbody></table>
<hr>
<p>⭕️ 系统工具</p>
<table>
<thead>
<tr>
<th align="left">程序名</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>set</code></td>
<td align="left">设置脚本调试模式（<code>set -x</code>），便于跟踪脚本执行过程</td>
</tr>
<tr>
<td align="left"><code>cd</code></td>
<td align="left">切换工作目录到 <code>$DATA</code></td>
</tr>
<tr>
<td align="left"><code>rm</code></td>
<td align="left">删除文件 <code>$DATA/poescript</code></td>
</tr>
<tr>
<td align="left"><code>cat</code></td>
<td align="left">读取文件内容，用于统计行数</td>
</tr>
<tr>
<td align="left"><code>wc</code></td>
<td align="left">统计文件中的行数</td>
</tr>
<tr>
<td align="left"><code>chmod</code></td>
<td align="left">修改文件权限，使 <code>poescript</code> 可执行</td>
</tr>
<tr>
<td align="left"><code>expr</code></td>
<td align="left">执行算术运算，用于递增变量 <code>n</code></td>
</tr>
<tr>
<td align="left"><code>eval</code></td>
<td align="left">执行字符串作为命令，用于动态生成脚本内容</td>
</tr>
<tr>
<td align="left"><code>postmsg</code></td>
<td align="left">向事件管理器（ECF&#x2F;SMS）回传完成状态</td>
</tr>
</tbody></table>
<p>⭕️ 输入输出文件</p>
<ul>
<li>输入文件</li>
</ul>
<table>
<thead>
<tr>
<th align="left">文件名</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>$FIXgempak/rap_meta</code></td>
<td align="left">包含要并行执行的命令列表</td>
</tr>
</tbody></table>
<ul>
<li>输出文件</li>
</ul>
<table>
<thead>
<tr>
<th align="left">文件名</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>$DATA/poescript</code></td>
<td align="left">生成的并行脚本，包含要执行的命令</td>
</tr>
<tr>
<td align="left"><code>output.$n</code></td>
<td align="left">每个并行任务的标准输出文件</td>
</tr>
</tbody></table>
<h3 id="ush-目录"><a href="#ush-目录" class="headerlink" title="ush 目录"></a>ush 目录</h3><h4 id="rap-real-wpsdfi-bd-sh"><a href="#rap-real-wpsdfi-bd-sh" class="headerlink" title="rap_real_wpsdfi_bd.sh"></a>rap_real_wpsdfi_bd.sh</h4><p>这是一个用于运行WRF Real程序的Shell脚本，主要功能是处理RAP模式的初始化和边界条件生成，包括数字滤波初始化（DFI）处理，为WRF预报运行准备必要的输入文件。</p>
<h4 id="rap-run-wrf-sh"><a href="#rap-run-wrf-sh" class="headerlink" title="rap_run_wrf.sh"></a>rap_run_wrf.sh</h4><p>这是一个用于运行WRF模型的Shell脚本，专门为RAP模式配置和启动WRF预报运行。脚本主要功能是设置WRF运行的并行计算环境、资源分配和性能优化参数。</p>
<h4 id="rap-smartinit-sh"><a href="#rap-smartinit-sh" class="headerlink" title="rap_smartinit.sh"></a>rap_smartinit.sh</h4><p>这是一个用于生成RAP模式SMARTINIT产品的Shell脚本，主要功能是将WRF模型输出的原生网格数据插值和转换为NDFD（National Digital Forecast Database）网格格式，生成面向业务应用的精细化预报产品。</p>
<p>定义不同NDFD网格的投影和范围参数：</p>
<ul>
<li><strong>网格187</strong>（CONUS）: 兰伯特投影，233.723448:2345:2539.703, 19.228976:1597:2539.703</li>
<li><strong>网格198</strong>（阿拉斯加）: 极射赤面投影，181.429000:1649:2976.563, 40.530101:1105:2976.563</li>
<li><strong>网格196</strong>（夏威夷）: 墨卡托投影，198.474999:321:2500.000, 18.072699:225:2500.000</li>
<li><strong>网格194</strong>（波多黎各）: 墨卡托投影，291.804700:353:1250.000, 16.828700:257:1250.000</li>
</ul>
<h4 id="rap-mkawp-sh"><a href="#rap-mkawp-sh" class="headerlink" title="rap_mkawp.sh"></a>rap_mkawp.sh</h4><p>这是一个用于生成Rapid Refresh (RAP) 模式AWIPS产品的复杂脚本，主要功能是处理不同网格的GRIB2数据，生成累积降水、雪水当量等产品，并将其转换为AWIPS可用的格式进行分发。</p>
<h4 id="rap-grib2sfc-sh"><a href="#rap-grib2sfc-sh" class="headerlink" title="rap_grib2sfc.sh"></a>rap_grib2sfc.sh</h4><p>这是一个用于从RAP模式GRIB2输出文件中提取特定表面和近地面气象要素的Shell脚本。脚本通过<code>wgrib2</code>工具筛选和组合特定的气象变量，生成一个包含选定要素的GRIB2文件，提取的变量涵盖了表面观测、近地面气象条件、云特征和对流能量等关键气象要素，通常用于：</p>
<ol>
<li>减少数据存储需求</li>
<li>提高数据访问效率</li>
<li>为特定应用（如航空天气、表面天气分析）提供定制数据子集</li>
<li>准备输入数据用于可视化或进一步处理</li>
</ol>
<h4 id="rap-bfr2gpk-sh"><a href="#rap-bfr2gpk-sh" class="headerlink" title="rap_bfr2gpk.sh"></a>rap_bfr2gpk.sh</h4><p>这是一个用于处理Rapid Refresh (RAP) 模式输出的BUFR格式数据的Shell脚本，主要功能是将BUFR格式的气象数据转换为GEMPAK软件可用的表面观测数据和探空数据格式，以便进行进一步的气象分析和可视化。</p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>RAP-HRRR install</title>
    <url>/2022/05/01/Tool/RAP-HRRR%20install/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="推荐-spack-底层环境配置"><a href="#推荐-spack-底层环境配置" class="headerlink" title="推荐 spack 底层环境配置"></a>推荐 spack 底层环境配置</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">spack env create RaH_Gnu </span><br><span class="line">spack env activate RaH_Gnu </span><br></pre></td></tr></table></figure>

<ul>
<li>安装gcc 5.4.0</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1. 安装</span></span><br><span class="line">spack install gcc@5.4.0 cppflags=&#x27;-std=gnu++14&#x27; cxxflags=&#x27;-std=gnu++14&#x27;</span><br><span class="line"><span class="meta prompt_">  </span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2. 把刚装好的 5.4.0 注册为可用编译器</span></span><br><span class="line">spack compiler add &quot;$(spack location -i gcc@5.4.0)&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">3. 验证</span></span><br><span class="line">spack compiler list</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">4. 安装后使用</span></span><br><span class="line">spack load gcc@5.4.0</span><br></pre></td></tr></table></figure>

<ul>
<li>安装 <a href="mailto:&#111;&#112;&#101;&#x6e;&#109;&#x70;&#x69;&#64;&#x34;&#46;&#53;&#46;&#x31;">&#111;&#112;&#101;&#x6e;&#109;&#x70;&#x69;&#64;&#x34;&#46;&#53;&#46;&#x31;</a></li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">spack add openmpi@4.5.1</span><br><span class="line">spack concretize</span><br><span class="line">spack install</span><br></pre></td></tr></table></figure>

<ul>
<li>安装<a href="mailto:&#112;&#121;&#116;&#x68;&#x6f;&#x6e;&#64;&#x33;&#x2e;&#x38;&#x2e;&#x30;">&#112;&#121;&#116;&#x68;&#x6f;&#x6e;&#64;&#x33;&#x2e;&#x38;&#x2e;&#x30;</a></li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">spack add python@3.8.0</span><br><span class="line">spack concretize</span><br><span class="line">spack install</span><br></pre></td></tr></table></figure>

<ul>
<li>特殊情况</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">spack add w3nco@2.4.1</span><br><span class="line">spack concretize --force</span><br><span class="line">spack install</span><br></pre></td></tr></table></figure>

<p>安装其他依赖库，也可具体安装时根据具体需求再安装</p>
<ul>
<li>ecflow</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">spack add libtiff@4.7.0+pic%gcc@5.4.0</span><br><span class="line">spack concretize</span><br><span class="line">spack install</span><br><span class="line">spack add ecflow+ui%gcc@5.4.0</span><br></pre></td></tr></table></figure>







<h3 id="⭐️-可选-hpc-stack-安装基本软件依赖"><a href="#⭐️-可选-hpc-stack-安装基本软件依赖" class="headerlink" title="⭐️ 可选 hpc-stack 安装基本软件依赖"></a>⭐️ 可选 hpc-stack 安装基本软件依赖</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">zlib libpng jasper hdf5 pnetcdf netcdf nco esmf bacio sigio</span><br><span class="line">sfcio gfsio w3nco sp ip nemsio w3emc g2 g2tmpl crtm </span><br><span class="line">wrf_io bufr prod_util grib_util</span><br></pre></td></tr></table></figure>

<ul>
<li><p>建议打包好放到<code>/home/cry/down_soft/hpc-stack/pkg</code>目录下</p>
</li>
<li><p>修改 <code>config_hrrr.sh</code>  前几行机器信息后</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./setup_modules.sh -p /home/cry/down_soft/hpc-stack -c  config/config_hrrr.sh</span><br></pre></td></tr></table></figure>
</li>
<li><p>所有软件安装命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./build_stack.sh -p /home/cry/down_soft/hpc-stack -c config/config_hrrr.sh -y stack/stack_custom.yaml -m</span><br></pre></td></tr></table></figure>
</li>
<li><p>单个软件安装命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./build_stack.sh -p /home/cry/down_soft/hpc-stack -c config/config_hrrr.sh -y stack/stack_custom.yaml -m -l miniconda3</span><br></pre></td></tr></table></figure>
</li>
<li><p>debug</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">bacio 安装时找不到路径</span></span><br><span class="line">export bacio_DIR=/home/cry/down_soft/hpc-stack/gnu-13.3.0/bacio/2.4.1/lib/cmake/bacio/</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">g2 3.4.5 安装失败</span></span><br><span class="line">需要配合 g2c 1.8.0</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">grib_util 1.4.0 安装失败</span></span><br><span class="line">配合 g2 3.4.5 和 g2c 1.8.0</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ip2 安装失败 报sp_8 错误</span></span><br><span class="line">pkg/ip2-v1.1.2/src/CMakeLists.txt 中 </span><br><span class="line"><span class="meta prompt_">target_link_libraries($</span><span class="language-bash">&#123;lib_name&#125; PUBLIC sp::sp_<span class="variable">$&#123;kind&#125;</span>)</span></span><br><span class="line">改为 target_link_libraries($&#123;lib_name&#125; PUBLIC sp::sp_d)</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">crtm 安装错误</span></span><br><span class="line">先安装ecbuild 和 eckit</span><br><span class="line">module load ecbuild </span><br><span class="line">module load eckit</span><br><span class="line">修改crtm-v2.4.0/CMakeLists.txt</span><br><span class="line">将 project( crtm LANGUAGES Fortran ) 改为</span><br><span class="line">project(crtm VERSION 2.4.0 LANGUAGES C CXX Fortran) </span><br><span class="line">注释掉 add_subdirectory(test)  </span><br></pre></td></tr></table></figure>
</li>
<li><p>载入安装好的模块</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">module use /home/cry/down_soft/hpc-stack/modulefiles/stack</span><br><span class="line">module load hpc hpc-gnu hpc-openmpi</span><br><span class="line">module avail</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="安装RAP"><a href="#安装RAP" class="headerlink" title="安装RAP"></a>安装RAP</h2><h3 id="编译-rap-wrfarw-serial"><a href="#编译-rap-wrfarw-serial" class="headerlink" title="编译 rap_wrfarw_serial"></a>编译 <code>rap_wrfarw_serial</code></h3><p>用于编译所需要的<code>wrfio</code>等库</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd $&#123;BASE&#125;/rap_wrfarw.fd/WRFV3.9</span><br><span class="line">./clean -aa</span><br><span class="line">./clean -a</span><br><span class="line">./clean</span><br><span class="line">cd external/io_int/</span><br><span class="line">rm -f *.f *.o *.obj *.i *.mod *.a diffwrf io_int_idx_tags.h</span><br><span class="line">cd -</span><br><span class="line">cp configure.wrf.lxcry configure.wrf</span><br><span class="line">./configure -hyb</span><br><span class="line">./compile em_real |&amp; tee make.log</span><br></pre></td></tr></table></figure>

<p><code>configure.wrf.lxcry</code>为依据<code>configure.wrf.serial</code>修改对应编译选项后的适配文件</p>
<ul>
<li>出现real_em.f90  <code>#ifdef DM_PARALLEL</code>报错</li>
</ul>
<p>vi .&#x2F;main&#x2F;real_em.F</p>
<figure class="highlight plaintext"><figcaption><span>./main/real_em.F</span></figcaption><table><tr><td class="code"><pre><span class="line">去掉下面宏定义前面的空格</span><br><span class="line">#ifdef DM_PARALLEL</span><br><span class="line">#endif</span><br></pre></td></tr></table></figure>

<h3 id="编译rap-update-bc"><a href="#编译rap-update-bc" class="headerlink" title="编译rap_update_bc"></a>编译<code>rap_update_bc</code></h3><ul>
<li>source 环境变量</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source sorc/spack_rap_load.sh</span><br></pre></td></tr></table></figure>

<ul>
<li>修改<code>makefile</code></li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FC  = mpif90</span><br></pre></td></tr></table></figure>

<ul>
<li>make</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd $&#123;BASE&#125;/rap_update_bc.fd</span><br><span class="line">mkdir -p ../../exec</span><br><span class="line">make clean</span><br><span class="line">make</span><br></pre></td></tr></table></figure>

<h3 id="编译-rap-wrfpost"><a href="#编译-rap-wrfpost" class="headerlink" title="编译 rap_wrfpost"></a>编译 <code>rap_wrfpost</code></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone -b upp_v11.0.0 https://github.com/NOAA-EMC/UPP</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd UPP/tests</span><br><span class="line">./compile_upp.sh</span><br></pre></td></tr></table></figure>

<p>修改<code>compile_upp.sh</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">compiler=&quot;gnu&quot;</span><br></pre></td></tr></table></figure>

<ul>
<li>Spack 安装 g2、g2tmpl</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">spack add g2@3.4.5%gcc@5.4.0^libpng+pic</span><br></pre></td></tr></table></figure>

<p>A successful build will create an executable called upp.x in the UPP&#x2F;tests&#x2F;install&#x2F;bin&#x2F; directory.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp tests/install/bin/upp.x ../../exec/rap_wrfpost</span><br></pre></td></tr></table></figure>

<ul>
<li>Obtain and unpack CRTM fix coefficient files</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd UPP</span><br><span class="line">mkdir crtm &amp;&amp; cd crtm</span><br><span class="line">wget https://github.com/NOAA-EMC/UPP/releases/download/upp_v10.1.0/fix.tar.gz</span><br><span class="line">tar -xzf fix.tar.gz</span><br></pre></td></tr></table></figure>

<h3 id="编译-rap-wps"><a href="#编译-rap-wps" class="headerlink" title="编译 rap_wps"></a>编译 <code>rap_wps</code></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd $&#123;BASE&#125;/rap_wps.fd/WPSV3.9.1</span><br><span class="line">./clean -aa</span><br><span class="line">./clean -a</span><br><span class="line">./clean</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cp ungrib/src/ungrib.exe $&#123;BASE&#125;/../exec/rap_wps_ungrib</span><br><span class="line">cp metgrid/src/metgrid.exe $&#123;BASE&#125;/../exec/rap_wps_metgrid</span><br></pre></td></tr></table></figure>

<ul>
<li><p>尚未理解以下操作：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$&#123;BASE&#125;/../parm/rap_Vtable.gfs` 必须替换成为 `WRF-WPS` 提供的给**community**用户使用的 `Vtable</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="编译-rap-wrfarw"><a href="#编译-rap-wrfarw" class="headerlink" title="编译 rap_wrfarw"></a>编译 <code>rap_wrfarw</code></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd $&#123;BASE&#125;/rap_wrfarw.fd/WRFV3.9</span><br><span class="line">./clean -aa</span><br><span class="line">./clean -a</span><br><span class="line">./clean</span><br><span class="line">cd external/io_int/</span><br><span class="line">rm -f *.f *.o *.obj *.i *.mod *.a diffwrf io_int_idx_tags.h</span><br><span class="line">cd -</span><br><span class="line">cp configure.wrf.lxcry configure.wrf</span><br><span class="line">./compile em_real |&amp; tee make.log</span><br></pre></td></tr></table></figure>
<p><code>configure.wrf.lxcry</code>为依据<code>configure.wrf.optim</code>修改对应编译选项后的适配文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cp main/real.exe $&#123;BASE&#125;/../exec/rap_wrfarw_real</span><br><span class="line">cp main/wrf.exe $&#123;BASE&#125;/../exec/rap_wrfarw_fcst</span><br></pre></td></tr></table></figure>



<h2 id="编译-rap-gsi"><a href="#编译-rap-gsi" class="headerlink" title="编译 rap_gsi"></a>编译 <code>rap_gsi</code></h2><ul>
<li>spack 安装 <a href="mailto:&#x63;&#x6d;&#x61;&#107;&#x65;&#x40;&#x33;&#x2e;&#49;&#x38;&#46;&#54;">&#x63;&#x6d;&#x61;&#107;&#x65;&#x40;&#x33;&#x2e;&#49;&#x38;&#46;&#54;</a>、<a href="mailto:&#111;&#x70;&#x65;&#110;&#98;&#x6c;&#x61;&#x73;&#64;&#48;&#46;&#x33;&#46;&#x32;&#x30;">&#111;&#x70;&#x65;&#110;&#98;&#x6c;&#x61;&#x73;&#64;&#48;&#46;&#x33;&#46;&#x32;&#x30;</a>、<a href="mailto:&#98;&#97;&#99;&#105;&#x6f;&#64;&#50;&#46;&#x34;&#46;&#49;">&#98;&#97;&#99;&#105;&#x6f;&#64;&#50;&#46;&#x34;&#46;&#49;</a></li>
<li>spack 安装 crtm</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt安装git-lfs后，export GIT_LFS_SKIP_SMUDGE=1</span><br></pre></td></tr></table></figure>

<ul>
<li><code>spack_rap_load.sh</code>中添加以下内容后重新source</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export BUFR_LIBd=$SPACK_LIB/libbufr_d_DA.a</span><br><span class="line">export NEMSIO_LIB=$SPACK_LIB/libnemsio.a</span><br><span class="line"></span><br><span class="line">export CRTM_INC=$SPACK_INCLUDE</span><br><span class="line">export CRTM_LIB=$SPACK_LIB/libcrtm.a</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 此为debug时找不到路径的解决方案</span></span></span><br></pre></td></tr></table></figure>

<ul>
<li>修改<code>CMakeLists.txt</code> 中部分内容如下</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#set(CMAKE_DISABLE_IN_SOURCE_BUILD ON)</span><br><span class="line"></span><br><span class="line">#set(CMAKE_C_COMPILER &quot;$&#123;crayComp&#125;/cc&quot;)</span><br><span class="line">#set(CMAKE_CXX_COMPILER &quot;$&#123;crayComp&#125;/CC&quot;)</span><br><span class="line">#set(CMAKE_Fortran_COMPILER &quot;$&#123;crayComp&#125;/ftn&quot;)</span><br><span class="line"></span><br><span class="line">set(ENV&#123;CC&#125; &quot;gcc&quot;)</span><br><span class="line">set(ENV&#123;CXX&#125; &quot;g++&quot;)</span><br><span class="line">set(ENV&#123;FC&#125; &quot;gfortran&quot;)</span><br></pre></td></tr></table></figure>

<ul>
<li>创建<code>build</code>文件夹</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd $&#123;BASE&#125;/rap_gsi.fd</span><br><span class="line">rm -fr build</span><br><span class="line">mkdir build</span><br><span class="line">cd $&#123;BASE&#125;/rap_gsi.fd/build</span><br></pre></td></tr></table></figure>

<ul>
<li>修改<code>$&#123;BASE&#125;/rap_gsi.fd/src/fv3gfs_ncio/CMakeLists.txt</code>中部分内容如下</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set(FV3GFS_NCIO_Fortran_FLAGS &quot;-ffree-line-length-none&quot;) # 新增</span><br><span class="line">set_source_files_properties( $&#123;FV3GFS_NCIO_SRC&#125; PROPERTIES COMPILE_FLAGS &quot;$&#123;FV3GFS_NCIO_Fortran_FLAGS&#125;&quot; ) # 修改</span><br></pre></td></tr></table></figure>

<ul>
<li>修改<code>/home/cry/WORK/HRRR/sorc/hrrr_gsi.fd/src/gsi/setupcldtot.F90</code>中部分内容如下</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">write(*,&#x27;(A,7i5)&#x27;) # 原 write(*,&#x27;(A,7i)&#x27;)</span><br></pre></td></tr></table></figure>

<ul>
<li>使用编译选项关掉已经安装的库</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cmake -DENKF_MODE=WRF -DBUILD_ENKF_PREPROCESS_ARW=ON -DBUILD_GSDCLOUD_ARW=ON -DBUILD_BACIO=OFF -DBUILD_SP=OFF -DBUILD_NEMSIO=OFF -DBUILD_NCO=OFF -DBUILD_EMC=OFF -DBUILD_SFCIO=OFF -DBUILD_SIGIO=OFF -DBUILD_BUFR=OFF -DBUILD_IP=OFF -DBUILD_CRTM=OFF ../.</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">make -j1 |&amp; tee make.log</span><br></pre></td></tr></table></figure>

<ul>
<li>debug</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-lnetcdff 报错</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/usr/bin/ld: cannot find -lnetcdff: No such file or directory</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/usr/bin/ld: cannot find -lnetcdff: No such file or directory</span></span><br><span class="line">解决方式：</span><br><span class="line">修改 ./cmake/Modules/setGNUFlags.cmake 文件中以下两处</span><br><span class="line">set(EXTRA_LINKER_FLAGS &quot;-L$ENV&#123;NETCDF_LIB&#125; -lgomp -lnetcdf -lnetcdff&quot; CACHE INTERNAL &quot;&quot;)</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">找不到nemsio</span></span><br><span class="line">解决方式：</span><br><span class="line">gsi所需要的nemsio的环境变量需要指定到具体的库，而不是路径。将环境变量设为</span><br><span class="line">NEMSIO_LIB=$SPACK_LIB/libnemsio.a</span><br></pre></td></tr></table></figure>

<ul>
<li>拷贝生成的可执行文件</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cp bin/gsi.x        $&#123;BASE&#125;/../exec/rap_gsi</span><br><span class="line">cp bin/enkf_wrf.x   $&#123;BASE&#125;/../exec/rap_enkf</span><br><span class="line">cp bin/enspreproc.x $&#123;BASE&#125;/../exec/rap_process_enkf</span><br><span class="line">cp bin/initialens.x $&#123;BASE&#125;/../exec/rap_initialens</span><br></pre></td></tr></table></figure>



<h3 id="编译rap-full-cycle-surface"><a href="#编译rap-full-cycle-surface" class="headerlink" title="编译rap_full_cycle_surface"></a>编译<code>rap_full_cycle_surface</code></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd $&#123;BASE&#125;/rap_full_cycle_surface.fd</span><br></pre></td></tr></table></figure>

<ul>
<li>修改<code>makefile</code>部分如下：</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FC       = mpif90</span><br><span class="line"></span><br><span class="line">FLAGS = -fopenmp</span><br><span class="line"></span><br><span class="line">NWPLIBS = $&#123;W3NCO_LIB4&#125; $&#123;BACIO_LIB4&#125; $&#123;W3EMC_LIB4&#125;</span><br><span class="line">INCLD = -I$&#123;NETCDF&#125;/include # -I$&#123;WRF_IO_INC&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><code>spack_rap_load.sh</code>中添加以下内容后重新source</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export WRF_IO_LIB=$SPACK_LIB/libwrf_io.a</span><br><span class="line">export W3NCO_LIB4=$SPACK_LIB/libw3nco_4.a</span><br><span class="line">export W3EMC_LIB4=$SPACK_LIB/libw3emc_4.a</span><br><span class="line">export BACIO_LIB4=$SPACK_LIB/libbacio_4.a</span><br></pre></td></tr></table></figure>

<ul>
<li>make</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">make clean</span><br><span class="line">make</span><br></pre></td></tr></table></figure>

<ul>
<li>不报错并生成<code>*.o</code></li>
</ul>
<h3 id="编译-rap-process-cloud"><a href="#编译-rap-process-cloud" class="headerlink" title="编译 rap_process_cloud"></a>编译 <code>rap_process_cloud</code></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd $&#123;BASE&#125;/rap_process_cloud.fd  </span><br></pre></td></tr></table></figure>

<ul>
<li>修改<code>makefile</code>部分如下</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FC       = mpif90</span><br><span class="line"></span><br><span class="line">INCLD=  -I$&#123;NETCDF&#125;/include # -I$&#123;WRF_IO_INC&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>make</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">make clean</span><br><span class="line">make</span><br></pre></td></tr></table></figure>



<h3 id="编译-rap-update-fields"><a href="#编译-rap-update-fields" class="headerlink" title="编译 rap_update_fields"></a>编译 <code>rap_update_fields</code></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd $&#123;BASE&#125;/rap_update_fields.fd</span><br></pre></td></tr></table></figure>

<ul>
<li>修改<code>makefile</code>部分如下</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FC       = mpif90</span><br><span class="line">FLAGS = -fopenmp</span><br><span class="line">INCLD= -I$&#123;NETCDF&#125;/include #-I$&#123;WRF_IO_INC&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>make</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">make clean</span><br><span class="line">make</span><br></pre></td></tr></table></figure>



<h3 id="编译-rap-process-sst"><a href="#编译-rap-process-sst" class="headerlink" title="编译 rap_process_sst"></a>编译 <code>rap_process_sst</code></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd $&#123;BASE&#125;/rap_process_sst.fd</span><br></pre></td></tr></table></figure>

<ul>
<li>修改<code>makefile</code>部分如下</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FC       = mpif90</span><br><span class="line"></span><br><span class="line">FLAGS = -fopenmp</span><br><span class="line">NWPLIBS = $&#123;G2_LIB4&#125; $&#123;JASPER_LIB&#125; $&#123;PNG_LIB&#125; $&#123;Z_LIB&#125; $&#123;W3NCO_LIB4&#125; $&#123;BACIO_LIB4&#125;</span><br><span class="line"></span><br><span class="line">W3FLAGS = # -I/$&#123;W3NCO_INC4&#125;</span><br><span class="line">INCLD= -I$&#123;NETCDF&#125;/include -I$&#123;G2_INC4&#125; # -I$&#123;WRF_IO_INC&#125; -I$&#123;G2_INC4&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><code>spack_rap_load.sh</code>中添加以下内容后重新source</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export G2_LIB4=$SPACK_LIB/libg2_4.a</span><br><span class="line">export G2_INC4=/home/lxc/work_station/spack/opt/spack/linux-ubuntu24.04-x86_64_v3/gcc-5.4.0/g2-3.4.5-wclfxhd2sdu5bkqmivp2hryf3ctfmce3/include_4/</span><br><span class="line"></span><br><span class="line">export JASPER_LIB=$SPACK_LIB/libjasper.so</span><br><span class="line">export PNG_LIB=$SPACK_LIB/libpng.a</span><br><span class="line">export Z_LIB=$SPACK_LIB/libz.so.1.3.1.zlib-ng</span><br></pre></td></tr></table></figure>

<ul>
<li>make</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">make clean</span><br><span class="line">make</span><br></pre></td></tr></table></figure>



<h3 id="编译-rap-update-gvf"><a href="#编译-rap-update-gvf" class="headerlink" title="编译 rap_update_gvf"></a>编译 <code>rap_update_gvf</code></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd $&#123;BASE&#125;/rap_update_gvf.fd</span><br></pre></td></tr></table></figure>

<ul>
<li>修改<code>makefile</code>部分如下</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FC       = mpif90</span><br><span class="line">INCLD=  -I$&#123;NETCDF&#125;/include -I$&#123;G2_INC4&#125; # -I$&#123;WRF_IO_INC&#125; -I$&#123;G2_INC4&#125; -I$&#123;G2TMPL_INC&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>make</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">make clean</span><br><span class="line">make</span><br></pre></td></tr></table></figure>



<h3 id="编译-rap-process-imssnow-fd"><a href="#编译-rap-process-imssnow-fd" class="headerlink" title="编译 rap_process_imssnow.fd"></a>编译 <code>rap_process_imssnow.fd</code></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd $&#123;BASE&#125;/rap_process_imssnow.fd</span><br></pre></td></tr></table></figure>

<ul>
<li>修改<code>makefile</code>部分如下</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FC       = mpif90</span><br><span class="line">FLAGS = -fopenmp</span><br><span class="line">INCLD= -I$&#123;NETCDF&#125;/include -I$&#123;G2_INC4&#125; -I$&#123;IP_INC4&#125; </span><br></pre></td></tr></table></figure>

<ul>
<li><code>spack_rap_load.sh</code>中添加以下内容后重新source</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export G2_INC4=/home/lxc/work_station/spack/opt/spack/linux-ubuntu24.04-x86_64_v3/gcc-5.4.0/g2-3.4.5-wclfxhd2sdu5bkqmivp2hryf3ctfmce3/include_4/</span><br></pre></td></tr></table></figure>

<ul>
<li>make</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">make clean</span><br><span class="line">make</span><br></pre></td></tr></table></figure>

<h2 id="安装HRRR"><a href="#安装HRRR" class="headerlink" title="安装HRRR"></a>安装HRRR</h2><p>相同操作参考RAP的流程即可</p>
<h3 id="编译-hrrr-process-mosaic"><a href="#编译-hrrr-process-mosaic" class="headerlink" title="编译 hrrr_process_mosaic"></a>编译 <code>hrrr_process_mosaic</code></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd $&#123;BASE&#125;/hrrr_process_mosaic.fd</span><br></pre></td></tr></table></figure>

<ul>
<li>修改<code>makefile</code>部分如下</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FC       = mpif90</span><br><span class="line">FLAGS    = -frounding-math -frecord-marker=4 -ffpe-trap=invalid,zero,overflow -DLINUX</span><br><span class="line">INCLD=  -I$&#123;NETCDF_INCLUDE&#125; -I$&#123;G2_INC4&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>make</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">make clean</span><br><span class="line">make</span><br></pre></td></tr></table></figure>



<h3 id="编译-hrrr-process-lightning"><a href="#编译-hrrr-process-lightning" class="headerlink" title="编译 hrrr_process_lightning"></a>编译 <code>hrrr_process_lightning</code></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd $&#123;BASE&#125;/hrrr_process_lightning.fd</span><br></pre></td></tr></table></figure>

<ul>
<li>修改<code>makefile</code>部分如下</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FC       = mpif90</span><br></pre></td></tr></table></figure>

<ul>
<li>make</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">make clean</span><br><span class="line">make</span><br></pre></td></tr></table></figure>





<h3 id="编译-hrrr-update-gvf"><a href="#编译-hrrr-update-gvf" class="headerlink" title="编译 hrrr_update_gvf"></a>编译 <code>hrrr_update_gvf</code></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd $&#123;BASE&#125;/hrrr_update_gvf.fd</span><br></pre></td></tr></table></figure>

<ul>
<li>apack 安装 g2c</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">spack add g2c@1.6.2%gcc@5.4.0</span><br><span class="line">spack concretize</span><br><span class="line">spack install</span><br></pre></td></tr></table></figure>

<ul>
<li>修改<code>makefile</code>部分如下</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FC       = mpif90</span><br><span class="line"></span><br><span class="line">NWPLIBS = $&#123;G2TMPL_LIB&#125; $&#123;G2_LIB4&#125; $&#123;JASPER_LIB&#125; $&#123;PNG_LIB&#125; $&#123;Z_LIB&#125; $&#123;BACIO_LIB4&#125; $&#123;W3EMC_LIB4&#125; $&#123;W3NCO_LIB4&#125; $&#123;BUFR_LIB4&#125; $&#123;G2C_LIB&#125;</span><br><span class="line"></span><br><span class="line">INCLD=  -I$&#123;NETCDF_INCLUDE&#125; -I$&#123;G2_INC4&#125; -I$&#123;G2TMPL_INC&#125;</span><br><span class="line"></span><br><span class="line">LIBS =  -L$&#123;NWPLIBS&#125; $&#123;WRF_IO_LIB&#125; \</span><br><span class="line">        -L$&#123;NETCDF&#125;/lib -lnetcdf -lnetcdff -lg2_4 -lg2c -lpng -lz -ljasper</span><br></pre></td></tr></table></figure>

<ul>
<li><code>spack_rap_load.sh</code>中添加以下内容后重新source</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export G2TMPL_INC=/home/lxc/work_station/spack/opt/spack/linux-ubuntu24.04-x86_64_v3/gcc-5.4.0/g2tmpl-1.13.0-rk5g5cg6dq6mfu3whjx2vonyoa2xseot/</span><br><span class="line">export G2C_LIB=$SPACK_LIB/libg2c.a</span><br></pre></td></tr></table></figure>

<ul>
<li>make</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">make clean</span><br><span class="line">make</span><br></pre></td></tr></table></figure>



<h3 id="编译-hrrr-ref2tten"><a href="#编译-hrrr-ref2tten" class="headerlink" title="编译 hrrr_ref2tten"></a>编译 <code>hrrr_ref2tten</code></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd $&#123;BASE&#125;/hrrr_ref2tten.fd</span><br></pre></td></tr></table></figure>

<ul>
<li>修改<code>makefile</code>部分如下</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FC   = mpif90</span><br><span class="line"></span><br><span class="line">FLAGS= #-assume byterecl</span><br><span class="line"></span><br><span class="line">hrrr_ref2tten: $&#123;OBJS&#125; gsdcloudanalysis_ref2tten.o</span><br><span class="line">        $&#123;FC&#125; -fopenmp -o ../../exec/hrrr_ref2tten $&#123;FLAGS&#125; gsdcloudanalysis_ref2tten.o $&#123;OBJS&#125; $&#123;LIBS&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>make</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">make clean</span><br><span class="line">make</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Slurm-Install</title>
    <url>/2022/05/01/Tool/Slurm-Install/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Ubuntu-安装Slurm"><a href="#Ubuntu-安装Slurm" class="headerlink" title="Ubuntu 安装Slurm"></a>Ubuntu 安装Slurm</h2><p>参考：<a href="https://blog.csdn.net/r1141207831/article/details/125272108">https://blog.csdn.net/r1141207831/article/details/125272108</a></p>
<h3 id="安装必要库文件"><a href="#安装必要库文件" class="headerlink" title="安装必要库文件"></a>安装必要库文件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo su</span><br><span class="line">apt-get install make hwloc libhwloc-dev libmunge-dev libmunge2 munge mariadb-server libmysqlclient-dev -y</span><br></pre></td></tr></table></figure>

<h3 id="启动munge服务"><a href="#启动munge服务" class="headerlink" title="启动munge服务"></a>启动munge服务</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl enable munge   // 设置munge开机自启动</span><br><span class="line">systemctl start munge    // 启动munge服务</span><br><span class="line">systemctl status munge   // 查看munge状态</span><br></pre></td></tr></table></figure>

<h3 id="编译安装slurm"><a href="#编译安装slurm" class="headerlink" title="编译安装slurm"></a>编译安装slurm</h3><p>将slurm-21.08.6.tar.bz2源码包放置在&#x2F;home&#x2F;fz&#x2F;package目录下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /home/softwage</span><br><span class="line">git clone https://github.com/SchedMD/slurm.git</span><br><span class="line">tar -jxvf slurm-21.08.6.tar.bz2</span><br><span class="line">cd slurm-21.08.6/</span><br><span class="line">./configure --prefix=/opt/slurm/21.08.6 --sysconfdir=/opt/slurm/21.08.6/etc</span><br><span class="line">make -j16</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>

<h3 id="启动数据库"><a href="#启动数据库" class="headerlink" title="启动数据库"></a>启动数据库</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cp -r etc/slurm*.service /etc/systemd/system/</span><br><span class="line">systemctl enable mariadb         // 设置mariadb开机自启动</span><br><span class="line">systemctl start mariadb          // 启动mariadb服务</span><br><span class="line">systemctl status mariadb         // 查看mariadb状态</span><br></pre></td></tr></table></figure>

<h3 id="配置数据库"><a href="#配置数据库" class="headerlink" title="配置数据库"></a>配置数据库</h3><p>进入数据库</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mysql</span><br></pre></td></tr></table></figure>

<p>配置数据库</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">CREATE USER &#x27;slurm&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;fz2022&#x27;;</span><br><span class="line">GRANT ALL ON *.* TO &#x27;slurm&#x27;@&#x27;localhost&#x27;;</span><br><span class="line">create database slurm_fz_db;</span><br><span class="line">grant all on slurm_fz_db.* to &#x27;slurm&#x27;@&#x27;localhost&#x27; identified by &#x27;fz2022&#x27; with grant option;</span><br><span class="line">exit;</span><br></pre></td></tr></table></figure>

<h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir /opt/slurm/21.08.6/etc</span><br><span class="line">cp etc/slurm.conf.example /opt/slurm/21.08.6/etc/slurm.conf</span><br><span class="line">cp etc/cgroup.conf.example /opt/slurm/21.08.6/etc/cgroup.conf</span><br><span class="line">cp etc/slurmdbd.conf.example /opt/slurm/21.08.6/etc/slurmdbd.conf</span><br><span class="line">chmod 600 slurmdbd.conf</span><br></pre></td></tr></table></figure>

<p>修改slurm.conf</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /opt/slurm/21.08.6/etc/slurm.conf</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">##以下为修改内容########################################################</span></span></span><br><span class="line">SlurmctldHost=fz</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SlurmUser=slurm //把这一行注释掉，一定要把这一行注释掉</span></span><br><span class="line">AccountingStorageType=accounting_storage/slurmdbd</span><br><span class="line">NodeName=fz State=UNKNOWN Sockets=2 CoresPerSocket=8 CPUs=16</span><br><span class="line">修改slurmdbd.conf</span><br><span class="line"></span><br><span class="line">vim /opt/slurm/21.08.6/etc/slurmdbd.conf</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">##以下为修改内容########################################################</span></span></span><br><span class="line">DbdHost=fz</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SlurmUser=slurm //把这一行注释掉，一定要把这一行注释掉</span></span><br><span class="line">StorageLoc=slurm_fz_db</span><br><span class="line">StoragePass=fz2022</span><br></pre></td></tr></table></figure>

<h3 id="启动slurm服务"><a href="#启动slurm服务" class="headerlink" title="启动slurm服务"></a>启动slurm服务</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl enable slurmd</span><br><span class="line">systemctl start slurmd</span><br><span class="line">systemctl status slurmd</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl stop slurmd</span></span><br><span class="line"></span><br><span class="line">systemctl enable slurmdbd</span><br><span class="line">systemctl start slurmdbd</span><br><span class="line">systemctl status slurmdbd</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl stop slurmdbd</span></span><br><span class="line"></span><br><span class="line">systemctl enable slurmctld</span><br><span class="line">systemctl start slurmctld</span><br><span class="line">systemctl status slurmctld</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl stop slurmctld</span></span><br></pre></td></tr></table></figure>

<h3 id="配置slurm"><a href="#配置slurm" class="headerlink" title="配置slurm"></a>配置slurm</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SLURMPATH=/opt/slurm/21.08.6</span><br><span class="line">echo &quot;export PATH=\$PATH:$SLURMPATH/bin:$SLURMPATH/sbin&quot; &gt;&gt; /etc/bash.bashrc</span><br><span class="line">source /etc/bash.bashrc</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>SCP</title>
    <url>/2022/05/01/Tool/SCP/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="scp时报错"><a href="#scp时报错" class="headerlink" title="scp时报错"></a>scp时报错</h2><p><strong>scp: Received message too long 220204320</strong></p>
<p><strong>scp: Ensure the remote shell produces no output for non-interactive sessions.</strong></p>
<h4 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h4><p>ssh连接正常，但sftp却无法连接。(sftp是ssh内含的协议)</p>
<p>使用命令行sftp <a href="mailto:&#x72;&#111;&#111;&#x74;&#x40;&#x31;&#x30;&#x31;&#x2e;&#x33;&#53;&#46;&#120;&#x78;&#46;&#120;&#x78;">&#x72;&#111;&#111;&#x74;&#x40;&#x31;&#x30;&#x31;&#x2e;&#x33;&#53;&#46;&#120;&#x78;&#46;&#120;&#x78;</a>连接时，返回了这个错误：Received message too long 1763729773 Ensure the remote shell produces no output for non-interactive sessions. (收到的信息太长 1763729773 确保远程shell对非交互式会话不产生输出)</p>
<p>坑点在于使用Tabby(一个终端模拟器)连接sftp并不会报错，而是一直没反应。只有使用命令行连接时，才得知了这个错误，但平时很少人会尝试用命令行连接。</p>
<h4 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h4><p>原因是：~&#x2F;.bashrc 或 ~&#x2F;.bashrc等Shell启动文件中存在echo，printf等输出语句，导致sftp不能建立连接。<br>(这两是bash的启动文件，如果你用的是zsh等其他Shell，需要找与你用的Shell对应的启动文件。)<br>(关于shell启动文件详见：【Linux基础】理解并善用Shell – Shell精讲)</p>
<p>————<br>根据这篇文章 Received message too long Ensure the remote shell produces no output for non-interactive sessions.<br>所说：经过实验：</p>
<p>如果在 &#x2F;etc&#x2F;bashrc 或 <del>&#x2F;.bashrc 中有echo等输出语句, 则无法远程用scp, sftp 传文件<br>如果在 &#x2F;etc&#x2F;profile 或 ~&#x2F;.bash_profile 中有echo等输出语句, 不影响用scp, sftp 传文件<br>这里有一些小问题，&#x2F;etc&#x2F;profile和</del>&#x2F;.bash_profile是交互式登录式shell加载的，&#x2F;etc&#x2F;bashrc 或 ~&#x2F;.bashrc是交互式非登录式Shell加载的。而命令行连接sftp报的错是… produces no output for non-interactive sessions，说的是非交互式Shell。这里就有点矛盾，按说非交互式Shell不会加载Shell的启动文件，而sftp明显需要登录。<br>说这些仅做了解即可，具体就不深究了，这都是小问题。</p>
<h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><p><strong>方法一：</strong> 移除Shell启动文件中的输出语句。<br>移除 ~&#x2F;.bashrc 或 ~&#x2F;.bashrc等启动文件中的输出语句。<br>其实这些文件本身是没有输出语句的，所以基本上是使用者自己写的，具体写在哪些文件里应该会有印象。并且这些语句会在建立ssh连接的时候打印出来，真的不好找的话，可以在所有启动文件中搜索打印的内容，就能找到啦。<strong>（验证通过该方法可以解决）</strong></p>
<p><strong>方法二：</strong> 修改sftp服务为内部的sftp。<br>编辑<code>/etc/ssh/sshd_config</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$</span><span class="language-bash">vim /etc/ssh/sshd_config</span></span><br></pre></td></tr></table></figure>

<p>找到<code>Subsystem</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">override default of no subsystems</span></span><br><span class="line">Subsystem sftp  /usr/libexec/openssh/sftp-server</span><br></pre></td></tr></table></figure>

<p>注释掉，并新增一行 <code>Subsystem sftp internal-sftp</code> , 表示使用内部sftp<br>(修改后, 即便Shell启动文件中有输出语句，也不再影响sftp的使用)</p>
<p>然后重新连接ssh，或重启sshd服务即可</p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Slurm</title>
    <url>/2022/05/01/Tool/Slurm/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://p.ipic.vip/n5qgbk.jpg" alt="img"></p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">PARRITION：节点所在分区</span><br><span class="line">AVAIL：分区状态，up 标识可用，down 标识不可用</span><br><span class="line">TIMELIMIT：程序运行最大时长，infinite 表示不限制，如果限制格式为 days-houres:minutes:seconds</span><br><span class="line">NODES：节点数</span><br><span class="line">NODELIST：节点名列表</span><br><span class="line">STATE：节点状态，可能的状态包括：</span><br><span class="line"></span><br><span class="line">主要关注以下三种状态</span><br><span class="line">allocated、alloc ：所有资源已分配</span><br><span class="line">idle：空闲</span><br><span class="line">mixed：混合，节点在运行作业，但有些空闲 CPU 核，可接受新作业</span><br><span class="line"></span><br><span class="line">其他状态</span><br><span class="line">completing、comp：完成中</span><br><span class="line">down：宕机</span><br><span class="line">drained、drain：已失去活力</span><br><span class="line">fail：失效</span><br><span class="line">reserved、resv：资源预留</span><br><span class="line">unknown、unk：未知原因</span><br><span class="line">如果状态带有后缀 *，表示节点没有响应</span><br></pre></td></tr></table></figure>

<p>对于某个分区的详细情况，需要使用格式化字段进行指定</p>
<p><img src="https://p.ipic.vip/2p22ui.jpg" alt="img"></p>
<p><img src="https://p.ipic.vip/h193uu.jpg" alt="img"></p>
<p><img src="https://p.ipic.vip/idda3n.jpg" alt="img"></p>
<p>假设想要查看某个分区的总计算资源和可用计算资源，我们可以使用</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">sinfo -o &quot;%9P %.5a %.10l %.6D %.6t %.24C %.6m %.6e %N&quot;</span><br></pre></td></tr></table></figure>

<p><img src="https://p.ipic.vip/q11pag.jpg" alt="img"></p>
<p>其中CPU的显示格式为allocated (A), idle (I), and other (O) CPUs, as well as the total (T) CPUs.</p>
<p>其中MEMORY为已分配内存，而FREE_MEM为空闲内存</p>
<p>我们还可以进一步查看某个节点的计算资源</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">scontrol show node &lt;node name&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://p.ipic.vip/ttqoi3.jpg" alt="img"></p>
<p>可以看到该节点的内存以及CPU信息，与sinfo进行对照</p>
<h2 id="作业队列信息查看-squeue"><a href="#作业队列信息查看-squeue" class="headerlink" title="作业队列信息查看-squeue"></a>作业队列信息查看-squeue</h2><p><img src="https://p.ipic.vip/gd3ccb.jpg" alt="img"></p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">JOBID：作业号</span><br><span class="line">PARITION：分区名</span><br><span class="line">NAME：作业名</span><br><span class="line">USER：用户名</span><br><span class="line">ST：状态，常见的状态包括：</span><br><span class="line"></span><br><span class="line">PD、Q：排队中 ，PENDING</span><br><span class="line">R：运行中 ，RUNNING</span><br><span class="line">CA：已取消，CANCELLED</span><br><span class="line">CG：完成中，COMPLETIONG</span><br><span class="line">F：已失败，FAILED</span><br><span class="line">TO：超时，TIMEOUT</span><br><span class="line">NF：节点失效，NODE FAILURE</span><br><span class="line">CD：已完成，COMPLETED</span><br></pre></td></tr></table></figure>

<h2 id="任务提交命令"><a href="#任务提交命令" class="headerlink" title="任务提交命令"></a>任务提交命令</h2><p>分别为交互模式（srun），批处理模式（sbatch）和分配模式（salloc），这三种方式只是用户使用方式的区别，在管理，调度，记账时同等对待。</p>
<h3 id="交互模式-srun"><a href="#交互模式-srun" class="headerlink" title="交互模式-srun"></a>交互模式-srun</h3><p>特点：提交命令后，等待作业执行完成之后返回命令行窗口，如果断开终端会导致任务中断。</p>
<h3 id="批处理模式-sbatch"><a href="#批处理模式-sbatch" class="headerlink" title="批处理模式-sbatch"></a>批处理模式-sbatch</h3><p>特点：用户编写作业脚本，指定资源需求约束，提交后台执行作业，提交命令即返回命令行窗口。此时作业在进入调度状态，在资源满足要求时，分配完计算结点之后，系统将在所分配的第一个计算结点（而不是登录结点）上加载执行用户的作业脚本。批处理作业的脚本为一个文本文件，脚本第一行以 “#!” 字符开头，并制定脚本文件的解释程序，如 sh，bash。</p>
<p>一般情况下使用sbatch来提交任务，而在提交的调度代码中使用srun创建任务的调度顺序</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">单核/非并行任务</span><br><span class="line">#!/bin/bash</span><br><span class="line">#SBATCH --partition=&lt;partition name&gt;</span><br><span class="line">#SBATCH --job-name=singlecputasks</span><br><span class="line">#SBATCH --ntasks=2</span><br><span class="line">#SBATCH --cpus-per-task=1</span><br><span class="line">#SBATCH -o output/log.out.%j</span><br><span class="line">#SBATCH -e output/log.err.%j</span><br><span class="line"># Your script goes here</span><br><span class="line">srun --ntasks=1 echo &quot;I&#x27;m task 1&quot;</span><br><span class="line">srun --ntasks=1 echo &quot;I&#x27;m task 2&quot;</span><br><span class="line"></span><br><span class="line">多个单核任务同时运行，不指定node可能会导致两个task分配到不同node上</span><br><span class="line">#!/bin/bash</span><br><span class="line">#SBATCH --partition=&lt;partition name&gt;</span><br><span class="line">#SBATCH --job-name=singlecputasks</span><br><span class="line">#SBATCH --ntasks=2</span><br><span class="line">#SBATCH --cpus-per-task=1</span><br><span class="line">#SBATCH -o output/log.out.%j</span><br><span class="line">#SBATCH -e output/log.err.%j</span><br><span class="line"># Your script goes here</span><br><span class="line">srun --ntasks=1 echo &quot;I&#x27;m task 1&quot;</span><br><span class="line">srun --ntasks=1 echo &quot;I&#x27;m task 2&quot;</span><br><span class="line"></span><br><span class="line">多核任务-SYMMETRIC MULTIPROCESSING（SMP），cpu_per_task数量不能超过单个node可用的最大vCPU数量</span><br><span class="line">#!/bin/bash</span><br><span class="line">#SBATCH --partition=&lt;partition name&gt;</span><br><span class="line">#SBATCH --job-name=multithreaded</span><br><span class="line">#SBATCH --nodes=1</span><br><span class="line">#SBATCH --ntasks=1</span><br><span class="line">#SBATCH --cpus-per-task=8</span><br><span class="line">#SBATCH -o output/log.out.%j</span><br><span class="line">#SBATCH -e output/log.err.%j</span><br><span class="line">module load &lt;software name&gt;</span><br><span class="line"># Your script goes here</span><br><span class="line">mycommand --threads 8</span><br><span class="line"></span><br><span class="line">多个多核任务同时运行</span><br><span class="line">#!/bin/bash</span><br><span class="line">#SBATCH --partition=&lt;partition name&gt;</span><br><span class="line">#SBATCH --job-name=multithreadedtasks</span><br><span class="line">#SBATCH --nodes=4</span><br><span class="line">#SBATCH --ntasks=4</span><br><span class="line">#SBATCH --cpus-per-task=4</span><br><span class="line">#SBATCH -o output/log.out.%j</span><br><span class="line">#SBATCH -e output/log.err.%j</span><br><span class="line">module load &lt;software name&gt;</span><br><span class="line"># Your script goes here</span><br><span class="line">srun --ntasks=1 mycommand1 --threads 4</span><br><span class="line">srun --ntasks=1 mycommand2 --threads 4</span><br><span class="line">srun --ntasks=1 mycommand3 --threads 4</span><br><span class="line">srun --ntasks=1 mycommand4 --threads 4</span><br><span class="line"></span><br><span class="line">MESSAGE PASSING INTERFACE</span><br><span class="line">#!/bin/bash</span><br><span class="line">#SBATCH --partition=&lt;partition name&gt;</span><br><span class="line">#SBATCH --job-name=nodempi</span><br><span class="line">#SBATCH --ntasks=16</span><br><span class="line">#SBATCH --ntasks-per-node=8</span><br><span class="line">#SBATCH -o output/log.out.%j</span><br><span class="line">#SBATCH -e output/log.err.%j</span><br><span class="line">module load &lt;software name&gt;</span><br><span class="line"># Your script goes here</span><br><span class="line">mpirun myscript</span><br></pre></td></tr></table></figure>

<h3 id="分配模式-salloc"><a href="#分配模式-salloc" class="headerlink" title="分配模式-salloc"></a>分配模式-salloc</h3><p>特点：在提交作业前，抢占所需计算资源，然后在获取节点后登录到计算节点。</p>
<h2 id="示例Slurm操作"><a href="#示例Slurm操作" class="headerlink" title="示例Slurm操作"></a>示例Slurm操作</h2><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">使用vnc或ssh连接到管理节点（如示例中head01），不要在管理节点直接运行程序</span><br><span class="line"></span><br><span class="line">查看集群状态</span><br><span class="line">sinfo</span><br><span class="line"></span><br><span class="line">分辨其中使用slurm任务调度系统的节点（DCU,blade）和普通节点（gpu，lowmem）</span><br><span class="line">日常操作中常在普通节点测试程序（只能使用单个节点的资源），然后在slurm节点真正提交运行（能使用多个节点的资源）</span><br><span class="line">进入普通节点测试</span><br><span class="line">ssh snode01 -X</span><br></pre></td></tr></table></figure>

<p><img src="https://p.ipic.vip/wfwebn.jpg" alt="img"></p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">提交批处理任务</span><br><span class="line">sbatch myslurmscript.sh</span><br><span class="line">返回任务编号</span><br><span class="line">Submitted batch job 208</span><br><span class="line">查看任务状态</span><br><span class="line">squeue --job 208</span><br><span class="line">查看任务详细信息</span><br><span class="line">scontrol show job 208</span><br><span class="line">取消任务</span><br><span class="line">scancel 208</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Spack-WRF</title>
    <url>/2022/05/01/Tool/Spack-WRF/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Spack-从零开始，手把手教你轻松安装WRF"><a href="#Spack-从零开始，手把手教你轻松安装WRF" class="headerlink" title="Spack: 从零开始，手把手教你轻松安装WRF"></a>Spack: 从零开始，手把手教你轻松安装WRF</h1><p>来源：<a href="https://zhuanlan.zhihu.com/p/427158902">https://zhuanlan.zhihu.com/p/427158902</a></p>
<h2 id="1-安装spack，并配置环境变量"><a href="#1-安装spack，并配置环境变量" class="headerlink" title="1. 安装spack，并配置环境变量"></a>1. 安装spack，并配置环境变量</h2><h3 id="1-1-克隆spack仓库到本地"><a href="#1-1-克隆spack仓库到本地" class="headerlink" title="1.1 克隆spack仓库到本地"></a>1.1 克隆spack仓库到本地</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将spack克隆到~/spack文件夹。克隆位置可改</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">clone</span> -c feature.manyFiles=<span class="literal">true</span> https://github.com/spack/spack.git ~/spack</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> bin/</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./spack install zlib</span>   </span><br></pre></td></tr></table></figure>

<p><strong>备注：</strong> </p>
<ol>
<li><p>如果想覆盖原有安装，需先删除~.spack</p>
</li>
<li><p>如果你无法连接到互联网，可以在github网页上，下载仓库的zip文件，然后解压到你所需要的位置。</p>
</li>
</ol>
<h3 id="1-2-将spack-setup环境命令加载到bashrc中"><a href="#1-2-将spack-setup环境命令加载到bashrc中" class="headerlink" title="1.2 将spack setup环境命令加载到bashrc中"></a>1.2 将spack setup环境命令加载到bashrc中</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">echo</span> <span class="string">&quot;source ~/spack/share/spack/setup-env.sh&quot;</span> &gt;&gt; ~/.bashrc</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">source</span> ~/.bashrc</span></span><br></pre></td></tr></table></figure>

<h3 id="1-3-寻找编译器"><a href="#1-3-寻找编译器" class="headerlink" title="1.3 寻找编译器"></a>1.3 寻找编译器</h3><p>spack可以搜索你的环境变量<code>PATH</code>中所有编译器的可执行文件，并将其全路径保存到<code>~/.spack/linux/compilers.yaml</code>文件中。</p>
<p>假设你的超算上已使用module等方法管理编译器，你也可以先load你需要用到的编译器。总之，你需要保证你的编译器的可执行文件位于系统的<code>PATH</code>环境变量中。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">spack compiler find</span></span><br></pre></td></tr></table></figure>

<p>当然你也可以打开<code>~/.spack/linux/compilers.yaml</code>文件，手动修改路径</p>
<h2 id="2-安装wrf"><a href="#2-安装wrf" class="headerlink" title="2. 安装wrf"></a>2. 安装wrf</h2><h3 id="2-1-如果可以连接互联网"><a href="#2-1-如果可以连接互联网" class="headerlink" title="2.1 如果可以连接互联网"></a>2.1 如果可以连接互联网</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">spack install wrf</span></span><br></pre></td></tr></table></figure>

<p>这样就完成了！只需一步，立刻就可以完成！</p>
<h3 id="2-2-如果无法连接互联网"><a href="#2-2-如果无法连接互联网" class="headerlink" title="2.2 如果无法连接互联网"></a>2.2 如果无法连接互联网</h3><p>在一台可以连网的liux机器上安装spack；接着，执行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">spack info wrf</span></span><br></pre></td></tr></table></figure>

<p>查询wrf需要安装哪些依赖项。由输出信息可得知，wrf需要依赖</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hdf5,jemalloc,libtirpc,m4,netcdf-c,parallel-netcdf,pkgconfig,time,jasper,libpng,libtool,mpi,netcdf-fortran,perl,tcsh和zlib；</span><br></pre></td></tr></table></figure>

<p>接着，执行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">spack mirror create hdf5 jemalloc libtirpc  m4 netcdf-c parallel-netcdf pkgconfig time jasper libpng libtool mpi netcdf-fortran  perl tcsh zlib wrf</span></span><br></pre></td></tr></table></figure>

<p>spack会提示：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Successfully updated mirror in file:/[某路径]</span><br></pre></td></tr></table></figure>

<p>将该路径的文件全部打包，移动到你无法联网的那台机器上的相应位置（默认在主目录下）。然后再执行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">spack install wrf</span></span><br></pre></td></tr></table></figure>







<p>其他参考：</p>
<p><a href="https://www.amd.com/en/developer/zen-software-studio/applications/spack/hpc-applications-wrf.html">https://www.amd.com/en/developer/zen-software-studio/applications/spack/hpc-applications-wrf.html</a></p>
<p><a href="https://docs.nersc.gov/applications/wrf/">https://docs.nersc.gov/applications/wrf/</a></p>
<p><a href="https://qiita.com/daikumatan/items/2733fa22c3de0720d4e6">https://qiita.com/daikumatan/items/2733fa22c3de0720d4e6</a></p>
<p><a href="https://github.com/spack/spack/issues/21194">https://github.com/spack/spack/issues/21194</a></p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Iensorflow</title>
    <url>/2022/05/01/Tool/Tensorflow/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Tensorflow-使用-GPU"><a href="#Tensorflow-使用-GPU" class="headerlink" title="Tensorflow 使用 GPU"></a>Tensorflow 使用 GPU</h2><p>来源：<a href="https://blog.csdn.net/qq_31554953/article/details/107302404">https://blog.csdn.net/qq_31554953/article/details/107302404</a></p>
<p>Tensorflow和tf.keras 模型可以在单个GPU上透明运行，而无需更改。</p>
<p>注意：</p>
<p>（1）需要使用tf.config.experimental.list_physical_devices(‘GPU’)确认使用的tensorflow可以使用GPU。</p>
<p>（2）在一台机器上运行多个GPU，或者在多台机器上运行，最简单的方法是使用分布策略。</p>
<h3 id="确保你的机器已经安装TensorflowGPU版。"><a href="#确保你的机器已经安装TensorflowGPU版。" class="headerlink" title="确保你的机器已经安装TensorflowGPU版。"></a>确保你的机器已经安装TensorflowGPU版。</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Num GPUs Available: &quot;</span>, <span class="built_in">len</span>(tf.config.experimental.list_physical_devices(<span class="string">&#x27;GPU&#x27;</span>)))</span><br></pre></td></tr></table></figure>

<p>运行结果：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Num GPUs Available:  2</span><br></pre></td></tr></table></figure>


<p>TensorFlow支持在各种类型的设备上运行计算，包括CPU和GPU。 它们用字符串标识符表示，例如：</p>
<p>（1）”&#x2F;device:CPU:0”: The CPU of your machine.</p>
<p>（2）”&#x2F;GPU:0”: Short-hand notation for the first GPU of your machine that is visible to TensorFlow.</p>
<p>（3）”&#x2F;job:localhost&#x2F;replica:0&#x2F;task:0&#x2F;device:GPU:1”: 你的机器的第二个可用的GPU的全称。</p>
<p>如果TensorFlow操作同时具有CPU和GPU实施，则默认情况下，将操作分配给设备时，GPU设备将获得优先级。 例如，tf.matmul同时具有CPU和GPU内核。 在具有CPU：0和GPU：0的设备的系统上，除非您明确要求在另一台设备上运行，否则将选择GPU：0设备运行tf.matmul。</p>
<h3 id="记录操作分配给哪些设备"><a href="#记录操作分配给哪些设备" class="headerlink" title="记录操作分配给哪些设备"></a>记录操作分配给哪些设备</h3><p>要找出操作和张量分配给哪些设备，请将<code>tf.debugging.set_log_device_placement（True）</code>作为程序的第一条语句。 启用设备放置日志记录将导致打印任何张量分配或操作。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">tf.debugging.set_log_device_placement(<span class="literal">True</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># Create some tensors</span></span><br><span class="line">a = tf.constant([[<span class="number">1.0</span>, <span class="number">2.0</span>, <span class="number">3.0</span>], [<span class="number">4.0</span>, <span class="number">5.0</span>, <span class="number">6.0</span>]])</span><br><span class="line">b = tf.constant([[<span class="number">1.0</span>, <span class="number">2.0</span>], [<span class="number">3.0</span>, <span class="number">4.0</span>], [<span class="number">5.0</span>, <span class="number">6.0</span>]])</span><br><span class="line">c = tf.matmul(a, b)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(c)</span><br></pre></td></tr></table></figure>

<p>运行结果：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Executing op MatMul <span class="keyword">in</span> device /job:localhost/replica:<span class="number">0</span>/task:<span class="number">0</span>/device:GPU:<span class="number">0</span></span><br><span class="line">tf.Tensor(</span><br><span class="line">[[<span class="number">22.</span> <span class="number">28.</span>]</span><br><span class="line"> [<span class="number">49.</span> <span class="number">64.</span>]], shape=(<span class="number">2</span>, <span class="number">2</span>), dtype=float32)</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<ul>
<li><strong>进行上述测试时遇到报错</strong></li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ensorflow/stream_executor/cuda/cuda_blas.cc:226] failed to create cublas handle: CUBLAS_STATUS_NOT_INITIALIZED</span><br><span class="line"></span><br><span class="line">OP_REQUIRES failed at matmul_op_impl.h:442 : Internal: Attempting to perform BLAS operation using StreamExecutor without BLAS support</span><br></pre></td></tr></table></figure>

<p>解决方法参考：<a href="https://blog.csdn.net/Camileyml/article/details/127368123">https://blog.csdn.net/Camileyml/article/details/127368123</a></p>
<p>在代码最上方加入以下代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import os</span><br><span class="line"></span><br><span class="line">os.environ[&quot;CUDA_VISIBLE_DEVICES&quot;] = &quot;1&quot;</span><br></pre></td></tr></table></figure>



<ul>
<li>运行程序时遇到报错</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">AttributeError: module &#x27;numpy&#x27; has no attribute &#x27;object&#x27;</span><br></pre></td></tr></table></figure>

<p>解决方法参考：<a href="https://www.cnblogs.com/emanlee/p/17074900.html">https://www.cnblogs.com/emanlee/p/17074900.html</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip uninstall numpy</span><br><span class="line">pip install numpy==1.23.4</span><br></pre></td></tr></table></figure>







<h3 id="手动指定设备"><a href="#手动指定设备" class="headerlink" title="手动指定设备"></a>手动指定设备</h3><p>如果您希望某个特定操作在您选择的设备上运行，而不是自动为您选择的设备，则可以与tf.device一起使用来创建设备上下文，并且该上下文中的所有操作都将在同一指定设备上运行 。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">tf.debugging.set_log_device_placement(<span class="literal">True</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># Place tensors on the CPU</span></span><br><span class="line"><span class="keyword">with</span> tf.device(<span class="string">&#x27;/CPU:0&#x27;</span>):</span><br><span class="line">  a = tf.constant([[<span class="number">1.0</span>, <span class="number">2.0</span>, <span class="number">3.0</span>], [<span class="number">4.0</span>, <span class="number">5.0</span>, <span class="number">6.0</span>]])</span><br><span class="line">  b = tf.constant([[<span class="number">1.0</span>, <span class="number">2.0</span>], [<span class="number">3.0</span>, <span class="number">4.0</span>], [<span class="number">5.0</span>, <span class="number">6.0</span>]])</span><br><span class="line"> </span><br><span class="line">c = tf.matmul(a, b)</span><br><span class="line"><span class="built_in">print</span>(c)</span><br></pre></td></tr></table></figure>

<p>运行结果：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Executing op MatMul <span class="keyword">in</span> device /job:localhost/replica:<span class="number">0</span>/task:<span class="number">0</span>/device:GPU:<span class="number">0</span></span><br><span class="line">tf.Tensor(</span><br><span class="line">[[<span class="number">22.</span> <span class="number">28.</span>]</span><br><span class="line"> [<span class="number">49.</span> <span class="number">64.</span>]], shape=(<span class="number">2</span>, <span class="number">2</span>), dtype=float32)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Spack</title>
    <url>/2022/05/01/Tool/Spack/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Spack：超算上最好的包管理器"><a href="#Spack：超算上最好的包管理器" class="headerlink" title="Spack：超算上最好的包管理器"></a>Spack：超算上最好的包管理器</h1><p>来源：<a href="https://mp.weixin.qq.com/s/zfhB9is4RQ5JkSYyHG0j5w">https://mp.weixin.qq.com/s/zfhB9is4RQ5JkSYyHG0j5w</a></p>
<p><code>Spack</code>是一个包管理工具，它为大型超级计算中心设计，支持各种平台和环境上的软件的多个版本和配置。</p>
<p>用户可在集群中安装多种版本的软件，且可以相互隔离、无特权需求，用户可在集群中安装一个软件的不同版本来使用。</p>
<p>更重要的是，它可以在没有网络的情况下，一键解析依赖，并安装库。通常情况下，这些库的编译都是很复杂的，但<code>spack</code>却可以轻松地解决这些编译上的问题。</p>
<p>注：本文大量参考了<code>spack</code>官方文档内容，并在一些地方添加了自己的注释与理解。希望这篇文章能对所有超算用户有所帮助。</p>
<h2 id="1-安装Spack"><a href="#1-安装Spack" class="headerlink" title="1. 安装Spack"></a>1. 安装Spack</h2><p><code>Spack</code>安装十分简单，您可以在<code>github</code>上，将<code>spack</code>仓库克隆到本地，然后将spack环境变量导入现有窗口中。</p>
<h2 id="1-1-下载Spack包管理器文件"><a href="#1-1-下载Spack包管理器文件" class="headerlink" title="1.1 下载Spack包管理器文件"></a>1.1 下载Spack包管理器文件</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd ~  ## 也可以打开到任何你想把spack安装到的目录</span><br><span class="line">git clone https://github.com/spack/spack.git</span><br></pre></td></tr></table></figure>

<h2 id="1-2-导入Spack环境"><a href="#1-2-导入Spack环境" class="headerlink" title="1.2 导入Spack环境"></a>1.2 导入Spack环境</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 注意，前面的点号不要忘了输入</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">. spack/share/spack/setup-env.sh</span></span><br></pre></td></tr></table></figure>

<p>您也可以将<code>Spack</code>环境放入<code>.bashrc</code>中，这样在每次加载shell时可默认加载<code>spack</code>环境。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo &quot;source /opt/spack/share/spack/setup-env.sh&quot; &gt;&gt; ~/.bashrc</span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure>

<h2 id="1-3-检查安装情况"><a href="#1-3-检查安装情况" class="headerlink" title="1.3 检查安装情况"></a>1.3 检查安装情况</h2><p>当完成安装和导入<code>spack</code>的步骤后，您可以试着使用一些<code>spack</code>命令，来测试功能是否正常执行，从而判断<code>spack</code>是否正确安装。 本次测试使用<code>spec</code>模块来做测试。<code>spec</code>可用于查询安装此软件包需要的依赖项。 下列命令为使用现有<code>gcc</code>版本为<code>7.5.0</code>的编译器来编译<code>gcc-10.2.0</code>版本，如可以出现下面类似输出，则说明<code>spack</code>环境搭建完成。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">spack spec gcc@10.2.0%gcc@7.5.0</span></span><br><span class="line">Input spec</span><br><span class="line">--------------------------------</span><br><span class="line">gcc@10.2.0%gcc@7.5.0</span><br><span class="line"></span><br><span class="line">Concretized</span><br><span class="line">--------------------------------</span><br><span class="line">gcc@10.2.0%gcc@7.5.0~binutils~bootstrap~nvptx~piclibs~strip languages=c,c++,fortran patches=2c18531a23623596e1daf6f0dd963cf72c208945ecad90515640c3ab23991159 arch=linux-ubuntu18.04-skylake</span><br><span class="line">    ^gmp@6.1.2%gcc@7.5.0 arch=linux-ubuntu18.04-skylake</span><br><span class="line">        ^autoconf@2.69%gcc@7.5.0 arch=linux-ubuntu18.04-skylake</span><br><span class="line">            ^m4@1.4.18%gcc@7.5.0+sigsegv patches=3877ab548f88597ab2327a2230ee048d2d07ace1062efe81fc92e91b7f39cd00,fc9b61654a3ba1a8d6cd78ce087e7c96366c290bc8d2c299f09828d793b853c8 arch=linux-ubuntu18.04-skylake</span><br><span class="line">                ^libsigsegv@2.12%gcc@7.5.0 arch=linux-ubuntu18.04-skylake</span><br><span class="line">            ^perl@5.30.3%gcc@7.5.0+cpanm+shared+threads arch=linux-ubuntu18.04-skylake</span><br><span class="line">                ^berkeley-db@18.1.40%gcc@7.5.0 arch=linux-ubuntu18.04-skylake</span><br><span class="line">                ^gdbm@1.18.1%gcc@7.5.0 arch=linux-ubuntu18.04-skylake</span><br><span class="line">                    ^readline@8.0%gcc@7.5.0 arch=linux-ubuntu18.04-skylake</span><br><span class="line">                        ^ncurses@6.2%gcc@7.5.0~symlinks+termlib arch=linux-ubuntu18.04-skylake</span><br><span class="line">                            ^pkgconf@1.7.3%gcc@7.5.0 arch=linux-ubuntu18.04-skylake</span><br><span class="line">        ^automake@1.16.2%gcc@7.5.0 arch=linux-ubuntu18.04-skylake</span><br><span class="line">        ^libtool@2.4.6%gcc@7.5.0 arch=linux-ubuntu18.04-skylake</span><br><span class="line">    ^isl@0.21%gcc@7.5.0 arch=linux-ubuntu18.04-skylake</span><br><span class="line">    ^mpc@1.1.0%gcc@7.5.0 arch=linux-ubuntu18.04-skylake</span><br><span class="line">        ^mpfr@4.0.2%gcc@7.5.0 patches=3f80b836948aa96f8d1cb9cc7f3f55973f19285482a96f9a4e1623d460bcccf0 arch=linux-ubuntu18.04-skylake</span><br><span class="line">            ^autoconf-archive@2019.01.06%gcc@7.5.0 arch=linux-ubuntu18.04-skylake</span><br><span class="line">    ^zlib@1.2.11%gcc@7.5.0+optimize+pic+shared arch=linux-ubuntu18.04-skylake</span><br><span class="line">    ^zstd@1.4.5%gcc@7.5.0+pic arch=linux-ubuntu18.04-skylake</span><br></pre></td></tr></table></figure>

<h2 id="1-4-编译器配置"><a href="#1-4-编译器配置" class="headerlink" title="1.4 编译器配置"></a>1.4 编译器配置</h2><blockquote>
<p>默认情况下，spack在第一次加载环境时会自动发现当前可用的编译器</p>
</blockquote>
<h3 id="1-4-1-spack-compilers"><a href="#1-4-1-spack-compilers" class="headerlink" title="1.4.1 spack compilers"></a>1.4.1 spack compilers</h3><p>您可以通过运行<code>spack compilers</code> 或者 <code>spack compiler list</code>来查看<code>spack</code>在你的超算上所能够发现的所有编译器。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">spack compilers</span>                                               </span><br><span class="line">==&gt; Available compilers</span><br><span class="line">-- gcc ubuntu18.04-x86_64 ---------------------------------------</span><br><span class="line">gcc@10.2.0  gcc@7.5.0  gcc@5.4.0</span><br></pre></td></tr></table></figure>

<h3 id="1-4-2-spack-compiler-find"><a href="#1-4-2-spack-compiler-find" class="headerlink" title="1.4.2 spack compiler find"></a>1.4.2 spack compiler find</h3><p>您可以通过运行<code>spack compiler find</code>或者<code>spack compiler add</code>来自动发现或手动添加编译器路径。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 这里假设了你的超算使用了module环境管理工具</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 这一步把管理员安装的hpc_sdk套件导入了你的环境</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">module load hpc_sdk</span> </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 于是，你就可以自动找到了新增的nvhpc编译器</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">spack compiler find</span></span><br><span class="line">==&gt; Added 1 new compiler to /home/nfs/admin0/user/.spack/linux/compilers.yaml</span><br><span class="line">    nvhpc@20.9</span><br><span class="line">==&gt; Compilers are defined in the following files:</span><br><span class="line">    /home/nfs/admin0/user/.spack/linux/compilers.yaml</span><br></pre></td></tr></table></figure>

<h3 id="1-4-3-spack-compiler-info"><a href="#1-4-3-spack-compiler-info" class="headerlink" title="1.4.3 spack compiler info"></a>1.4.3 spack compiler info</h3><p>如果你想查看详细的编译器信息，您可以使用如下命令。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">spack compiler info nvhpc</span>                                                        </span><br><span class="line">             </span><br><span class="line">nvhpc@20.9:</span><br><span class="line">        paths:</span><br><span class="line">                cc = /home/nfs/admin0/apps/hpc_sdk/Linux_x86_64/20.9/compilers/bin/nvc</span><br><span class="line">                cxx = /home/nfs/admin0/apps/hpc_sdk/Linux_x86_64/20.9/compilers/bin/nvc++</span><br><span class="line">                f77 = /home/nfs/admin0/apps/hpc_sdk/Linux_x86_64/20.9/compilers/bin/nvfortran</span><br><span class="line">                fc = /home/nfs/admin0/apps/hpc_sdk/Linux_x86_64/20.9/compilers/bin/nvfortran</span><br><span class="line">        modules  = []</span><br><span class="line">        operating system  = ubuntu18.04</span><br></pre></td></tr></table></figure>

<p>如果有多个版本的软件包，您可以在软件包名称后添加@,例如<code>spack compiler info gcc@10.2.0</code></p>
<h3 id="1-4-4-手动配置可用编译器（可选）"><a href="#1-4-4-手动配置可用编译器（可选）" class="headerlink" title="1.4.4 手动配置可用编译器（可选）"></a>1.4.4 手动配置可用编译器（可选）</h3><p>如果您有兴趣手动指定<code>cc</code>|<code>cxx</code>|<code>f77</code>|<code>fc</code>，您可以以如下两种方式来配置<code>compilers.yaml</code></p>
<ul>
<li>EDIT ~&#x2F;.spack&#x2F;linux&#x2F;compilers.yaml ## 这里的EDIT可以为任何linux上的文本编译器，如vim、emacs等</li>
<li>spack config edit compilers</li>
</ul>
<p>编译器配置文件如下所示:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">- compiler:</span><br><span class="line">    spec: nvhpc@20.9</span><br><span class="line">    paths:</span><br><span class="line">      cc: /home/nfs/admin0/apps/hpc_sdk/Linux_x86_64/20.9/compilers/bin/nvc</span><br><span class="line">      cxx: /home/nfs/admin0/apps/hpc_sdk/Linux_x86_64/20.9/compilers/bin/nvc++</span><br><span class="line">      f77: /home/nfs/admin0/apps/hpc_sdk/Linux_x86_64/20.9/compilers/bin/nvfortran</span><br><span class="line">      fc: /home/nfs/admin0/apps/hpc_sdk/Linux_x86_64/20.9/compilers/bin/nvfortran</span><br><span class="line">    flags: &#123;&#125;</span><br><span class="line">    operating_system: ubuntu18.04</span><br><span class="line">    target: x86_64</span><br><span class="line">    modules: []</span><br><span class="line">    environment: &#123;&#125;</span><br><span class="line">    extra_rpaths: []</span><br></pre></td></tr></table></figure>

<h3 id="1-4-5-指定默认编译器版本（可选）"><a href="#1-4-5-指定默认编译器版本（可选）" class="headerlink" title="1.4.5 指定默认编译器版本（可选）"></a>1.4.5 指定默认编译器版本（可选）</h3><p>在您安装新软件包时，<code>spack</code>需要使用一个编译器来编译环境，如果您对编译器版本有要求，您可以通过以下两种方式来指定编译器：</p>
<ul>
<li>EDIT ~&#x2F;.spack&#x2F;packages.yaml</li>
<li><code>spack config edit packages</code></li>
</ul>
<p>包配置文件如下所示：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">packages:</span><br><span class="line">  all:</span><br><span class="line">    compiler: [gcc@10.2.0]     </span><br></pre></td></tr></table></figure>

<h1 id="2-基础使用教程"><a href="#2-基础使用教程" class="headerlink" title="2. 基础使用教程"></a>2. 基础使用教程</h1><p><code>spack</code>有许多子命令可以使用，您需要了解一些基础 命令以便更好的使用<code>spack</code>来安装和使用软件</p>
<p>例如，我们要查找当前<code>spack</code>环境中安装的软件包，可以使用<code>spack find</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">spack find</span>                                                                                                                                                                                                    </span><br><span class="line">==&gt; 93 installed packages</span><br><span class="line"></span><br><span class="line">-- linux-ubuntu18.04-skylake_avx512 / gcc@7.5.0 -----------------</span><br><span class="line">autoconf@2.69                bzip2@1.0.8    gcc@7.5.0     gmp@6.1.2      libedit@3.1-20191231  libtool@2.4.6        lua@5.3.5                  mpc@1.1.0   ncurses@6.2     perl@5.30.3    tcl@8.6.10   zstd@1.4.5</span><br><span class="line">autoconf-archive@2019.01.06  curl@7.72.0    gdbm@1.18.1   isl@0.18       libiconv@1.16         libunistring@0.9.10  lua-luafilesystem@1_7_0_2  mpc@1.1.0   openssh@8.4p1   pkgconf@1.7.3  unzip@6.0</span><br><span class="line">automake@1.16.2              diffutils@3.7  gettext@0.21  isl@0.21       libidn2@2.3.0         libxml2@2.9.10       lua-luaposix@33.4.0        mpfr@3.1.6  openssl@1.1.1h  readline@8.0   xz@5.2.5</span><br><span class="line">berkeley-db@18.1.40          expat@2.2.9    git@2.29.0    libbsd@0.10.0  libsigsegv@2.12       lmod@8.3             m4@1.4.18                  mpfr@4.0.2  pcre2@10.35     tar@1.32       zlib@1.2.11</span><br></pre></td></tr></table></figure>

<h2 id="2-1-列出spack可安装的软件包"><a href="#2-1-列出spack可安装的软件包" class="headerlink" title="2.1 列出spack可安装的软件包"></a>2.1 列出spack可安装的软件包</h2><p>当您准备安装某一个软件时，需要先确认软件包是否存在于<code>spack</code>软件包列表中。您可以使用<code>spack list</code>命令来查找可用软件，或者可以打开Package List网页来查找软件包信息。</p>
<p>注意！<code>spack</code>可安装的软件包非常多！因此这一步可能不是太快。</p>
<h3 id="2-1-1-spack-list"><a href="#2-1-1-spack-list" class="headerlink" title="2.1.1 spack list"></a>2.1.1 spack list</h3><p>此命令可以查询spack可安装的软件包,截至2021年10月18日，目前可用软件包为5945个。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">spack list</span>                                                                                                                  </span><br><span class="line">==&gt; 5021 packages.                                                                                                                                                                                                 </span><br><span class="line">3proxy                     icu4c                            perl-set-intervaltree                     py-pyfftw                                       r-popgenome                                                  </span><br><span class="line">abduco                     id3lib                           perl-set-intspan                          py-pyfits                                       r-popvar                                                     </span><br><span class="line">abi-compliance-checker     idba                             perl-set-scalar                           py-pyflakes                                     r-powerlaw                                                   </span><br><span class="line">abi-dumper                 idl                              perl-soap-lite                            py-pygdal                                       r-prabclus                                                   </span><br><span class="line">abinit                     iegenlib                         perl-star-fusion                          py-pygdbmi                                      r-praise                                                     </span><br><span class="line">abseil-cpp                 ignite                           perl-statistics-basic                     py-pygelf                                       r-preprocesscore                                             </span><br><span class="line">abyss                      igraph                           perl-statistics-descriptive               py-pygit2                                       r-prettyunits                                                </span><br><span class="line">accfft                     igv                              perl-statistics-pca                       py-pyglet                                       r-processx    </span><br><span class="line">......</span><br></pre></td></tr></table></figure>

<p>在执行<code>spack list</code>命令时，由于相关库太多，在命令行上，我们会用引号隐藏一些包文件。您可以使用<code>spack list</code>命令来查找可用软件，或者可以打开Package List网页来查找软件包信息。</p>
<p>如果想寻找可安装包中的名称来匹配您想要安装的软件，可以使用<code>*</code>或<code>？</code>进行匹配。</p>
<p><code>*</code>代表开始和结束的匹配，<code>mpi</code>意思和<code>*mpi*</code>相同;</p>
<p>下列示例为查找<code>mpi</code>相关的软件包</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">spack list mpi</span></span><br><span class="line">==&gt; 23 packages.</span><br><span class="line">compiz       intel-mpi             mpi-bash  mpifileutils  mpileaks  mpir               openmpi  phylobayesmpi  py-mpi4py  rempi         sst-dumpi  vampirtrace</span><br><span class="line">fujitsu-mpi  intel-mpi-benchmarks  mpich     mpilander     mpip      mpix-launch-swift  pbmpi    pnmpi          r-rmpi     spectrum-mpi  umpire</span><br></pre></td></tr></table></figure>

<h3 id="2-1-2-spack-info"><a href="#2-1-2-spack-info" class="headerlink" title="2.1.2 spack info"></a>2.1.2 spack info</h3><p>当您已经明确需要安装的软件包时，此时您可以使用spack info <package>来查看此软件包的更多信息。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[~] spack info openmpi                                                                                                                                                                                             </span><br><span class="line">AutotoolsPackage:   openmpi                                                                                                                                                                                        </span><br><span class="line"></span><br><span class="line">Description:                                                                                                                                                                                                       </span><br><span class="line">    An open source Message Passing Interface implementation. The Open MPI                                                                                                                                          </span><br><span class="line">    Project is an open source Message Passing Interface implementation that                                                                                                                                        </span><br><span class="line">    is developed and maintained by a consortium of academic, research, and                                                                                                                                         </span><br><span class="line">    industry partners. Open MPI is therefore able to combine the expertise,                                                                                                                                        </span><br><span class="line">    technologies, and resources from all across the High Performance                                                                                                                                               </span><br><span class="line">    Computing community in order to build the best MPI library available.                                                                                                                                          </span><br><span class="line">    Open MPI offers advantages for system and software vendors, application                                                                                                                                        </span><br><span class="line">    developers and computer science researchers.                                                                                                                                                                   </span><br><span class="line"></span><br><span class="line">Homepage: http://www.open-mpi.org                                                                                                                                                                                  </span><br><span class="line"></span><br><span class="line">Maintainers: @hppritcha                                                                                                                                                                                            </span><br><span class="line"></span><br><span class="line">Tags:                                                                                                                                                                                                              </span><br><span class="line">    None                                                                                                                                                                                                           </span><br><span class="line"></span><br><span class="line">Preferred version:                                                                                                                                                                                                 </span><br><span class="line">    3.1.6     http://www.open-mpi.org/software/ompi/v3.1/downloads/openmpi-3.1.6.tar.bz2                                                                                                                           </span><br><span class="line"></span><br><span class="line">Safe versions:                                                                                                                                                                                                     </span><br><span class="line">    master    [git] https://github.com/open-mpi/ompi.git on branch master                                                                                                                                          </span><br><span class="line">    4.0.5     http://www.open-mpi.org/software/ompi/v4.0/downloads/openmpi-4.0.5.tar.bz2                                                                                                                           </span><br><span class="line">    4.0.4     http://www.open-mpi.org/software/ompi/v4.0/downloads/openmpi-4.0.4.tar.bz2                                                                                                                           </span><br><span class="line">    4.0.3     http://www.open-mpi.org/software/ompi/v4.0/downloads/openmpi-4.0.3.tar.bz2                                                                                                                           </span><br><span class="line">    4.0.2     http://www.open-mpi.org/software/ompi/v4.0/downloads/openmpi-4.0.2.tar.bz2                                                                                                                           </span><br><span class="line">    4.0.1     http://www.open-mpi.org/software/ompi/v4.0/downloads/openmpi-4.0.1.tar.bz2</span><br><span class="line"></span><br><span class="line">    ......</span><br><span class="line"></span><br><span class="line">Variants:</span><br><span class="line">    Name [Default]           Allowed values          Description</span><br><span class="line">    =====================    ====================    ==============================================================================</span><br><span class="line"></span><br><span class="line">    atomics [off]            on, off                 Enable built-in atomics</span><br><span class="line">    cuda [off]               on, off                 Enable CUDA support</span><br><span class="line">    cxx [off]                on, off                 Enable C++ MPI bindings</span><br><span class="line">    cxx_exceptions [off]     on, off                 Enable C++ Exception support</span><br><span class="line">    fabrics [none]           none, auto, fca,        List of fabrics that are enabled; &#x27;auto&#x27; lets openmpi determine</span><br><span class="line">                             knem, hcoll, verbs,</span><br><span class="line">                             psm2, psm, xpmem,</span><br><span class="line">                             ucx, mxm, cma, ofi</span><br><span class="line">    gpfs [on]                on, off                 Enable GPFS support (if present)</span><br><span class="line">    java [off]               on, off                 Build Java support</span><br><span class="line"></span><br><span class="line">    ......</span><br><span class="line"></span><br><span class="line">Installation Phases:</span><br><span class="line">    autoreconf    configure    build    install</span><br><span class="line"></span><br><span class="line">Build Dependencies:</span><br><span class="line">    autoconf  binutils  hcoll  java  libfabric  lsf     m4   numactl   openpbs  pkgconfig  singularity  sqlite  valgrind  zlib</span><br><span class="line">    automake  fca       hwloc  knem  libtool    lustre  mxm  opa-psm2  perl     rdma-core  slurm        ucx     xpmem</span><br><span class="line"></span><br><span class="line">Link Dependencies:</span><br><span class="line">    binutils  fca  hcoll  hwloc  java  knem  libfabric  lsf  lustre  mxm  numactl  opa-psm2  openpbs  rdma-core  singularity  slurm  sqlite  ucx  valgrind  xpmem  zlib</span><br><span class="line"></span><br><span class="line">Run Dependencies:</span><br><span class="line">    None</span><br><span class="line"></span><br><span class="line">Virtual Packages: </span><br><span class="line">    openmpi@2.0.0: provides mpi@:3.1</span><br><span class="line">    openmpi@1.7.5: provides mpi@:3.0</span><br><span class="line">    openmpi@1.6.5 provides mpi@:2.2</span><br><span class="line">    openmpi provides mpi</span><br></pre></td></tr></table></figure>

<p>通过查询软件包信息，您可以了解可添加的编译项以便更好的编译需要的软件。</p>
<h3 id="2-1-3-spack-versions"><a href="#2-1-3-spack-versions" class="headerlink" title="2.1.3 spack versions"></a>2.1.3 spack versions</h3><p>通过使用<code>spack versions</code>，您可以找到某一个软件包的可用版本。</p>
<p>这里以安装<code>openmpi</code>为例，我们可以看到<code>openmpi</code>的版本号，我们可以找到需要的版本号来执行<code>install</code>的操作。</p>
<p>输出中<code>Safe version</code>代表<code>spack</code>已经校验过<code>sum</code>值，不会在安装时遭受黑客攻击和篡改；</p>
<p><code>Remote version</code>为未校验过<code>sum</code>值的软件包。<code>spack</code>无法确认其安全性，使用者需要自己加以注意。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">spack versions openmpi</span>                                                                                                                                                                                        </span><br><span class="line">==&gt; Safe versions (already checksummed):</span><br><span class="line">  master  4.0.2  3.1.5  3.1.1  3.0.3  2.1.6  2.1.2  2.0.3  1.10.7  1.10.3  1.8.8  1.8.4  1.8    1.7.2  1.6.4  1.6    1.5.2  1.4.4  1.4    1.3.1  1.2.7  1.2.3  1.1.5  1.1.1  1.0</span><br><span class="line">  4.0.5   4.0.1  3.1.4  3.1.0  3.0.2  2.1.5  2.1.1  2.0.2  1.10.6  1.10.2  1.8.7  1.8.3  1.7.5  1.7.1  1.6.3  1.5.5  1.5.1  1.4.3  1.3.4  1.3    1.2.6  1.2.2  1.1.4  1.1</span><br><span class="line">  4.0.4   4.0.0  3.1.3  3.0.5  3.0.1  2.1.4  2.1.0  2.0.1  1.10.5  1.10.1  1.8.6  1.8.2  1.7.4  1.7    1.6.2  1.5.4  1.5    1.4.2  1.3.3  1.2.9  1.2.5  1.2.1  1.1.3  1.0.2</span><br><span class="line">  4.0.3   3.1.6  3.1.2  3.0.4  3.0.0  2.1.3  2.0.4  2.0.0  1.10.4  1.10.0  1.8.5  1.8.1  1.7.3  1.6.5  1.6.1  1.5.3  1.4.5  1.4.1  1.3.2  1.2.8  1.2.4  1.2    1.1.2  1.0.1</span><br><span class="line">==&gt; Remote versions (not yet checksummed):</span><br><span class="line">==&gt; Warning: Found no unchecksummed versions for openmpi</span><br></pre></td></tr></table></figure>

<h3 id="2-1-4-spack-arch"><a href="#2-1-4-spack-arch" class="headerlink" title="2.1.4 spack arch"></a>2.1.4 spack arch</h3><p>通过执行spack arch命令来了解当前机器的CPU架构</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">spack <span class="built_in">arch</span></span>                                                                                                                                                                                                    </span><br><span class="line">linux-ubuntu18.04-cascadelake</span><br></pre></td></tr></table></figure>

<p>你也可以通过使用<code>spack arch --known-targets</code>命令来显示所有CPU架构</p>
<h2 id="2-2-软件包参数指定"><a href="#2-2-软件包参数指定" class="headerlink" title="2.2 软件包参数指定"></a>2.2 软件包参数指定</h2><p>在安装时您可以使用：</p>
<ul>
<li>使用<code>@</code>来指定需要安装的版本；</li>
<li>使用<code>%</code>来选择需要使用的编译器；</li>
<li>使用<code>+</code>或<code>-</code>或<code>~</code>来指定此软件的布尔值变量依赖（通过spack info <package>）来查找；</li>
<li>使用<code>name=&lt;value&gt;</code>来指定此此软件的非布尔值环境依赖;</li>
<li>使用<code>target=&lt;value&gt; os=&lt;value&gt;</code>指定CPU架构和系统（例如，<code>target=skylake_avx512 os=linux</code>）</li>
<li>使用<code>^</code>指定依赖的软件(例如，<code>^callpath@1.1</code>)</li>
</ul>
<h2 id="2-3-安装和卸载软件"><a href="#2-3-安装和卸载软件" class="headerlink" title="2.3 安装和卸载软件"></a>2.3 安装和卸载软件</h2><h3 id="2-3-1-spack-install"><a href="#2-3-1-spack-install" class="headerlink" title="2.3.1 spack install"></a>2.3.1 spack install</h3><p><code>spack install</code>可以从<code>spack list</code>中找到的软件中来安装软件包。</p>
<p>我们以<code>gcc</code>为例，</p>
<ol>
<li>如果<code>gcc</code>依赖其他的软件包，spack将会先将依赖包安装，</li>
<li>然后校验下载的包文件没有错误，构建并安装到目录<code>SPACK_ROOT/opt</code></li>
</ol>
<p>在安装完成后，您可以看到成功安装的输出。<code>arch=skylake_avx512</code>为指定平台，具体可以参考<code>spack arch</code>这一节的内容。</p>
<p>在执行过程中出现的<code>[+]</code>,意味着依赖项已经相关安装完成，无须重新编译。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">spack install gcc@10.2.0 target=skylake_avx512</span></span><br><span class="line">[+] /home/user/spack/opt/spack/linux-ubuntu18.04-skylake_avx512/gcc-7.5.0/libsigsegv-2.12-65cvzrqkbruz3jwexeg7r44ovcz6zml5</span><br><span class="line">[+] /home/user/spack/opt/spack/linux-ubuntu18.04-skylake_avx512/gcc-7.5.0/berkeley-db-18.1.40-6zahi2waipcqbqepcscqyc52alhv6bxw</span><br><span class="line">[+] /home/user/spack/opt/spack/linux-ubuntu18.04-skylake_avx512/gcc-7.5.0/pkgconf-1.7.3-idmzwmyvgrql5cvpdof7tldya6jldl2g</span><br><span class="line">[+] /home/user/spack/opt/spack/linux-ubuntu18.04-skylake_avx512/gcc-7.5.0/autoconf-archive-2019.01.06-zpx5jjtsx5qwkdoytknoqncsyaja7ryf</span><br><span class="line">......</span><br><span class="line">==&gt; Installing gcc</span><br><span class="line">==&gt; No binary for gcc found: installing from source</span><br><span class="line">==&gt; Using cached archive: /home/user/spack/var/spack/cache/_source-cache/archive/b8/b8dd4368bb9c7f0b98188317ee0254dd8cc99d1e3a18d0ff146c855fe16c1d8c.tar.xz</span><br><span class="line">==&gt; gcc: Executing phase: &#x27;autoreconf&#x27;</span><br><span class="line">==&gt; gcc: Executing phase: &#x27;configure&#x27;</span><br><span class="line">==&gt; gcc: Executing phase: &#x27;build&#x27;</span><br><span class="line">==&gt; gcc: Executing phase: &#x27;install&#x27;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">spack find gcc</span>                                                                                                                                                                                                </span><br><span class="line">==&gt; 2 installed packages</span><br><span class="line">-- linux-ubuntu18.04-skylake_avx512 / gcc@7.5.0 -----------------</span><br><span class="line">gcc@7.5.0  gcc@10.2.0</span><br></pre></td></tr></table></figure>

<h3 id="2-3-2-spack-uninstall"><a href="#2-3-2-spack-uninstall" class="headerlink" title="2.3.2 spack uninstall"></a>2.3.2 spack uninstall</h3><p>卸载安装的软件包，您可以使用<code>spack uninstall &lt;package&gt;</code>来卸载目前已经安装的软件。</p>
<p>已经安装的软件可以通过<code>spack find</code>找到。</p>
<p><code>--dependents</code>可以将依赖此软件的其他软件一起卸载。</p>
<p>如果您需要卸载所有软件，可以使用<code>--all</code>来实现</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[~] spack uninstall --dependents openmpi%gcc@10.2.0</span><br><span class="line">==&gt; The following packages will be uninstalled:</span><br><span class="line"></span><br><span class="line">    -- linux-ubuntu18.04-cascadelake / gcc@10.2.0 -------------------</span><br><span class="line">    w2atmjq hdf5@1.10.7  sehyo5r netcdf-c@4.7.4  a4w6sg6 openmpi@3.1.6</span><br><span class="line"></span><br><span class="line">==&gt; Do you want to proceed? [y/N] y</span><br><span class="line">==&gt; Successfully uninstalled netcdf-c@4.7.4%gcc@10.2.0~dap~hdf4~jna+mpi~parallel-netcdf+pic+shared arch=linux-ubuntu18.04-cascadelake/sehyo5r</span><br><span class="line">==&gt; Successfully uninstalled hdf5@1.10.7%gcc@10.2.0~cxx~debug~fortran+hl~java+mpi+pic+shared~szip~threadsafe api=none arch=linux-ubuntu18.04-cascadelake/w2atmjq</span><br><span class="line">==&gt; Successfully uninstalled openmpi@3.1.6%gcc@10.2.0~atomics~cuda~cxx~cxx_exceptions+gpfs~java~legacylaunchers~lustre~memchecker~pmi~singularity~sqlite3+static~thread_multiple+vt+wrapper-rpath fabrics=none sche</span><br><span class="line">dulers=none arch=linux-ubuntu18.04-cascadelake/a4w6sg6</span><br></pre></td></tr></table></figure>

<h3 id="2-3-3-spack-gc"><a href="#2-3-3-spack-gc" class="headerlink" title="2.3.3 spack gc"></a>2.3.3 spack gc</h3><p><code>gc</code>全称为（”Garbage Collector”，即垃圾回收），当您完成编译后，剩余一些目前不被其他软件依赖的项目可以被清理。</p>
<p>您可以通过使用<code>spack gc</code>来清理掉不需要的软件包。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">spack gc</span>                                                                                                                                                                                                       </span><br><span class="line">==&gt; The following packages will be uninstalled:                                                                                                                                                                    </span><br><span class="line"></span><br><span class="line">    -- linux-ubuntu18.04-skylake_avx512 / gcc@7.5.0 -----------------                                                                                                                                              </span><br><span class="line">    ayxupwc autoconf@2.69                nnarbli curl@7.72.0    wmcteof git@2.29.0            7vlbp2m libidn2@2.3.0        bhtzjl5 libxml2@2.9.10  66vt3mk perl@5.30.3         te3i3a5 xz@5.2.5                    </span><br><span class="line">    zpx5jjt autoconf-archive@2019.01.06  zorqtw7 diffutils@3.7  h6rui4l hwloc@2.2.0           vhckpte libpciaccess@0.16    lj57qtx m4@1.4.18       idmzwmy pkgconf@1.7.3                                           </span><br><span class="line">    oa4lssz automake@1.16.2              gqtxtgk expat@2.2.9    bez7ort libbsd@0.10.0         65cvzrq libsigsegv@2.12      phtjrqd openssh@8.4p1   mzpdmwj tar@1.32                                                </span><br><span class="line">    6zahi2w berkeley-db@18.1.40          sz3iurw gdbm@1.18.1    upr5h3c libedit@3.1-20191231  smnwhui libtool@2.4.6        fcemob6 openssl@1.1.1h  nwu2trb texinfo@6.5                                             </span><br><span class="line">    oukbgll bzip2@1.0.8                  4bstie7 gettext@0.21   qzdhx3t libiconv@1.16         2khexru libunistring@0.9.10  24pllrg pcre2@10.35     ozhfnrm util-macros@1.19.1                                      </span><br><span class="line"></span><br><span class="line">==&gt; Do you want to proceed? [y/N] y                                                                                                                                                                                </span><br><span class="line">==&gt; Successfully uninstalled pkgconf@1.7.3%gcc@7.5.0 arch=linux-ubuntu18.04-skylake_avx512/idmzwmy                                                                                                                 </span><br><span class="line">==&gt; Successfully uninstalled libtool@2.4.6%gcc@7.5.0 arch=linux-ubuntu18.04-skylake_avx512/smnwhui                                                                                                                 </span><br><span class="line">==&gt; Successfully uninstalled autoconf@2.69%gcc@7.5.0 arch=linux-ubuntu18.04-skylake_avx512/ayxupwc                                                                                                                 </span><br><span class="line">==&gt; Successfully uninstalled automake@1.16.2%gcc@7.5.0 arch=linux-ubuntu18.04-skylake_avx512/oa4lssz                                                                                                               </span><br><span class="line">==&gt; Successfully uninstalled autoconf-archive@2019.01.06%gcc@7.5.0 arch=linux-ubuntu18.04-skylake_avx512/zpx5jjt</span><br><span class="line">==&gt; Successfully uninstalled diffutils@3.7%gcc@7.5.0 arch=linux-ubuntu18.04-skylake_avx512/zorqtw7</span><br><span class="line">==&gt; Successfully uninstalled git@2.29.0%gcc@7.5.0~tcltk arch=linux-ubuntu18.04-skylake_avx512/wmcteof</span><br><span class="line">==&gt; Successfully uninstalled util-macros@1.19.1%gcc@7.5.0 arch=linux-ubuntu18.04-skylake_avx512/ozhfnrm</span><br><span class="line">==&gt; Successfully uninstalled hwloc@2.2.0%gcc@7.5.0~cairo~cuda~gl~libudev+libxml2~netloc~nvml+pci+shared arch=linux-ubuntu18.04-skylake_avx512/h6rui4l</span><br><span class="line">......</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">spack find</span></span><br><span class="line">==&gt; 19 installed packages</span><br><span class="line">-- linux-ubuntu18.04-skylake_avx512 / gcc@7.5.0 -----------------</span><br><span class="line">gcc@7.5.0   gmp@6.1.2  isl@0.21  lua@5.3.5                  lua-luaposix@33.4.0  mpc@1.1.0   mpfr@4.0.2   readline@8.0  unzip@6.0    zstd@1.4.5</span><br><span class="line">gcc@10.2.0  isl@0.18   lmod@8.3  lua-luafilesystem@1_7_0_2  mpc@1.1.0            mpfr@3.1.6  ncurses@6.2  tcl@8.6.10    zlib@1.2.11</span><br></pre></td></tr></table></figure>

<h3 id="2-3-4-编译无法下载的软件包"><a href="#2-3-4-编译无法下载的软件包" class="headerlink" title="2.3.4 编译无法下载的软件包"></a>2.3.4 编译无法下载的软件包</h3><p>Spack有一些软件包不能自动下载，原因可能有以下情况：</p>
<ul>
<li>软件包作者需要用户在下载安装包前手动同意License（如jdk和galahd）</li>
<li>软件包无法在互联网上下载</li>
</ul>
<p>如果需要编译这些软件包，您可能需要用到<code>spack mirrors</code></p>
<p>创建<code>Mirror</code>的步骤如下：</p>
<ol>
<li>为<code>mirror</code>创建一个目录</li>
</ol>
<p>您可以在任何目录创建，如<code>~/spackmirrors</code>。注意，这个文件夹所在硬盘的剩余空间最好可以大一些。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mkdir</span> ~/spackmirrors</span></span><br></pre></td></tr></table></figure>

<ol>
<li>在<code>mirrors.yaml</code>文件中注册此路径,您可以通过<code>spack config edit mirrors</code>打开此文件</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mirrors:</span><br><span class="line">  manual: file://~/spackmirrors</span><br></pre></td></tr></table></figure>

<ol>
<li>将软件的二进制或源码压缩包放到此目录下，以<code>&lt;package&gt;/&lt;package&gt;-&lt;version&gt;.tar.gz</code>来命名。</li>
</ol>
<p>例如，<code>Oracle</code>下载安装包需要手动同意<code>License</code>，我们放置<code>Oracle</code>的<code>jdk</code>的<code>tar</code>包到<code>mirrors</code>目录下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/spackmirrors/jdk/</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mv</span> jdk-14_linux-x64_bin.tar.gz jdk-14.tar.gz</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">tree spackmirrors</span>                                                                                                                                                                                             </span><br><span class="line">spackmirrors</span><br><span class="line">└── jdk</span><br><span class="line">    └── jdk-14.tar.gz</span><br></pre></td></tr></table></figure>

<ol>
<li>通过使用<code>&lt;package&gt;@&lt;version&gt;</code>来安装软件</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">spack install jdk@14 target=skylake_avx512</span></span><br><span class="line">==&gt; Warning: Missing a source id for jdk@14</span><br><span class="line">==&gt; Installing jdk</span><br><span class="line">==&gt; No binary for jdk found: installing from source</span><br><span class="line">==&gt; Warning: There is no checksum on file to fetch jdk@14 safely.</span><br><span class="line">==&gt;   Fetch anyway? [y/N] y</span><br><span class="line">==&gt; Fetching file:///home/user/spackmirrors/jdk/jdk-14.tar.gz</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">####################################################################################################################################################################################################################################################################################################################################################################################################################### 100.0%</span></span></span><br><span class="line">==&gt; jdk: Executing phase: &#x27;install&#x27;</span><br><span class="line">[+] /home/user/spack/opt/spack/linux-ubuntu18.04-skylake_avx512/gcc-7.5.0/jdk-14-ctoqgkgu4qvmbbjvdewpdsx4hb4qawki</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">spack find jdk</span>                                                                                                                                                                                              </span><br><span class="line">==&gt; 1 installed package</span><br><span class="line">-- linux-ubuntu18.04-skylake_avx512 / gcc@7.5.0 -----------------</span><br><span class="line">jdk@14</span><br></pre></td></tr></table></figure>

<h2 id="2-4-spack-mirror-create"><a href="#2-4-spack-mirror-create" class="headerlink" title="2.4 spack mirror create"></a>2.4 spack mirror create</h2><p>您可以使用<code>spack mirror</code>命令, 创建一个spack镜像（假设您在可以访问 Internet 的计算机上）。</p>
<p>该命令将遍历 Spack 的所有包，并将安全的包下载到上述目录结构中,像这样：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">spack mirror create libelf libdwarf</span></span><br><span class="line">==&gt; Created new mirror in spack-mirror-2014-06-24</span><br><span class="line">==&gt; Trying to fetch from http://www.mr511.de/software/libelf-0.8.13.tar.gz</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###################################################################################################################                81.6%</span></span></span><br><span class="line">==&gt; Checksum passed for libelf@0.8.13</span><br><span class="line">==&gt; Added libelf@0.8.13</span><br><span class="line">==&gt; Trying to fetch from http://www.mr511.de/software/libelf-0.8.12.tar.gz</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###########################################################################################################################################    98.6%</span></span></span><br><span class="line">==&gt; Checksum passed for libelf@0.8.12</span><br><span class="line">==&gt; Added libelf@0.8.12</span><br><span class="line">==&gt; Trying to fetch from http://www.prevanders.net/libdwarf-20130207.tar.gz</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###########################################################################################################################################    97.3%</span></span></span><br><span class="line">==&gt; Checksum passed for libdwarf@20130207</span><br><span class="line">==&gt; Added libdwarf@20130207</span><br><span class="line">==&gt; Trying to fetch from http://www.prevanders.net/libdwarf-20130126.tar.gz</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###############################################################################################################                  78.9%</span></span></span><br><span class="line">==&gt; Checksum passed for libdwarf@20130126</span><br><span class="line">==&gt; Added libdwarf@20130126</span><br><span class="line">==&gt; Trying to fetch from http://www.prevanders.net/libdwarf-20130729.tar.gz</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#########################################################################################################################             84.7%</span></span></span><br><span class="line">==&gt; Added libdwarf@20130729</span><br><span class="line">==&gt; Added spack-mirror-2014-06-24/libdwarf/libdwarf-20130729.tar.gz to mirror</span><br><span class="line">==&gt; Added python@2.7.8.</span><br><span class="line">==&gt; Successfully updated mirror in spack-mirror-2015-02-24.</span><br><span class="line">  Archive stats:</span><br><span class="line">    0    already present</span><br><span class="line">    5    added</span><br><span class="line">    0    failed to fetch.</span><br></pre></td></tr></table></figure>

<p>完成此操作后，您可以对 spack-mirror-2014-06-24 目录进行 tar 压缩并将其复制到您希望它托管的机器上。</p>
<h2 id="2-5-查询已安装的软件包"><a href="#2-5-查询已安装的软件包" class="headerlink" title="2.5 查询已安装的软件包"></a>2.5 查询已安装的软件包</h2><p>当您将软件完成安装时，您需要了解哪些软件是已经安装的，您可以通过下列命令来了解。</p>
<h3 id="2-5-1-spack-find"><a href="#2-5-1-spack-find" class="headerlink" title="2.5.1 spack find"></a>2.5.1 spack find</h3><p>通过使用<code>spack find</code>可以找到已经安装的软件。</p>
<p>安装的软件包由名称、版本、编译器、架构和构建选项来分组。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">spack find</span>                                                                                                                 </span><br><span class="line">==&gt; 20 installed packages</span><br><span class="line">-- linux-ubuntu18.04-skylake_avx512 / gcc@7.5.0 -----------------</span><br><span class="line">gcc@7.5.0   gmp@6.1.2  isl@0.21  lmod@8.3   lua-luafilesystem@1_7_0_2  mpc@1.1.0  mpfr@3.1.6  ncurses@6.2   tcl@8.6.10  zlib@1.2.11</span><br><span class="line">gcc@10.2.0  isl@0.18   jdk@14    lua@5.3.5  lua-luaposix@33.4.0        mpc@1.1.0  mpfr@4.0.2  readline@8.0  unzip@6.0   zstd@1.4.5</span><br></pre></td></tr></table></figure>

<h3 id="2-5-2-查询find更多信息"><a href="#2-5-2-查询find更多信息" class="headerlink" title="2.5.2 查询find更多信息"></a>2.5.2 查询find更多信息</h3><p>通过拓展查找选项可以了解安装软件的详细信息</p>
<h4 id="2-5-2-1-spack-find-–deps"><a href="#2-5-2-1-spack-find-–deps" class="headerlink" title="2.5.2.1 spack find –deps"></a>2.5.2.1 spack find –deps</h4><p>通过使用spack find –deps您可以查找安装软件包所需要的依赖条件。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">[~] spack find --deps gcc</span>                                           </span><br><span class="line">==&gt; 2 installed packages</span><br><span class="line">-- linux-ubuntu18.04-skylake_avx512 / gcc@7.5.0 -----------------</span><br><span class="line">gcc@7.5.0</span><br><span class="line">    gmp@6.1.2</span><br><span class="line">    isl@0.18</span><br><span class="line">    mpc@1.1.0</span><br><span class="line">        mpfr@3.1.6</span><br><span class="line">    zlib@1.2.11</span><br><span class="line"></span><br><span class="line">gcc@10.2.0</span><br><span class="line">    gmp@6.1.2</span><br><span class="line">    isl@0.21</span><br><span class="line">    mpc@1.1.0</span><br><span class="line">        mpfr@4.0.2</span><br><span class="line">    zlib@1.2.11</span><br><span class="line">    zstd@1.4.5</span><br></pre></td></tr></table></figure>

<p>现在我们可以看到gcc不同版本依赖软件的版本不同。</p>
<h4 id="2-5-2-2-spack-find-–paths"><a href="#2-5-2-2-spack-find-–paths" class="headerlink" title="2.5.2.2 spack find –paths"></a>2.5.2.2 spack find –paths</h4><p>通过使用spack find –paths您可以了解软件安装的位置。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[~] spack find --paths gcc@10.2.0                                                                                                           </span><br><span class="line">==&gt; 1 installed package</span><br><span class="line">-- linux-ubuntu18.04-skylake_avx512 / gcc@7.5.0 -----------------</span><br><span class="line">gcc@10.2.0  /home/user/spack/opt/spack/linux-ubuntu18.04-skylake_avx512/gcc-7.5.0/gcc-10.2.0-7s57lgiv24lajskfc4aqf2npajnnweao</span><br></pre></td></tr></table></figure>

<h2 id="2-6-使用已安装的软件包"><a href="#2-6-使用已安装的软件包" class="headerlink" title="2.6 使用已安装的软件包"></a>2.6 使用已安装的软件包</h2><p>当您在系统中安装完成软件包，软件包会使用<code>hash</code>值来命名一个长路径。如果您想使用这个软件包，您可以使用<code>spack load</code>命令导入当前窗口的环境变量中。</p>
<h3 id="2-6-1-spack-load"><a href="#2-6-1-spack-load" class="headerlink" title="2.6.1 spack load"></a>2.6.1 spack load</h3><p>当您执行安装操作后，通过<code>spack find</code>可以找到需要的软件包。</p>
<p>例如，如果我们需要导入<code>gcc</code>环境来使用，我们可以这样做</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">gcc --version</span>                                                           </span><br><span class="line">gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0</span><br><span class="line">Copyright (C) 2017 Free Software Foundation, Inc.</span><br><span class="line">This is free software; see the source for copying conditions.  There is NO</span><br><span class="line">warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">spack find gcc</span>                                                          </span><br><span class="line">==&gt; 2 installed packages</span><br><span class="line">-- linux-ubuntu18.04-skylake_avx512 / gcc@7.5.0 -----------------</span><br><span class="line">gcc@7.5.0  gcc@10.2.0</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">spack load gcc@10.2.0</span>                                                   </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">gcc --version</span>                                                           </span><br><span class="line">gcc (Spack GCC) 10.2.0</span><br><span class="line">Copyright (C) 2020 Free Software Foundation, Inc.</span><br><span class="line">This is free software; see the source for copying conditions.  There is NO</span><br><span class="line">warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span><br></pre></td></tr></table></figure>

<p>当使用<code>spack load</code>命令后，<code>spack</code>将会将此软件的环境变量加载到环境变量<code>PATH</code>、<code>MANPATH</code>、<code>CPATH</code>和<code>LD_LIBRARY_PATH</code>中。</p>
<p>我们来做一个实验，用新安装的<code>gcc@10.2.0</code>来编译一个2048小游戏</p>
<p>项目地址： <a href="https://github.com/plibither8/2048.cpp">https://github.com/plibither8/2048.cpp</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">spack find gcc</span></span><br><span class="line">==&gt; 2 installed packages</span><br><span class="line">-- linux-ubuntu18.04-skylake_avx512 / gcc@7.5.0 -----------------</span><br><span class="line">gcc@7.5.0  gcc@10.2.0</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">spack load gcc@10.2.0</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">clone</span> https://github.com/plibither8/2048.cpp</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> 2048.cpp</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mkdir</span> build &amp;&amp; <span class="built_in">cd</span> build</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">cmake ../</span>         </span><br><span class="line">......</span><br><span class="line">-- Build files have been written to: /home/nfs/admin0/qizewen/2048.cpp/build</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">cmake --build .</span>        </span><br><span class="line">Scanning dependencies of target 2048</span><br><span class="line">......</span><br><span class="line"><span class="meta prompt_">[100%</span><span class="language-bash">] Linking CXX executable 2048</span></span><br><span class="line"><span class="meta prompt_">[100%</span><span class="language-bash">] Built target 2048</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./2048</span></span><br></pre></td></tr></table></figure>

<h3 id="2-6-2-spack-unload"><a href="#2-6-2-spack-unload" class="headerlink" title="2.6.2 spack unload"></a>2.6.2 spack unload</h3><p>当您不希望在某个窗口中使用<code>load</code>后的软件，您可以通过<code>spack unload</code>来将环境变量已加载的环境变量取消。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[~] spack unload gcc                                                       </span><br><span class="line">==&gt; Warning: Reversing `Set` environment operation may lose original value                                                                                                                                         </span><br><span class="line">==&gt; Warning: Reversing `Set` environment operation may lose original value</span><br></pre></td></tr></table></figure>

<h3 id="2-6-3-多版本共存问题"><a href="#2-6-3-多版本共存问题" class="headerlink" title="2.6.3 多版本共存问题"></a>2.6.3 多版本共存问题</h3><p>当您在<code>load</code>环境时可能会出现以下情况,您可以参考 软件包参数指定 章节指定更多参数来明确需要加载的软件包。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">spack load gcc</span>                                    </span><br><span class="line">==&gt; Error: gcc matches multiple packages.</span><br><span class="line">  Matching packages:</span><br><span class="line">    o7522oj gcc@7.5.0%gcc@7.5.0 arch=linux-ubuntu18.04-skylake_avx512</span><br><span class="line">    7s57lgi gcc@10.2.0%gcc@7.5.0 arch=linux-ubuntu18.04-skylake_avx512</span><br><span class="line">  Use a more specific spec.</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">spack load gcc@7.5.0 target=skylake_avx512</span></span><br></pre></td></tr></table></figure>

<h1 id="3-Spack-ENV环境"><a href="#3-Spack-ENV环境" class="headerlink" title="3. Spack ENV环境"></a>3. Spack ENV环境</h1><p>假设我们在做一个项目，但是在<code>spack find</code>列出的软件有多个版本，且不能迅速找到所需要的软件依赖。</p>
<p>那看起来是不是特别不方便？</p>
<p>这里<code>Spack</code>引入了<code>ENV</code>环境来创建一个干净的环境，您可以理解为类似<code>Conda</code>或<code>Python Environment</code>，您可以使用项目名称来命名<code>ENV</code>环境。</p>
<h2 id="3-1-spack-env-create"><a href="#3-1-spack-env-create" class="headerlink" title="3.1 spack env create"></a>3.1 spack env create</h2><p>您可以使用<code>spack env create &lt;envname&gt;</code>创建虚拟环境。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">spack <span class="built_in">env</span> create emenv</span></span><br><span class="line"></span><br><span class="line">==&gt; Updating view at /home/user/spack/var/spack/environments/emenv/.spack-env/view</span><br><span class="line">==&gt; Created environment &#x27;emenv&#x27; in /home/user/spack/var/spack/environments/emenv</span><br><span class="line">==&gt; You can activate this environment with:</span><br><span class="line">==&gt;   spack env activate emenv</span><br></pre></td></tr></table></figure>

<p>所有的命名的环境存储位置在<code>spack安装目录/spack/var/spack/environments</code>中</p>
<p>虚拟环境最大的好处就是可以迁移环境，您可以通过<code>spack/var/spack/environments</code>目录下的<code>spack.yaml</code>或<code>spack.lock</code>来创建新的虚拟环境。</p>
<p>以下示例通过一个已经创建的<code>spack.yaml</code>来创建新的虚拟环境<code>newenv</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">pwd</span></span>                                                                                       </span><br><span class="line">/home/user/spack/var/spack/environments/emenv</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">ls</span></span>                                                                                        </span><br><span class="line">spack.lock  spack.yaml</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">spack <span class="built_in">env</span> create newenv spack.yaml</span>                                                        </span><br><span class="line">==&gt; Updating view at /home/user/spack/var/spack/environments/newenv/.spack-env/view</span><br><span class="line">==&gt; Created environment &#x27;newenv&#x27; in /home/user/spack/var/spack/environments/newenv</span><br><span class="line">==&gt; You can activate this environment with:</span><br><span class="line">==&gt;   spack env activate newenv</span><br></pre></td></tr></table></figure>

<p>您也可以通过使用<code>spack.lock</code>创建环境</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">spack <span class="built_in">env</span> create myenv spack.lock</span></span><br><span class="line">spack env activate &lt;envname&gt;</span><br></pre></td></tr></table></figure>

<p>在您创建完成虚拟环境后，您可以通过使用<code>spack env activate &lt;envname&gt;</code>激活环境;</p>
<p>在新环境中，您可以看到一个干净的<code>env</code>环境，那么您就可以只安装和此项目相关的软件包了。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">spack <span class="built_in">env</span> activate newenv</span>         </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">spack find</span>                        </span><br><span class="line"></span><br><span class="line">==&gt; In environment emenv</span><br><span class="line">==&gt; No root specs</span><br><span class="line">==&gt; 0 installed packages</span><br></pre></td></tr></table></figure>

<h2 id="3-2-spack-env-deactive"><a href="#3-2-spack-env-deactive" class="headerlink" title="3.2 spack env deactive"></a>3.2 spack env deactive</h2><p>在使用完成虚拟环境时，您可以使用<code>spack env deactive</code>来取消使用虚拟环境。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">spack find</span>            </span><br><span class="line">==&gt; In environment emenv</span><br><span class="line">==&gt; No root specs</span><br><span class="line">==&gt; 0 installed packages</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">spack <span class="built_in">env</span> deactivate</span>                                                                                                                                                                         </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">spack find</span>                                                                                                                                                                                   </span><br><span class="line">==&gt; 15 installed packages</span><br><span class="line">-- linux-ubuntu18.04-skylake_avx512 / gcc@7.5.0 -----------------</span><br><span class="line">gcc@7.5.0  gmp@6.1.2  isl@0.18  jdk@14  lmod@8.3  lua@5.3.5  lua-luafilesystem@1_7_0_2  lua-luaposix@33.4.0  mpc@1.1.0  mpfr@3.1.6  ncurses@6.2  readline@8.0  tcl@8.6.10  unzip@6.0  zlib@1.2.11</span><br></pre></td></tr></table></figure>

<p>您也可以使用despacktivate来取消环境，效果与spack env deactive相同。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">despacktivate</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Vim</title>
    <url>/2022/05/01/Tool/Vim/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="vim删除包含指定字符串的行"><a href="#vim删除包含指定字符串的行" class="headerlink" title="vim删除包含指定字符串的行"></a>vim删除包含指定字符串的行</h2><p>在命令模式中，使用如下指令删除包含指定字符串的行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">: g/string/d</span><br></pre></td></tr></table></figure>

<p>例如，想要删除文件 test.log 中的，含有字符串“content-length”的行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">:g/content-length/d</span><br></pre></td></tr></table></figure>


<p>注意：在这个命令中，某些字符可能需要转义，比如[、]</p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>WPS</title>
    <url>/2022/05/01/Tool/WPS/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="WPS"><a href="#WPS" class="headerlink" title="WPS"></a>WPS</h1><p><img src="https://p.ipic.vip/t9elox.png" alt="Screenshot 2023-10-30 at 09.38.57"></p>
<p>**geogrid: **defines model domains and interpolates static geographical data to the grids; </p>
<p>**ungrib: ** extracts meteorological fields from GRIB-formatted files;</p>
<p>**metgrid: ** horizontally interpolates the meteorological fields extracted by ungrib to the model grids defined by geogrid; </p>
<p>The work of vertically interpolating meteorological fields to WRF eta levels is performed within the <em>real</em> program.</p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>WRF Offline Install</title>
    <url>/2022/05/01/Tool/WRF%20Offline%20Install/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="WRF-离线安装手册"><a href="#WRF-离线安装手册" class="headerlink" title="WRF 离线安装手册"></a>WRF 离线安装手册</h1><h2 id="升级GCC"><a href="#升级GCC" class="headerlink" title="升级GCC"></a>升级GCC</h2><ul>
<li><p>查看当前gcc版本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-44)</span><br><span class="line">Copyright (C) 2015 Free Software Foundation, Inc.</span><br><span class="line">This is free software; see the source for copying conditions.  There is NO</span><br><span class="line">warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span><br></pre></td></tr></table></figure>
</li>
<li><p>下载并解压安装包 <a href="http://mirror.hust.edu.cn/gnu/gcc/">http://mirror.hust.edu.cn/gnu/gcc/</a></p>
</li>
<li><p>下载prerequisites</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> gcc-13.2.0</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./contrib/download_prerequisites</span></span><br></pre></td></tr></table></figure>

<p>显示：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">gmp-6.2.1.tar.bz2: OK</span><br><span class="line">mpfr-4.1.0.tar.bz2: OK</span><br><span class="line">mpc-1.2.1.tar.gz: OK</span><br><span class="line">isl-0.24.tar.bz2: OK</span><br></pre></td></tr></table></figure>

</li>
<li><p>安装prerequisites（以gmp为例，四个包分别完成编译安装）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> gmp-6.2.1 <span class="comment"># 替换为 mpfr/mpc/isl</span></span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./configure --prefix=<span class="variable">$APP</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make istall</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make check</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>mpfr-4.1.0 <mark>安装失败</mark>，显示<code>Incorrect MPFR version! (4.1.0 header vs 4.0.2 library)</code></p>
<p>尝试下载对应版本<a href="https://www.mpfr.org/mpfr-4.0.2/mpfr-4.0.2.tar.gz">mpfr-4.0.2.tar.gz</a></p>
</li>
<li><p>mpc <mark>安装失败</mark>，显示<code>configure: error: MPFR version &gt;= 4.1.0 required</code></p>
<p>尝试下载旧版本<a href="https://mirrors.aliyun.com/gnu/mpc/mpc-1.1.0.tar.gz?spm=a2c6h.25603864.0.0.60dd1a8cLerm3X">mpc-1.1.0.tar.gz</a></p>
<p>Isl 安装失败，显示<code>whether -lc should be explicitly linked in... no</code></p>
<p>find .&#x2F; -name “libc*”</p>
<p>&#x2F;home&#x2F;rychen&#x2F;anaconda3&#x2F;x86_64-conda-linux-gnu&#x2F;sysroot&#x2F;usr&#x2F;lib64&#x2F;libc.so</p>
</li>
</ul>
</li>
<li><p>安装gcc</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./configure -prefix=<span class="variable">$APP</span> --with-gmp --enable-checking=release --enable-languages=all --disable-multilib</span></span><br></pre></td></tr></table></figure></li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make -j4 <span class="comment"># 此步骤需要一定时间</span></span></span><br></pre></td></tr></table></figure>






<h2 id="依赖库的安装"><a href="#依赖库的安装" class="headerlink" title="依赖库的安装"></a>依赖库的安装</h2><h3 id="zlib"><a href="#zlib" class="headerlink" title="zlib"></a>zlib</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">========== sh zlib.sh ==========</span></span><br><span class="line">set -Eeuo pipefail</span><br><span class="line"></span><br><span class="line">cd $HOME/tar_szcs</span><br><span class="line">rm -fr zlib-1.3</span><br><span class="line"></span><br><span class="line">tar xvf zlib-1.3.tar.gz</span><br><span class="line">cd zlib-1.3</span><br><span class="line">CC=icc FC=ifort CXX=icpc CPPFLAGS=-I$&#123;APP&#125;/include LDFLAGS=-L$&#123;APP&#125;/lib ./configure --prefix=$APP</span><br><span class="line"></span><br><span class="line">make -j 4</span><br><span class="line">make install</span><br><span class="line">make check</span><br></pre></td></tr></table></figure>

<p>安装成功输出：zlib 64-bit test OK</p>
<h3 id="make"><a href="#make" class="headerlink" title="make"></a>make</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make --version</span></span><br></pre></td></tr></table></figure>

<p>显示系统已安装：</p>
<p>GNU Make 3.82</p>
<p>Built for x86_64-redhat-linux-gnu</p>
<h3 id="HDF5"><a href="#HDF5" class="headerlink" title="HDF5"></a>HDF5</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">========== sh hdf5.sh ==========</span></span><br><span class="line">set -Eeuo pipefail</span><br><span class="line"></span><br><span class="line">cd $HOME/tar_szcs</span><br><span class="line">rm -fr hdf5-1.8.18</span><br><span class="line"></span><br><span class="line">tar xvf hdf5-1.8.18.tar.gz</span><br><span class="line">cd hdf5-1.8.18</span><br><span class="line">CC=icc FC=ifort CXX=icpc --enable-fortran --enable-fortran2003 --enable-cxx --with-zlib=$HDF5 ./configure --prefix=$APP </span><br><span class="line"></span><br><span class="line">make -j 4</span><br><span class="line">make install</span><br><span class="line">make check</span><br></pre></td></tr></table></figure>
<p>以上需要一定时间完成</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">h5dump</span></span><br></pre></td></tr></table></figure>

<p>显示使用说明则安装成功</p>
<h3 id="openssl"><a href="#openssl" class="headerlink" title="openssl"></a>openssl</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">========== sh openssl.sh ==========</span></span><br><span class="line">set -Eeuo pipefail</span><br><span class="line"></span><br><span class="line">cd $HOME/tar_szcs</span><br><span class="line">rm -fr openssl-1.1.1q</span><br><span class="line"></span><br><span class="line">tar xvf openssl-1.1.1q.tar.gz</span><br><span class="line">cd openssl-1.1.1q/</span><br><span class="line">./config shared zlib --prefix=$APP</span><br><span class="line"></span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>



<h3 id="curl"><a href="#curl" class="headerlink" title="curl"></a>curl</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">========== sh curl.sh ==========</span></span><br><span class="line">set -Eeuo pipefail</span><br><span class="line"></span><br><span class="line">cd $HOME/tar_szcs</span><br><span class="line">rm -fr curl-8.4.0</span><br><span class="line"></span><br><span class="line">tar xvf curl-8.4.0.tar.gz</span><br><span class="line">cd curl-8.4.0</span><br><span class="line">./configure --prefix=$APP --with-zlib=$APP --with-openssl</span><br><span class="line">make -j 4</span><br><span class="line">make install</span><br><span class="line">make check</span><br></pre></td></tr></table></figure>

<p>检查安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">curl --version</span></span><br></pre></td></tr></table></figure>

<p>显示支持OpenSSL: </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl 7.78.0 (x86_64-conda-linux-gnu) libcurl/7.78.0 OpenSSL/1.1.11 zlib/1.2.11 libssh2/1.9.0 nghttp2/1.41.0</span><br><span class="line"></span><br><span class="line">Release-Date: 2021-07-21</span><br><span class="line"></span><br><span class="line">Protocols: dict file ftp ftps gopher gophers http https imap imaps mqtt pop3 pop3s rtsp scp sftp smb smbs smtp smtps telnet tftp </span><br><span class="line"></span><br><span class="line">Features: alt-svc AsynchDNS GSS-API HSTS HTTP2 HTTPS-proxy IPv6 Kerberos Largefile libz NTLM NTLM_WB SPNEGO SSL TLS-SRP UnixSockets</span><br></pre></td></tr></table></figure>



<h3 id="netcdf"><a href="#netcdf" class="headerlink" title="netcdf"></a>netcdf</h3><p><strong>注意：</strong> netcdf 和 netcdf-fortran的版本对其问题</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">========== sh netcdf.sh ==========</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span> </span><br><span class="line"></span><br><span class="line">set -Eeuo pipefail</span><br><span class="line"></span><br><span class="line">cd $HOME/tar_szcs</span><br><span class="line">rm -fr netcdf-4.6.1</span><br><span class="line">tar xvf netcdf-4.6.1.tar.gz</span><br><span class="line">cd netcdf-4.6.1</span><br><span class="line">CC=icc FC=ifort CXX=icpc CPPFLAGS=-I$APP/include LDFLAGS=-L$APP/lib ./configure --prefix=$&#123;APP&#125; </span><br><span class="line">make install</span><br><span class="line">make check</span><br></pre></td></tr></table></figure>

<p>检查安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nc-config --version</span></span><br></pre></td></tr></table></figure>

<p>显示：netCDF 4.6.1</p>
<h3 id="netcdf-fortran"><a href="#netcdf-fortran" class="headerlink" title="netcdf-fortran"></a>netcdf-fortran</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">========== sh netcdf-fortran.sh ==========</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span> </span><br><span class="line"></span><br><span class="line">set -Eeuo pipefail</span><br><span class="line"></span><br><span class="line">cd $HOME/tar_szcs</span><br><span class="line">rm -fr netcdf-fortran-4.4.4</span><br><span class="line">tar xvf netcdf-fortran-4.4.4.tar.gz</span><br><span class="line">cd netcdf-fortran-4.4.4</span><br><span class="line">CC=icc FC=ifort CXX=icpc CPPFLAGS=-I$APP/include LDFLAGS=-L$APP/lib ./configure --prefix=$APP</span><br><span class="line">make install</span><br><span class="line">make check</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>WRF-DA_testcase</title>
    <url>/2022/05/01/Tool/WRF-DA_testcase/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>参考1：<a href="https://www2.mmm.ucar.edu/wrf/users/wrf_users_guide/build/html/wrfda.html">https://www2.mmm.ucar.edu/wrf/users/wrf_users_guide/build/html/wrfda.html</a></p>
<h3 id="Download-Test-Data"><a href="#Download-Test-Data" class="headerlink" title="Download Test Data"></a>Download Test Data</h3><ul>
<li><p>For the test case, store data in a directory defined by the environment variable <em>$DAT_DIR</em>. This directory can be in any location, and it should have read access. Issue the following.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export  setenv DAT_DIR=/work/home/acyii6v8kt/WORK/DA/WRFDATEST/datadir</span><br></pre></td></tr></table></figure>


</li>
<li><p>download the sample data for the <a href="http://www2.mmm.ucar.edu/wrf/users/wrfda/download/testdata.html">tutorial case</a>, place it in the $<em>$DAT_DIR</em>, and extract it.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar -zxvf WRFDAV4.0-testdata.tar</span><br></pre></td></tr></table></figure></li>
</ul>
<blockquote>
<p>The following files should now exist in <em>$DAT_DIR</em></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ob/2008020512/ob.2008020512      #  Observation data in little_r format</span><br><span class="line">rc/2008020512/wrfinput_d01       #  First guess file</span><br><span class="line">rc/2008020512/wrfbdy_d01         #  lateral boundary file</span><br><span class="line">be/be.dat                        #  Background error file</span><br><span class="line">......</span><br></pre></td></tr></table></figure>
</blockquote>
<h3 id="Run-a-3DVAR-Test-Case"><a href="#Run-a-3DVAR-Test-Case" class="headerlink" title="Run a 3DVAR Test Case"></a>Run a 3DVAR Test Case</h3><ul>
<li><p>Create a new working directory; for e.g.,</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir $WRFDA_DIR/workdir</span><br></pre></td></tr></table></figure>
</li>
<li><p>Set the environment variable <em>WORK_DIR</em> to this directory; for e.g.,</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">  export WORK_DIR=$WRFDA_DIR/workdir</span><br><span class="line"></span><br><span class="line">- Issue the following commands</span><br><span class="line"></span><br><span class="line">  ```shell</span><br><span class="line"><span class="meta prompt_">  &gt; </span><span class="language-bash"><span class="built_in">cd</span> <span class="variable">$WORK_DIR</span></span></span><br><span class="line"><span class="meta prompt_">  &gt; </span><span class="language-bash"><span class="built_in">cp</span> <span class="variable">$DAT_DIR</span>/namelist.input.3dvar namelist.input</span></span><br><span class="line"><span class="meta prompt_">  &gt; </span><span class="language-bash"><span class="built_in">ln</span> -sf <span class="variable">$WRFDA_DIR</span>/run/LANDUSE.TBL .</span></span><br><span class="line"><span class="meta prompt_">  &gt; </span><span class="language-bash"><span class="built_in">ln</span> -sf <span class="variable">$DAT_DIR</span>/rc/2008020512/wrfinput_d01 ./fg   <span class="comment"># 注意fg不是文件夹</span></span></span><br><span class="line"><span class="meta prompt_">  &gt; </span><span class="language-bash"><span class="built_in">ln</span> -sf <span class="variable">$DAT_DIR</span>/ob/2008020512/obs_gts_2008-02-05_12:00:00.3DVAR ./ob.ascii  <span class="comment"># 注意ob.ascii不是文件夹</span></span></span><br><span class="line">          (note the different name!)</span><br><span class="line"><span class="meta prompt_">  &gt; </span><span class="language-bash"><span class="built_in">ln</span> -sf <span class="variable">$DAT_DIR</span>/be/be.dat .</span></span><br><span class="line"><span class="meta prompt_">  &gt; </span><span class="language-bash"><span class="built_in">ln</span> -sf <span class="variable">$WRFDA_DIR</span>/var/da/da_wrfvar.exe .</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Edit <em>namelist.input</em>, which is a basic namelist for the tutorial test case, as shown below.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&amp;wrfvar1</span><br><span class="line">var4d=false,</span><br><span class="line">print_detail_grad=false,</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;wrfvar2</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;wrfvar3</span><br><span class="line">ob_format=2,</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;wrfvar4</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;wrfvar5</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;wrfvar6</span><br><span class="line">max_ext_its=1,</span><br><span class="line">ntmax=50,</span><br><span class="line">orthonorm_gradient=true,</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;wrfvar7</span><br><span class="line">cv_options=5,</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;wrfvar8</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;wrfvar9</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;wrfvar10</span><br><span class="line">test_transforms=false,</span><br><span class="line">test_gradient=false,</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;wrfvar11</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;wrfvar12</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;wrfvar13</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;wrfvar14</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;wrfvar15</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;wrfvar16</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;wrfvar17</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;wrfvar18</span><br><span class="line">analysis_date=&quot;2008-02-05_12:00:00.0000&quot;,</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;wrfvar19</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;wrfvar20</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;wrfvar21</span><br><span class="line">time_window_min=&quot;2008-02-05_11:00:00.0000&quot;,</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;wrfvar22</span><br><span class="line">time_window_max=&quot;2008-02-05_13:00:00.0000&quot;,</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;time_control</span><br><span class="line">force_use_old_data=T,   ##  应对报错：This input data is not V4</span><br><span class="line">start_year=2008,</span><br><span class="line">start_month=02,</span><br><span class="line">start_day=05,</span><br><span class="line">start_hour=12,</span><br><span class="line">end_year=2008,</span><br><span class="line">end_month=02,</span><br><span class="line">end_day=05,</span><br><span class="line">end_hour=12,</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;fdda</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;domains</span><br><span class="line">e_we=90,</span><br><span class="line">e_sn=60,</span><br><span class="line">e_vert=41,</span><br><span class="line">dx=60000,</span><br><span class="line">dy=60000,</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;dfi_control</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;tc</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;physics</span><br><span class="line">mp_physics=3,</span><br><span class="line">ra_lw_physics=1,</span><br><span class="line">ra_sw_physics=1,</span><br><span class="line">radt=60,</span><br><span class="line">sf_sfclay_physics=1,</span><br><span class="line">sf_surface_physics=1,</span><br><span class="line">bl_pbl_physics=1,</span><br><span class="line">cu_physics=1,</span><br><span class="line">cudt=5,</span><br><span class="line">num_soil_layers=5,</span><br><span class="line">mp_zero_out=2,</span><br><span class="line">co2tf=0,</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;scm</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;dynamics</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;bdy_control</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;grib2</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;fire</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;namelist_quilt</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;perturbation</span><br><span class="line">/</span><br></pre></td></tr></table></figure>
</li>
<li><p>No edits are necessary for running the tutorial case without radiance data. If planning to use PREPBUFR-format data, change <em>ob_format&#x3D;1</em> in <em>&amp;wrfvar3</em> in namelist.input and link the data as <em>ob.bufr</em>,</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ln -fs $DAT_DIR/ob/2008020512/gdas1.t12z.prepbufr.nr  ob.bufr</span><br></pre></td></tr></table></figure>
</li>
<li><p>Issue the following to run WRFDA 3D-Var.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">da_wrfvar.exe &gt;&amp; wrfda.log</span><br></pre></td></tr></table></figure>
</li>
<li><p>Check <em>wrfda.log</em> (or <em>rsl.out.0000</em>, if run with distributed-memory), which contains WRFDA runtime information. Make sure the following message appears at the end.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*** WRF-Var completed successfully ***</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="If-WRFDA-was-successful-the-following-new-files-are-available"><a href="#If-WRFDA-was-successful-the-following-new-files-are-available" class="headerlink" title="If WRFDA was successful, the following new files are available."></a>If WRFDA was successful, the following new files are available.</h3><blockquote>
<ul>
<li><strong>namelist.output.da</strong> : contains the complete namelist settings; note that settings appearing in namelist.output.da, but not specified in namelist.input, are the default values from <em>$WRFDA_DIR&#x2F;Registry&#x2F;registry.var</em>.</li>
<li><strong>wrfvar_output</strong> : the WRFDA analysis file, i.e. the new initial condition for WRF</li>
<li>A number of diagnostic files; text files containing various diagnostics are explained in <a href="https://www2.mmm.ucar.edu/wrf/users/wrf_users_guide/build/html/wrfda.html#wrfda-diagnostics">WRFDA Diagnostics</a></li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>WRF DS CMIP6</title>
    <url>/2022/05/01/Tool/WRF-DS_CMIP6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="WRF-DS-CMIP6-workflow-at-SZCS"><a href="#WRF-DS-CMIP6-workflow-at-SZCS" class="headerlink" title="WRF DS CMIP6 workflow at SZCS"></a>WRF DS CMIP6 workflow at SZCS</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh2 # 进入计算节点</span><br></pre></td></tr></table></figure>



<h3 id="进入CMIP6-BC-数据文件夹解压文件"><a href="#进入CMIP6-BC-数据文件夹解压文件" class="headerlink" title="进入CMIP6_BC 数据文件夹解压文件"></a>进入CMIP6_BC 数据文件夹解压文件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /home_gkx/users/nsgkx_zx2/DATA/CMIP6_BC/hist</span><br><span class="line">tar -zxvf hist_2000.tar.gz</span><br></pre></td></tr></table></figure>



<h3 id="WPS"><a href="#WPS" class="headerlink" title="WPS"></a>WPS</h3><h4 id="geogrid"><a href="#geogrid" class="headerlink" title="geogrid"></a>geogrid</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vi namelist.wps   # 修改namelist，具体设置见附录</span><br><span class="line"></span><br><span class="line">./geogrid.exe</span><br></pre></td></tr></table></figure>



<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd nc2wrf</span><br><span class="line"></span><br><span class="line">bash compile.sh</span><br><span class="line"></span><br><span class="line">vi mk.inputlist.csh  # 修改时间信息</span><br><span class="line">csh mk.inputlist.csh</span><br><span class="line"></span><br><span class="line">./GCM.exe input.GCM2WRF  # 输出文件到./FILE下查看</span><br><span class="line"></span><br><span class="line">cd .. </span><br><span class="line">./metgrid.exe  # 对应修改 namlist.wps 中的输入输出路径</span><br></pre></td></tr></table></figure>





<h3 id="WRF"><a href="#WRF" class="headerlink" title="WRF"></a>WRF</h3><h4 id="real"><a href="#real" class="headerlink" title="real"></a>real</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /home_gkx/users/nsgkx_zx2/WORK/WRF/test/</span><br><span class="line">cp -r em_real CMIP6_2000</span><br><span class="line">cd CMIP6_2000</span><br><span class="line">cp ../*/namelist.input ./</span><br><span class="line">cp ../*/submit.lsf ./</span><br><span class="line">ln -s /home_gkx/users/nsgkx_zx2/DATA/For_WRF/WPS/metgrid/CMIP6_BC/hist/*2000* ./</span><br><span class="line">vi namelist.input</span><br><span class="line">vi submit.lsf</span><br><span class="line">bsub submit.lsf </span><br><span class="line">bjobs</span><br><span class="line">tail -f rsl.out.0000</span><br></pre></td></tr></table></figure>



<h4 id="wrf"><a href="#wrf" class="headerlink" title="wrf"></a>wrf</h4><h2 id="Appendix"><a href="#Appendix" class="headerlink" title="Appendix"></a>Appendix</h2>]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>WRF-HPC</title>
    <url>/2022/05/01/Tool/WRF-HPC/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="大型机上如何运行WRF模式？一文总结（并行运算、Linux基础、作业调度、WRF运行）"><a href="#大型机上如何运行WRF模式？一文总结（并行运算、Linux基础、作业调度、WRF运行）" class="headerlink" title="大型机上如何运行WRF模式？一文总结（并行运算、Linux基础、作业调度、WRF运行）"></a>大型机上如何运行WRF模式？一文总结（并行运算、Linux基础、作业调度、WRF运行）</h2><p>来源：<a href="https://blog.csdn.net/weixin_43750300/article/details/125741208">https://blog.csdn.net/weixin_43750300/article/details/125741208</a></p>
<p>过段时间就要进所打工了，说到回所，肯定要用所里的服务器学着跑模式，然而身为小白的我，对这块还是云里雾里，老样子，先搞理论，把整个流程理清楚，不然回所上手又是一脸懵逼，浪费时间。<br>首先应当指出的是，我的标题取得并不严谨，一般来说，我们的数值预报并不是用大型计算机来计算的，而是使用超算计算的，而超算严格来讲也和我们印象中的“计算机”有所差异，更接近于一个操作平台。平时所说的”使用大型机跑模式“，是一种口语化的表达，而这些表达往往会给初学者带来一些误解，致使在初次接触模式运行时，经常会无从下手。<br>“工欲善其事，必先利其器”，在开始学习模式时，除了对整个流程有所了解外，也应当适当了解我们所使用的平台本身，理清一些底层逻辑，这样我们在实际应用时，将会更加顺手与灵活。<br>在本文，我会首先给出一些基本概念，简单总结超算工作原理，之后我会给出运行WRF时Linux系统需要用到的一些操作，最后，我会给出WRF示例，并回顾总结整个流程。<br>注意：本篇文章的仅为入门内容，笔者无意教各位许多深入的知识，而是更想构建一个框架，以便各位在学习时能形成更加系统的知识框架，便于更好理解、应用、纠错。</p>
<p><img src="https://p.ipic.vip/gglona.png" alt="在这里插入图片描述"></p>
<h4 id="大型机"><a href="#大型机" class="headerlink" title="大型机"></a>大型机</h4><p>大型机（mainframe)最初是指装在非常大的带框铁盒子里的大型计算机系统，随着科技的发展，目前的大型机已经不再是最初定义，从核心而言， 大型机是高性能的计算机，具有大量内存和处理器，能够实时处理数以十亿计的计算和事务。<br>目前来说，mainframe有了新的意义，已经由我们印象里“大型主机”变成了一种大型商业服务器的代称，不过，最常见的大型机指代的仍然是由IBM所制造的以可靠性、可伸缩性、兼容性和安全性作为核心设计价值的计算机，主要用于商业数据的保存、传输、管理。<br>从以上我们可以看出，大型机并的主要用户并不是科研运算，它更倾向于商业数据的管理，更加注重安全、兼容与隐私问题，而在使用科学数值模拟时，我们会更注重计算机的运算速度、内存等，这些并不是大型机应用范围，而是超算使用的领域。</p>
<h4 id="超算集群-Cluster"><a href="#超算集群-Cluster" class="headerlink" title="超算集群(Cluster)"></a>超算集群(Cluster)</h4><p>超算并不是我们一般理解的一台占地极大，运算效率极强的计算机，而是一批性能强大的计算机组成的集群，更接近于一个多用户共享服务平台。<br>什么是集群？顾名思义，将多个独立计算机，利用高速通信技术，将它们联系起来，这样，这一批高性能计算机服务器与计算能力便集合起来，运算效率提高的同时，也降低了成本。<br>集群分为许多中，本文所介绍的便是高性能计算集群，也称并行运算，高性能计算集群就是我们一般指代的超级计算机，内部由数十至上万个独立服务器组成，并且在公共消息传递层上进行通信以并行运行应用程序。在生产环境中实际就是把任务切成蛋糕，然后下发到集群节点计算，计算后返回结果，然后继续领新任务计算，如此往复。<br>用最耳熟能详的一句话来概括超算集群的原理便是“集中力量办大事”，在天气预报、核试验模拟等运算量极大的应用中，一个计算能力强大的计算机是不够的。不过，与这种朴素的原理应用于计算机技术中，仍然需要与现实对应的一套运筹管理方案，我们下面来简单讲解以下。</p>
<h4 id="基本架构"><a href="#基本架构" class="headerlink" title="基本架构"></a>基本架构</h4><p>下图是普林斯顿大学的超算集群结构，集群中每一个计算机称为节点(node），节点分为两种：头节点（head node)和计算节点（compute node)。</p>
<p><img src="https://p.ipic.vip/drzvv1.png" alt="在这里插入图片描述"></p>
<p>典型的普林斯顿研究计算集群的通用架构。图由Mukarramahmad绘制，Jon Halverson修改。来源：<a href="https://researchcomputing.princeton.edu/faq/what-is-a-cluster">https://researchcomputing.princeton.edu/faq/what-is-a-cluster</a><br>所谓头节点就是用户使用的计算机，在这台计算机上，我们主要编译代码、撰写脚本与提交任务。<br>计算节点：是运行任务的了计算机，在计算节点上运行作业，我们必须通过作业调度器。通过将作业提交给作业调度器，一旦请求的资源可用，这些作业将自动在计算节点上运行。<br>在运行模式时，用户应当使用软件将需要的数据、文件上传至cluster上，在撰写相应的脚本进行提交任务，并等待作业运算</p>
<h3 id="系统：Linux"><a href="#系统：Linux" class="headerlink" title="系统：Linux"></a>系统：Linux</h3><p>目前超算使用的系统以Linux系统为主，再入门前我们必然要了解一些Linux基础知识，在本节我会介绍一些使用中需要Linux基本知识，如果想要更加系统了解相关Linux知识的话，推荐b站课程：尚硅谷Linux教程</p>
<h4 id="远程登陆与文件传输"><a href="#远程登陆与文件传输" class="headerlink" title="远程登陆与文件传输"></a>远程登陆与文件传输</h4><p>我们已经知道了超算的架构是由多个计算机构成的集群，在实际使用时，用户自然不可能到超算集群所在的机房中使用，为了方便在各地的用户都能使用超算资源，我们首先需要远程登陆到超算的服务器上，以便我们能在自己的计算机上远程操作并使用超算系统。<br>远程登陆一般使用基于SSH网络协议实现两台计算机间的连接，通过相应的软件远程登陆与操作，许多软件可以完成：mobaxterm ssh secure shell xshell putty SecureCRT等，可以根据喜好选择。<br>在远程登陆后，我们还需要用基于FTP&#x2F;SFTP的安全协议完成两个电脑间的文件传输，用来实现自己的电脑和远程服务器之间文件的上传下载。<br>一般而言，远程登陆软件都带有与自己配套的文件传输软件，如xshell和xftp，在这里我推荐一款比较全能的终端软件：mobaxterm。<br>mobaxterm是一款增强型的终端软件，功能强大，且带有许多插件、操作方便，其下载安装与使用参考：MobaXterm</p>
<h4 id="基础命令与文本编辑"><a href="#基础命令与文本编辑" class="headerlink" title="基础命令与文本编辑"></a>基础命令与文本编辑</h4><p>与Windows以图形界面交互完成各种操作不同，Linux系统需要使用各种命令来完成对应的操作。<br>对于Linux的基础命令，网上随处可见，按我的理解来看，使用超算运行模式常用的基础命令无非为：目录操作、文件创建于删改、文件连接与查看、文件压缩输出等，初学者在使用时可直接搜索相关命令。<br>在Windows系统中，记事本可谓是十分强大且方便的文本编辑与查看工具，Linux也有着对应的文本编辑器vi。<br>许多 Linux 上面的指令都默认使用 vi 作为数据编辑的接口，因此vi的使用是必须掌握的。<br>vim则是vi文本编辑器的进阶，它类似于我们一般使用的程序编辑器，在相关脚本代码时，vim会根据代码内容与语法使用颜色来突出一些特殊信息，此外vim还加入了多档案编辑、区块复制等功能。</p>
<h4 id="vi-x2F-vim使用"><a href="#vi-x2F-vim使用" class="headerlink" title="vi&#x2F;vim使用"></a>vi&#x2F;vim使用</h4><p>vi&#x2F;vim有三种模式：</p>
<p>命令模式（command mode）：一般打开vi的默认模式，在该模式下，你可以：移动光标（键盘按键）、复制粘贴、删除字、字符、整行内容，你不可以：输入、编辑文字。<br>插入模式（Insert mode）：按i可进入该模式，只有在该模式下，才可以做文字输入与编辑，按Esc键可回到命令行模式。<br>底行模式（last line mode）：按“：”进入该模式，该模式下，光标将移至编辑器最低行，该模式下，你可以保存文本、退出vi编辑器，进行字符查找等。</p>
<p><img src="https://p.ipic.vip/iir5oy.png" alt="在这里插入图片描述"></p>
<p>三种模式关系，来源：<a href="https://nscc.mrzhenggang.com/supercomputer-courses/vim/#vim%E4%BD%BF%E7%94%A8%E5%88%9D%E7%BA%A7">https://nscc.mrzhenggang.com/supercomputer-courses/vim/#vim%E4%BD%BF%E7%94%A8%E5%88%9D%E7%BA%A7</a><br>了解了vi的三种模式后，可以在不同模式下进行相关的操作，vi&#x2F;vim的操作主要依靠键盘，需要在键盘上按下相应按键实现操作。<br>vi相关命令见：vi常见命令或自行搜索。</p>
<h4 id="Shell脚本"><a href="#Shell脚本" class="headerlink" title="Shell脚本"></a>Shell脚本</h4><p>计算机的硬件由系统的核心(Kernel)，而Shell则意为核心的外壳，这层外壳连接了用户和核心，允许用户操作应用程序。实现对计算机的控制。Linux的许多命令如：ls、cd、pwd就属于Shell命令。<br>程序化脚本shell scriptsShell命令组成的执行文件，将一些命令整合到一个文件中，进行处理业务逻辑，脚本不需要编译，通过解释器解释运行，速度相对来说比较慢，脚本最重要的是理解变量、赋值和条件判断。<br>Shell脚本最大的用处，在于**批处理文件（batch)**的使用，在运行WRF时，我们不需要撰写复杂的Shell脚本，不过我们仍然应当了解一些Shell的基本命令和脚本调试命令，若想继续探寻Shell脚本的编写，可参考：一篇教会你写90%的shell脚本</p>
<h4 id="Moduel（模块）"><a href="#Moduel（模块）" class="headerlink" title="Moduel（模块）"></a>Moduel（模块）</h4><p>按照个人理解与Linux中的moduel与R语言中的Package类似，是可以完成一个独立功能的一组函数的集合，当需要使用该功能时，需要加载相应的模块。<br>模块命令 来源：<a href="https://nscc.mrzhenggang.com/supercomputer-courses/module/#_1-%E4%BB%80%E4%B9%88%E6%98%AFmodule">https://nscc.mrzhenggang.com/supercomputer-courses/module/#_1-%E4%BB%80%E4%B9%88%E6%98%AFmodule</a><br>在使用超算运行WRF时，我们需要配置相应的环境，加载需要的模块才能运行,一般使用Envrionment modules工具加载和卸载modulefile文件可直接改变用户的环境变量。</p>
<h3 id="作业调度-x2F-任务提交"><a href="#作业调度-x2F-任务提交" class="headerlink" title="作业调度&#x2F;任务提交"></a>作业调度&#x2F;任务提交</h3><p>前面提到超算集群往往用于计算量极大的科学与军事应用中，并且是一个共享的服务平台，任何拥有平台账户的登陆后即可提交作业使用。<br>但并不是简单的将所有的计算机用来处理一个任务， 而往往是按需所取，用户需要等调度系统分配好相应的计算资源，才能开始运行，调度系统则是通过这种一些规则分配资源，以达到提高科研利用效率的目的。这与经典问题中的“排队论”似乎异曲同工之妙，对于作业调度通常由专门的作业调度器来安排，这里以Slurm为例简单介绍。</p>
<h4 id="Slurm"><a href="#Slurm" class="headerlink" title="Slurm"></a>Slurm</h4><p>Slurm是一个开源，容错，高度可扩展的集群管理和作业调度系统，适用于大型和小型Linux集群。Slurm不需要对其操作进行内核修改，并且相对独立。作为集群工作负载管理器，Slurm有三个关键功能。首先，它在一段时间内为用户分配对资源（计算节点）的独占和&#x2F;或非独占访问，以便他们可以执行工作。其次，它提供了一个框架，用于在分配的节点集上启动，执行和监视工作（通常是并行作业）。最后，它通过管理待处理工作的队列来仲裁资源争用。</p>
<p><strong>基本架构</strong><br>Slurm包含在每个计算节点上运行的slurmd守护程序和在管理节点上运行的中央slurmctld守护程序。<br>slurmctld:控制进程，相当于整个系统的中枢，负责资源状态维护、资源分配、作业调度、作业管理控制等。<br>slurmd：节点监控进程，负责收集节点上的资源状态并向控制进程报告。slurmd 接收来自控制进程与用户命令的请求，进行作业步任务加载、作业取消等操作。<br>**slurmstepd ：作业管理进程，由 slurmd 在加载作业步任务或批处理作业时派生。 负责计算任务启动、标准 I&#x2F;O 转发、信号传递、记账信息收集以及并行环境初始化等功能。<br>** slurmdbd：记录存储进程，命令工具与控制进程访问记账数据库的中间层。它提供访问记账数据与关联信息的统一接口，并起到用户认证与安全隔离的作用。<br>Slurm主要通过这些程序管理作业的分配、存储、执行与监视等内容。</p>
<p><img src="https://p.ipic.vip/xdlfdh.png" alt="在这里插入图片描述"></p>
<p>这些Slurm程序管理对象包括我们前文所说的节点(node)、计算资源， 分区（Partition），将节点分组， 作业(Job)或分配给用户的指定数量的资源分配时间和 工作步骤(Job Step)。<br>为了提高效率，Slurm会进行分区，这个分区类似于排队的队列，每个队列具有不同的特性，如：作业大小限制，作业时间限制，允许使用它的用户，不同队列用以完成不同的任务，队列间并不相互干扰。用户在提交作业时，应当指定作业所属调度器队列，随后，调度器会给对应队列的作业按优先级排序，并分配相应的节点与计算资源进行工作，如对应分区的资源耗尽，则用户作业需要排队等候。</p>
<p><strong>基础命令</strong><br>关于Sliurm的简介与安装配置，可以查看：Slurm资源管理与作业调度系统安装配置，此处不再赘述，在安装配置好Slurm后，我们可以使用相应的命令进行作业调度、提交等功能，其基本命令概括如下：<br>sacct用于报告有关活动或已完成作业的作业或作业步骤会计信息。<br>salloc用于实时为作业分配资源。通常，这用于分配资源并生成shell。然后使用shell执行srun命令以启动并行任务。<br>sattach用于将标准输入，输出和错误加信号功能附加到当前正在运行的作业或作业步骤。可以多次附加和分离作业。<br>sbatch用于提交作业脚本以供以后执行。该脚本通常包含一个或多个用于启动并行任务的srun命令。<br>sbcast用于将文件从本地磁盘传输到分配给作业的节点上的本地磁盘。这可用于有效地使用无盘计算节点或相对于共享文件系统提供改进的性能。<br>scancel用于取消挂起或正在运行的作业或作业步骤。它还可用于向与正在运行的作业或作业步骤相关联的所有进程发送任意信号。<br>scontrol是用于查看和&#x2F;或修改Slurm状态的管理工具。请注意，许多 scontrol 命令只能以root用户身份执行。<br>sinfo报告由Slurm管理的分区和节点的状态。它具有各种过滤，排序和格式选项。<br>smap报告由Slurm管理的作业，分区和节点的状态信息，但以图形方式显示反映网络拓扑的信息。<br>squeue报告工作或工作步骤的状态。它具有各种过滤，排序和格式选项。默认情况下，它按优先级顺序报告正在运行的作业，然后按优先级顺序报告挂起的作业。<br>srun用于提交作业以便实时执行或启动作业步骤。 srun 有多种选项来指定资源要求，包括：最小和最大节点数，处理器数，要使用或不使用的特定节点，以及特定节点特征（如此多的内存，磁盘空间，某些必需的功能等） 。作业可以包含在作业节点分配中的独立或共享资源上顺序或并行执行的多个作业步骤。<br>strigger用于设置，获取或查看事件触发器。事件触发器包括节点关闭或作业接近其时间限制等事件。<br>sview是一个图形用户界面，用于获取和更新Slurm管理的作业，分区和节点的状态信息。<br>用户可以使用help来查看这些命令的基本描述。</p>
<p>作业提交与运行<br>当然，在实际运用过程中，我们通常只会用到上述命令中的几个：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">sinfo#</span><span class="language-bash">查看节点与分区状态</span></span><br><span class="line"></span><br><span class="line">squeue3查看队列状态</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">scancel#</span><span class="language-bash">取消作业</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">sacct#</span><span class="language-bash">查看历史作业信息</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">salloc#</span><span class="language-bash">分配资源</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">sbatch#</span><span class="language-bash">提交批处理作业</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">scontrol#</span><span class="language-bash">系统控制</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">srun#</span><span class="language-bash">执行作业</span></span><br></pre></td></tr></table></figure>

<p>首先，在上传任务之前，我们应当先使用sinfo命令查看系统状况，看看分区与节点状态以便选择作业上传的分区。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sinfo</span></span><br><span class="line">PARTITION AVAIL  TIMELIMIT  NODES  STATE NODELIST</span><br><span class="line">debug*      up      30:00     100  drain  cn[1-100]</span><br><span class="line">debug*      up      30:00     100  alloc  cn[101-200]</span><br><span class="line">batch       up      30:00     100  idle   cn[200-300]</span><br><span class="line">batch       uo      30:00     100  down*  cn[300-400]</span><br></pre></td></tr></table></figure>

<p><img src="https://p.ipic.vip/ys73f7.png" alt="在这里插入图片描述"></p>
<p>关键词说明，图表来源： <a href="https://nscc.mrzhenggang.com/supercomputer-courses/slurm/#%E6%9F%A5%E7%9C%8B%E5%8F%AF%E7%94%A8%E8%8A%82%E7%82%B9-yhi">slurm作业管理系统使用教学</a><br>从上例可以看出，此超算有两个分区，debug和batch，表示提交作业的默认分区，对于相同的分区，可以用多行信息表示，以此来表示不同节点的状态。也就是说，在同一分区中，不同的节点状态也是不同的，如down表示节点不可用，则我们在选择时也可以选择对应分区的对应节点（使用公共前缀adev和标识的数字范围或特定数字来选择），这样在管理可以更加集中。<br>选择对应的分区节点后，我们开始提交作业。作业提交分为两种交互式作业任务与批处理任务。<br>交互式任务提交<br>交互式任务允许用户实时监测程序的输出与运行并允许用户直接调试程序，在对于任务数据处于探索阶段时，或者使用R或python等交互式平台工具时，可以考虑使用交互式任务提交。<br>交互式任务提交童超就要通过salloc申请到计算节点，再ssh连接到计算节点，srun命令直接执行任务，该模式下，用户可以直接登录到计算节点，此后 所有的操作都在这个节点上进行。<br>先使用salloc命令申请资源</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">salloc -p C032M0128G -N1 -n6 -q low -t 2:00:0</span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">% -N &lt;节点数量&gt;</span></span><br><span class="line">--cpus-per-task=&lt;单进程 CPU 核心数&gt;</span><br><span class="line">--gres=gpu:&lt;单节点 GPU 卡数&gt;</span><br><span class="line">-t &lt;最长运行时间&gt;</span><br><span class="line">-p &lt;使用的分区&gt;</span><br><span class="line">--qos=&lt;使用的 QoS&gt;</span><br></pre></td></tr></table></figure>

<p>在执行salloc命令成功后，会出现新的shell，返回申请到的节点和作业ID等信息，之后用户可直接连接到节点使用srun执行任务，srun常用选项有：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-n 指定运行任务数</span><br><span class="line">-c 每个任务所需要的任务器核数</span><br><span class="line">-N 作业分配节点数</span><br><span class="line">-p 指定分区</span><br></pre></td></tr></table></figure>

<p>上述示例表示在三个节点（-N3）上执行 &#x2F;bin&#x2F;hostname任务，并在输出（-l）上包含任务编号。将使用默认分区。默认情况下，每个任务一个节点。<br>交互式计算使用完毕后，先使用 exit 退出节点，再执行 exit 退出 SLURM 分配 的 Shell，可结束这次交互式任务。SLURM 会提示你交互式任务的资源已经被释放。<br>批处理任务<br>一般情况下，我们会撰写脚本再进行执行，再通过Sbatch命令执行脚本。<br>使用vim等文本编辑器创建后缀为,sh的脚本，如：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vim myjob.sh</span></span><br></pre></td></tr></table></figure>

<p>之后开始撰写脚本：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash <span class="comment">#固定行，使脚本作为bash  script执行</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">所有SBATCH 为头的命令用来设置Slurmd调度中需要的参数，可以不进行设置，使用默认值</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -J <span class="built_in">test</span>                   <span class="comment"># 作业名为 test</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -o test.out               <span class="comment"># 屏幕上的输出文件重定向到 test.out</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -p gpu                    <span class="comment"># 作业提交的分区为 cpu</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH --qos=debug               <span class="comment"># 作业使用的 QoS 为 debug</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -N 1                      <span class="comment"># 作业申请 1 个节点</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH --ntasks-per-node=1       <span class="comment"># 单节点启动的进程数为 1</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH --cpus-per-task=4         <span class="comment"># 单任务使用的 CPU 核心数为 4</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -t 1:00:00                <span class="comment"># 任务运行的最长时间为 1 小时</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH --gres=gpu:1              <span class="comment"># 单个节点使用 1 块 GPU 卡</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCh -w comput6                <span class="comment"># 指定运行作业的节点是 comput6，若不填写系统自动分配节点</span></span></span><br><span class="line">run your command</span><br></pre></td></tr></table></figure>

<p>比如，若要执行某一python脚本，可在命令行写上：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">python &lt;脚本名&gt;</span></span><br></pre></td></tr></table></figure>

<p>即可。<br>将 SLURM 脚本编写完毕并上传工作站后（或直接在工作站编辑），进入SLURM 脚本的目录，直接</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sbatch myjob.sh</span></span><br></pre></td></tr></table></figure>

<p>提交即可。</p>
<h4 id="任务状态查询与取消"><a href="#任务状态查询与取消" class="headerlink" title="任务状态查询与取消"></a>任务状态查询与取消</h4><p>通常使用squeue和sacct来监控在SLURM中的作业活动，squeue查看当前运行作业队列情况，sacct查看已结束任务情况。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">squeue</span></span><br><span class="line">JOBID    PARTITION  NAME     USER       ST  TIME      NODES NODELIST(REASON)</span><br><span class="line">1454916  debug      sub.sh   zhenggang  R   00:05:00  2     cn[5-6]</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">以上分别代表作业号，分区，作业名，用户，作业状态，运行时间，节点数量，运行节点REASON表示正在排队的原因</span></span><br></pre></td></tr></table></figure>

<p>squeue常见参数有：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">--help    # 显示squeue命令的使用帮助信息；</span><br><span class="line">-A &lt;account_list&gt;    # 显示指定账户下所有用户的作业，如果是多个账户的话用逗号隔开；</span><br><span class="line">-i &lt;seconds&gt;     # 每隔相应的秒数，对输出的作业信息进行刷新</span><br><span class="line">-j &lt;job_id_list&gt; # 显示指定作业号的作业信息，如果是多个作业号的话用逗号隔开；</span><br><span class="line">-n &lt;name_list&gt;     # 显示指定节点上的作业信息，如果指定多个节点的话用逗号隔开；</span><br><span class="line">-t &lt;state_list&gt;     # 显示指定状态的作业信息，如果指定多个状态的话用逗号隔开；</span><br><span class="line">-u &lt;user_list&gt;     # 显示指定用户的作业信息，如果是多个用户的话用逗号隔开；</span><br><span class="line">-w &lt;hostlist&gt;     # 显示指定节点上运行的作业，如果是多个节点的话用逗号隔开；</span><br></pre></td></tr></table></figure>

<p>过使用aact查询特定任务的细节</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sacct -j JOBID</span><br><span class="line">输出：JobID    JobName  Partition    Account  AllocCPUS      State ExitCode</span><br><span class="line">作业号，作业名，分区，计费账户，申请的CPU数量，状态，结束代码</span><br></pre></td></tr></table></figure>





<h3 id="WRF安装与运行"><a href="#WRF安装与运行" class="headerlink" title="WRF安装与运行"></a>WRF安装与运行</h3><h4 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h4><p>在自定义安装软件的时候，经常需要配置环境变量，只有在特定环境下，Linux才能运行相应的软件。环境变量可分为：<br>永久变量：通过修改配置文件，配置之后变量永久生效。<br>临时性变量：使用命令如export等命令设置，设置之后马上生效。当关闭shell的时候失效（这种主要用于测试比较多）。<br>在安装WRF时，我们必须将其编译，形成相应的可执行文件，而在编译与运行过程中，我们就需要许多变量的设置</p>
<h4 id="WRF安装"><a href="#WRF安装" class="headerlink" title="WRF安装"></a>WRF安装</h4><p>首先你当然应该先安装WRF，但相关教程实在太多，我不想过多赘述，请自行搜索。<br>我这里总结以下WRF的安装步骤，请各位在安装时一步步对照，以便安装出现错误时便于查找。<br>1、Window下的Linux系统安装（多种方式，自行选择）<br>2、安装编译器与系统环境：WRF代码是由C与Fortran写成，使用WRF也安装需要各种各样相关的编译器，可参考：<a href="https://blog.csdn.net/weixin_42372313/article/details/121849142?spm=1001.2014.3001.5502">WRF环境与编译器安装</a><br>Linux中编译代码只需要：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">令[compiler] -flag [sourcefile] -o [executive]。</span><br><span class="line">compiler为编译器名，flag为编译过程中的参数设</span><br><span class="line">置，sourcefile为源代码文件，executive为编译成的可执行文件，默认的文 件是a.out</span><br></pre></td></tr></table></figure>

<p>3、安装库，WRF要实现nc文件的读取、编译WPS，需要装一大堆库，参考：<a href="https://blog.csdn.net/weixin_42372313/article/details/121870313">WRF三方库安装</a><br>4、安装与编译WRF。<br>编译WRF前你需要导入相应的环境变量，如：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">module load oneapi</span><br><span class="line">export CC=icc</span><br><span class="line">export FC=ifort</span><br><span class="line">export F90=ifort</span><br><span class="line">export CXX=icpc</span><br><span class="line">export DIR=/dssg/home/acct-hpc/hpchgc/software/wrf/WRF_4.1.1_Intel/library</span><br><span class="line">export LD_LIBRARY_PATH=$DIR/wrf_libs_intel/lib:$LD_LIBRARY_PATH</span><br><span class="line">export LDFLAGS=-L$DIR/wrf_libs_intel/lib</span><br><span class="line">export CPPFLAGS=-I$DIR/wrf_libs_intel/include</span><br><span class="line">export NETCDF=$DIR/wrf_libs_intel/</span><br><span class="line">export HDF5=$DIR/wrf_libs_intel/</span><br><span class="line">export NETCDF=$DIR/wrf_libs_intel/</span><br><span class="line">export HDF5=$DIR/wrf_libs_intel/</span><br></pre></td></tr></table></figure>

<p>然后，解压下载的WRF安装包，进入WRF文件夹，开始编译：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar Wrf v4.0.1.tar.gz</span><br><span class="line">cd WRF-4.0.1/</span><br><span class="line">./configure</span><br></pre></td></tr></table></figure>

<p>然后，出现一大堆东西让你选择相应参数，即选择编译器、构建 WRF 的方式（即，串行或并行），官方给了三种不同类型的并行（smpar、dmpar 和 dm+sm）。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Please select from among the following Linux x86_64 options:</span><br><span class="line"></span><br><span class="line">  1. (serial)   2. (smpar)   3. (dmpar)   4. (dm+sm)   PGI (pgf90/gcc)</span><br><span class="line">  5. (serial)   6. (smpar)   7. (dmpar)   8. (dm+sm)   PGI (pgf90/pgcc): SGI MPT</span><br><span class="line">  9. (serial)  10. (smpar)  11. (dmpar)  12. (dm+sm)   PGI (pgf90/gcc): PGI accelerator</span><br><span class="line"> 13. (serial)  14. (smpar)  15. (dmpar)  16. (dm+sm)   INTEL (ifort/icc)</span><br><span class="line">                                         17. (dm+sm)   INTEL (ifort/icc): Xeon Phi (MIC architecture)</span><br><span class="line"> 18. (serial)  19. (smpar)  20. (dmpar)  21. (dm+sm)   INTEL (ifort/icc): Xeon (SNB with AVX mods)</span><br><span class="line"> 22. (serial)  23. (smpar)  24. (dmpar)  25. (dm+sm)   INTEL (ifort/icc): SGI MPT</span><br><span class="line"> 26. (serial)  27. (smpar)  28. (dmpar)  29. (dm+sm)   INTEL (ifort/icc): IBM POE</span><br><span class="line"> 30. (serial)               31. (dmpar)                PATHSCALE (pathf90/pathcc)</span><br><span class="line"> 32. (serial)  33. (smpar)  34. (dmpar)  35. (dm+sm)   GNU (gfortran/gcc)</span><br><span class="line"> 36. (serial)  37. (smpar)  38. (dmpar)  39. (dm+sm)   IBM (xlf90_r/cc_r)</span><br><span class="line"> 40. (serial)  41. (smpar)  42. (dmpar)  43. (dm+sm)   PGI (ftn/gcc): Cray XC CLE</span><br><span class="line"> 44. (serial)  45. (smpar)  46. (dmpar)  47. (dm+sm)   CRAY CCE (ftn $(NOOMP)/cc): Cray XE and XC</span><br><span class="line"> 48. (serial)  49. (smpar)  50. (dmpar)  51. (dm+sm)   INTEL (ftn/icc): Cray XC</span><br><span class="line"> 52. (serial)  53. (smpar)  54. (dmpar)  55. (dm+sm)   PGI (pgf90/pgcc)</span><br><span class="line"> 56. (serial)  57. (smpar)  58. (dmpar)  59. (dm+sm)   PGI (pgf90/gcc): -f90=pgf90</span><br><span class="line"> 60. (serial)  61. (smpar)  62. (dmpar)  63. (dm+sm)   PGI (pgf90/pgcc): -f90=pgf90</span><br><span class="line"> 64. (serial)  65. (smpar)  66. (dmpar)  67. (dm+sm)   INTEL (ifort/icc): HSW/BDW</span><br><span class="line"> 68. (serial)  69. (smpar)  70. (dmpar)  71. (dm+sm)   INTEL (ifort/icc): KNL MIC</span><br><span class="line"> 72. (serial)  73. (smpar)  74. (dmpar)  75. (dm+sm)   FUJITSU (frtpx/fccpx): FX10/FX100 SPARC64 IXfx/Xlfx</span><br><span class="line"></span><br><span class="line">Enter selection [1-75] :</span><br></pre></td></tr></table></figure>

<p>根据编译器及电脑配置选择 即可。<br>之后会出现第二给选择，选择1basic，执行完成后，输入：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./compile em_real &gt;＆ log.compile   %屏幕输出与执行日志</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./compile em_real  %将执行时输出的内容直接输出到屏幕</span></span><br></pre></td></tr></table></figure>

<p>开始编译，等待一段时间，在WRF文件夹main目录下将会生成4个可执行文件，使用<br>ls -ls main&#x2F;*.exe<br>命令查找main文件夹下的4个可执行文件，如果都有的话，WRF安装成功。<br>如果编译未成功，大概是在选择configure类型时你选错了，系统里没有你选择的编译器或者环境变量出错了，检查编译器电脑配置。<br>如果想使用MPI编译的话，configure类型选择无编译器的那几个编号，然后修改configure。wrf文件：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">DM_FC           =       mpiifort</span><br><span class="line">DM_CC           =       mpiicc</span><br></pre></td></tr></table></figure>

<p>5、安装与编译WPS，WPS是WRF的前处理部分，安装它主要是获得3个可执行文件：geogrid.exe,ungrib.exe 和 metgrid.exe。必须在安装WRF后安装。<br>以防万一，先加载个环境变量，确保JASPERLIB&#x2F;路径下有libjasper.a,libpng.a和libz.a这三个文件，且JASPERINC&#x2F; 路径下有 jasper&#x2F; 目录， png.h 和 zlib.h两个文件。</p>
<p><a href="https://xg1990.com/blog/archives/190%EF%BC%9A">https://xg1990.com/blog/archives/190：</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export DIR=/usr/local/wrf/LIBRARIES</span><br><span class="line">export PATH=$DIR/mpich/bin:$PATH</span><br><span class="line">export PATH=$DIR/grib2/bin:$PATH</span><br><span class="line">export JASPERLIB=$DIR/grib2/lib</span><br><span class="line">export JASPERINC=$DIR/grib2/include</span><br><span class="line">export NETCDF=$DIR/netcdf</span><br><span class="line">export WRF_DIR=/usr/local/wrf/WRFV3/4</span><br></pre></td></tr></table></figure>

<p>把你下载好的WPS压缩包（记得与WRF版本对应）解压至WRF的安装目录，然后进入WPS目录。.&#x2F;configure<br>和编译WRF时一样，会出现多种configure类型选择，根据编译器选择即可。<br>修改configure.wps文件中的，zlib、jasper、libpng文件路径，否则可能没有ungrib.exe执行文件。<br>之后步骤与编译WRF类似，安装成功后会出现3个可执行文件。<br>之后就可以试着跑了，当然为了方便后处理你也可以装NCL、Anacoda、NCviewer之类的，看需求吧。</p>
<h3 id="WRF运行"><a href="#WRF运行" class="headerlink" title="WRF运行"></a>WRF运行</h3><p>安装好WRF后运行流程与namelist的修改可以可以查看我之前的博客：WRF模式入门(Cygwin版），我这里主要讲一下超算上多出来的一些步骤，一般来说，超算服务器上是有安装好的WRF的，你可以跳过安装步骤直接运行。<br>以天河为例，你可以使用：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">module avail wrf</span><br></pre></td></tr></table></figure>

<p>查看当前服务器上的WRF。<br>之后，创建一个文件夹，用于WRF的运行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir ~/data &amp;&amp; cd ~/data</span><br></pre></td></tr></table></figure>

<p>把你的数据通过fttp上传至创建的文件夹中，把数据拷贝到WPS的目录中，接下来步骤就不讲了，各位可参考我给的博客。WRF入门(cygwin版）<br>虽然是Cygwin版，但运行步骤是类似的，不同的是Cygwin版本是将WRF整个打包好，在安装上省略了一些步骤。<br>可以将运行WRF(包括前处理）的所有命令写成一个脚本文件，脚本文件sub.sh，之后：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">yhrun -N 1 -n 28 -pTH_HPC1 wrf.exe</span><br><span class="line"></span><br><span class="line">`-N 节点数</span><br><span class="line">-n 总核数</span><br><span class="line">-p 计算分区名</span><br><span class="line">wrf.exe 可执行程序名称</span><br></pre></td></tr></table></figure>

<p>运行结束可以查看结果，通过前文介绍的Slurm可以查看作业进程，若rsl文件中有SUCCESS COMPLETE WRF则表示运行成功。</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>接下来我们可以总结一下：在超算中运行WRF，我们应当知道什么？<br>首先是超算集群的基础构造与基本运行原理，让我们明白自己是在什么样的东西上运行程序。<br>其次是Linux系统的命令，系统帮助我们让计算机实现各种功能。<br>然后是一些在运行时我们需要了解到知识：运行WRF时，我们需要安装压缩包与数据，这就需要我们学会远程登陆与数据传输。<br>运行WRF时整个操作都是在Linux上进行，所以需要基础命令。<br>配置WPS与WRF的namelist文件需要文本编辑，所以需要vi知识。<br>我们可以撰写Shell脚本来方便WRF的运行，最后，WRF的运行在服务器上要以任务形式提交，我们自然需要学到作业调度，便于管理我们的WRF任务状态。<br>以上便是我个人认为在超算上需要了解到知识，当然不止WRF，任何在超算上的模式运行都需要了解一些以上这些知识点。<br>————————————————<br>版权声明：本文为CSDN博主「什么都不会的张同学」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/weixin_43750300/article/details/125741208">https://blog.csdn.net/weixin_43750300/article/details/125741208</a></p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>WRF-Nudging</title>
    <url>/2022/05/01/Tool/WRF-Nudging/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>来源：<a href="https://mp.weixin.qq.com/s/85Hw1YJ4wKfS7tqnWmFdlw">https://mp.weixin.qq.com/s/85Hw1YJ4wKfS7tqnWmFdlw</a></p>
<p>其他参考：<a href="https://blog.sina.cn/dpool/blog/s/blog_95c7958e0102xsbj.html">https://blog.sina.cn/dpool/blog/s/blog_95c7958e0102xsbj.html</a></p>
<p><a href="https://www.heywhale.com/mw/project/62f0cee15f0fe96a599eb092">https://www.heywhale.com/mw/project/62f0cee15f0fe96a599eb092</a></p>
<h1 id="一、Nuging简介"><a href="#一、Nuging简介" class="headerlink" title="一、Nuging简介"></a><strong>一、Nuging简介</strong></h1><p>Nudging是基于经验性的四维资料同化方法，通过在预报方程中增加强迫项，使模式输出结果逼近于观测资料（Observation Nudging）或再分析资料（Analysis Nudging）。这些强迫项相对于方程中的各项量级较小，保证了在每个积分步长中各物理量之间的动力平衡。</p>
<p>WRF提供了两种Analysis Nudging方案，分别为Grid Nudging和Spectral Nudging。Grid Nudging 是使用格点对格点的松弛强迫项逐步逼近分析场。Spectral Nudging通过设置波数进行滤波，保留大尺度波动，滤掉小尺度的波动，从而将模拟状态不断靠近大尺度驱动状态，较好地减小大尺度误差。值得注意的是，在 WRF 模式中，两种方法同化的变量不同，Grid Nudging 中默认同化的变量包括水平风、位温和水汽混合比，Spectral Nudging 中默认同化水平风、位温和位势高度。</p>
<h1 id="二、WRF模式中Nudging设置"><a href="#二、WRF模式中Nudging设置" class="headerlink" title="二、WRF模式中Nudging设置"></a><strong>二、WRF模式中Nudging设置</strong></h1><p>Nudging方法可在namelist.input中的&amp;fdda模块进行添加，WRF模式提供了Grid Nudging、 Spectral Nudging和Observation Nudging三种方案设置，可从em_real文件下examples.namelist、README.grid_fdda和README.obs_fdda中查看相应设置。也可从 <a href="https://www.esrl.noaa.gov/gsd/wrfportal/namelist_input_options.html">https://www.esrl.noaa.gov/gsd/wrfportal/namelist_input_options.html</a> 网页查看每条语句含义。</p>
<h2 id="2-1-Grid-Nudging设置"><a href="#2-1-Grid-Nudging设置" class="headerlink" title="2.1 Grid Nudging设置"></a>2.1 Grid Nudging设置</h2><table>
<thead>
<tr>
<th><strong>Name</strong></th>
<th><strong>Value</strong></th>
<th><strong>Description</strong></th>
</tr>
</thead>
<tbody><tr>
<td>&amp;fdda</td>
<td></td>
<td></td>
</tr>
<tr>
<td>grid_fdda</td>
<td>1</td>
<td>grid-nudging on (&#x3D;0 off) for each domain 是否进行Grid Nuging（1:打开，0关闭）</td>
</tr>
<tr>
<td>gfdda_inname</td>
<td></td>
<td>Defined name in real “wrffdda_d”</td>
</tr>
<tr>
<td>gfdda_interval_m</td>
<td>360</td>
<td>Time interval (min) between analysis times</td>
</tr>
<tr>
<td>gfdda_end_h</td>
<td>6</td>
<td>Time (in hours) to stop nudging after start of forecast 模式运行至同化结束的时间</td>
</tr>
<tr>
<td>io_form_gfdda</td>
<td>2</td>
<td>Analysis format (2 &#x3D; netcdf)</td>
</tr>
<tr>
<td>fgdt</td>
<td>0</td>
<td>Calculation frequency (in minutes) for analysis nudging.0 &#x3D; every time step, recommended</td>
</tr>
<tr>
<td>if_no_pbl_nudging_uv</td>
<td>0</td>
<td>0 &#x3D; nudging in the pbl；1 &#x3D; no nudging of u and v (temp、qvapor) in the pbl  0表示在边界层内进行同化，1表示在边界层内关闭同化</td>
</tr>
<tr>
<td>if_no_pbl_nudging_t</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>if_no_pbl_nudging_q</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>if_zfac_uv</td>
<td>0</td>
<td>if_zfac_X: 0 &#x3D; nudge X all layers，1 &#x3D; limit nudging to levels above k_zfac_X；   k_zfac_X: 10 &#x3D; model level below which nudging is switched off for Xif_zfac_uv设置为 0表示在所有模式层进行水平风场同化，设置为1表示仅在k_zfac_uv层次上进行同化。if_zfac_t和if_zfac_q与if_zfac_uv相同，只不过变量是温度和湿度，k_zfac_t和k_zfac_q与k_zfac_uv类似。</td>
</tr>
<tr>
<td>k_zfac_uv</td>
<td>10</td>
<td></td>
</tr>
<tr>
<td>if_zfac_t</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>k_zfac_t</td>
<td>10</td>
<td></td>
</tr>
<tr>
<td>if_zfac_q</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>k_zfac_q</td>
<td>10</td>
<td></td>
</tr>
<tr>
<td>guv</td>
<td>0.0003</td>
<td>nudging coefficient for u and v(temp、qvapor) (sec-1)同化强度系数</td>
</tr>
<tr>
<td>gt</td>
<td>0.0003</td>
<td></td>
</tr>
<tr>
<td>gq</td>
<td>0.0003</td>
<td></td>
</tr>
<tr>
<td>if_ramping</td>
<td>0</td>
<td>0&#x3D; nudging ends as a step function, 1&#x3D; ramping nudging down at end of period 0表示突然停止同化，1表示在模拟结束时逐渐停止同化</td>
</tr>
<tr>
<td>dtramp_min</td>
<td>60.0</td>
<td>time (min) for ramping function, 60.0&#x3D;ramping starts at last analysis time, -60.0&#x3D;ramping ends at last analysis time同化逐渐结束经历的时间。60表示在最后分析时间开始逐渐停止同化，-60表示在最后分析时间已停止同化。</td>
</tr>
</tbody></table>
<p>上面表格是针对Upper-air层次上进行Grid Nudigng（一些文献称为 3D Analysis Nudging），若要在Surface层次上进行Grid Nudigng（Surface Analysis Nuding），需要进行下列设置，两者既可以分开也可以合在一起使用。</p>
<table>
<thead>
<tr>
<th><strong>Name</strong></th>
<th><strong>Value</strong></th>
<th><strong>Description</strong></th>
</tr>
</thead>
<tbody><tr>
<td>&amp;fdda</td>
<td></td>
<td></td>
</tr>
<tr>
<td>grid_sfdda</td>
<td>0</td>
<td>surface fdda switch (1, on; 0, off)</td>
</tr>
<tr>
<td>sgfdda_inname</td>
<td></td>
<td>“wrfsfdda_d” ; defined name for sfc nudgingi in input file (from program obsgrid)</td>
</tr>
<tr>
<td>sgfdda_end_h</td>
<td>6</td>
<td>time (in hours) to stop sfc nudging after start of forecast</td>
</tr>
<tr>
<td>sgfdda_interval_m</td>
<td>180</td>
<td>time interval (in min) between sfc analysis times (must use minutes)</td>
</tr>
<tr>
<td>io_form_sgfdda</td>
<td>2</td>
<td>sfc analysis data io format (2 &#x3D; netCDF)</td>
</tr>
<tr>
<td>guv_sfc</td>
<td>0.0003</td>
<td>nudging coefficient for sfc u and v(temp、qvapor) (sec-1)同化强度系数</td>
</tr>
<tr>
<td>gt_sfc</td>
<td>0.0003</td>
<td></td>
</tr>
<tr>
<td>gq_sfc</td>
<td>0.0003</td>
<td></td>
</tr>
<tr>
<td>rinblw</td>
<td>250.0</td>
<td>radius of influence used to determine the confidence (or weights) for the analysis, which is based on the distance between the grid point to the nearest obs. The analysis without nearby observation is used at a reduced weight. 影响半径（km）</td>
</tr>
</tbody></table>
<h2 id="2-2-Spectral-Nudging设置"><a href="#2-2-Spectral-Nudging设置" class="headerlink" title="2.2 Spectral Nudging设置"></a>2.2 Spectral Nudging设置</h2><table>
<thead>
<tr>
<th><strong>Name</strong></th>
<th><strong>Value</strong></th>
<th><strong>Description</strong></th>
</tr>
</thead>
<tbody><tr>
<td>&amp;fdda</td>
<td></td>
<td></td>
</tr>
<tr>
<td>grid_fdda</td>
<td>2</td>
<td>2表示进行Spectral Nuging</td>
</tr>
<tr>
<td>gfdda_inname</td>
<td></td>
<td>Defined name in real “wrffdda_d”</td>
</tr>
<tr>
<td>gfdda_interval_m</td>
<td>360</td>
<td>Time interval (min) between analysis times</td>
</tr>
<tr>
<td>gfdda_end_h</td>
<td>6</td>
<td>Time (in hours) to stop nudging after start of forecast 模式运行至Nudigng结束的时间</td>
</tr>
<tr>
<td>io_form_gfdda</td>
<td>2</td>
<td>Analysis format (2 &#x3D; netcdf)</td>
</tr>
<tr>
<td>fgdt</td>
<td>0</td>
<td>Calculation frequency (in minutes) for analysis nudging.0 &#x3D; every time step, recommended</td>
</tr>
<tr>
<td>fgdtzero</td>
<td>0</td>
<td>nudging tendencies are set to zero in between fdda calls</td>
</tr>
<tr>
<td>if_no_pbl_nudging_uv</td>
<td>0</td>
<td>0 &#x3D; nudging in the pbl；1 &#x3D; no nudging of u and v (temp、geopotential height) in the pblSpectral Nudging 中默认同化水平风、位温和位势高度，而Grid Nudging 中默认同化的变量包括水平风、位温和水汽混合比。</td>
</tr>
<tr>
<td>if_no_pbl_nudging_t</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>if_no_pbl_nudging_ph</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>if_zfac_uv</td>
<td>0</td>
<td>if_zfac_X: 0 &#x3D; nudge X all layers，1 &#x3D; limit nudging to levels above k_zfac_X；k_zfac_X: 10 &#x3D; model level below which nudging is switched off for Xif_zfac_uv设置为 0表示在所有模式层进行水平风场同化，设置为1表示仅在k_zfac_uv层次上进行同化。if_zfac_t和if_zfac_ph与if_zfac_uv相同，只不过变量是温度和湿度，k_zfac_t和k_zfac_ph与k_zfac_uv类似。</td>
</tr>
<tr>
<td>k_zfac_uv</td>
<td>10</td>
<td></td>
</tr>
<tr>
<td>if_zfac_t</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>k_zfac_t</td>
<td>10</td>
<td></td>
</tr>
<tr>
<td>if_zfac_ph</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>k_zfac_ph</td>
<td>10</td>
<td></td>
</tr>
<tr>
<td>dk_zfac_uv</td>
<td></td>
<td>depth in k between k_zfac_X to dk_zfac_X where nudging increases linearly to full strength</td>
</tr>
<tr>
<td>dk_zfac_t</td>
<td></td>
<td></td>
</tr>
<tr>
<td>dk_zfac_ph</td>
<td></td>
<td></td>
</tr>
<tr>
<td>guv</td>
<td>0.0003</td>
<td>nudging coefficient for u and v(temp、geopotential height) (sec-1)同化强度系数</td>
</tr>
<tr>
<td>gt</td>
<td>0.0003</td>
<td></td>
</tr>
<tr>
<td>gph</td>
<td>0.0003</td>
<td></td>
</tr>
<tr>
<td>xwavenum</td>
<td>3</td>
<td>top wave number to nudge in x&#x2F;y direction</td>
</tr>
<tr>
<td>ywavenum</td>
<td>3</td>
<td>grid scale&#x2F;wavenum&#x3D;1000km</td>
</tr>
<tr>
<td>if_ramping</td>
<td>0</td>
<td>0&#x3D; nudging ends as a step function, 1&#x3D; ramping nudging down at end of period</td>
</tr>
<tr>
<td>dtramp_min</td>
<td>60.0</td>
<td>time (min) for ramping function, 60.0&#x3D;ramping starts at last analysis time, -60.0&#x3D;ramping ends at last analysis time</td>
</tr>
</tbody></table>
<h2 id="2-3-Observation-Nudging设置"><a href="#2-3-Observation-Nudging设置" class="headerlink" title="2.3 Observation Nudging设置"></a>2.3 Observation Nudging设置</h2><table>
<thead>
<tr>
<th><strong>Name</strong></th>
<th><strong>Value</strong></th>
<th><strong>Description</strong></th>
</tr>
</thead>
<tbody><tr>
<td>在使用Observation Nudging之前，需要在namelist.input中&amp;time_control部分增加下列设置</td>
<td></td>
<td></td>
</tr>
<tr>
<td>&amp;time_control</td>
<td></td>
<td></td>
</tr>
<tr>
<td>auxinput11_interval_s</td>
<td>180</td>
<td>同化观测点的间隔时间，单位：s</td>
</tr>
<tr>
<td>auxinput11_end_h</td>
<td>6</td>
<td>同化结束时间，单位：h</td>
</tr>
<tr>
<td>&amp;fdda</td>
<td></td>
<td></td>
</tr>
<tr>
<td>obs_nudge_opt</td>
<td>1</td>
<td>是否进行Observation Nuging（0：关闭，1：进行）</td>
</tr>
<tr>
<td>max_obs</td>
<td>150000</td>
<td>max number of observations used on a domain during any given time window 同化最多的观测站点数</td>
</tr>
<tr>
<td>fdda_start</td>
<td>0</td>
<td>obs nudging start time in minutes 同化开始时间（分钟）</td>
</tr>
<tr>
<td>fdda_end</td>
<td>180</td>
<td>obs nudging end time in minutes 同化结束时间（分钟）</td>
</tr>
<tr>
<td>obs_nudge_wind</td>
<td>1</td>
<td>obs_nudge_X: whether to nudge X (&#x3D;0 off；&#x3D;1 on)obs_coef_X: nudging coefficient for X, unit: s-1obs_nudge_X: 是否同化X；obs_coef_X：同化强度</td>
</tr>
<tr>
<td>obs_coef_wind</td>
<td>6.E-4</td>
<td></td>
</tr>
<tr>
<td>obs_nudge_temp</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td>obs_coef_temp</td>
<td>6.E-4</td>
<td></td>
</tr>
<tr>
<td>obs_nudge_mois</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td>obs_coef_mois</td>
<td>6.E-4</td>
<td></td>
</tr>
<tr>
<td>obs_rinxy</td>
<td>240.</td>
<td>horizontal radius of influence in km 水平影响半径（km）</td>
</tr>
<tr>
<td>obs_rinsig</td>
<td>0.1</td>
<td>vertical radius of influence in eta 垂直影响半径（eta）</td>
</tr>
<tr>
<td>obs_twindo</td>
<td>0.6667</td>
<td>half-period time window over which an observation will be used for nudging; the unit is in hours</td>
</tr>
<tr>
<td>obs_npfi</td>
<td>10</td>
<td>freq in coarse grid timesteps for diag prints</td>
</tr>
<tr>
<td>obs_ionf</td>
<td>2</td>
<td>freq in coarse grid timesteps for obs input and err calc</td>
</tr>
<tr>
<td>obs_idynin</td>
<td>0</td>
<td>for dynamic initialization using a ramp-down function to gradually turn off the FDDA before the pure forecast (&#x3D;1 on)使用斜坡函数在数值预报之前逐渐关闭同化（&#x3D;1 开启）</td>
</tr>
<tr>
<td>obs_dtramp</td>
<td>40.</td>
<td>time period in minutes over which the nudging is ramped down from one to zero. 同化强度从1将至为0的时间段</td>
</tr>
<tr>
<td>obs_prt_freq</td>
<td>10</td>
<td>frequency in obs index for diagnostic printout</td>
</tr>
<tr>
<td>obs_prt_max</td>
<td>10</td>
<td>maximum allowed obs entries in diagnostic printout</td>
</tr>
<tr>
<td>obs_ipf_errob</td>
<td>.true.</td>
<td>.false. &#x3D; don’t print obs error diagnostics.true. &#x3D; print obs error diagnostics</td>
</tr>
<tr>
<td>obs_ipf_nudob</td>
<td>.true.</td>
<td>.false. &#x3D; don’t print obs nudge diagnostics.true. &#x3D; print obs nudge diagnostics</td>
</tr>
<tr>
<td>obs_ipf_in4dob</td>
<td>.true.</td>
<td>.false. &#x3D; don’t print obs input diagnostics.true. &#x3D; print obs input diagnostics</td>
</tr>
<tr>
<td>obs_no_pbl_nudge_uv</td>
<td>0</td>
<td>1&#x3D;no nudging within pbl0&#x3D;nudging within pbl1表示在大气边界层内关闭同化，0表示进行同化</td>
</tr>
<tr>
<td>obs_no_pbl_nudge_t</td>
<td></td>
<td></td>
</tr>
<tr>
<td>obs_no_pbl_nudge_q</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<p>Observation nudging具体操作，官网教程网址：<a href="https://www2.mmm.ucar.edu/wrf/users/docs/How_to_run_obs_fdda.html">https://www2.mmm.ucar.edu/wrf/users/docs/How_to_run_obs_fdda.html</a></p>
<ul>
<li><p>在准备好OBSDOMAIN文件后，复制到WRF&#x2F;run目录下。</p>
</li>
<li><p>对namelist .input中加入以下部分：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&amp;fdda</span><br><span class="line">obs_nudge_opt = 1,1,1,0,0 nudge部分开关（1代表打开，0代表关闭）</span><br><span class="line">max_obs = 150000, 同化的最大观测点数</span><br><span class="line">fdda_start = 0., 0., 0., 0., 0. 开始同化时间</span><br><span class="line">fdda_end = 99999., 99999., 99999., 99999., 99999.结束同化的时间</span><br><span class="line">obs_nudge_wind = 1,1,1,1,1 是否同化风速变量（1代表打开，0代表关闭）</span><br><span class="line">obs_coef_wind = 6.E-4,6.E-4,6.E-4,6.E-4,6.E-4 该变量nudge强度</span><br><span class="line">obs_nudge_temp = 1,1,1,1,1是否同化温度（1代表打开，0代表关闭）</span><br><span class="line">obs_coef_temp = 6.E-4,6.E-4,6.E-4,6.E-4,6.E-4 该变量nudge强度</span><br><span class="line">obs_nudge_mois = 1,1,1,1,1是否同化湿度（1代表打开，0代表关闭）</span><br><span class="line">obs_coef_mois = 6.E-4,6.E-4,6.E-4,6.E-4,6.E-4 该变量nudge强度</span><br><span class="line">obs_rinxy = 240.,240.,180.,180,180 水平影响半径km</span><br><span class="line">obs_rinsig = 0.1,垂直影响半径</span><br><span class="line">obs_twindo = 0.6666667,0.6666667,0.6666667,0.6666667,0.6666667,时间权重函数h</span><br><span class="line">obs_npfi = 10,观测点打印输出时间间隔（然而这个开关似乎idui诊断输出没有任何影响）</span><br><span class="line">obs_ionf = 2, 2, 2, 2, 2,计算是否需要读入观测数据的时间间隔（以粗网格时间步长为单位）</span><br><span class="line">obs_idynin = 0,是否进行动态初始化模型运行（1=yes,0=no）</span><br><span class="line">obs_dtramp = 40.,动态初始化周期结束时的降阶周期长度min</span><br><span class="line">obs_prt_freq = 10, 10, 10, 10, 10,每隔10个打印一次以检查是否读入模式</span><br><span class="line">obs_prt_max = 10最大打印数</span><br><span class="line">obs_ipf_errob = .true.</span><br><span class="line">obs_ipf_nudob = .true.</span><br><span class="line">obs_ipf_in4dob = .true.</span><br><span class="line">obs_ipf_init = .true.（true代表开启打印，输入至相应诊断文件rsl.error或者rsl.output）</span><br><span class="line">此外，还需要在timecontrol部分加上以下：</span><br><span class="line">auxinput11_interval_s = 180, 180, 180, 180, 180,同化观测点间隔时间</span><br><span class="line">auxinput11_end_h = 6, 6, 6, 6, 6,同化结束时间更多参数，以及更详细的解释请查阅WRF官网的 Obs-Nudging Guide（https://www2.mmm.ucar.edu/wrf/users/docs/ObsNudgingGuide.pdf）</span><br></pre></td></tr></table></figure>
</li>
<li><p>设置好了以后，.&#x2F;real.exe ，接着.&#x2F;wrf.exe。<br>.&#x2F;wrf.exe后运行日志文件rsl.error就会出现关于OBSnudging的部分：</p>
</li>
</ul>
<p>原文链接：<a href="https://blog.csdn.net/weixin_45372694/article/details/117482510">https://blog.csdn.net/weixin_45372694/article/details/117482510</a></p>
<h1 id="三、OBSGRID资料前处理模块"><a href="#三、OBSGRID资料前处理模块" class="headerlink" title="三、OBSGRID资料前处理模块"></a><strong>三、OBSGRID资料前处理模块</strong></h1><p>在进行Nudging之前，需要通过OBSGRID模块将little_r格式的观测资料转化为WRF能直接读取的ASCII格式文件。OBSGRID模块的作用与WRFDA系统中资料前处理程序OBSPROC类似。OBSGRID模块以及little_r格式的详细介绍可参考WRF User’s Guide 第七章Objective Analysis (OBSGRID) 。<a href="https://www2.mmm.ucar.edu/wrf/users/docs/user_guide_v4/v4.4/users_guide_chap7.html">https://www2.mmm.ucar.edu/wrf/users/docs/user_guide_v4/v4.4/users_guide_chap7.html</a></p>
<h2 id="3-1-编译OBSGRID模块"><a href="#3-1-编译OBSGRID模块" class="headerlink" title="3.1 编译OBSGRID模块"></a>3.1 编译OBSGRID模块</h2><p>（1）将OBSGRID.tar.gz压缩包放置在WPS文件夹下，解压缩文件</p>
<p>tar -zxvf OBSGRID.tar.gz</p>
<p>（2）解压缩后，将出现一个OBSGRID 目录，进入OBSGRID文件夹</p>
<p>cd OBSGRID</p>
<p>（3）编译</p>
<p>.&#x2F;configure</p>
<p>.&#x2F;compile</p>
<p>.&#x2F;compile可能会出错，解决：在.&#x2F;configure之后，在configure.oa里，找到开头为CPPFLAGS这一行，删去”-C”选项，再编译就行了。如果成功，将创建可执行文件obsgrid.exe。</p>
<h2 id="3-2、运行OBSGRID模块"><a href="#3-2、运行OBSGRID模块" class="headerlink" title="3.2、运行OBSGRID模块"></a>3.2、运行OBSGRID模块</h2><p>OBSGRID模块运行是在WRF模式.&#x2F;metgrid.exe步骤之后，运行OBSGRID模块需要输入little_r格式的观测资料和met_em.d0*的模式文件。</p>
<p>（1）准备观测资料。观测资料须处理为little_r格式且文件命名格式为OBS:YYYY-MM-DD_HH，并将其储存在OBSGRID文件夹下。观测资料转为little_r格式网上提供了很多程序，可参考进行处理。</p>
<p>（2）准备met_em.d0<em>模式文件。将.&#x2F;metgrid.exe步骤生成的met_em.d0</em>文件链接到OBSGRID文件夹下 。</p>
<p>（3）修改namelist.oa文件。主要修改 &amp;record1的时间和时间间隔、&amp;record2的嵌套层数（grid_id）和文件名（obs_filename改为’OBS’）。</p>
<p>（6）运行obsgrid.exe(.&#x2F;obsgrid.exe)。 在namelist.oa中每更改一次grid_id（嵌套层数），就要运行一次.&#x2F;obsgrid.exe。</p>
<p>（7）运行完.&#x2F;obsgrid.exe之后，会出现metoa_em.d0<em>、OBS_DOMIANxxx、wrfsfdda_d0</em>。</p>
<p>OBS_DOMAIN1xx和OBS_DOMAIN2xx分别存放d01和d02区域内单时次的观测数据，需要借助run_cat_obs_files.csh文件将每个区域多个单时次文件合并一个文件（OBS_DOMAINd01、OBS_DOMAINd02）。</p>
<h1 id=""><a href="#" class="headerlink" title=""></a></h1><h1 id="四、WRF模式中使用Nudging"><a href="#四、WRF模式中使用Nudging" class="headerlink" title="四、WRF模式中使用Nudging"></a><strong>四、WRF模式中使用Nudging</strong></h1><p><img src="https://p.ipic.vip/yk5iic.png" alt="Image"></p>
<p><strong>W<strong><strong>RF</strong></strong>模式运行流程图</strong></p>
<p>OBSGRID模块最终生成metoa_em.d0<em>、OBS_DOMIANd0</em>、wrfsfdda_d0<em>文件，其作用如下：1）metoa_em.d0</em>文件为后续Nudging提供了初始和边界条件，它与met_em.d0<em>文件作用类似，只不过metoa_em.d0</em>文件中融合了观测资料，将metoa_em.d0<em>文件链接至WRF模式em_real文件夹下并重命名为met_em.d0</em>，运行.&#x2F;real.exe会生成wrffdda文件。2）wrfsfdda 文件是进行Surface Analysis Nudging必备的文件，主要提供地表的信息。3）OBS_DOMIANd0*文件是进行Observation Nudging必备的文件，主要提供观测站点信息。</p>
<p>WRF模式中进行Nudging时，需先将OSGRID文件生成的metoa_em.d0<em>、OBS_DOMIANd0</em>、wrfsfdda_d0<em>文件链接至em_real文件夹下，再在namelist.input文件中&amp;fdda模块添加相应的Nuding设置，运行.&#x2F;real.exe和.&#x2F;wrf.exe即可。值得注意的是，若要进行Observation Nudging 必须将OBS_DOMIANd0</em>文件链接至em_real文件夹下，若是Analysis Nudging，不需要链接OBS_DOMIANd0*文件。若要进行 Surface Analysis Nudging，必须链接wrfsfdda 文件，通常建议Surface Analysis Nudging和3D Analysis Nudging一起使用，即将wrfsfdda和wrffdda文件都作为WRF模式的输入文件。此外，Observation Nudging和Analysis Nudging还可同用，如在粗网格区域进行Analysis Nudging，在细网格区域进行Observation Nudging，这样搭配使用效果较好。由于边界层以下存在较多湍流，再分析资料在这一层结精确度较低，通常在边界层内关闭温度和湿度场的同化，仅允许边界层高度以上进行温湿度的同化，这样模型产生的边界层结构由模式中的物理学主导，风场的同化通常在所有模式层进行，关于WRF模式中Nudging的设置可参考[4]~[6]文章。</p>
<p>与四维变分同化相比，Nudging 不需要计算伴随矩阵和背景误差协方差矩阵，计算成本较低，相对较为成熟且易于实现，可操作性强，但是Nudging只能同化模式变量。</p>
<p>参考</p>
<p>[1] WRF User’s Guide Chapter 7: Objective Analysis (OBSGRID)</p>
<p><a href="https://www2.mmm.ucar.edu/wrf/users/docs/user_guide_v4/v4.4/users_guide_chap7.html">https://www2.mmm.ucar.edu/wrf/users/docs/user_guide_v4/v4.4/users_guide_chap7.html</a></p>
<p>[2] Observation Nudging同化教程</p>
<p><a href="https://blog.csdn.net/weixin_45372694/category_10278097.html">https://blog.csdn.net/weixin_45372694/category_10278097.html</a></p>
<p>[3] WRF OBSGRID的简介与安装</p>
<p><a href="https://blog.csdn.net/weixin_42487488/article/details/116034050">https://blog.csdn.net/weixin_42487488/article/details/116034050</a></p>
<p>[4] Deng A , Stauffer D , Gaudet B , et al. 1.9 UPDATE ON WRF-ARW END-TO-END MULTI-SCALE FDDA SYSTEM. 2009.</p>
<p>[5] Lauvaux T , Miles N L , Richardson S J , et al. Urban Emissions of CO2 from Davos, Switzerland: The First Real-Time Monitoring System Using an Atmospheric Inversion Technique[J]. Journal of Applied Meteorology and Climatology, 2013, 52(12):2654-2668.</p>
<p>[6] Lauvaux T , Miles N L , Deng A , et al. High-resolution atmospheric inversion of urban CO_2 emissions during the dormant season of the Indianapolis Flux Experiment (INFLUX).</p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>WRF-OBSGRID</title>
    <url>/2022/05/01/Tool/WRF-OBSGRID/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>参考：<a href="https://www2.mmm.ucar.edu/wrf/users/docs/ObsNudgingGuide.pdf">https://www2.mmm.ucar.edu/wrf/users/docs/ObsNudgingGuide.pdf</a></p>
<h2 id="WRF-OBSGRID-资料前处理模块"><a href="#WRF-OBSGRID-资料前处理模块" class="headerlink" title="WRF OBSGRID 资料前处理模块"></a>WRF OBSGRID 资料前处理模块</h2><p>在进行Nudging之前，需要通过OBSGRID模块将little_r格式的观测资料转化为WRF能直接读取的ASCII格式文件。</p>
<p>OBSGRID模块的作用与WRFDA系统中资料前处理程序OBSPROC类似。</p>
<p>OBSGRID模块以及little_r格式的详细介绍可参考WRF User’s Guide 第七章Objective Analysis (OBSGRID) 。</p>
<p><a href="https://www2.mmm.ucar.edu/wrf/users/docs/user_guide_v4/v4.4/users_guide_chap7.html">https://www2.mmm.ucar.edu/wrf/users/docs/user_guide_v4/v4.4/users_guide_chap7.html</a></p>
<h3 id="编译OBSGRID模块"><a href="#编译OBSGRID模块" class="headerlink" title="编译OBSGRID模块"></a>编译OBSGRID模块</h3><ul>
<li><p>将OBSGRID.tar.gz压缩包放置在WPS文件夹下，解压缩文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">unzip OBSGRID.zip</span><br></pre></td></tr></table></figure>
</li>
<li><p>解压缩后，将出现一个OBSGRID 目录，进入OBSGRID文件夹</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd OBSGRID</span><br></pre></td></tr></table></figure>
</li>
<li><p>编译</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./configure</span><br><span class="line"></span><br><span class="line">./compile</span><br></pre></td></tr></table></figure>

<blockquote>
<p>.&#x2F;compile可能会出错，解决：在.&#x2F;configure之后，在configure.oa里，找到开头为CPPFLAGS这一行，删去”-C”选项，再编译就行了。如果成功，将创建可执行文件obsgrid.exe。</p>
</blockquote>
</li>
</ul>
<h3 id="观测资料准备"><a href="#观测资料准备" class="headerlink" title="观测资料准备"></a>观测资料准备</h3><ul>
<li>下载地面和高空观测资料</li>
</ul>
<blockquote>
<p>Upper-air data in <em>NMC ON29</em> format <em>(from early 1970s to early 2000) <a href="http://rda.ucar.edu/datasets/ds353.4/">http://rda.ucar.edu/datasets/ds353.4/</a></em><br>Surface data in <em>NMC ON29</em> format <em>(from early 1970s to early 2000) <a href="http://rda.ucar.edu/datasets/ds464.0/">http://rda.ucar.edu/datasets/ds464.0/</a></em><br>Upper-air data in NCEP BUFR format <em>(from 1999 to present) <a href="http://rda.ucar.edu/datasets/ds351.0/">http://rda.ucar.edu/datasets/ds351.0/</a></em><br>Surface data in NCEP BUFR format <em>(from 1999 to present)  <a href="http://rda.ucar.edu/datasets/ds461.0/">http://rda.ucar.edu/datasets/ds461.0/</a></em> </p>
</blockquote>
<p><strong>注意！！The newer data <em>(ds351.0 and ds461.0)</em> is also available in the little_r format. This data is sorted into 6-hourly windows, which are typically too large for use in OBSGRID. To reorder this into 3-hourly windows:</strong></p>
<ul>
<li><p>资料合并</p>
<blockquote>
<p>Combine (by using the Unix ‘cat’ command) all the surface and upper-air data into one large file called rda_obs.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash"><span class="built_in">cat</span> *2022* &gt; rda_obs</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash"><span class="built_in">ln</span> -s rda_obs <span class="variable">$OBSGRID</span></span></span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>Compile and run the Fortran program util&#x2F;get_rda_data</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ifort -FR get_rda_data.f -o get_rda_data.exe</span><br><span class="line">util/get_rda_data.exe  ## 可能需要等待较长时间</span><br></pre></td></tr></table></figure>

<p>$OBSGRID目录下生成<code>OBS:YYYY-MM-DD_HH</code>文件（逐3小时）</p>
</li>
</ul>
<h3 id="met-em-d0-模式文件准备"><a href="#met-em-d0-模式文件准备" class="headerlink" title="met_em.d0*模式文件准备"></a>met_em.d0*模式文件准备</h3><ul>
<li>准备<code>met_em.d0*</code>*模式文件。将<code>./metgrid.exe</code>步骤生成的<code>met_em.d0*</code>文件链接到$OBSGRID文件夹下 。</li>
</ul>
<h3 id="修改namelist-oa"><a href="#修改namelist-oa" class="headerlink" title="修改namelist.oa"></a>修改namelist.oa</h3><ul>
<li><p>修改<code>namelist.oa</code>文件</p>
<p>主要修改 <code>&amp;record1</code>的时间和时间间隔、<code>&amp;record2</code>的嵌套层数（<code>grid_id</code>）和文件名（<code>obs_filename</code>改为’OBS’）</p>
</li>
</ul>
<h3 id="运行obsgrid-exe"><a href="#运行obsgrid-exe" class="headerlink" title="运行obsgrid.exe"></a>运行obsgrid.exe</h3><ul>
<li><p>先后设置grid_id&#x3D;1，grid_id&#x3D;2，并执行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./obsgrid.exe</span><br></pre></td></tr></table></figure>

<p>即在namelist.oa中每更改一次grid_id（嵌套层数），就要运行一次.&#x2F;obsgrid.exe</p>
<p>生成<code>metoa_em.d0*</code>、<code>OBS_DOMIANxxx</code>、<code>wrfsfdda_d0*</code></p>
</li>
</ul>
<p><strong>注意！！首次运行<code>./obsgrid.exe</code>出现<code>forrtl: severe (174): SIGSEGV, segmentation fault occurred</code>报错</strong></p>
<p>解决方案：修改<code>$OBSGRID/src</code>下的<code>obs_sort_module.f</code>文件</p>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="keyword">IF</span>(<span class="built_in">ASSOCIATED</span> ( next )) <span class="keyword">THEN</span>  <span class="comment">!! added by Ruyan</span></span><br><span class="line">    <span class="keyword">IF</span>((.NOT. is_sounding) .AND. &amp;</span><br><span class="line">       (.NOT. eps_equal(next%meas%height%<span class="keyword">data</span>, obs(i)%info%elevation, <span class="number">1.</span>))) <span class="keyword">THEN</span></span><br><span class="line">     obs(i)%info%discard = .TRUE.</span><br><span class="line">     <span class="built_in">PRINT</span> <span class="string">&#x27;(A,A,A,A,F12.2,A,F12.2,A,A,A,A)&#x27;</span>,<span class="string">&#x27;WARNING: Ob indicates is_sounding=.FALSE. &#x27;</span>,&amp;</span><br><span class="line">      <span class="string">&#x27;but the ob height does &#x27;</span>,&amp;</span><br><span class="line">      <span class="string">&#x27;not match the station elevation.  This ob will be omitted since Obsgrid assumes &#x27;</span>,&amp;</span><br><span class="line">      <span class="string">&#x27;is_sounding=.FALSE. indicates a surface ob. Height = &#x27;</span>, next%meas%height%<span class="keyword">data</span>, &amp;</span><br><span class="line">      <span class="string">&#x27;, Elevation = &#x27;</span>, obs(i)%info%elevation,<span class="string">&#x27;, Ob ID = &#x27;</span>,<span class="built_in">TRIM</span>(<span class="built_in">ADJUSTL</span>(obs(i)%location%id)),&amp;</span><br><span class="line">      <span class="string">&#x27;, Ob Time = &#x27;</span>, obs(i)%valid_time%date_char </span><br><span class="line">    <span class="keyword">ENDIF</span></span><br><span class="line">    <span class="keyword">ENDIF</span>  <span class="comment">!! added by Ruyan</span></span><br><span class="line">    </span><br><span class="line">   <span class="comment">!!  解决方案参考：https://blog.csdn.net/FYSsuyi/article/details/131649148**</span></span><br></pre></td></tr></table></figure>

<h3 id="合并OBS-DOMAIN"><a href="#合并OBS-DOMAIN" class="headerlink" title="合并OBS_DOMAIN"></a>合并OBS_DOMAIN</h3><ul>
<li><p><code>OBS_DOMAIN1xx</code>和<code>OBS_DOMAIN2xx</code>分别存放d01和d02区域内单时次的观测数据</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">run_cat_obs_files.csh ###  将每个区域多个单时次文件合并成一个文件</span><br></pre></td></tr></table></figure></li>
</ul>
<p>​	得到 <code>OBS_DOMAINd01</code>、<code>OBS_DOMAINd02</code></p>
<p><strong>注意！！ 当一次性处理的时次过多时，出现OBS_DOMAIN101 &amp; 201文件日期不全的问题</strong></p>
<p>解决方法：进入<code>$OBSGRID/src/</code>，将原有的driver.F90文件备份为.bak文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> driver.F90 driver.F90.bak</span><br></pre></td></tr></table></figure>

<p>修改driver.F90文件中关于OBS_DOMAIN文件名的3处设置：</p>
<blockquote>
<ol>
<li>更改前：obs_nudge_file,’(“OBS_DOMAIN”,i1,i2.2)’</li>
<li>更改后：obs_nudge_file,’(“OBS_DOMAIN”,i1,i4.4)’</li>
</ol>
</blockquote>
<p>源文件使用Fortran 90编写，修改后意为写入4位的integer，空出的位数用0补齐。</p>
<p>重新编译<code>./compile</code>即可</p>
<p>参考：<a href="https://blog.csdn.net/weixin_62874374/article/details/138635534">https://blog.csdn.net/weixin_62874374/article/details/138635534</a></p>
<h3 id="try-1"><a href="#try-1" class="headerlink" title="try 1"></a>try 1</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&amp;fdda</span><br><span class="line">obs_nudge_opt  = 1,         1,         1  ! nudge部分开关（1代表打开，0代表关闭）</span><br><span class="line">max_obs        = 150000,    150000,   ! 同化的最大观测点数</span><br><span class="line">fdda_start     = 0.,        0.,                ! 开始同化时间</span><br><span class="line">fdda_end       = 99999.,    99999.,            ! 结束同化的时间</span><br><span class="line">obs_nudge_wind = 1,         1 ! 是否同化风速变量（1代表打开，0代表关闭）</span><br><span class="line">obs_coef_wind  = 6.E-4,     6.E-4,             ! 该变量nudge强度</span><br><span class="line">obs_nudge_temp = 1,         1 ! 是否同化温度（1代表打开，0代表关闭）</span><br><span class="line">obs_coef_temp  = 6.E-4,     6.E-4,             ! 该变量nudge强度</span><br><span class="line">obs_nudge_mois = 1,         1,                 ! 是否同化湿度（1代表打开，0代表关闭）</span><br><span class="line">obs_coef_mois  = 6.E-4,     6.E-4,             ! 该变量nudge强度</span><br><span class="line">obs_rinxy      = 240.,      240.        ! 水平影响半径km</span><br><span class="line">obs_rinsig     = 0.1,       ! 垂直影响半径</span><br><span class="line">obs_twindo     = 0.6666667, 0.6666667,         ! 时间权重函数h</span><br><span class="line">obs_npfi       = 10,        ! 观测点打印输出时间间隔（然而这个开关似乎对诊断输出没有任何影响）</span><br><span class="line">obs_ionf       = 2,         2,                 ! 计算是否需要读入观测数据的时间间隔（以粗网格时间步长为单位）</span><br><span class="line">obs_idynin     = 0,         ! 是否进行动态初始化模型运行（1 = yes, 0 = no）</span><br><span class="line">obs_dtramp     = 40.,       !动态初始化周期结束时的降阶周期长度min</span><br><span class="line">obs_prt_freq   = 10,        10,                ! 每隔10个打印一次以检查是否读入模式</span><br><span class="line">obs_prt_max    = 10 ! 最大打印数</span><br><span class="line">obs_ipf_errob  = .true. !</span><br><span class="line">obs_ipf_nudob  = .true. !</span><br><span class="line">obs_ipf_in4dob = .true. !</span><br><span class="line">obs_ipf_init   = .true. !（true代表开启打印，输入至相应诊断文件rsl.error或者rsl.output）</span><br></pre></td></tr></table></figure>





<h3 id="try-2"><a href="#try-2" class="headerlink" title="try 2"></a>try 2</h3>]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>WRF-OBS_nudging</title>
    <url>/2022/05/01/Tool/WRF-OBS_nudging/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="WRF-Observation-nudging"><a href="#WRF-Observation-nudging" class="headerlink" title="WRF Observation nudging"></a>WRF Observation nudging</h2><p>Observation nudging具体操作，官网教程网址：<a href="https://www2.mmm.ucar.edu/wrf/users/docs/How_to_run_obs_fdda.html">https://www2.mmm.ucar.edu/wrf/users/docs/How_to_run_obs_fdda.html</a></p>
<p>参考：<a href="https://blog.csdn.net/weixin_45372694/article/details/117482510">https://blog.csdn.net/weixin_45372694/article/details/117482510</a></p>
<h3 id="使用OBSGRID准备OBSDOMAIN"><a href="#使用OBSGRID准备OBSDOMAIN" class="headerlink" title="使用OBSGRID准备OBSDOMAIN"></a>使用OBSGRID准备OBSDOMAIN</h3><ul>
<li>在准备好OBSDOMAIN文件后，复制到WRF&#x2F;run目录下。</li>
</ul>
<h3 id="修改namelist-input"><a href="#修改namelist-input" class="headerlink" title="修改namelist .input"></a>修改namelist .input</h3>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&amp;fdda</span><br><span class="line">obs_nudge_opt = 1,1,1,0,0 nudge部分开关（1代表打开，0代表关闭）</span><br><span class="line">max_obs = 150000, 同化的最大观测点数</span><br><span class="line">fdda_start = 0., 0., 0., 0., 0. 开始同化时间</span><br><span class="line">fdda_end = 99999., 99999., 99999., 99999., 99999.结束同化的时间</span><br><span class="line">obs_nudge_wind = 1,1,1,1,1 是否同化风速变量（1代表打开，0代表关闭）</span><br><span class="line">obs_coef_wind = 6.E-4,6.E-4,6.E-4,6.E-4,6.E-4 该变量nudge强度</span><br><span class="line">obs_nudge_temp = 1,1,1,1,1是否同化温度（1代表打开，0代表关闭）</span><br><span class="line">obs_coef_temp = 6.E-4,6.E-4,6.E-4,6.E-4,6.E-4 该变量nudge强度</span><br><span class="line">obs_nudge_mois = 1,1,1,1,1是否同化湿度（1代表打开，0代表关闭）</span><br><span class="line">obs_coef_mois = 6.E-4,6.E-4,6.E-4,6.E-4,6.E-4 该变量nudge强度</span><br><span class="line">obs_rinxy = 240.,240.,180.,180,180 水平影响半径km</span><br><span class="line">obs_rinsig = 0.1,垂直影响半径</span><br><span class="line">obs_twindo = 0.6666667,0.6666667,0.6666667,0.6666667,0.6666667,时间权重函数h</span><br><span class="line">obs_npfi = 10,观测点打印输出时间间隔（然而这个开关似乎idui诊断输出没有任何影响）</span><br><span class="line">obs_ionf = 2, 2, 2, 2, 2,计算是否需要读入观测数据的时间间隔（以粗网格时间步长为单位）</span><br><span class="line">obs_idynin = 0,是否进行动态初始化模型运行（1=yes,0=no）</span><br><span class="line">obs_dtramp = 40.,动态初始化周期结束时的降阶周期长度min</span><br><span class="line">obs_prt_freq = 10, 10, 10, 10, 10,每隔10个打印一次以检查是否读入模式</span><br><span class="line">obs_prt_max = 10最大打印数</span><br><span class="line">obs_ipf_errob = .true.</span><br><span class="line">obs_ipf_nudob = .true.</span><br><span class="line">obs_ipf_in4dob = .true.</span><br><span class="line">obs_ipf_init = .true.（true代表开启打印，输入至相应诊断文件rsl.error或者rsl.output）</span><br><span class="line">此外，还需要在timecontrol部分加上以下：</span><br><span class="line">auxinput11_interval_s = 180, 180, 180, 180, 180,同化观测点间隔时间</span><br><span class="line">auxinput11_end_h = 6, 6, 6, 6, 6,同化结束时间</span><br><span class="line"></span><br><span class="line">更多参数，以及更详细的解释请查阅WRF官网的 Obs-Nudging Guide（https://www2.mmm.ucar.edu/wrf/users/docs/ObsNudgingGuide.pdf）</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th><strong>Name</strong></th>
<th><strong>Value</strong></th>
<th><strong>Description</strong></th>
</tr>
</thead>
<tbody><tr>
<td>在使用Observation Nudging之前，需要在namelist.input中&amp;time_control部分增加下列设置</td>
<td></td>
<td></td>
</tr>
<tr>
<td>&amp;time_control</td>
<td></td>
<td></td>
</tr>
<tr>
<td>auxinput11_interval_s</td>
<td>180</td>
<td>同化观测点的间隔时间，单位：s</td>
</tr>
<tr>
<td>auxinput11_end_h</td>
<td>6</td>
<td>同化结束时间，单位：h</td>
</tr>
<tr>
<td>&amp;fdda</td>
<td></td>
<td></td>
</tr>
<tr>
<td>obs_nudge_opt</td>
<td>1</td>
<td>是否进行Observation Nuging（0：关闭，1：进行）</td>
</tr>
<tr>
<td>max_obs</td>
<td>150000</td>
<td>max number of observations used on a domain during any given time window 同化最多的观测站点数</td>
</tr>
<tr>
<td>fdda_start</td>
<td>0</td>
<td>obs nudging start time in minutes 同化开始时间（分钟）</td>
</tr>
<tr>
<td>fdda_end</td>
<td>180</td>
<td>obs nudging end time in minutes 同化结束时间（分钟）</td>
</tr>
<tr>
<td>obs_nudge_wind</td>
<td>1</td>
<td>obs_nudge_X: whether to nudge X (&#x3D;0 off；&#x3D;1 on)obs_coef_X: nudging coefficient for X, unit: s-1obs_nudge_X: 是否同化X；obs_coef_X：同化强度</td>
</tr>
<tr>
<td>obs_coef_wind</td>
<td>6.E-4</td>
<td></td>
</tr>
<tr>
<td>obs_nudge_temp</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td>obs_coef_temp</td>
<td>6.E-4</td>
<td></td>
</tr>
<tr>
<td>obs_nudge_mois</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td>obs_coef_mois</td>
<td>6.E-4</td>
<td></td>
</tr>
<tr>
<td>obs_rinxy</td>
<td>240.</td>
<td>horizontal radius of influence in km 水平影响半径（km）</td>
</tr>
<tr>
<td>obs_rinsig</td>
<td>0.1</td>
<td>vertical radius of influence in eta 垂直影响半径（eta）</td>
</tr>
<tr>
<td>obs_twindo</td>
<td>0.6667</td>
<td>half-period time window over which an observation will be used for nudging; the unit is in hours</td>
</tr>
<tr>
<td>obs_npfi</td>
<td>10</td>
<td>freq in coarse grid timesteps for diag prints</td>
</tr>
<tr>
<td>obs_ionf</td>
<td>2</td>
<td>freq in coarse grid timesteps for obs input and err calc</td>
</tr>
<tr>
<td>obs_idynin</td>
<td>0</td>
<td>for dynamic initialization using a ramp-down function to gradually turn off the FDDA before the pure forecast (&#x3D;1 on)使用斜坡函数在数值预报之前逐渐关闭同化（&#x3D;1 开启）</td>
</tr>
<tr>
<td>obs_dtramp</td>
<td>40.</td>
<td>time period in minutes over which the nudging is ramped down from one to zero. 同化强度从1将至为0的时间段</td>
</tr>
<tr>
<td>obs_prt_freq</td>
<td>10</td>
<td>frequency in obs index for diagnostic printout</td>
</tr>
<tr>
<td>obs_prt_max</td>
<td>10</td>
<td>maximum allowed obs entries in diagnostic printout</td>
</tr>
<tr>
<td>obs_ipf_errob</td>
<td>.true.</td>
<td>.false. &#x3D; don’t print obs error diagnostics.true. &#x3D; print obs error diagnostics</td>
</tr>
<tr>
<td>obs_ipf_nudob</td>
<td>.true.</td>
<td>.false. &#x3D; don’t print obs nudge diagnostics.true. &#x3D; print obs nudge diagnostics</td>
</tr>
<tr>
<td>obs_ipf_in4dob</td>
<td>.true.</td>
<td>.false. &#x3D; don’t print obs input diagnostics.true. &#x3D; print obs input diagnostics</td>
</tr>
<tr>
<td>obs_no_pbl_nudge_uv</td>
<td>0</td>
<td>1&#x3D;no nudging within pbl0&#x3D;nudging within pbl1表示在大气边界层内关闭同化，0表示进行同化</td>
</tr>
<tr>
<td>obs_no_pbl_nudge_t</td>
<td></td>
<td></td>
</tr>
<tr>
<td>obs_no_pbl_nudge_q</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h3 id="运行real-exe-和-wrf-exe"><a href="#运行real-exe-和-wrf-exe" class="headerlink" title="运行real.exe 和 wrf.exe"></a>运行real.exe 和 wrf.exe</h3><ul>
<li>设置好了以后，.&#x2F;real.exe ，接着.&#x2F;wrf.exe。<br>.&#x2F;wrf.exe后运行日志文件rsl.error就会出现关于OBSnudging的部分：</li>
</ul>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>WRF-WZSZ</title>
    <url>/2022/05/01/Tool/WRF-WZSZ/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="WRF-run-command-line"><a href="#WRF-run-command-line" class="headerlink" title="WRF run command line"></a>WRF run command line</h2><h3 id="For-WZCS"><a href="#For-WZCS" class="headerlink" title="For  WZCS"></a>For  WZCS</h3><ul>
<li>编译WRF</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./configure <span class="comment"># 编译选项选择15</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./compile em_real |&amp; <span class="built_in">tee</span> make.log</span></span><br></pre></td></tr></table></figure>

<ul>
<li>提交作业</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">srun -p wzhctest -n 1 ./wrf.exe  <span class="comment"># 单节点提交作业</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sinfo</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">scontrol show node</span> </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">	Sockets=8 （8个CPU）  Boards=1  （1个主板）</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">CoresPerSocket=8 （1个CPU8个核）</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sbatch mpi_job.sh   <span class="comment"># 并行提交作业，记得同时修改namelist中quilt和nproc_x和nproc_y参数</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">squeue</span></span><br></pre></td></tr></table></figure>

<ul>
<li>查看运行情况</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">tail</span> -f rsl.out.0000</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">tail</span> -f rsl.error.0000</span></span><br></pre></td></tr></table></figure>

<ul>
<li>查看文件刷新情况</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">ls</span> -lart <span class="comment"># 按刷新时间倒序排列所有文件</span></span></span><br></pre></td></tr></table></figure>





<h3 id="For-SZCS"><a href="#For-SZCS" class="headerlink" title="For SZCS"></a>For SZCS</h3><ul>
<li>提交作业</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ssh2 <span class="comment"># 切换到计算节点</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">bsub submot.lsf</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">bjobs</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">bjobs –l XXXX</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">bkill xxxx</span></span><br></pre></td></tr></table></figure>



<h4 id="namelist-input"><a href="#namelist-input" class="headerlink" title="namelist.input"></a>namelist.input</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nocolons = .true.     # 作用是在输出文件名中用下划线“_”代替冒号“:”</span><br></pre></td></tr></table></figure>



<h4 id="namelist-wps"><a href="#namelist-wps" class="headerlink" title="namelist.wps"></a>namelist.wps</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!</span><br><span class="line">! </span><br><span class="line">! For grid setting: https://jiririchter.github.io/WRFDomainWizard/</span><br><span class="line">!</span><br><span class="line">!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!</span><br><span class="line"></span><br><span class="line">&amp;share</span><br><span class="line"> wrf_core = <span class="string">&#x27;ARW&#x27;</span>,</span><br><span class="line"> max_dom = <span class="number">1</span>,</span><br><span class="line"> start_date = <span class="string">&#x27;1991-05-01_00:00:00&#x27;</span>,<span class="string">&#x27;1991-05-01_00:00:00&#x27;</span>,</span><br><span class="line"> end_date   = <span class="string">&#x27;1991-08-31_18:00:00&#x27;</span>,<span class="string">&#x27;1991-08-31_18:00:00&#x27;</span>,</span><br><span class="line"> interval_seconds = <span class="number">21600</span>  ! 6h = <span class="number">21600</span> secs</span><br><span class="line"> io_form_geogrid = <span class="number">2</span>,  ! <span class="number">1</span>=<span class="built_in">int</span>, <span class="number">2</span>=nc, <span class="number">3</span>=gr1</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;geogrid</span><br><span class="line"> parent_id         =   <span class="number">1</span>,</span><br><span class="line"> parent_grid_ratio =   <span class="number">1</span>,</span><br><span class="line"> i_parent_start    =   <span class="number">1</span>,</span><br><span class="line"> j_parent_start    =   <span class="number">1</span>,</span><br><span class="line"> e_we              =  <span class="number">901</span>,   ! number of west-east grid points, should = n*parent_grid_ratio+<span class="number">1</span></span><br><span class="line"> e_sn              =  <span class="number">501</span>,   ! number of south-north grid points, should = n*parent_grid_ratio+<span class="number">1</span></span><br><span class="line"> !</span><br><span class="line"> !!!!!!!!!!!!!!!!!!!!!!!!!!!! IMPORTANT NOTE !!!!!!!!!!!!!!!!!!!!!!!!!!!!</span><br><span class="line"> ! The default datasets used to produce the MAXSNOALB <span class="keyword">and</span> ALBEDO12M</span><br><span class="line"> ! fields have changed <span class="keyword">in</span> WPS v4<span class="number">.0</span>. These fields are now interpolated</span><br><span class="line"> ! <span class="keyword">from</span> MODIS-based datasets.</span><br><span class="line"> !</span><br><span class="line"> ! To match the output given by the default namelist.wps <span class="keyword">in</span> WPS v3<span class="number">.9</span><span class="number">.1</span>,</span><br><span class="line"> ! the following setting <span class="keyword">for</span> geog_data_res may be used:</span><br><span class="line"> !</span><br><span class="line"> ! geog_data_res = <span class="string">&#x27;maxsnowalb_ncep+albedo_ncep+default&#x27;</span>, <span class="string">&#x27;maxsnowalb_ncep+albedo_ncep+default&#x27;</span>,</span><br><span class="line"> !</span><br><span class="line"> !!!!!!!!!!!!!!!!!!!!!!!!!!!! IMPORTANT NOTE !!!!!!!!!!!!!!!!!!!!!!!!!!!!</span><br><span class="line"> !</span><br><span class="line"> geog_data_res = <span class="string">&#x27;modis_lakes&#x27;</span>, ! accoring to NOAA rap, download <span class="keyword">from</span> https://www2.mmm.ucar.edu/wrf/users/download/get_sources_wps_geog_V3.html</span><br><span class="line"> dx = <span class="number">0.121833</span>,    ! accoring to NOAA rap</span><br><span class="line"> dy = <span class="number">0.121833</span>,    ! accoring to NOAA rap</span><br><span class="line"> map_proj  = <span class="string">&#x27;lat-lon&#x27;</span>,</span><br><span class="line"> pole_lat  =  <span class="number">60</span>,    ! <span class="number">90.0</span> - ref_lat</span><br><span class="line"> pole_lon  = <span class="number">180</span>,</span><br><span class="line"> stand_lon = -<span class="number">130</span>,   !-reflon</span><br><span class="line"> ref_lat   =  <span class="number">30</span>,    ! the lat of the center-point of the coarse domain</span><br><span class="line"> ref_lon   = <span class="number">130</span>,    ! the lon of the center-point of the coarse domain</span><br><span class="line"> geog_data_path = <span class="string">&#x27;/home_gkx/users/nsgkx_zx2/DATA/For_WRF/WPS/geogrid&#x27;</span></span><br><span class="line">/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;ungrib</span><br><span class="line"> out_format = <span class="string">&#x27;WPS&#x27;</span>,</span><br><span class="line"> prefix = <span class="string">&#x27;FILE&#x27;</span>,</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;metgrid</span><br><span class="line"> fg_name = <span class="string">&#x27;./nc2wrf/FILE/FILE&#x27;</span>,</span><br><span class="line"> io_form_metgrid = <span class="number">2</span>,</span><br><span class="line"> opt_output_from_metgrid_path = <span class="string">&#x27;/home_gkx/users/nsgkx_zx2/DATA/For_WRF/WPS/metgrid/CMIP6_BC/hist/EA&#x27;</span>,</span><br><span class="line">/</span><br></pre></td></tr></table></figure>



<h4 id="MPI"><a href="#MPI" class="headerlink" title="MPI"></a>MPI</h4><p>最大核数：X 方向格点数&#x2F;15 (25) *  Y 方向格点数&#x2F;15 (25)</p>
<h4 id="减少输出变量"><a href="#减少输出变量" class="headerlink" title="减少输出变量"></a>减少输出变量</h4><p><a href="https://cloud.tencent.com/developer/article/2297188">https://cloud.tencent.com/developer/article/2297188</a>   </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&amp;time_control </span><br><span class="line">iofields_filename          = &quot;my_file_d01.txt&quot;, </span><br><span class="line">ignore_iofields_warning    = .true.,</span><br></pre></td></tr></table></figure>



<ul>
<li>在<code>my_file_d01.txt</code>文件中，可以指明需要删除的变量有哪些，具体内容如下：</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">-:h:<span class="number">0</span>:GLW,HGT,SEAICE,SNOWH,SWDOWN</span><br><span class="line">-:h:<span class="number">0</span>:LU_INDEX,ZNU,ZNW,ZS,DZS,VAR_SSO,THM,HFX_FORCE,LH_FORCE</span><br><span class="line">-:h:<span class="number">0</span>:TSK_FORCE,HFX_FORCE_TEND,LH_FORCE_TEND,TSK_FORCE_TEND,MU,MUB,NEST_POS</span><br><span class="line">-:h:<span class="number">0</span>:FNM,FNP,RDNW,RDN,DNW,DN,CFN,CFN1,THIS_IS_AN_IDEAL_RUN</span><br><span class="line">-:h:<span class="number">0</span>:P_HYD,Q2,TH2,RDX,RDY,AREA2D,DX2D,RESM,ZETATOP,CF1,CF2,CF3,ITIMESTEP,XTIME</span><br><span class="line">-:h:<span class="number">0</span>:QCLOUD,QRAIN,QICE,QSNOW,QGRAUP,QNWFA2D,QNIFA2D,QNICE</span><br><span class="line">-:h:<span class="number">0</span>:QNRAIN,QNCLOUD,QNWFA,QNIFA,SHDMAX,SHDMIN,SNOALB,TSLB,SMOIS</span><br><span class="line">-:h:<span class="number">0</span>:SH2O,XICEM,SFROFF,UDROFF,IVGTYP,ISLTYP,VEGFRA,GRDFLX</span><br><span class="line">-:h:<span class="number">0</span>:ACGRDFLX,ACRUNOFF,ACSNOM,SNOW,CANWAT,COSZEN,RHOSNF</span><br><span class="line">-:h:<span class="number">0</span>:SNOWFALLAC,LAI,QKE,NUPDRAFT,KTOP_PLUME,MAXMF,DTAUX3D,DTAUY3D,DUSFCG</span><br><span class="line">-:h:<span class="number">0</span>:DVSFCG,VAR,CON,OA1,OA2,OA3,OA4,OL1,OL2,OL3,OL4</span><br><span class="line">-:h:<span class="number">0</span>:TKE_PBL,EL_PBL,MAPFAC_MX,MAPFAC_MY,MAPFAC_UX</span><br><span class="line">-:h:<span class="number">0</span>:MAPFAC_UY,MAPFAC_VX,MF_VX_INV,MAPFAC_VY,SINALPHA,COSALPHA,HGT</span><br><span class="line">-:h:<span class="number">0</span>:P_TOP,T00,P00,TLP,TISO,TLP_STRAT,P_STRAT,MAX_MSTFX,MAX_MSTFY</span><br><span class="line">-:h:<span class="number">0</span>:RAINSH,SNOWNC,GRAUPELNC,HAILNC,CLDFRA,SWNORM</span><br><span class="line">-:h:<span class="number">0</span>:TAOD5502D,ACSWUPT,ACSWUPTC,ACSWDNT,ACSWDNTC,ACSWUPB,ACSWUPBC,ACSWDNB</span><br><span class="line">-:h:<span class="number">0</span>:ACSWDNBC,ACLWUPT,ACLWUPTC,ACLWDNT,ACLWDNTC,ACLWUPB,ACLWUPBC,ACLWDNB</span><br><span class="line">-:h:<span class="number">0</span>:ACLWDNBC,SWUPT,SWUPTC,SWDNT,SWDNTC,SWUPB,SWUPBC,SWDNB,SWDNBC,LWUPT</span><br><span class="line">-:h:<span class="number">0</span>:LWUPTC,LWDNT,LWDNTC,LWUPB,LWUPBC,LWDNB,LWDNBC,OLR,XLAT_U,XLONG_U,XLAT_V</span><br><span class="line">-:h:<span class="number">0</span>:XLONG_V,ALBEDO,CLAT,ALBBCK,EMISS,NOAHRES,TMN,XLAND,UST,PBLH,HFX,QFX</span><br><span class="line">-:h:<span class="number">0</span>:LH,ACHFX,ACLHF,SOILT1,SNOWC,SR,SAVE_TOPO_FROM_REAL,ISEEDARR_SPPT,ISEEDARR_SKEBS</span><br><span class="line">-:h:<span class="number">0</span>:ISEEDARR_RAND_PERTURB,ISEEDARRAY_SPP_CONV,ISEEDARRAY_SPP_PBL,ISEEDARRAY_SPP_LSM</span><br><span class="line">-:h:<span class="number">0</span>:C1H,C2H,C1F,C2F,C3H,C4H,C3F,C4F,PCB,PC,LANDMASK,LAKEMASK</span><br></pre></td></tr></table></figure>



<ul>
<li>原始所有输出变量如下：</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;Times&#x27;</span>, <span class="string">&#x27;XLAT&#x27;</span>, <span class="string">&#x27;XLONG&#x27;</span>, <span class="string">&#x27;LU_INDEX&#x27;</span>, <span class="string">&#x27;ZNU&#x27;</span>, <span class="string">&#x27;ZNW&#x27;</span>, <span class="string">&#x27;ZS&#x27;</span>, <span class="string">&#x27;DZS&#x27;</span>, <span class="string">&#x27;VAR_SSO&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;U&#x27;</span>, <span class="string">&#x27;V&#x27;</span>, <span class="string">&#x27;W&#x27;</span>, <span class="string">&#x27;PH&#x27;</span>, <span class="string">&#x27;PHB&#x27;</span>, <span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27;THM&#x27;</span>, <span class="string">&#x27;HFX_FORCE&#x27;</span>, <span class="string">&#x27;LH_FORCE&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;TSK_FORCE&#x27;</span>, <span class="string">&#x27;HFX_FORCE_TEND&#x27;</span>, <span class="string">&#x27;LH_FORCE_TEND&#x27;</span>, <span class="string">&#x27;TSK_FORCE_TEND&#x27;</span>, <span class="string">&#x27;MU&#x27;</span>, <span class="string">&#x27;MUB&#x27;</span>, <span class="string">&#x27;NEST_POS&#x27;</span>, <span class="string">&#x27;P&#x27;</span>, <span class="string">&#x27;PB&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;FNM&#x27;</span>, <span class="string">&#x27;FNP&#x27;</span>, <span class="string">&#x27;RDNW&#x27;</span>, <span class="string">&#x27;RDN&#x27;</span>, <span class="string">&#x27;DNW&#x27;</span>, <span class="string">&#x27;DN&#x27;</span>, <span class="string">&#x27;CFN&#x27;</span>, <span class="string">&#x27;CFN1&#x27;</span>, <span class="string">&#x27;THIS_IS_AN_IDEAL_RUN&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;P_HYD&#x27;</span>, <span class="string">&#x27;Q2&#x27;</span>, <span class="string">&#x27;T2&#x27;</span>, <span class="string">&#x27;TH2&#x27;</span>, <span class="string">&#x27;PSFC&#x27;</span>, <span class="string">&#x27;U10&#x27;</span>, <span class="string">&#x27;V10&#x27;</span>, <span class="string">&#x27;RDX&#x27;</span>, <span class="string">&#x27;RDY&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;AREA2D&#x27;</span>, <span class="string">&#x27;DX2D&#x27;</span>, <span class="string">&#x27;RESM&#x27;</span>, <span class="string">&#x27;ZETATOP&#x27;</span>, <span class="string">&#x27;CF1&#x27;</span>, <span class="string">&#x27;CF2&#x27;</span>, <span class="string">&#x27;CF3&#x27;</span>, <span class="string">&#x27;ITIMESTEP&#x27;</span>, <span class="string">&#x27;XTIME&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;QVAPOR&#x27;</span>, <span class="string">&#x27;QCLOUD&#x27;</span>, <span class="string">&#x27;QRAIN&#x27;</span>, <span class="string">&#x27;QICE&#x27;</span>, <span class="string">&#x27;QSNOW&#x27;</span>, <span class="string">&#x27;QGRAUP&#x27;</span>, <span class="string">&#x27;QNWFA2D&#x27;</span>, <span class="string">&#x27;QNIFA2D&#x27;</span>, <span class="string">&#x27;QNICE&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;QNRAIN&#x27;</span>, <span class="string">&#x27;QNCLOUD&#x27;</span>, <span class="string">&#x27;QNWFA&#x27;</span>, <span class="string">&#x27;QNIFA&#x27;</span>, <span class="string">&#x27;SHDMAX&#x27;</span>, <span class="string">&#x27;SHDMIN&#x27;</span>, <span class="string">&#x27;SNOALB&#x27;</span>, <span class="string">&#x27;TSLB&#x27;</span>, <span class="string">&#x27;SMOIS&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;SH2O&#x27;</span>, <span class="string">&#x27;SEAICE&#x27;</span>, <span class="string">&#x27;XICEM&#x27;</span>, <span class="string">&#x27;SFROFF&#x27;</span>, <span class="string">&#x27;UDROFF&#x27;</span>, <span class="string">&#x27;IVGTYP&#x27;</span>, <span class="string">&#x27;ISLTYP&#x27;</span>, <span class="string">&#x27;VEGFRA&#x27;</span>, <span class="string">&#x27;GRDFLX&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;ACGRDFLX&#x27;</span>, <span class="string">&#x27;ACRUNOFF&#x27;</span>, <span class="string">&#x27;ACSNOM&#x27;</span>, <span class="string">&#x27;SNOW&#x27;</span>, <span class="string">&#x27;SNOWH&#x27;</span>, <span class="string">&#x27;CANWAT&#x27;</span>, <span class="string">&#x27;SSTSK&#x27;</span>, <span class="string">&#x27;COSZEN&#x27;</span>, <span class="string">&#x27;RHOSNF&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;SNOWFALLAC&#x27;</span>, <span class="string">&#x27;LAI&#x27;</span>, <span class="string">&#x27;QKE&#x27;</span>, <span class="string">&#x27;NUPDRAFT&#x27;</span>, <span class="string">&#x27;KTOP_PLUME&#x27;</span>, <span class="string">&#x27;MAXMF&#x27;</span>, <span class="string">&#x27;DTAUX3D&#x27;</span>, <span class="string">&#x27;DTAUY3D&#x27;</span>, <span class="string">&#x27;DUSFCG&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;DVSFCG&#x27;</span>, <span class="string">&#x27;VAR&#x27;</span>, <span class="string">&#x27;CON&#x27;</span>, <span class="string">&#x27;OA1&#x27;</span>, <span class="string">&#x27;OA2&#x27;</span>, <span class="string">&#x27;OA3&#x27;</span>, <span class="string">&#x27;OA4&#x27;</span>, <span class="string">&#x27;OL1&#x27;</span>, <span class="string">&#x27;OL2&#x27;</span>, <span class="string">&#x27;OL3&#x27;</span>, <span class="string">&#x27;OL4&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;TKE_PBL&#x27;</span>, <span class="string">&#x27;EL_PBL&#x27;</span>, <span class="string">&#x27;MAPFAC_M&#x27;</span>, <span class="string">&#x27;MAPFAC_U&#x27;</span>, <span class="string">&#x27;MAPFAC_V&#x27;</span>, <span class="string">&#x27;MAPFAC_MX&#x27;</span>, <span class="string">&#x27;MAPFAC_MY&#x27;</span>, <span class="string">&#x27;MAPFAC_UX&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;MAPFAC_UY&#x27;</span>, <span class="string">&#x27;MAPFAC_VX&#x27;</span>, <span class="string">&#x27;MF_VX_INV&#x27;</span>, <span class="string">&#x27;MAPFAC_VY&#x27;</span>, <span class="string">&#x27;F&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;SINALPHA&#x27;</span>, <span class="string">&#x27;COSALPHA&#x27;</span>, <span class="string">&#x27;HGT&#x27;</span>, <span class="string">&#x27;TSK&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;P_TOP&#x27;</span>, <span class="string">&#x27;T00&#x27;</span>, <span class="string">&#x27;P00&#x27;</span>, <span class="string">&#x27;TLP&#x27;</span>, <span class="string">&#x27;TISO&#x27;</span>, <span class="string">&#x27;TLP_STRAT&#x27;</span>, <span class="string">&#x27;P_STRAT&#x27;</span>, <span class="string">&#x27;MAX_MSTFX&#x27;</span>, <span class="string">&#x27;MAX_MSTFY&#x27;</span>, <span class="string">&#x27;RAINC&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;RAINSH&#x27;</span>, <span class="string">&#x27;RAINNC&#x27;</span>, <span class="string">&#x27;SNOWNC&#x27;</span>, <span class="string">&#x27;GRAUPELNC&#x27;</span>, <span class="string">&#x27;HAILNC&#x27;</span>, <span class="string">&#x27;CLDFRA&#x27;</span>, <span class="string">&#x27;SWDOWN&#x27;</span>, <span class="string">&#x27;GLW&#x27;</span>, <span class="string">&#x27;SWNORM&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;TAOD5502D&#x27;</span>, <span class="string">&#x27;ACSWUPT&#x27;</span>, <span class="string">&#x27;ACSWUPTC&#x27;</span>, <span class="string">&#x27;ACSWDNT&#x27;</span>, <span class="string">&#x27;ACSWDNTC&#x27;</span>, <span class="string">&#x27;ACSWUPB&#x27;</span>, <span class="string">&#x27;ACSWUPBC&#x27;</span>, <span class="string">&#x27;ACSWDNB&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;ACSWDNBC&#x27;</span>, <span class="string">&#x27;ACLWUPT&#x27;</span>, <span class="string">&#x27;ACLWUPTC&#x27;</span>, <span class="string">&#x27;ACLWDNT&#x27;</span>, <span class="string">&#x27;ACLWDNTC&#x27;</span>, <span class="string">&#x27;ACLWUPB&#x27;</span>, <span class="string">&#x27;ACLWUPBC&#x27;</span>, <span class="string">&#x27;ACLWDNB&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;ACLWDNBC&#x27;</span>, <span class="string">&#x27;SWUPT&#x27;</span>, <span class="string">&#x27;SWUPTC&#x27;</span>, <span class="string">&#x27;SWDNT&#x27;</span>, <span class="string">&#x27;SWDNTC&#x27;</span>, <span class="string">&#x27;SWUPB&#x27;</span>, <span class="string">&#x27;SWUPBC&#x27;</span>, <span class="string">&#x27;SWDNB&#x27;</span>, <span class="string">&#x27;SWDNBC&#x27;</span>, <span class="string">&#x27;LWUPT&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;LWUPTC&#x27;</span>, <span class="string">&#x27;LWDNT&#x27;</span>, <span class="string">&#x27;LWDNTC&#x27;</span>, <span class="string">&#x27;LWUPB&#x27;</span>, <span class="string">&#x27;LWUPBC&#x27;</span>, <span class="string">&#x27;LWDNB&#x27;</span>, <span class="string">&#x27;LWDNBC&#x27;</span>, <span class="string">&#x27;OLR&#x27;</span>, <span class="string">&#x27;XLAT_U&#x27;</span>, <span class="string">&#x27;XLONG_U&#x27;</span>, <span class="string">&#x27;XLAT_V&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;XLONG_V&#x27;</span>, <span class="string">&#x27;ALBEDO&#x27;</span>, <span class="string">&#x27;CLAT&#x27;</span>, <span class="string">&#x27;ALBBCK&#x27;</span>, <span class="string">&#x27;EMISS&#x27;</span>, <span class="string">&#x27;NOAHRES&#x27;</span>, <span class="string">&#x27;TMN&#x27;</span>, <span class="string">&#x27;XLAND&#x27;</span>, <span class="string">&#x27;UST&#x27;</span>, <span class="string">&#x27;PBLH&#x27;</span>, <span class="string">&#x27;HFX&#x27;</span>, <span class="string">&#x27;QFX&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;LH&#x27;</span>, <span class="string">&#x27;ACHFX&#x27;</span>, <span class="string">&#x27;ACLHF&#x27;</span>, <span class="string">&#x27;SOILT1&#x27;</span>, <span class="string">&#x27;SNOWC&#x27;</span>, <span class="string">&#x27;SR&#x27;</span>, <span class="string">&#x27;SAVE_TOPO_FROM_REAL&#x27;</span>, <span class="string">&#x27;ISEEDARR_SPPT&#x27;</span>, <span class="string">&#x27;ISEEDARR_SKEBS&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;ISEEDARR_RAND_PERTURB&#x27;</span>, <span class="string">&#x27;ISEEDARRAY_SPP_CONV&#x27;</span>, <span class="string">&#x27;ISEEDARRAY_SPP_PBL&#x27;</span>, <span class="string">&#x27;ISEEDARRAY_SPP_LSM&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;C1H&#x27;</span>, <span class="string">&#x27;C2H&#x27;</span>, <span class="string">&#x27;C1F&#x27;</span>, <span class="string">&#x27;C2F&#x27;</span>, <span class="string">&#x27;C3H&#x27;</span>, <span class="string">&#x27;C4H&#x27;</span>, <span class="string">&#x27;C3F&#x27;</span>, <span class="string">&#x27;C4F&#x27;</span>, <span class="string">&#x27;PCB&#x27;</span>, <span class="string">&#x27;PC&#x27;</span>, <span class="string">&#x27;LANDMASK&#x27;</span>, <span class="string">&#x27;LAKEMASK&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;SST&#x27;</span>, <span class="string">&#x27;SST_INPUT&#x27;</span></span><br></pre></td></tr></table></figure>



<h4 id="查看进程状态"><a href="#查看进程状态" class="headerlink" title="查看进程状态"></a>查看进程状态</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pidstat -hurd  -C real.exe 1 150 &gt;&amp; real.pidstat &amp;</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"> -C real.exe 仅查看real.exe</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"> 1 150  每秒更新一次，更新150次</span></span><br></pre></td></tr></table></figure>



<h4 id="变海温设置"><a href="#变海温设置" class="headerlink" title="变海温设置"></a>变海温设置</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&amp;time_control</span><br><span class="line">auxinput4_inname = <span class="string">&quot;wrflowinp_d&lt;domain&gt;&quot;</span>,</span><br><span class="line">auxinput4_interval = <span class="number">360</span>,</span><br><span class="line">io_form_auxinput4 = <span class="number">2</span>,</span><br><span class="line"></span><br><span class="line">&amp;physics</span><br><span class="line">sst_update = <span class="number">1</span>,</span><br></pre></td></tr></table></figure>



<h4 id="Nudging-设置"><a href="#Nudging-设置" class="headerlink" title="Nudging 设置"></a>Nudging 设置</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&amp;fdda</span><br><span class="line">grid_fdda = 2, 0, 0,</span><br><span class="line">gfdda_inname = &quot;wrffdda_d&lt;domain&gt;&quot;,</span><br><span class="line">gfdda_end_h = 9999, 9999, 9999,</span><br><span class="line">gfdda_interval_m = 360,</span><br><span class="line">fgdt = 0, 0, 0,</span><br><span class="line">if_no_pbl_nudging_uv = 1, 1, 1,</span><br><span class="line">if_no_pbl_nudging_t = 1, 1, 1,</span><br><span class="line">if_no_pbl_nudging_q = 1, 1, 1,</span><br><span class="line">if_zfac_uv = 1, 1, 1,</span><br><span class="line">k_zfac_uv = 10, 10, 10,</span><br><span class="line">if_zfac_t = 0, 0, 0,</span><br><span class="line">k_zfac_t = 10, 10, 10,</span><br><span class="line">if_zfac_q = 0, 0, 0,</span><br><span class="line">k_zfac_q = 10, 10, 10,</span><br><span class="line">guv = 0.0003, 0.0003, 0.0003,</span><br><span class="line">gt = 0.0003, 0.0003, 0.0003,</span><br><span class="line">gq = 0.0000, 0.0000, 0.0000,</span><br><span class="line">xwavenum = 3,</span><br><span class="line">ywavenum = 3,</span><br><span class="line">if_ramping = 0,</span><br><span class="line">dtramp_min = 60.0,</span><br><span class="line">io_form_gfdda = 2,</span><br><span class="line">/</span><br></pre></td></tr></table></figure>



<h4 id="Namelist-ref-rap"><a href="#Namelist-ref-rap" class="headerlink" title="Namelist (ref rap)"></a>Namelist (ref rap)</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"> &amp;time_control</span><br><span class="line"> run_days                            = <span class="number">0</span>,</span><br><span class="line"> run_hours                           = <span class="number">0</span>,</span><br><span class="line"> run_minutes                         = <span class="number">0</span>,</span><br><span class="line"> run_seconds                         = <span class="number">0</span>,</span><br><span class="line"> start_year                          = <span class="number">1981</span>,</span><br><span class="line"> start_month                         = 07,</span><br><span class="line"> start_day                           = <span class="number">23</span>,</span><br><span class="line"> start_hour                          = <span class="number">00</span>,</span><br><span class="line"> end_year                            = <span class="number">1981</span>,</span><br><span class="line"> end_month                           = 08,</span><br><span class="line"> end_day                             = 07,</span><br><span class="line"> end_hour                            = <span class="number">00</span>,</span><br><span class="line"> interval_seconds                    = <span class="number">21600</span>,    ! need change according to WPS</span><br><span class="line"> input_from_file                     = .false.,</span><br><span class="line"> history_interval                    = <span class="number">360</span>, ! units: minutes</span><br><span class="line"> frames_per_outfile                  = <span class="number">1</span>,</span><br><span class="line"> restart            = .true.,</span><br><span class="line"> restart_interval   = <span class="number">7200</span>,                      ! units: minutes</span><br><span class="line"> override_restart_timers = .true.,</span><br><span class="line"> write_hist_at_0h_rst = .true.,</span><br><span class="line"> WRITE_INPUT                         = .false.,</span><br><span class="line"> io_form_history                     = <span class="number">2</span> </span><br><span class="line"> io_form_restart                     = <span class="number">2</span></span><br><span class="line"> io_form_input                       = <span class="number">2</span></span><br><span class="line"> io_form_boundary                    = <span class="number">2</span></span><br><span class="line"> debug_level                         = <span class="number">0</span></span><br><span class="line"> ncd_nofill                          = .true. ! If <span class="built_in">set</span> to .true., it could potentially improve IO speed.</span><br><span class="line"> force_use_old_data                  = .true. </span><br><span class="line"> auxinput4_inname                    = <span class="string">&quot;wrflowinp_d&lt;domain&gt;&quot;</span>,</span><br><span class="line"> auxinput4_interval                  = <span class="number">360</span>,</span><br><span class="line"> io_form_auxinput4                   = <span class="number">2</span>,</span><br><span class="line"> iofields_filename                   = <span class="string">&quot;my_file_d01.txt&quot;</span>, </span><br><span class="line"> ignore_iofields_warning             = .true.,</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> &amp;domains</span><br><span class="line"> time_step                           = <span class="number">60</span>, ! Make sure time_step <span class="keyword">is</span> <span class="built_in">set</span> to comply <span class="keyword">with</span> the fine-grid domain (typically <span class="number">6</span>*DX)</span><br><span class="line"> time_step_dfi                       = <span class="number">40</span>, ! If planning to use a different time step <span class="keyword">for</span> DFI, it can be <span class="built_in">set</span> <span class="keyword">with</span> the time_step_dfi option.</span><br><span class="line"> max_dom                             = <span class="number">1</span>,</span><br><span class="line"> s_we                                = <span class="number">1</span>,</span><br><span class="line"> e_we                                = <span class="number">901</span>,  ! according to WPS</span><br><span class="line"> s_sn                                = <span class="number">1</span>,</span><br><span class="line"> e_sn                                = <span class="number">501</span>,  ! according to WPS</span><br><span class="line"> s_vert                              = <span class="number">1</span>,</span><br><span class="line"> e_vert                              = <span class="number">33</span>,</span><br><span class="line"> num_metgrid_levels                  = <span class="number">27</span>,    ! need change according to ncdump met*.nc</span><br><span class="line"> num_metgrid_soil_levels             = <span class="number">4</span>,</span><br><span class="line"> dx                                  = <span class="number">13545.087</span>, </span><br><span class="line"> dy                                  = <span class="number">13545.087</span>, </span><br><span class="line"> grid_id                             = <span class="number">1</span>,    </span><br><span class="line"> parent_id                           = <span class="number">1</span>,     </span><br><span class="line"> i_parent_start                      = <span class="number">0</span>,    </span><br><span class="line"> j_parent_start                      = <span class="number">0</span>,    </span><br><span class="line"> parent_grid_ratio                   = <span class="number">1</span>,     </span><br><span class="line"> parent_time_step_ratio              = <span class="number">1</span>,    </span><br><span class="line"> feedback                            = <span class="number">0</span>, ! this <span class="keyword">is</span> the key setup to define a two-way nested (<span class="keyword">or</span> one-way nested) run. </span><br><span class="line"> smooth_option                       = <span class="number">0</span>  ! a smoothing option <span class="keyword">for</span> the parent domain <span class="keyword">in</span> the area of the nest <span class="keyword">if</span> feedback <span class="keyword">is</span> on</span><br><span class="line"> p_top_requested                     = <span class="number">5000</span></span><br><span class="line"> interp_type                         = <span class="number">1</span>  ! vertical interpolation that <span class="keyword">is</span> linear <span class="keyword">in</span> pressure</span><br><span class="line"> lagrange_order                      = <span class="number">1</span>  ! linear vertical interpolation order</span><br><span class="line"> nproc_x                             = <span class="number">16</span> ! number of processors <span class="keyword">in</span> x <span class="keyword">and</span> y <span class="keyword">for</span> decomposition</span><br><span class="line"> nproc_y                             = <span class="number">14</span> ! number of processors <span class="keyword">in</span> x <span class="keyword">and</span> y <span class="keyword">for</span> decomposition</span><br><span class="line"> numtiles                            = <span class="number">2</span> ! number of tiles per patch</span><br><span class="line"> /</span><br><span class="line"></span><br><span class="line"> &amp;physics</span><br><span class="line"> mp_physics                          = <span class="number">28</span>,  ! aerosol-aware Thompson scheme <span class="keyword">with</span> water- <span class="keyword">and</span> ice-friendly aerosol climatology</span><br><span class="line"> ra_lw_physics                       = <span class="number">4</span>,   ! rrtmg scheme</span><br><span class="line"> ra_sw_physics                       = <span class="number">4</span>,   ! rrtmg scheme</span><br><span class="line"> radt                                = <span class="number">20</span>,  ! minutes between radiation physics calls. Recommended <span class="number">1</span> minute per km of dx (e.g. <span class="number">10</span> <span class="keyword">for</span> <span class="number">10</span> km grid)</span><br><span class="line"> swint_opt                           = <span class="number">1</span>,   ! Turn on interpolation of shortwave radiation based on the updated solar zenith angle between radiation calls</span><br><span class="line"> CO2TF                               = <span class="number">1</span>,   ! CO2 transmission function flag <span class="keyword">for</span> GFDL radiation only, which allows generation of CO2 function internally</span><br><span class="line"> sf_sfclay_physics                   = <span class="number">5</span>,   ! MYNN</span><br><span class="line"> sf_surface_physics                  = <span class="number">3</span>,   ! RUC land-surface model</span><br><span class="line"> bl_pbl_physics                      = <span class="number">5</span>,   ! MYNN <span class="number">2.5</span> level TKE; must use sf_sfclay_physics=<span class="number">1</span>, <span class="number">2</span>, <span class="keyword">or</span> <span class="number">5</span></span><br><span class="line"> bl_mynn_tkebudget                   = <span class="number">0</span>,   </span><br><span class="line"> bl_mynn_tkeadvect                   = .false.,</span><br><span class="line"> bl_mynn_edmf_tke                    = <span class="number">0</span>,</span><br><span class="line"> cu_physics                          = <span class="number">3</span>,   ! Grell-Freitas ensemble scheme</span><br><span class="line"> cu_diag                             = <span class="number">1</span>,   ! Compute time-averaged time-step surface rainfall, cloud water/ice <span class="keyword">from</span> cu_physics = <span class="number">3</span>, <span class="number">5</span>, <span class="keyword">and</span> <span class="number">93</span> (<span class="keyword">for</span> WRF chemistry use)</span><br><span class="line"> convtrans_avglen_m                  = <span class="number">20</span>,  ! averaging time <span class="keyword">for</span> convective transport output variables (<span class="keyword">in</span> minutes; only use <span class="keyword">with</span> cu_physics=<span class="number">3</span>,<span class="number">5</span> <span class="keyword">and</span> <span class="number">93</span>)</span><br><span class="line"> ishallow                            = <span class="number">0</span>,   ! turn off shallow covection</span><br><span class="line"> shcu_physics                        = <span class="number">0</span>,   ! no independent shallow cumulus</span><br><span class="line"> cudt                                = <span class="number">0</span>,   </span><br><span class="line"> isfflx                              = <span class="number">1</span>,   ! heat <span class="keyword">and</span> moisture fluxes <span class="keyword">from</span> the surface <span class="keyword">for</span> real-data cases when a PBL <span class="keyword">is</span> used; only works <span class="keyword">with</span> sf_sfclay_physics=<span class="number">1</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="keyword">or</span> <span class="number">11</span> </span><br><span class="line"> icloud_bl                           = <span class="number">1</span>,   ! option to couple subgrid-scale clouds <span class="keyword">from</span> MYNN to radiation</span><br><span class="line"> surface_input_source                = <span class="number">1</span>,   ! WPS/geogrid, but <span class="keyword">with</span> dominant categories recomputed <span class="keyword">in</span> real</span><br><span class="line"> num_soil_layers                     = <span class="number">9</span>,   ! number of soil layers <span class="keyword">in</span> land surface model (<span class="built_in">set</span> before running real.exe)</span><br><span class="line"> sf_urban_physics                    = <span class="number">0</span>,   ! off  urban canopy model</span><br><span class="line"> mp_zero_out                         = <span class="number">2</span>,   ! Qv30 <span class="keyword">and</span> <span class="built_in">all</span> other moisture arrays are <span class="built_in">set</span> to zero <span class="keyword">if</span> they fall below a critical value</span><br><span class="line"> mp_zero_out_thresh                  = <span class="number">1.e-12</span>,  ! critical value <span class="keyword">for</span> moisture variable threshold, below which moisture arrays (<span class="keyword">except</span> <span class="keyword">for</span> Qv) are <span class="built_in">set</span> to zero (unit:kg/kg)</span><br><span class="line"> use_aero_icbc                       = .true.</span><br><span class="line"> maxiens                             = <span class="number">1</span>,      ! recommended</span><br><span class="line"> maxens                              = <span class="number">3</span>,      ! recommended</span><br><span class="line"> maxens2                             = <span class="number">3</span>,      ! recommended</span><br><span class="line"> maxens3                             = <span class="number">16</span>,     ! recommended</span><br><span class="line"> ensdim                              = <span class="number">144</span>,    ! recommended</span><br><span class="line"> usemonalb                           = .true., ! recommended</span><br><span class="line"> rdlai2d                             = .true., ! recommended</span><br><span class="line"> num_land_cat                        = <span class="number">21</span>,     ! (default) <span class="keyword">for</span> MODIS <span class="keyword">if</span> including lake category</span><br><span class="line"> mosaic_lu                           = <span class="number">1</span>       ! option to specify landuse parameters based on a mosaic approach, when using the RUC land surfce model</span><br><span class="line"> mosaic_soil                         = <span class="number">1</span>       ! option to specify soil parameters based on a masaic approach, when using the RUC land surface model</span><br><span class="line"> fractional_seaice                   = <span class="number">1</span>,      ! treats seaice <span class="keyword">as</span> a fractional field; works only <span class="keyword">with</span> sf_sfclay_physics = <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">7</span> <span class="keyword">or</span> <span class="number">91</span>, Must also <span class="built_in">set</span> seaice_threshold=<span class="number">0.</span></span><br><span class="line"> seaice_threshold                    = <span class="number">0</span>       !   </span><br><span class="line"> cu_rad_feedback                     = .true., ! sub-grid cloud effect to the optical depth <span class="keyword">in</span> radiation; works only <span class="keyword">for</span> GF, G3, GD, <span class="keyword">and</span> KF schemes; must <span class="built_in">set</span> cu_diag=<span class="number">1</span> <span class="keyword">for</span> GF, G3, <span class="keyword">and</span> GD </span><br><span class="line"> aer_opt                             = <span class="number">3</span>,      ! use Thompson water/ice-friendly climatological aerosol</span><br><span class="line"> sst_update = <span class="number">1</span>,</span><br><span class="line"> /</span><br><span class="line"></span><br><span class="line"> &amp;fdda</span><br><span class="line"> grid_fdda = <span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line"> gfdda_inname = <span class="string">&quot;wrffdda_d&lt;domain&gt;&quot;</span>,</span><br><span class="line"> gfdda_end_h = <span class="number">9999</span>, <span class="number">9999</span>, <span class="number">9999</span>,</span><br><span class="line"> gfdda_interval_m = <span class="number">360</span>,</span><br><span class="line"> fgdt = <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line"> if_no_pbl_nudging_uv = <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>,</span><br><span class="line"> if_no_pbl_nudging_t = <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>,</span><br><span class="line"> if_no_pbl_nudging_q = <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>,</span><br><span class="line"> if_zfac_uv = <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>,</span><br><span class="line"> k_zfac_uv = <span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>,</span><br><span class="line"> if_zfac_t = <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line"> k_zfac_t = <span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>,</span><br><span class="line"> if_zfac_q = <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line"> k_zfac_q = <span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>,</span><br><span class="line"> guv = <span class="number">0.0003</span>, <span class="number">0.0003</span>, <span class="number">0.0003</span>,</span><br><span class="line"> gt = <span class="number">0.0003</span>, <span class="number">0.0003</span>, <span class="number">0.0003</span>,</span><br><span class="line"> gq = <span class="number">0.0000</span>, <span class="number">0.0000</span>, <span class="number">0.0000</span>,</span><br><span class="line"> xwavenum = <span class="number">3</span>,</span><br><span class="line"> ywavenum = <span class="number">3</span>,</span><br><span class="line"> if_ramping = <span class="number">0</span>,</span><br><span class="line"> dtramp_min = <span class="number">60.0</span>,</span><br><span class="line"> io_form_gfdda = <span class="number">2</span>,</span><br><span class="line"> /</span><br><span class="line"></span><br><span class="line"> &amp;scm</span><br><span class="line"> /</span><br><span class="line"></span><br><span class="line"> &amp;dynamics</span><br><span class="line"> w_damping                           = <span class="number">0</span>,</span><br><span class="line"> diff_opt                            = <span class="number">2</span>, ! evaluates mixing terms <span class="keyword">in</span> physical space (stress form) (x,y,z); turbulence parameterization <span class="keyword">is</span> chosen by specifying km_opt</span><br><span class="line"> km_opt                              = <span class="number">4</span>, ! horizontal Smagorinsky first order closure (recommended <span class="keyword">for</span> real-data cases)</span><br><span class="line"> km_opt_dfi                          = <span class="number">1</span>, </span><br><span class="line"> diff_6th_opt                        = <span class="number">2</span>, ! 6th-order numerical diffusion, but prohibits up-gradient diffusion</span><br><span class="line"> diff_6th_factor                     = <span class="number">0.12</span>, ! 6th-order numerical diffusion non-dimensional rate</span><br><span class="line"> diff_6th_slopeopt                   = <span class="number">1</span>,    </span><br><span class="line"> diff_6th_thresh                     = <span class="number">0.05</span>, </span><br><span class="line"> moist_mix6_off                      = .false.,</span><br><span class="line"> chem_mix6_off                       = .true.,</span><br><span class="line"> tracer_mix6_off                     = .true.,</span><br><span class="line"> scalar_mix6_off                     = .false.,</span><br><span class="line"> tke_mix6_off                        = .true.,</span><br><span class="line"> damp_opt                            = <span class="number">3</span>,  ! <span class="keyword">with</span> Rayleigh damping</span><br><span class="line"> zdamp                               = <span class="number">5000.</span>,  </span><br><span class="line"> dampcoef                            = <span class="number">0.2</span>,   </span><br><span class="line"> khdif                               = <span class="number">0</span>,     </span><br><span class="line"> kvdif                               = <span class="number">0</span>,    </span><br><span class="line"> SMDIV                               = <span class="number">0.1</span>,   </span><br><span class="line"> EMDIV                               = <span class="number">0.01</span>,  </span><br><span class="line"> EPSSM                               = <span class="number">0.1</span>,    </span><br><span class="line"> non_hydrostatic                     = .true., </span><br><span class="line"> moist_adv_opt                       = <span class="number">1</span>,      </span><br><span class="line"> moist_adv_dfi_opt                   = <span class="number">0</span>,      </span><br><span class="line"> scalar_adv_opt                      = <span class="number">1</span>,      </span><br><span class="line"> TIME_STEP_SOUND                     = <span class="number">4</span>,      </span><br><span class="line"> H_MOM_ADV_ORDER                     = <span class="number">5</span>,      </span><br><span class="line"> V_MOM_ADV_ORDER                     = <span class="number">5</span>,      </span><br><span class="line"> H_SCA_ADV_ORDER                     = <span class="number">5</span>,      </span><br><span class="line"> V_SCA_ADV_ORDER                     = <span class="number">5</span>,     </span><br><span class="line"> gwd_opt                             = <span class="number">3</span>,</span><br><span class="line"> hybrid_opt                          = <span class="number">2</span></span><br><span class="line"> etac                                = <span class="number">0.2</span></span><br><span class="line"></span><br><span class="line"> chem_adv_opt                        = <span class="number">2</span>,</span><br><span class="line"> tracer_opt                          = <span class="number">0</span>,</span><br><span class="line"> /</span><br><span class="line"></span><br><span class="line"> &amp;bdy_control</span><br><span class="line"> spec_bdy_width                      = <span class="number">10</span>,</span><br><span class="line"> spec_zone                           = <span class="number">1</span>,</span><br><span class="line"> relax_zone                          = <span class="number">9</span>,</span><br><span class="line"> specified                           = .true., </span><br><span class="line"> constant_bc                         = .true.,</span><br><span class="line"> spec_exp                            = <span class="number">0.33</span></span><br><span class="line"> nested                              = .false., </span><br><span class="line"> /</span><br><span class="line"></span><br><span class="line"> &amp;grib2</span><br><span class="line"> /</span><br><span class="line"></span><br><span class="line"> &amp;logging</span><br><span class="line"> compute_tasks_silent                = .true. ! <span class="built_in">all</span> compute ranks <span class="keyword">except</span> <span class="number">0</span> are silent</span><br><span class="line"> io_servers_silent                   = .true. ! <span class="built_in">all</span> I/O server ranks are silent</span><br><span class="line"> stderr_logging                      = <span class="number">0</span>      ! disable output to stderr <span class="keyword">except</span> <span class="keyword">for</span> error messages</span><br><span class="line"> /</span><br><span class="line"></span><br><span class="line"> &amp;chem</span><br><span class="line"> chem_opt                            = <span class="number">0</span></span><br><span class="line"> /</span><br><span class="line"> </span><br><span class="line"> &amp;namelist_quilt</span><br><span class="line"> nio_tasks_per_group                 = <span class="number">0</span>, </span><br><span class="line"> nio_groups                          = <span class="number">1</span>,</span><br><span class="line"> /</span><br></pre></td></tr></table></figure>



<h4 id="Namelist-ref-ZX"><a href="#Namelist-ref-ZX" class="headerlink" title="Namelist (ref ZX)"></a>Namelist (ref ZX)</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"> &amp;time_control</span><br><span class="line"> run_days                            = <span class="number">0</span>,</span><br><span class="line"> run_hours                           = <span class="number">0</span>,</span><br><span class="line"> run_minutes                         = <span class="number">0</span>,</span><br><span class="line"> run_seconds                         = <span class="number">0</span>,</span><br><span class="line"> start_year                          = <span class="number">1981</span>,</span><br><span class="line"> start_month                         = 08,</span><br><span class="line"> start_day                           = 01,</span><br><span class="line"> start_hour                          = <span class="number">00</span>,</span><br><span class="line"> end_year                            = <span class="number">1981</span>,</span><br><span class="line"> end_month                           = 08,</span><br><span class="line"> end_day                             = <span class="number">10</span>,</span><br><span class="line"> end_hour                            = <span class="number">18</span>,</span><br><span class="line"> interval_seconds                    = <span class="number">21600</span>,    ! need change according to WPS</span><br><span class="line"> input_from_file                     = .false.,</span><br><span class="line"> history_interval                    = <span class="number">360</span>, ! units: minutes</span><br><span class="line"> frames_per_outfile                  = <span class="number">1</span>,</span><br><span class="line"> restart                             = .false.,</span><br><span class="line"> restart_interval                    = <span class="number">360</span>,     ! units: minutes</span><br><span class="line"> WRITE_INPUT                         = .false.,</span><br><span class="line"> io_form_history                     = <span class="number">2</span> </span><br><span class="line"> io_form_restart                     = <span class="number">2</span></span><br><span class="line"> io_form_input                       = <span class="number">2</span></span><br><span class="line"> io_form_boundary                    = <span class="number">2</span></span><br><span class="line"> debug_level                         = <span class="number">0</span></span><br><span class="line"> ncd_nofill                          = .true. ! If <span class="built_in">set</span> to .true., it could potentially improve IO speed.</span><br><span class="line"> force_use_old_data                  = .true. </span><br><span class="line"> auxinput4_inname                    = <span class="string">&quot;wrflowinp_d&lt;domain&gt;&quot;</span>,</span><br><span class="line"> auxinput4_interval                  = <span class="number">360</span>,</span><br><span class="line"> io_form_auxinput4                   = <span class="number">2</span>,</span><br><span class="line">/</span><br><span class="line"> iofields_filename                   = <span class="string">&quot;my_file_d01.txt&quot;</span>, </span><br><span class="line"> ignore_iofields_warning             = .true.,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> &amp;domains</span><br><span class="line"> use_adaptive_time_step              = .true.,</span><br><span class="line"> step_to_output_time                 = .true.,</span><br><span class="line"> target_cfl                          = <span class="number">1.2</span>, <span class="number">1.2</span>, <span class="number">1.2</span>,</span><br><span class="line"> max_step_increase_pct               = <span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>,</span><br><span class="line"> starting_time_step                  = <span class="number">40</span>,</span><br><span class="line"> max_time_step                       = <span class="number">80</span>,</span><br><span class="line"> min_time_step                       = <span class="number">30</span>,</span><br><span class="line"> adaptation_domain                   = <span class="number">1</span>,</span><br><span class="line"> time_step = <span class="number">40</span>,</span><br><span class="line"> time_step_fract_num                 = <span class="number">0</span>,</span><br><span class="line"> time_step_fract_den                 = <span class="number">1</span>,</span><br><span class="line"> max_dom                             = <span class="number">1</span>,</span><br><span class="line"> s_we                                = <span class="number">1</span>,</span><br><span class="line"> e_we                                = <span class="number">901</span>,  ! according to WPS</span><br><span class="line"> s_sn                                = <span class="number">1</span>,</span><br><span class="line"> e_sn                                = <span class="number">501</span>,  ! according to WPS</span><br><span class="line"> s_vert                              = <span class="number">1</span>,</span><br><span class="line"> e_vert                              = <span class="number">33</span>,</span><br><span class="line"> num_metgrid_levels                  = <span class="number">27</span>,    ! need change according to ncdump met*.nc</span><br><span class="line"> num_metgrid_soil_levels             = <span class="number">4</span>,</span><br><span class="line"> dx                                  = <span class="number">13545.087</span>, </span><br><span class="line"> dy                                  = <span class="number">13545.087</span>, </span><br><span class="line"> grid_id                             = <span class="number">1</span>,    </span><br><span class="line"> parent_id                           = <span class="number">1</span>,     </span><br><span class="line"> i_parent_start                      = <span class="number">0</span>,    </span><br><span class="line"> j_parent_start                      = <span class="number">0</span>,  </span><br><span class="line"> parent_grid_ratio                   = <span class="number">1</span>,     </span><br><span class="line"> parent_time_step_ratio              = <span class="number">1</span>,    </span><br><span class="line"> feedback                            = <span class="number">0</span>, ! this <span class="keyword">is</span> the key setup to define a two-way nested (<span class="keyword">or</span> one-way nested) run. </span><br><span class="line"> smooth_option                       = <span class="number">0</span>  ! a smoothing option <span class="keyword">for</span> the parent domain <span class="keyword">in</span> the area of the nest <span class="keyword">if</span> feedback <span class="keyword">is</span> on</span><br><span class="line"> p_top_requested                     = <span class="number">5000</span></span><br><span class="line"> interp_type                         = <span class="number">1</span>  ! vertical interpolation that <span class="keyword">is</span> linear <span class="keyword">in</span> pressure</span><br><span class="line"> hypsometric_opt                     = <span class="number">2</span></span><br><span class="line"> lowest_lev_from_sfc                 = .false.</span><br><span class="line"> lagrange_order                      = <span class="number">1</span></span><br><span class="line"> force_sfc_in_vinterp                = <span class="number">1</span></span><br><span class="line"> zap_close_levels                    = <span class="number">500</span></span><br><span class="line"> smooth_cg_topo                      = .true.</span><br><span class="line"> sfcp_to_sfcp                        = .false.</span><br><span class="line"> adjust_heights                      = .false.</span><br><span class="line"> max_dz                              = <span class="number">1000.</span>,     ! maximum level thickness allowed (m)</span><br><span class="line"> auto_levels_opt                     = <span class="number">2</span>,         ! new default (also <span class="built_in">set</span> dzstretch_s, dzstretch_u, dzbot, max_dz)</span><br><span class="line"> dzbot                               = <span class="number">40.</span>,       ! thickness of lowest layer (m) <span class="keyword">for</span> auto_levels_opt=<span class="number">2</span></span><br><span class="line"> dzstretch_s                         = <span class="number">1.5</span>,       ! surface stretch factor <span class="keyword">for</span> auto_levels_opt=<span class="number">2</span></span><br><span class="line"> dzstretch_u                         = <span class="number">1.5</span>,       ! upper stretch factor <span class="keyword">for</span> auto_levels_opt=<span class="number">2</span></span><br><span class="line"> nproc_x                             = <span class="number">8</span>,</span><br><span class="line"> nproc_y                             = <span class="number">16</span>,</span><br><span class="line"> /</span><br><span class="line"></span><br><span class="line"> &amp;physics</span><br><span class="line"> physics_suite                       = <span class="string">&#x27;CONUS&#x27;</span>,</span><br><span class="line"> radt                                = <span class="number">45</span>,</span><br><span class="line"> mp_physics                          = <span class="number">50</span>,  <span class="number">50</span>,  <span class="number">50</span>,</span><br><span class="line"> ra_lw_physics                       =  <span class="number">4</span>,   <span class="number">4</span>,   <span class="number">4</span>,</span><br><span class="line"> ra_sw_physics                       =  <span class="number">4</span>,   <span class="number">4</span>,   <span class="number">4</span>,</span><br><span class="line"> cudt                                =  <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,</span><br><span class="line"> cu_physics                          =  <span class="number">6</span>,   <span class="number">6</span>,   <span class="number">0</span>,</span><br><span class="line"> sf_sfclay_physics                   =  <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,</span><br><span class="line"> bl_pbl_physics                      =  <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,</span><br><span class="line"> sf_surface_physics                  =  <span class="number">4</span>,   <span class="number">4</span>,   <span class="number">4</span>,</span><br><span class="line"> icloud                              =  <span class="number">1</span>,</span><br><span class="line"> num_soil_layers                     =  <span class="number">4</span>,</span><br><span class="line"> num_land_cat                        = <span class="number">21</span>,</span><br><span class="line"> sf_urban_physics                    =  <span class="number">0</span>,</span><br><span class="line"> sst_update = <span class="number">1</span>,</span><br><span class="line"> prec_acc_dt                         = <span class="number">60.</span>, <span class="number">60.</span>, <span class="number">60.</span>,</span><br><span class="line"> /</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> &amp;noah_mp</span><br><span class="line"> dveg     = <span class="number">4</span>,</span><br><span class="line"> opt_crs  = <span class="number">1</span>,</span><br><span class="line"> opt_btr  = <span class="number">1</span>,</span><br><span class="line"> opt_run  = <span class="number">3</span>,</span><br><span class="line"> opt_sfc  = <span class="number">1</span>,</span><br><span class="line"> opt_frz  = <span class="number">1</span>,</span><br><span class="line"> opt_inf  = <span class="number">1</span>,</span><br><span class="line"> opt_rad  = <span class="number">1</span>,</span><br><span class="line"> opt_alb  = <span class="number">2</span>,</span><br><span class="line"> opt_snf  = <span class="number">1</span>,</span><br><span class="line"> opt_tbot = <span class="number">2</span>,</span><br><span class="line"> opt_stc  = <span class="number">1</span>,</span><br><span class="line"> opt_gla  = <span class="number">1</span>,</span><br><span class="line"> opt_rsf  = <span class="number">1</span>,</span><br><span class="line"> opt_soil = <span class="number">1</span>,</span><br><span class="line"> opt_pedo = <span class="number">1</span>,</span><br><span class="line"> opt_crop = <span class="number">0</span>,</span><br><span class="line"> /</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> &amp;fdda</span><br><span class="line"> grid_fdda = <span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line"> gfdda_inname = <span class="string">&quot;wrffdda_d&lt;domain&gt;&quot;</span>,</span><br><span class="line"> gfdda_end_h = <span class="number">9999</span>, <span class="number">9999</span>, <span class="number">9999</span>,</span><br><span class="line"> gfdda_interval_m = <span class="number">360</span>,</span><br><span class="line"> fgdt = <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line"> if_no_pbl_nudging_uv = <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>,</span><br><span class="line"> if_no_pbl_nudging_t = <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>,</span><br><span class="line"> if_no_pbl_nudging_q = <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>,</span><br><span class="line"> if_zfac_uv = <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>,</span><br><span class="line"> k_zfac_uv = <span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>,</span><br><span class="line"> if_zfac_t = <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line"> k_zfac_t = <span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>,</span><br><span class="line"> if_zfac_q = <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line"> k_zfac_q = <span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>,</span><br><span class="line"> guv = <span class="number">0.0003</span>, <span class="number">0.0003</span>, <span class="number">0.0003</span>,</span><br><span class="line"> gt = <span class="number">0.0003</span>, <span class="number">0.0003</span>, <span class="number">0.0003</span>,</span><br><span class="line"> gq = <span class="number">0.0000</span>, <span class="number">0.0000</span>, <span class="number">0.0000</span>,</span><br><span class="line"> xwavenum = <span class="number">3</span>,</span><br><span class="line"> ywavenum = <span class="number">3</span>,</span><br><span class="line"> if_ramping = <span class="number">0</span>,</span><br><span class="line"> dtramp_min = <span class="number">60.0</span>,</span><br><span class="line"> io_form_gfdda = <span class="number">2</span>,</span><br><span class="line"> /</span><br><span class="line"></span><br><span class="line"> &amp;scm</span><br><span class="line"> /</span><br><span class="line"></span><br><span class="line"> &amp;dynamics</span><br><span class="line"> w_damping                           = <span class="number">1</span>,</span><br><span class="line"> diff_opt                            = <span class="number">2</span>,</span><br><span class="line"> km_opt                              = <span class="number">4</span>,</span><br><span class="line"> km_opt_dfi                          = <span class="number">1</span>,</span><br><span class="line"> diff_6th_opt                        = <span class="number">2</span>,</span><br><span class="line"> diff_6th_slopeopt                   = <span class="number">1</span>,</span><br><span class="line"> diff_6th_thresh                     = <span class="number">0.05</span>,</span><br><span class="line"> moist_mix6_off                      = .false.,</span><br><span class="line"> chem_mix6_off                       = .true.,</span><br><span class="line"> tracer_mix6_off                     = .true.,</span><br><span class="line"> scalar_mix6_off                     = .false.,</span><br><span class="line"> tke_mix6_off                        = .true.,</span><br><span class="line"> damp_opt                            = <span class="number">3</span>,</span><br><span class="line"> zdamp                               = <span class="number">5000.</span>,  <span class="number">5000.</span>,  <span class="number">5000.</span>,</span><br><span class="line"> dampcoef                            = <span class="number">0.2</span>,    <span class="number">0.01</span>,   <span class="number">0.01</span></span><br><span class="line"> khdif                               = <span class="number">0</span>,      <span class="number">0</span>,      <span class="number">0</span>,</span><br><span class="line"> kvdif                               = <span class="number">0</span>,      <span class="number">0</span>,      <span class="number">0</span>,</span><br><span class="line"> SMDIV                               = <span class="number">0.1</span>,    <span class="number">0.1</span>,    <span class="number">0.1</span>,</span><br><span class="line"> EMDIV                               = <span class="number">0.01</span>,   <span class="number">0.01</span>,   <span class="number">0.01</span>,</span><br><span class="line"> EPSSM                               = <span class="number">0.1</span>,    <span class="number">0.1</span>,    <span class="number">0.1</span></span><br><span class="line"> non_hydrostatic                     = .true., .true., .true.,</span><br><span class="line"> moist_adv_opt                       = <span class="number">1</span>,      <span class="number">2</span>,      <span class="number">2</span>,</span><br><span class="line"> moist_adv_dfi_opt                   = <span class="number">0</span>,      <span class="number">1</span>,     <span class="number">1</span>,</span><br><span class="line"> scalar_adv_opt                      = <span class="number">1</span>,      <span class="number">2</span>,      <span class="number">2</span>,</span><br><span class="line"> TIME_STEP_SOUND                     = <span class="number">4</span>,      <span class="number">4</span>,      <span class="number">4</span>,</span><br><span class="line"> H_MOM_ADV_ORDER                     = <span class="number">5</span>,      <span class="number">5</span>,      <span class="number">5</span>,</span><br><span class="line"> V_MOM_ADV_ORDER                     = <span class="number">5</span>,      <span class="number">3</span>,      <span class="number">3</span>,</span><br><span class="line"> H_SCA_ADV_ORDER                     = <span class="number">5</span>,      <span class="number">5</span>,      <span class="number">5</span>,</span><br><span class="line"> V_SCA_ADV_ORDER                     = <span class="number">5</span>,      <span class="number">3</span>,      <span class="number">3</span>,</span><br><span class="line"> gwd_opt                             = <span class="number">3</span>,</span><br><span class="line"> hybrid_opt                          = <span class="number">2</span></span><br><span class="line"> etac                                = <span class="number">0.2</span></span><br><span class="line"> tracer_opt                          = <span class="number">0</span>,</span><br><span class="line"> /</span><br><span class="line"></span><br><span class="line"> &amp;bdy_control</span><br><span class="line"> spec_bdy_width                      = <span class="number">10</span>,</span><br><span class="line"> spec_zone                           = <span class="number">1</span>,</span><br><span class="line"> relax_zone                          = <span class="number">9</span>,</span><br><span class="line"> specified                           = .true., .false.,.false.,</span><br><span class="line"> constant_bc                         = .true.,</span><br><span class="line"> spec_exp                            = <span class="number">0.33</span></span><br><span class="line"> nested                              = .false., .true., .true.,</span><br><span class="line"> /</span><br><span class="line"></span><br><span class="line"> &amp;grib2</span><br><span class="line"> /</span><br><span class="line"></span><br><span class="line"> &amp;logging</span><br><span class="line"> compute_tasks_silent                = .true. ! <span class="built_in">all</span> compute ranks <span class="keyword">except</span> <span class="number">0</span> are silent</span><br><span class="line"> io_servers_silent                   = .true. ! <span class="built_in">all</span> I/O server ranks are silent</span><br><span class="line"> stderr_logging                      = <span class="number">0</span>      ! disable output to stderr <span class="keyword">except</span> <span class="keyword">for</span> error messages</span><br><span class="line"> /</span><br><span class="line"></span><br><span class="line"> &amp;chem</span><br><span class="line"> chem_opt                            = <span class="number">0</span></span><br><span class="line"> /</span><br><span class="line"> </span><br><span class="line"> &amp;namelist_quilt</span><br><span class="line"> nio_tasks_per_group                 = <span class="number">0</span>, </span><br><span class="line"> nio_groups                          = <span class="number">1</span>,</span><br><span class="line"> /</span><br></pre></td></tr></table></figure>







]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>StatQuest with Josh Starmer</title>
    <url>/2022/05/01/Recharge/StatQuest%20with%20Josh%20Starmer/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><span style="color:green"><strong>Need the access to YouTube</strong></span></p>
<h2 id="Histograms-Clearly-Explained"><a href="#Histograms-Clearly-Explained" class="headerlink" title="Histograms, Clearly Explained"></a>Histograms, Clearly Explained</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/qBigTkBLU6g" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<h2 id="The-Main-Ideas-behind-Probability-Distributions"><a href="#The-Main-Ideas-behind-Probability-Distributions" class="headerlink" title="The Main Ideas behind Probability Distributions"></a>The Main Ideas behind Probability Distributions</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/oI3hZJqXJuc" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<h2 id="The-Normal-Distribution-Clearly-Explained"><a href="#The-Normal-Distribution-Clearly-Explained" class="headerlink" title="The Normal Distribution, Clearly Explained!!!"></a>The Normal Distribution, Clearly Explained!!!</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/rzFX5NWojp0" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<ul>
<li>knowing the standard deviation is helpful because normal curves are drawn such that 95% of the mesurements fall between +&#x2F;- 2 standard deviations around the mean.</li>
</ul>
<h2 id="Population-and-Estimated-Parameters-Clearly-Explained"><a href="#Population-and-Estimated-Parameters-Clearly-Explained" class="headerlink" title="Population and Estimated Parameters, Clearly Explained!!!"></a>Population and Estimated Parameters, Clearly Explained!!!</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/vikkiwjQqfU" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<h2 id="Calculating-the-Mean-Variance-and-Standard-Deviation-Clearly-Explained"><a href="#Calculating-the-Mean-Variance-and-Standard-Deviation-Clearly-Explained" class="headerlink" title="Calculating the Mean, Variance and Standard Deviation, Clearly Explained!!!"></a>Calculating the Mean, Variance and Standard Deviation, Clearly Explained!!!</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/SzZ6GpcfoQY" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<h2 id="What-is-a-mathematical-model"><a href="#What-is-a-mathematical-model" class="headerlink" title="What is a (mathematical) model?"></a>What is a (mathematical) model?</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/yQhTtdq_y9M" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<h2 id="Sampling-from-a-Distribution-Clearly-Explained"><a href="#Sampling-from-a-Distribution-Clearly-Explained" class="headerlink" title="Sampling from a Distribution, Clearly Explained!!!"></a>Sampling from a Distribution, Clearly Explained!!!</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/XLCWeSVzHUU" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<ul>
<li>If I had two separate distributions, a t-test is supposed to give me a small p-value.</li>
</ul>
<h2 id="Hypothesis-Testing-and-The-Null-Hypothesis-Clearly-Explained"><a href="#Hypothesis-Testing-and-The-Null-Hypothesis-Clearly-Explained" class="headerlink" title="Hypothesis Testing and The Null Hypothesis, Clearly Explained!!!"></a>Hypothesis Testing and The Null Hypothesis, Clearly Explained!!!</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/0oc49DyA3hU" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<ul>
<li>test the hypothesis by repeating the experiment</li>
<li>different: reject the hypothesis; otherwise, fail to reject the hypothesis</li>
<li>Null Hypothesis: no difference between things</li>
<li>the Null hypothesis does not require preliminary data</li>
</ul>
<h2 id="p-values-What-they-are-and-how-to-interpret-them"><a href="#p-values-What-they-are-and-how-to-interpret-them" class="headerlink" title="p-values: What they are and how to interpret them"></a>p-values: What they are and how to interpret them</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/vemZtEM63GY" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<ul>
<li>the closer a p-value is to zero, the more confidence we have that A and B are different.</li>
<li>Getting a small p-value when there is no difference is called a Falise Positive</li>
<li>p &#x3D; 0.05 means if there is no difference between A and B, 5% time we do the experiment, we’ll get a p-value less than 0.05</li>
<li>note: p-value does not tell how different A and B are</li>
</ul>
<h2 id="How-to-calculate-p-values"><a href="#How-to-calculate-p-values" class="headerlink" title="How to calculate p-values"></a>How to calculate p-values</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/JQc3yx0-Q9E" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<ul>
<li>Two-sided p-value is most common, one-sided is usually dangerous to use</li>
<li></li>
</ul>
]]></content>
      <categories>
        <category>Recharge</category>
      </categories>
  </entry>
  <entry>
    <title>WRF-debug</title>
    <url>/2022/05/01/Tool/WRF-debug/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="不显示报错信息卡住在-quilt"><a href="#不显示报错信息卡住在-quilt" class="headerlink" title="不显示报错信息卡住在 quilt"></a>不显示报错信息卡住在 quilt</h2><p><strong>报错信息：</strong><code>Server polling is does not work with one io group.  Disabled poll_servers.</code></p>
<p><strong>解决方法：</strong> 可能是<code>namelist.input</code>并行设置错误：包括<code>nproc_x</code>、<code>nprocy</code> 设置了并行，但实际单核运行</p>
<p>或 <code> nio_tasks_per_group = 0</code>、<code> nio_groups = 1</code> 参数设置错误</p>
<h2 id="运行WRF到某一特定时刻崩溃"><a href="#运行WRF到某一特定时刻崩溃" class="headerlink" title="运行WRF到某一特定时刻崩溃"></a>运行WRF到某一特定时刻崩溃</h2><p><strong>报错信息：</strong><code>rsl.error.0000</code> 报错显示如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Segmentation fault: address not mapped to object at address 0xfffffffe07a17ce0 0x0000000002bbe601 module_sf_sfclayrev_mp_psim_stable_()</span><br></pre></td></tr></table></figure>

<p><strong>解决方法：</strong> 可能是由于CFL条件导致的不稳定，设置<code>use_adaptive_time_step  = .true.,</code> 后报错消失</p>
<p>关于CFL Errors的详细科普：<a href="https://www.cnblogs.com/jiangleads/articles/12811528.html">https://www.cnblogs.com/jiangleads/articles/12811528.html</a></p>
<p><strong>注意：</strong>修改时间步长后无需重新运行real.exe，可尝试从最近一次的restart文件开始积分</p>
<h2 id="x2F-real-exe"><a href="#x2F-real-exe" class="headerlink" title=".&#x2F;real.exe"></a>.&#x2F;real.exe</h2><p><strong>报错信息：</strong><code>ERROR in psfc: flag_psfc = 1, flag_soilhgt = 1, flag_slp = 0, sfcp_to_sfcp = F</code></p>
<p><strong>解决方法：</strong> under namelist <code>&amp;domains </code>, set <code>sfcp_to_sfcp = .true.</code></p>
<h2 id="运行WRF时模式尚未开始积分就报错"><a href="#运行WRF时模式尚未开始积分就报错" class="headerlink" title="运行WRF时模式尚未开始积分就报错"></a>运行WRF时模式尚未开始积分就报错</h2><p><strong>报错信息：</strong><code>wrf FATAL CALLED FROM FILE: &lt;stdin&gt; LINE: 6375 ERROR reading namelist domains</code></p>
<p><strong>解决方法：</strong> 检查是否存在中文逗号，是否只应有single entry的设置成了max_dom</p>
<h2 id="WRFDA-编译失败，未能正常生成obsproc-exe"><a href="#WRFDA-编译失败，未能正常生成obsproc-exe" class="headerlink" title="WRFDA 编译失败，未能正常生成obsproc.exe"></a>WRFDA 编译失败，未能正常生成obsproc.exe</h2><p>**报错信息：<code>ERROR: Error in ext_pkg_write_field</code></p>
<p><strong>解决方法：</strong> IO 相关的库没有正确加载&#x2F;安装，WZCS上先加载HYX环境</p>
<h2 id="x2F-metgrid-exe-到某一个时次中断"><a href="#x2F-metgrid-exe-到某一个时次中断" class="headerlink" title=".&#x2F;metgrid.exe 到某一个时次中断"></a>.&#x2F;metgrid.exe 到某一个时次中断</h2><p><strong>报错信息：</strong> <code>application called MPI_Abort(MPI_COMM_WORLD, 66104448) - process 0</code></p>
<p><strong>解决方法：</strong> FNL数据下载到一半中断，未能正确下载。wget -c 检查数据完整性，重新运行<code>./link_grib.csh /data-directory/*.grib2</code>和<code>./ungrib.exe</code></p>
<h2 id="Metgrid-ERROR-Screwy-NDATE-0000-00-00-00-00-00"><a href="#Metgrid-ERROR-Screwy-NDATE-0000-00-00-00-00-00" class="headerlink" title="Metgrid ERROR: Screwy NDATE: 0000-00-00_00:00:00"></a>Metgrid ERROR: Screwy NDATE: 0000-00-00_00:00:00</h2><p><strong>报错信息：</strong> ERROR: Screwy NDATE: 0000-00-00_00:00:00</p>
<p>Abort(61389776) on node 0 (rank 0 in comm 0): application called MPI_Abort(MPI_COMM_WORLD, 61389776) - process 0</p>
<p><strong>解决方法：</strong> 两层嵌套时间维只写了一列，缺少第二列所致<br>start_date &#x3D; ‘2019-06-01_12:00:00’,<br>end_date &#x3D; ‘2019-06-01_18:00:00’,</p>
<p>to start_date &#x3D; ‘2019-06-01_12:00:00’, ‘2019-06-01_12:00:00’,<br>end_date &#x3D; ‘2019-06-01_18:00:00’, ‘2019-06-01_12:00:00’,</p>
<h2 id="namelist-input-中已经定义了auxhist3，但仍报错：-NO-‘auxhist3-interval’-has-been-defined-in-‘namelist-input’"><a href="#namelist-input-中已经定义了auxhist3，但仍报错：-NO-‘auxhist3-interval’-has-been-defined-in-‘namelist-input’" class="headerlink" title="namelist.input 中已经定义了auxhist3，但仍报错： NO ‘auxhist3_interval’ has been defined in ‘namelist.input’"></a>namelist.input 中已经定义了auxhist3，但仍报错： NO ‘auxhist3_interval’ has been defined in ‘namelist.input’</h2><p><strong>报错信息：</strong><code>NO &#39;auxhist3_interval&#39; has been defined in &#39;namelist.input&#39;</code></p>
<p><strong>解决方法：</strong> namelist 只写了一列，缺少第二列所致</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">auxhist3_outname     = &quot;wrfxtrm_d&lt;domain&gt;_&lt;date&gt;.nc&quot;,</span><br><span class="line">auxhist3_interval    = 60,</span><br><span class="line">frames_per_auxhist3  = 24,</span><br><span class="line">io_form_auxhist3     = 2,</span><br></pre></td></tr></table></figure>

<p>改为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">auxhist3_outname     = &quot;wrfxtrm_d&lt;domain&gt;_&lt;date&gt;.nc&quot;,</span><br><span class="line">auxhist3_interval    = 60,60,</span><br><span class="line">frames_per_auxhist3  = 24,24,</span><br><span class="line">io_form_auxhist3     = 2,</span><br></pre></td></tr></table></figure>





<p>​	</p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>WRF-namelist</title>
    <url>/2022/05/01/Tool/WRF-namelist/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="WRF-namelist-参考"><a href="#WRF-namelist-参考" class="headerlink" title="WRF namelist 参考"></a>WRF namelist 参考</h2><h3 id="From-NOAA"><a href="#From-NOAA" class="headerlink" title="From NOAA"></a>From NOAA</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Note, this is not a namelist.input file. Find what interests you, and cut and paste them </span><br><span class="line">      to your own namelist.input file. For more information on these namelist parameters,</span><br><span class="line">      please see run/README.namelist or Chapter 5 of the User&#x27;s Guide.</span><br><span class="line"></span><br><span class="line">** More options for real in namelist record &amp;domains:</span><br><span class="line"></span><br><span class="line"> p_top_requested                     = 5000</span><br><span class="line"> interp_type                         = 2</span><br><span class="line"> extrap_type                         = 2</span><br><span class="line"> t_extrap_type                       = 2</span><br><span class="line"> lowest_lev_from_sfc                 = .false.</span><br><span class="line"> use_levels_below_ground             = .true.</span><br><span class="line"> use_surface                         = .true.</span><br><span class="line"> lagrange_order                      = 2</span><br><span class="line"> force_sfc_in_vinterp                = 1</span><br><span class="line"> zap_close_levels                    = 500</span><br><span class="line"> sfcp_to_sfcp                        = .false.</span><br><span class="line"> adjust_heights                      = .false.</span><br><span class="line"> smooth_cg_topo                      = .false.</span><br><span class="line"> eta_levels                          = 1.000, 0.990, 0.978, 0.964, 0.946,</span><br><span class="line">                                       0.922, 0.894, 0.860, 0.817, 0.766,</span><br><span class="line">                                       0.707, 0.644, 0.576, 0.507, 0.444,</span><br><span class="line">                                       0.380, 0.324, 0.273, 0.228, 0.188,</span><br><span class="line">                                       0.152, 0.121, 0.093, 0.069, 0.048,</span><br><span class="line">                                       0.029, 0.014, 0.000,</span><br><span class="line"></span><br><span class="line">** Using sst_update option (add these to namelist records &amp;time_control and</span><br><span class="line">   &amp;physics respectively):</span><br><span class="line"></span><br><span class="line"> &amp;time_control</span><br><span class="line"> auxinput4_inname                    = &quot;wrflowinp_d&lt;domain&gt;&quot;</span><br><span class="line"> auxinput4_interval                  = 360, 360, 360, </span><br><span class="line"> io_form_auxinput4                   = 2</span><br><span class="line"></span><br><span class="line"> &amp;physics</span><br><span class="line"> sst_update                          = 1,</span><br><span class="line"></span><br><span class="line">** Using Noah-MP option (Use sf_surface_physics option = 4, and add</span><br><span class="line">   &amp;noah_mp namelist record)</span><br><span class="line"></span><br><span class="line">&amp;physics</span><br><span class="line">   sf_surface_physics = 4</span><br><span class="line"></span><br><span class="line">&amp;noah_mp</span><br><span class="line"> dveg     = 4,</span><br><span class="line"> opt_crs  = 1,</span><br><span class="line"> opt_btr  = 1,</span><br><span class="line"> opt_run  = 1,</span><br><span class="line"> opt_sfc  = 1, </span><br><span class="line"> opt_frz  = 1, </span><br><span class="line"> opt_inf  = 1, </span><br><span class="line"> opt_rad  = 3, </span><br><span class="line"> opt_alb  = 2,</span><br><span class="line"> opt_snf  = 1,</span><br><span class="line"> opt_tbot = 2, </span><br><span class="line"> opt_stc  = 1,</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">** Using lake model</span><br><span class="line">&amp;physics</span><br><span class="line"> sf_lake_physics                     = 1,      1,     1,</span><br><span class="line"> lakedepth_default                   = 50.,    50.,   50.,</span><br><span class="line"> lake_min_elev                       = 5.,     5.,    5.,</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">** Using stochastic backscatter scheme (new namelist record since v3.6)</span><br><span class="line"></span><br><span class="line">&amp;stoch</span><br><span class="line"> stoch_force_opt                     = 1,        1,        1,</span><br><span class="line"> stoch_vertstruc_opt                 = 0,        0,        0,</span><br><span class="line"> tot_backscat_psi                    = 1.E-05,   1.E-05,   1.E-05,</span><br><span class="line"> tot_backscat_t                      = 1.E-06,   1.E-06,   1.E-06,</span><br><span class="line"> nens                                = 1,</span><br><span class="line"> ztau_psi                            = 10800.0,</span><br><span class="line"> ztau_t                              = 10800.0,</span><br><span class="line"> rexponent_psi                       =-1.83,</span><br><span class="line"> rexponent_t                         =-1.83,</span><br><span class="line"> zsigma2_eps                         = 0.0833,</span><br><span class="line"> zsigma2_eta                         = 0.0833,</span><br><span class="line"> kminforc                            = 1,</span><br><span class="line"> kminforc                            = 1,</span><br><span class="line"> kminforct                           = 1,</span><br><span class="line"> lminforct                           = 1,</span><br><span class="line"> kmaxforc                            = 1000000,</span><br><span class="line"> lmaxforc                            = 1000000,</span><br><span class="line"> kmaxforct                           = 1000000,</span><br><span class="line"> lmaxforct                           = 1000000,</span><br><span class="line"> perturb_bdy                         = 0,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">** Using DFI options (note this is a separate namelist record):</span><br><span class="line"></span><br><span class="line"> &amp;dfi_control</span><br><span class="line"> dfi_opt                             = 3,</span><br><span class="line"> dfi_nfilter                         = 7,</span><br><span class="line"> dfi_cutoff_seconds                  = 3600,</span><br><span class="line"> dfi_write_filtered_input            = .true.</span><br><span class="line"> dfi_write_dfi_history               = .false.</span><br><span class="line"> dfi_bckstop_year                    = 2000,</span><br><span class="line"> dfi_bckstop_month                   = 01,</span><br><span class="line"> dfi_bckstop_day                     = 24,</span><br><span class="line"> dfi_bckstop_hour                    = 10,</span><br><span class="line"> dfi_bckstop_minute                  = 00,</span><br><span class="line"> dfi_bckstop_second                  = 00,</span><br><span class="line"> dfi_fwdstop_year                    = 2000,</span><br><span class="line"> dfi_fwdstop_month                   = 01,</span><br><span class="line"> dfi_fwdstop_day                     = 24,</span><br><span class="line"> dfi_fwdstop_hour                    = 13,</span><br><span class="line"> dfi_fwdstop_minute                  = 00,</span><br><span class="line"> dfi_fwdstop_second                  = 00,</span><br><span class="line"> /</span><br><span class="line"></span><br><span class="line"> &amp;domains</span><br><span class="line"> time_step_dfi                       = 60</span><br><span class="line"></span><br><span class="line">** Using gridded nudging option (note this is a separate namelist record) for</span><br><span class="line">   upperair nudging</span><br><span class="line"></span><br><span class="line">** Upper air gridded nudging requires an file generated by the real</span><br><span class="line">   program.  Activating grid_fdda for the real program is adequate.</span><br><span class="line"></span><br><span class="line"> &amp;fdda</span><br><span class="line"> grid_fdda                           = 1,     1,     1,</span><br><span class="line"> gfdda_inname                        = &quot;wrffdda_d&lt;domain&gt;&quot;,</span><br><span class="line"> gfdda_end_h                         = 24,    24,    24,</span><br><span class="line"> gfdda_interval_m                    = 360,   360,   360,</span><br><span class="line"> fgdt                                = 0,     0,     0,</span><br><span class="line"> if_no_pbl_nudging_uv                = 0,     0,     0,</span><br><span class="line"> if_no_pbl_nudging_t                 = 1,     1,     1,</span><br><span class="line"> if_no_pbl_nudging_q                 = 1,     1,     1,</span><br><span class="line"> if_zfac_uv                          = 0,     0,     0,</span><br><span class="line">  k_zfac_uv                          = 10,   10,    10,</span><br><span class="line"> if_zfac_t                           = 0,     0,     0,</span><br><span class="line">  k_zfac_t                           = 10,   10,    10,</span><br><span class="line"> if_zfac_q                           = 0,     0,     0,</span><br><span class="line">  k_zfac_q                           = 10,   10,    10,</span><br><span class="line"> guv                                 = 0.0003,     0.0003,     0.0003,</span><br><span class="line"> gt                                  = 0.0003,     0.0003,     0.0003,</span><br><span class="line"> gq                                  = 0.0003,     0.0003,     0.0003,</span><br><span class="line"> if_ramping                          = 1,</span><br><span class="line"> dtramp_min                          = 60.0,</span><br><span class="line"> io_form_gfdda                       = 2,</span><br><span class="line"></span><br><span class="line">** Using gridded surface nudging option (note this is a separate namelist </span><br><span class="line">   record)</span><br><span class="line"></span><br><span class="line">** Note that upper-air and surface gridded nudging may be used together </span><br><span class="line">   or separately.  Surface nudging requires an input file generated by the</span><br><span class="line">   obsgrid program.</span><br><span class="line"></span><br><span class="line"> &amp;fdda</span><br><span class="line"> grid_sfdda                          = 1,     1,     1,</span><br><span class="line"> sgfdda_inname                       = &quot;wrfsfdda_d&lt;domain&gt;&quot;,</span><br><span class="line"> sgfdda_end_h                        = 24,    24,    24,</span><br><span class="line"> sgfdda_interval_m                   = 360,   360,   360,</span><br><span class="line"> io_form_sgfdda                      = 2,</span><br><span class="line"> guv_sfc                             = 0.0003,     0.0003,     0.0003,</span><br><span class="line"> gt_sfc                              = 0.0003,     0.0003,     0.0003,</span><br><span class="line"> gq_sfc                              = 0.0003,     0.0003,     0.0003,</span><br><span class="line"> rinblw                              = 250.,</span><br><span class="line"></span><br><span class="line">** Using observation nudging option (note &amp;fdda is a separate namelist record):</span><br><span class="line"></span><br><span class="line"> &amp;time_control</span><br><span class="line"> auxinput11_interval_s               = 180 , 180 , 180</span><br><span class="line"> auxinput11_end_h                    = 6   , 6   , 6</span><br><span class="line"></span><br><span class="line"> &amp;fdda</span><br><span class="line"> obs_nudge_opt                       = 1,1,1,</span><br><span class="line"> max_obs                             = 150000,</span><br><span class="line"> fdda_start                          = 0.,  0.,  0.,</span><br><span class="line"> fdda_end                            = 720.,720.,720.,</span><br><span class="line"> obs_nudge_wind                      = 1,1,1,</span><br><span class="line"> obs_coef_wind                       = 6.E-4,6.E-4,6.E-4,</span><br><span class="line"> obs_nudge_temp                      = 1,1,1,</span><br><span class="line"> obs_coef_temp                       = 6.E-4,6.E-4,6.E-4,</span><br><span class="line"> obs_nudge_mois                      = 1,1,1,</span><br><span class="line"> obs_coef_mois                       = 6.E-4,6.E-4,6.E-4,</span><br><span class="line"> obs_rinxy                           = 240.,240.,180.,</span><br><span class="line"> obs_rinsig                          = 0.1,</span><br><span class="line"> obs_twindo                          = 0.6666667,0.6666667,0.6666667,</span><br><span class="line"> obs_npfi                            = 10,</span><br><span class="line"> obs_ionf                            = 2, 2, 2,</span><br><span class="line"> obs_idynin                          = 0,</span><br><span class="line"> obs_dtramp                          = 40.,</span><br><span class="line"> obs_prt_freq                        = 10, 10, 10,</span><br><span class="line"> obs_prt_max                         = 10</span><br><span class="line"> obs_ipf_errob                       = .true.</span><br><span class="line"> obs_ipf_nudob                       = .true.</span><br><span class="line"> obs_ipf_in4dob                      = .true</span><br><span class="line"> obs_no_pbl_nudge_uv                 = 0</span><br><span class="line"> obs_no_pbl_nudge_t                  = 0</span><br><span class="line"> obs_no_pbl_nudge_q                  = 0</span><br><span class="line"> obs_sfc_scheme_horiz                = 0</span><br><span class="line"> obs_sfc_scheme_vert                 = 0</span><br><span class="line"> obs_max_sndng_gap                   = 20</span><br><span class="line"> obs_nudgezfullr1_uv                 = 50</span><br><span class="line"> obs_nudgezrampr1_uv                 = 50</span><br><span class="line"> obs_nudgezfullr2_uv                 = 50</span><br><span class="line"> obs_nudgezrampr2_uv                 = 50</span><br><span class="line"> obs_nudgezfullr4_uv                 = -5000</span><br><span class="line"> obs_nudgezrampr4_uv                 = 50  </span><br><span class="line"> obs_nudgezfullr1_t                  = 50 </span><br><span class="line"> obs_nudgezrampr1_t                  = 50</span><br><span class="line"> obs_nudgezfullr2_t                  = 50</span><br><span class="line"> obs_nudgezrampr2_t                  = 50</span><br><span class="line"> obs_nudgezfullr4_t                  = -5000</span><br><span class="line"> obs_nudgezrampr4_t                  = 50  </span><br><span class="line"> obs_nudgezfullr1_q                  = 50 </span><br><span class="line"> obs_nudgezrampr1_q                  = 50</span><br><span class="line"> obs_nudgezfullr2_q                  = 50</span><br><span class="line"> obs_nudgezrampr2_q                  = 50</span><br><span class="line"> obs_nudgezfullr4_q                  = -5000</span><br><span class="line"> obs_nudgezrampr4_q                  = 50</span><br><span class="line"> obs_nudgezfullmin                   = 50</span><br><span class="line"> obs_nudgezrampmin                   = 50</span><br><span class="line"> obs_nudgezmax                       = 3000</span><br><span class="line"> obs_sfcfact                         = 1.0</span><br><span class="line"> obs_sfcfacr                         = 1.0</span><br><span class="line"> obs_dpsmx                           = 7.5</span><br><span class="line"> /</span><br><span class="line"></span><br><span class="line">** Using spectral nudging option</span><br><span class="line"></span><br><span class="line"> &amp;fdda</span><br><span class="line"> grid_fdda                           = 2,     2,     2,</span><br><span class="line"> gfdda_inname                        = &quot;wrffdda_d&lt;domain&gt;&quot;,</span><br><span class="line"> gfdda_end_h                         = 24,    24,    24,</span><br><span class="line"> gfdda_interval_m                    = 360,   360,   360,</span><br><span class="line"> fgdt                                = 0,     0,     0,</span><br><span class="line"> fgdtzero                            = 0,     0,     0,</span><br><span class="line"> if_no_pbl_nudging_uv                = 0,     0,     0,</span><br><span class="line"> if_no_pbl_nudging_t                 = 0,     0,     0,</span><br><span class="line"> if_no_pbl_nudging_ph                = 0,     0,     0,</span><br><span class="line"> if_zfac_uv                          = 0,     0,     0,</span><br><span class="line">  k_zfac_uv                          = 10,   10,    10,</span><br><span class="line"> if_zfac_t                           = 0,     0,     0,</span><br><span class="line">  k_zfac_t                           = 10,   10,    10,</span><br><span class="line"> if_zfac_ph                          = 0,     0,     0,</span><br><span class="line">  k_zfac_ph                          = 10,   10,    10,</span><br><span class="line"> dk_zfac_uv                          = 1,     1,     1,</span><br><span class="line"> dk_zfac_t                           = 1,     1,     1,</span><br><span class="line"> dk_zfac_ph                          = 1,     1,     1,</span><br><span class="line"> guv                                 = 0.0003,     0.0003,     0.0003,</span><br><span class="line"> gt                                  = 0.0003,     0.0003,     0.0003,</span><br><span class="line"> gph                                 = 0.0003,     0.0003,     0.0003,</span><br><span class="line"> xwavenum                            = 3,</span><br><span class="line"> ywavenum                            = 3,</span><br><span class="line"> if_ramping                          = 1,</span><br><span class="line"> dtramp_min                          = 60.0,</span><br><span class="line"> io_form_gfdda                       = 2,</span><br><span class="line"></span><br><span class="line">** Using adaptive time step option (add these in namelist record &amp;domains):</span><br><span class="line"></span><br><span class="line"> use_adaptive_time_step              = .true.,</span><br><span class="line"> step_to_output_time                 = .true.,</span><br><span class="line"> target_cfl                          = 1.2, 1.2, 1.2,</span><br><span class="line"> target_hcfl                         = .84, .84, .84,</span><br><span class="line"> max_step_increase_pct               = 5,   51,  51,</span><br><span class="line"> starting_time_step                  = -1,  -1,  -1,</span><br><span class="line"> max_time_step                       = 360, 120, 40,</span><br><span class="line"> min_time_step                       =  90,  30, 10,</span><br><span class="line"> adaptation_domain                   =  1,</span><br><span class="line"></span><br><span class="line">** Using automatic vortex-following option (tropical storm tracking only;</span><br><span class="line">   add these in namelist record &amp;domains):</span><br><span class="line"></span><br><span class="line"> vortex_interval                     = 15, 15, 15,</span><br><span class="line"> max_vortex_speed                    = 40, 40, 40,</span><br><span class="line"> corral_dist                         =  8, 15, 15,</span><br><span class="line"> track_level                         = 50000,</span><br><span class="line"></span><br><span class="line">** Miscellaneous physics options for namelist record &amp;physics:</span><br><span class="line"></span><br><span class="line">Topographic shading (only effective when grid sizes are a few kilometers)</span><br><span class="line"></span><br><span class="line"> slope_rad                           = 1,     1,     1,</span><br><span class="line"> topo_shading                        = 1,     1,     1,</span><br><span class="line"> shadlen                             = 25000, </span><br><span class="line"></span><br><span class="line">Setting threashold value for defining seaice if seaice is not in the input file:</span><br><span class="line"></span><br><span class="line"> seaice_threshold                    = 271,</span><br><span class="line"></span><br><span class="line">Switching off latent heating from a microphysics scheme (must also set cu_physics = 0):</span><br><span class="line"></span><br><span class="line"> no_mp_heating                       = 0,</span><br><span class="line"></span><br><span class="line">** Using precipiatiion bucket in a time interval (minutes):</span><br><span class="line"></span><br><span class="line"> prec_acc_dt                         = 60.</span><br><span class="line"></span><br><span class="line">** Using bucket accumulations for multi-year simulations (guideline: mean monthly accumulation)</span><br><span class="line"></span><br><span class="line"> bucket_mm                           = 100.</span><br><span class="line"> bucket_J                            = 1.e9</span><br><span class="line"></span><br><span class="line">** Optional gravitational settling of fog/cloud droplets (MYNN PBL only)</span><br><span class="line"></span><br><span class="line"> grav_settling                       = 1,       ; default 0</span><br><span class="line"></span><br><span class="line">** Using implicit gravity-wave damping option (add these in namelist record &amp;dynamics):</span><br><span class="line"></span><br><span class="line"> damp_opt                            = 3,</span><br><span class="line"> zdamp                               = 5000.,  5000.,  5000.,</span><br><span class="line"> dampcoef                            = 0.2,    0.2,    0.2</span><br><span class="line"></span><br><span class="line">** Using expanded boundary zone and exponential decay option (add or modify these in</span><br><span class="line">    namelist record &amp;bdy_control):</span><br><span class="line"></span><br><span class="line"> spec_bdy_width                      = 10,</span><br><span class="line"> spec_zone                           = 1,</span><br><span class="line"> relax_zone                          = 9,</span><br><span class="line"> specified                           = .true., .false.,.false.,</span><br><span class="line"> spec_exp                            = 0.33</span><br><span class="line"></span><br><span class="line">For a tropical channel configuration, set the following:</span><br><span class="line"></span><br><span class="line"> specified                           = .true., .false.,.false.,</span><br><span class="line"> periodic_x                          = .true., .false.,.false.,</span><br><span class="line"></span><br><span class="line">** using io quilting option to improve output efficiency for large domain runs</span><br><span class="line">    (note that this is a separate namelist record):</span><br><span class="line"></span><br><span class="line"> &amp;namelist_quilt</span><br><span class="line"> nio_tasks_per_group = 2,</span><br><span class="line"> nio_groups = 1,</span><br><span class="line"></span><br><span class="line">** for tc bogusing:</span><br><span class="line"></span><br><span class="line"> &amp;tc</span><br><span class="line"> insert_bogus_storm                  = .true.,</span><br><span class="line"> remove_storm                        = .true.,</span><br><span class="line"> num_storm                           = 1,</span><br><span class="line"> latc_loc                            = 15.,</span><br><span class="line"> lonc_loc                            = -90.,</span><br><span class="line"> vmax_meters_per_second              = 30,</span><br><span class="line"> rmax                                = 50000,</span><br><span class="line"> vmax_ratio                          = 0.5,</span><br><span class="line"> /</span><br><span class="line"></span><br><span class="line">** for regional climate surface diagnostics such as max/min/mean/std of T2/Q2/wind/rainfall</span><br><span class="line">between selected output times (e.g. daily) in auxhist3</span><br><span class="line"></span><br><span class="line"> &amp;time_control</span><br><span class="line"> output_diagnostics      = 1</span><br><span class="line"> auxhist3_outname        = &#x27;wrfxtrm_d&lt;domain&gt;_&lt;date&gt;&#x27;</span><br><span class="line"> io_form_auxhist3        = 2</span><br><span class="line"> auxhist3_interval       = 1440</span><br><span class="line"> frames_per_auxhist3     = 1</span><br><span class="line"> /</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">** for pressure-level (and some surface) diagnostics, output is on stream 23,</span><br><span class="line">where the listed pressure levels are in Pa.  For the height level interpolation,</span><br><span class="line">the unit is stream 22.</span><br><span class="line"></span><br><span class="line"> &amp;time_control</span><br><span class="line"> io_form_auxhist23                   =  2,</span><br><span class="line"> auxhist23_interval                  = 30,   30,    30,</span><br><span class="line"> frames_per_auxhist23                =  1,    1,     1, </span><br><span class="line"> auxhist23_outname                   = &quot;PLEVS_d&lt;domain&gt;_&lt;date&gt;&quot;</span><br><span class="line"> /</span><br><span class="line"></span><br><span class="line"> &amp;diags</span><br><span class="line"> p_lev_diags                         = 1</span><br><span class="line"> num_press_levels                    = 4</span><br><span class="line"> press_levels                        = 85000, 70000, 50000, 25000</span><br><span class="line"> use_tot_or_hyd_p                    = 2</span><br><span class="line"> /</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">** for height-level diagnostics, output is on stream 22 (negative values</span><br><span class="line">for z_levels means AGL, so -500 is 500 m AGL, and 10000 is 10 km).</span><br><span class="line"></span><br><span class="line"> &amp;time_control</span><br><span class="line"> io_form_auxhist22                   =  2,</span><br><span class="line"> auxhist22_interval                  = 30,   30,    30,</span><br><span class="line"> frames_per_auxhist22                =  1,    1,     1, </span><br><span class="line"> auxhist22_outname                   = &quot;ZLEVS_d&lt;domain&gt;_&lt;date&gt;&quot;</span><br><span class="line"> /</span><br><span class="line"></span><br><span class="line"> &amp;diags</span><br><span class="line"> z_lev_diags                         = 1</span><br><span class="line"> num_z_levels                        = 2</span><br><span class="line"> z_levels                            = -500, 10000</span><br><span class="line"> /</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">** Using different flux formulation for tropical storm simulations</span><br><span class="line">   (best for grid spacing less than 2 km) </span><br><span class="line">   simple 1-D ocean mixed layer, or University of Miami 3DPWP ocean model</span><br><span class="line">   (add these in namelist record &amp;physics):</span><br><span class="line"></span><br><span class="line"> isftcflx                            = 1,</span><br><span class="line"> sf_ocean_physics                    = 0 (off), 1 (OML), 2 (3D PWP)</span><br><span class="line"> oml_hml0                            = 50,</span><br><span class="line"> oml_gamma                           = 0.14</span><br><span class="line"> omdt                                = 1</span><br><span class="line"></span><br><span class="line"> Add these in the &amp;domains section.  Note that the example here is for</span><br><span class="line"> a warm ocean: ocean_z is the depth of each layer (m), from the surface</span><br><span class="line"> downward; the associated temperature is ocean_t (K); and the associated </span><br><span class="line"> salinity is ocean_s (ppt).</span><br><span class="line"></span><br><span class="line"> ocean_levels                        = 30,</span><br><span class="line"> ocean_z                             =       5.,       15.,       25.,       35.,       45.,       55.,</span><br><span class="line">                                            65.,       75.,       85.,       95.,      105.,      115.,</span><br><span class="line">                                           125.,      135.,      145.,      155.,      165.,      175.,</span><br><span class="line">                                           185.,      195.,      210.,      230.,      250.,      270.,</span><br><span class="line">                                           290.,      310.,      330.,      350.,      370.,      390.</span><br><span class="line"> ocean_t                             = 302.3493,  302.3493,  302.3493,  302.1055,  301.9763,  301.6818,</span><br><span class="line">                                       301.2220,  300.7531,  300.1200,  299.4778,  298.7443,  297.9194,</span><br><span class="line">                                       297.0883,  296.1443,  295.1941,  294.1979,  293.1558,  292.1136,</span><br><span class="line">                                       291.0714,  290.0293,  288.7377,  287.1967,  285.6557,  284.8503,</span><br><span class="line">                                       284.0450,  283.4316,  283.0102,  282.5888,  282.1674,  281.7461</span><br><span class="line"> ocean_s                             =  34.0127,   34.0127,   34.0127,   34.3217,   34.2624,   34.2632,</span><br><span class="line">                                        34.3240,   34.3824,   34.3980,   34.4113,   34.4220,   34.4303,</span><br><span class="line">                                        34.6173,   34.6409,   34.6535,   34.6550,   34.6565,   34.6527,</span><br><span class="line">                                        34.6490,   34.6446,   34.6396,   34.6347,   34.6297,   34.6247,</span><br><span class="line">                                        34.6490,   34.6446,   34.6396,   34.6347,   34.6297,   34.6247</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">References for 3D ocean circulation model:</span><br><span class="line">Lee, C.-Y., and S. S. Chen, 2013: Stable Boundary Layer and Its Impact on Tropical Cyclone Structure in a Coupled Atmosphere-Ocean Model, Mon. Wea. Rev.</span><br><span class="line">Price, J. F., T. B. Sanford, and G. Z. Forristal, 1994: Forced stage response to a moving hurricane. J. Phy. Oceanogr., 24, 233-260.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">** Using U. Miami Forward Lagrangian trajectory calculation </span><br><span class="line">  (add it in namelist record &amp;physics):</span><br><span class="line">&amp;domain</span><br><span class="line"> num_traj                            = 25,</span><br><span class="line"></span><br><span class="line">&amp;physics</span><br><span class="line"> traj_opt                            = 1,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">** Vertical nesting</span><br><span class="line"></span><br><span class="line">The WRF model now supports vertical nesting for a coincident (online)</span><br><span class="line">model simulation (during a single model run, differing numbers of</span><br><span class="line">vertical levels may be used per domain).  This is activated with a switch</span><br><span class="line">to turn on the option (vert_refine_method).  The namelist array eta_levels</span><br><span class="line">is manually filled in for each domain.  Below is an example for two </span><br><span class="line">domains.  </span><br><span class="line"></span><br><span class="line">NOTE: The user is restricted to either the RRTM or RRTMG radiation schemes.</span><br><span class="line"></span><br><span class="line"> &amp;domains</span><br><span class="line"> max_dom                             = 2,</span><br><span class="line"> e_vert                              = 35,    45,</span><br><span class="line"> eta_levels(1:35)                    = 1., 0.993, 0.983, 0.97, 0.954, 0.934, 0.909, 0.88, 0.8406663, 0.8013327, </span><br><span class="line">                                       0.761999, 0.7226653, 0.6525755, 0.5877361, 0.5278192, 0.472514, </span><br><span class="line">                                       0.4215262, 0.3745775, 0.3314044, 0.2917579, 0.2554026, 0.2221162, </span><br><span class="line">                                       0.1916888, 0.1639222, 0.1386297, 0.1156351, 0.09525016, 0.07733481, </span><br><span class="line">                                       0.06158983, 0.04775231, 0.03559115, 0.02490328, 0.0155102, 0.007255059, 0.</span><br><span class="line"> eta_levels(36:81)                   = 1.0000, 0.9946, 0.9875, 0.9789, 0.9685, 0.9562, 0.9413, 0.9238, 0.9037, 0.8813, 0.8514,</span><br><span class="line">                                       0.8210, 0.7906, 0.7602, 0.7298, 0.6812, 0.6290, 0.5796, 0.5333, 0.4901, 0.4493, 0.4109,</span><br><span class="line">                                       0.3746, 0.3412, 0.3098, 0.2802, 0.2524, 0.2267, 0.2028, 0.1803, 0.1593, 0.1398, 0.1219,</span><br><span class="line">                                       0.1054, 0.0904, 0.0766, 0.0645, 0.0534, 0.0433, 0.0341, 0.0259, 0.0185, 0.0118, 0.0056, 0.    </span><br><span class="line"> vert_refine_method                  = 0,     2,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">** Tropopause data level of max winds data, for program real.exe only</span><br><span class="line"></span><br><span class="line">When information (mostly NCEP supplied through GFS or NAM) is available </span><br><span class="line">in the Grib2 file, AND extracted with ungrib, the metgrid program inserts</span><br><span class="line">flag information into the data stream that is input by real.  The real</span><br><span class="line">program is able to use the available u, v, T, height fields (each may be on</span><br><span class="line">a tropopause .OR. the level of max winds) in the vertical interpolation.</span><br><span class="line">To &quot;tune&quot; the data, the user may select a level below which the max wind </span><br><span class="line">inforamtion is ignored.  The default is 300 hPa.  The user may also </span><br><span class="line">select the level that when exceeded the trop and maxw fields are ignored</span><br><span class="line">(due to the horizontal pressure difference detecting a user-defined</span><br><span class="line">discontinuity, and the metgrid horizontal interpolation across the </span><br><span class="line">discontinuity would be suspect).  By default, this option is turned off.</span><br><span class="line">The user may choose to individually activate the vertical interpolation of</span><br><span class="line">either the level of max winds .OR. the tropopause level.</span><br><span class="line"></span><br><span class="line">Default (all pressure units Pa):</span><br><span class="line"> &amp;domains</span><br><span class="line"> maxw_horiz_pres_diff                = 5000</span><br><span class="line"> trop_horiz_pres_diff                = 5000</span><br><span class="line"> maxw_above_this_level               = 30000</span><br><span class="line"> use_maxw_level                      = 0 (0=do not use level, 1 = use level)</span><br><span class="line"> use_trop_level                      = 0 (0=do not use level, 1 = use level)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">** Using aerosol option aer_opt = 2:</span><br><span class="line"></span><br><span class="line">&amp;physics</span><br><span class="line"> aer_opt            = 2,</span><br><span class="line"> aer_type           = 1,</span><br><span class="line"> aer_aod550_opt     = 1,</span><br><span class="line"> aer_aod550_val     = 0.12,</span><br><span class="line"> aer_angexp_opt     = 1,</span><br><span class="line"> aer_angexp_val     = 1.3,</span><br><span class="line"> aer_ssa_opt        = 1,</span><br><span class="line"> aer_ssa_val        = 0.85,</span><br><span class="line"> aer_asy_opt        = 1,</span><br><span class="line"> aer_asy_val        = 0.90,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">** Using Jimenez wind-farm scheme</span><br><span class="line"></span><br><span class="line">In the &amp;physics namelist record, set the MAX_DOM value:</span><br><span class="line"> windfarm                            = 1,    1,    1</span><br><span class="line"></span><br><span class="line">Also in the directory with namelist.input, is the file defining the</span><br><span class="line">specifics of the wind turbine type: wind-turbine-1.tbl</span><br><span class="line"></span><br><span class="line">The location of wind turbines are specified as lat lon, and </span><br><span class="line">the turbine type: windturbines.txt</span><br><span class="line"></span><br><span class="line">** Using stochastic schemes</span><br><span class="line">&amp;stoch</span><br><span class="line"> skebs              = 1, 1, 1, </span><br><span class="line"> rand_perturb       = 1, 1, 1, </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">** Using kfcupscheme cu_physics (cumulus scheme option). This has been tested with</span><br><span class="line">the CAM radiation scheme and is not recommended with other radiation schemes.</span><br><span class="line">Regarding cu_rad_feedback, users want the parameterized clouds to affect radiation.  </span><br><span class="line">Turning it off is only useful as a sensitivity study to determine the importance of </span><br><span class="line">that effect. Regarding shallowcu_forced_ra option, setting it to true will override </span><br><span class="line">the cloud fraction calculations to a prescribed maximum cloud fraction (a value of 0.36)</span><br><span class="line">which can be changed by the user for sensitivity testing purposes.</span><br><span class="line"></span><br><span class="line">&amp;physics</span><br><span class="line"> cu_physics          = 10,    10,    10,</span><br><span class="line"> ra_lw_physics       = 3,     3,     3,</span><br><span class="line"> ra_sw_physics       = 3,     3,     3,</span><br><span class="line"> cu_rad_feedback     =.true.,.true.,.true.,</span><br><span class="line"> shallowcu_forced_ra = .false.,.false.,.false.,</span><br><span class="line"> numBins             = 21,    21,    21,</span><br><span class="line"> thBinSize           = 0.1,   0.1,   0.1,</span><br><span class="line"> rBinSize            = 0.0001,0.0001,0.0001,</span><br><span class="line"> minDeepFreq         = 0.333, 0.333, 0.333,</span><br><span class="line"> minShallowFreq      = 0.01,  0.01,  0.01, </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">** To write out an input file during the model simulation.</span><br><span class="line"></span><br><span class="line">&amp;time_control</span><br><span class="line"> write_input                         = .TRUE.,</span><br><span class="line"> inputout_interval_m                 = 60, 60, 60</span><br><span class="line"> input_outname                       = &quot;wrfinput_out_d&lt;domain&gt;_&lt;date&gt;&quot;</span><br><span class="line"> inputout_begin_h                    = 3, 6, 6</span><br><span class="line"> inputout_end_h                      = 9, 6, 6</span><br><span class="line"></span><br><span class="line">** To use climatological data in Thompson microphysics option 28: in addition to</span><br><span class="line">process additional data in metgrid, use these:</span><br><span class="line"></span><br><span class="line">&amp;domains</span><br><span class="line"> wif_input_opt                       = 1</span><br><span class="line"> num_wif_levels                      = 30</span><br><span class="line"></span><br><span class="line">&amp;physics</span><br><span class="line"> mp_physics                          = 28,    28,    28,</span><br><span class="line"> use_aero_icbc                       = .true.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">** The hybrid vertical coordinate (HVC) requires three pieces:</span><br><span class="line">1. The WRF and real codes must be built with HVC activated (./configure -hyb)</span><br><span class="line">2. The eta location (etac) at which the eta levels higher up in the atmosphere</span><br><span class="line">   become isobaric must be defined (suggested default in Registry).</span><br><span class="line">3. The run-time option to select the HVC (hybrid_opt, default is OFF): </span><br><span class="line">&amp;dynamics</span><br><span class="line"> hybrid_opt          = 2,</span><br><span class="line"> etac                = 0.2,</span><br><span class="line"></span><br><span class="line">** New mechanism to specify physics:</span><br><span class="line"></span><br><span class="line">&amp;physics</span><br><span class="line"> physics_suite = &#x27;CONUS&#x27;</span><br><span class="line"></span><br><span class="line">which is equivalent to</span><br><span class="line"></span><br><span class="line"> mp_physics         = 8,</span><br><span class="line"> cu_physics         = 6,</span><br><span class="line"> ra_lw_physics      = 4,</span><br><span class="line"> ra_sw_physics      = 4,</span><br><span class="line"> bl_pbl_physics     = 2,</span><br><span class="line"> sf_sfclay_physics  = 2,</span><br><span class="line"> sf_surface_physics = 2,</span><br><span class="line"></span><br><span class="line">&amp;physics</span><br><span class="line"> physics_suite = &#x27;TROPICAL&#x27;</span><br><span class="line"></span><br><span class="line">which is equivalent to</span><br><span class="line"></span><br><span class="line"> mp_physics         = 6,</span><br><span class="line"> cu_physics         = 16,</span><br><span class="line"> ra_lw_physics      = 4,</span><br><span class="line"> ra_sw_physics      = 4,</span><br><span class="line"> bl_pbl_physics     = 1,</span><br><span class="line"> sf_sfclay_physics  = 91,</span><br><span class="line"> sf_surface_physics = 2,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">To overwrite the cu_physics option for a second nest, set </span><br><span class="line"></span><br><span class="line"> &amp;physics</span><br><span class="line"> physics_suite                       = &#x27;tropical&#x27;</span><br><span class="line"> cu_physics                          = -1,    -1,     0,</span><br><span class="line"> ...</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>WRF-output</title>
    <url>/2022/05/01/Tool/WRF-output/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="WRF-output-variables"><a href="#WRF-output-variables" class="headerlink" title="WRF output variables"></a>WRF output variables</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Lu_index = land use category 土地利用类型</span><br><span class="line"></span><br><span class="line">Znu= eta values on half(mass) levels 一半（质量）水平上的eta值</span><br><span class="line"></span><br><span class="line">Znw=eta values on full(w) levels 全（w）级eta值</span><br><span class="line"></span><br><span class="line">ZS=depths of centers of soil layers 土层中心深度，单位m</span><br><span class="line"></span><br><span class="line">Dzs=thicknesses of soil layers 土层厚度，单位m</span><br><span class="line"></span><br><span class="line">Var_SSO =variance of subgrid-scale orography 次格网尺度地形变化，单位m2</span><br><span class="line"></span><br><span class="line">U=x-wind component x向风组分，单位：m s-1</span><br><span class="line"></span><br><span class="line">V=y-wind component y向风组分，单位：m s-1</span><br><span class="line"></span><br><span class="line">w=z-wind component z向风组分，单位：m s-1</span><br><span class="line"></span><br><span class="line">PH=perturbation geopotential 扰动位势，单位：m2 s-2</span><br><span class="line"></span><br><span class="line">PHB=base-state geopotential 基态位势，单位：m2 s-2</span><br><span class="line"></span><br><span class="line">T=perturbation potential temperature theta-t0 扰动位温，单位：K</span><br><span class="line"></span><br><span class="line">位温：把干空气块绝热膨胀或压缩到标准气压（1000hPa）时的温度</span><br><span class="line"></span><br><span class="line">THM=either 1) pert moist pot temp=(1+Rv/Rd Qv)(theta)-T0,</span><br><span class="line"></span><br><span class="line">or 2) pert dry pot temp=t 单位：K</span><br><span class="line"></span><br><span class="line">MU=perturbation dry air mass in column 柱内干空气质量扰动，单位：Pa</span><br><span class="line"></span><br><span class="line">MUB=base state dry air mass in column 柱内基态干空气质量，单位:Pa</span><br><span class="line"></span><br><span class="line">P = perturbation pressure 扰动压力，单位：Pa</span><br><span class="line"></span><br><span class="line">PB=base state pressure 基态压力，单位：Pa</span><br><span class="line"></span><br><span class="line">FNM=upper weight for vertical stretching 垂直拉伸的上部重量</span><br><span class="line"></span><br><span class="line">FNP=lower weight for vertical stretching 垂直拉伸的下部重量</span><br><span class="line"></span><br><span class="line">RDNW=inverse d(eta) values between full (w) levels</span><br><span class="line"></span><br><span class="line">RDN=inverse d(eta) values between half(mass) levels</span><br><span class="line"></span><br><span class="line">DNW=d(eta) values between full(w) levels</span><br><span class="line"></span><br><span class="line">DN=d(eta) values between half(mass) levels</span><br><span class="line"></span><br><span class="line">CFN=extrapolation constant 外推常数</span><br><span class="line"></span><br><span class="line">CFN1=extrapolation constant 外推常数</span><br><span class="line"></span><br><span class="line">THIS_IS_AN_IDEAL_RUN=T/F flag: this is an ARW ideal simulation T/F标志：这是一个ARW理想模拟</span><br><span class="line"></span><br><span class="line">P_HYD= hydrostatic pressure 静水压力，单位:Pa，静水压力是由均质流体作用于一个物体上的压力，这是全方位的力，并均匀地施向物体表面的各个部位。静水压力增大，会使受力物体的体积缩小，但不会改变其形状。</span><br><span class="line"></span><br><span class="line">Q2=QV at 2 M 单位：kg kg-1</span><br><span class="line"></span><br><span class="line">T2=TEMP at 2 M 2m气温，单位：k</span><br><span class="line"></span><br><span class="line">TH2=pot temp at 2M 单位：K</span><br><span class="line"></span><br><span class="line">PSFC=SFC pressure 单位：Pa</span><br><span class="line"></span><br><span class="line">U10=U at 10M 东西方向高度10m的风速，单位:m s-1</span><br><span class="line"></span><br><span class="line">V10=V at 10M 南北方向高度10m的风速，单位:m s-1</span><br><span class="line"></span><br><span class="line">RDX=inverse x grid length 反向x格网长度</span><br><span class="line"></span><br><span class="line">RDY=inverse y grid length 反向y格网长度</span><br><span class="line"></span><br><span class="line">RESM=time weight constant for small steps 小步骤的时间权重常数</span><br><span class="line"></span><br><span class="line">CF1=2nd order extrapolation constant 二阶外推常数</span><br><span class="line"></span><br><span class="line">CF2=2nd order extrapolation constant 二阶外推常数</span><br><span class="line"></span><br><span class="line">CF3=2nd order extrapolation constant 二阶外推常数</span><br><span class="line"></span><br><span class="line">QVAPOR=water vapor mixing ratio 水蒸气混合比，单位：kg kg-1</span><br><span class="line"></span><br><span class="line">QCLUD=cloud water mixing ratio 云水混合比，单位：kg kg-1</span><br><span class="line"></span><br><span class="line">QRAIN=rain water mixing ratio 雨水混合比，单位：kg kg-1</span><br><span class="line"></span><br><span class="line">QICE=ice mixing ratio 冰混合比，单位：kg kg-1</span><br><span class="line"></span><br><span class="line">QSNOW=snow mixing ratio 雪混合比，单位：kg kg-1</span><br><span class="line"></span><br><span class="line">QGRAUP=graupel mixing ratio 霰石混合比，单位：kg kg-1</span><br><span class="line"></span><br><span class="line">SHDMAX=annual max veg fraction 年最大植被覆盖度</span><br><span class="line"></span><br><span class="line">SHDMIX=annual min veg fraction 年最小植被覆盖度</span><br><span class="line"></span><br><span class="line">SNOALB=annual max snow albedo in fraction 年最大积雪反照率分数</span><br><span class="line"></span><br><span class="line">TSLB=soil temperature 土壤温度，单位：K</span><br><span class="line"></span><br><span class="line">SMOIS=soil moisture 土壤湿度，单位：m3 m-3</span><br><span class="line"></span><br><span class="line">SH2O=soil liquid water 土壤液态水，单位：m3 m-3</span><br><span class="line"></span><br><span class="line">SMCREL=relative soil moisture 相对土壤湿度</span><br><span class="line"></span><br><span class="line">SEAICE=sea ice flag</span><br><span class="line"></span><br><span class="line">XICEM=sea ice flag</span><br><span class="line"></span><br><span class="line">SFROFF=surface runoff 地表径流，单位：mm</span><br><span class="line"></span><br><span class="line">UDROFF=underground runoff 地下径流，单位：mm</span><br><span class="line"></span><br><span class="line">IVGTYP=dominant vegetation category 优势植被类别</span><br><span class="line"></span><br><span class="line">ISLTYP=dominant soil category 优势土壤类别</span><br><span class="line"></span><br><span class="line">VEGFRA=vegetation fraction 植被分数</span><br><span class="line"></span><br><span class="line">GRDFLX=ground heat flux 地面热通量，单位：W m-2</span><br><span class="line"></span><br><span class="line">ACGRDFLX=accumulated ground heat flux 热通量周围累积，单位：J m-2</span><br><span class="line"></span><br><span class="line">ACSNOM=accumulate melted snow 积雪融化，单位：kg m-2</span><br><span class="line"></span><br><span class="line">SNOW=snow water equivalent 雪水单量，单位：kg m-2</span><br><span class="line"></span><br><span class="line">SNOWH=physical snow depth 实际积雪深度，单位：m</span><br><span class="line"></span><br><span class="line">CANWAT=canopy water 冠层水，单位：kg m-2</span><br><span class="line"></span><br><span class="line">SSTSK=skin sea surface temperature 表层海水温度，单位：K</span><br><span class="line"></span><br><span class="line">COSZEN=cos of solar zenith angle 太阳天顶角的cos</span><br><span class="line"></span><br><span class="line">LAI=leaf area index 植被指数，单位：m-2/m-2</span><br><span class="line"></span><br><span class="line">VAR=orographic variance 地形变化</span><br><span class="line"></span><br><span class="line">MAPFAC_M=map scale factor on mass grid 质量栅格上的贴图比例因子</span><br><span class="line"></span><br><span class="line">MAPFAC_U=map scale factor on u-grid</span><br><span class="line"></span><br><span class="line">MAPFAC_V=map scale factor on v-grid</span><br><span class="line"></span><br><span class="line">F=Coriolis sine latitude term 科里奥利正弦纬度项，单位：s-1</span><br><span class="line"></span><br><span class="line">E=Coriolis cosine latitude term 科里奥利余弦纬度项，单位：s-1</span><br><span class="line"></span><br><span class="line">SINALPHA= local sine of map rotation 地图旋转的局部正弦，单位：s-1</span><br><span class="line"></span><br><span class="line">COSALPHA=local cosine of map rotation 地图旋转的局部余弦，单位：s-1</span><br><span class="line"></span><br><span class="line">HGT=terrain height 地形高度，单位：m</span><br><span class="line"></span><br><span class="line">TSK=surface skin temperature 地表温度，单位：m</span><br><span class="line"></span><br><span class="line">P_TOP=pressure top of the model 模式顶部压力，单位：Pa</span><br><span class="line"></span><br><span class="line">T00=base state temperature 基态气温，单位:K</span><br><span class="line"></span><br><span class="line">P00=base state pressure 基态压力，单位：Pa</span><br><span class="line"></span><br><span class="line">TLP= base state lapse rate 基态失效率</span><br><span class="line"></span><br><span class="line">TISO=temp at which the base T turns const 单位：K</span><br><span class="line"></span><br><span class="line">TLP_STRAT=base state lapse in stratosphere 平流层基态衰减，单位：K</span><br><span class="line"></span><br><span class="line">P_STRAT=base state pressure at bottom of stratosphere 平流层底部的基态压力，单位：Pa</span><br><span class="line"></span><br><span class="line">MAX_MSTFX=max map factor in domain 域中的最大地图因子</span><br><span class="line"></span><br><span class="line">RAINC=accumulated total cumulus precipitation 累积总积云降水量，单位：mm</span><br><span class="line"></span><br><span class="line">RAINSH=accumulated shallow cumulus precipitation 累积浅积云降水量，单位：mm</span><br><span class="line"></span><br><span class="line">RAINNC=accumulated total grid scale precipitation 累积总格网级降水量，单位：mm</span><br><span class="line"></span><br><span class="line">SNOWNC=accumulated total grid scale snow and ice 累积总格网级雪冰量，单位：mm</span><br><span class="line"></span><br><span class="line">GRAUPELNC=accumulated total grid scale graupel 累积总网格级霰量，单位：mm</span><br><span class="line"></span><br><span class="line">HAILNC=accumulated total grid scale hail 累积总格网尺度冰雹，单位：mm</span><br><span class="line"></span><br><span class="line">REFL_10CM=radar reflectivity (lamda=10cm) 雷达放射率，单位：dBZ</span><br><span class="line"></span><br><span class="line">CLDFRA= cloud fraction 云分数</span><br><span class="line"></span><br><span class="line">SWDOWN=downward short wave flux at ground surface 地表向下短波辐射通量，单位：W m-2</span><br><span class="line"></span><br><span class="line">GLW=downward long wave flux at ground surface 地表向下长波辐射通量，单位：W m-2</span><br><span class="line"></span><br><span class="line">SWNORM=normal short wave flux at ground surface 地表法向短波辐射通量，单位：W m-2</span><br><span class="line"></span><br><span class="line">ACSWUPT=accumulated upwelling shortwave flux at top 顶部累积上升流短波通量，单位：J m-2</span><br><span class="line"></span><br><span class="line">ACSWUPTC=ACCUMULATED UPWELLING CLEAR SKY SHORTWAVE FLUX AT TOP 顶部累积上升流晴空短波通量，单位：J m-2</span><br><span class="line"></span><br><span class="line">ACSWDNT=ACCUMULATED DOWNWELLING SHORTWAVE FLUX AT TOP</span><br><span class="line"></span><br><span class="line">顶部累积下涌短波通量，单位：J m-2</span><br><span class="line"></span><br><span class="line">ACSWDNTC=ACCUMULATED DOWNWELLING CLEAR SKY SHORTWAVE FLUX AT TOP 顶部累积下沉晴空短波通量，单位：J m-2</span><br><span class="line"></span><br><span class="line">ACSWUPB=ACCUMULATED UPWELLING SHORTWAVE FLUX AT BOTTOM 底部累积上升流短波通量，单位：J m-2</span><br><span class="line"></span><br><span class="line">ACSWUPBC=ACCUMULATED UPWELLING CLEAR SKY SHORTWAVE FLUX AT BOTTOM 底部累积上升流晴空短波通量，单位：J m-2</span><br><span class="line"></span><br><span class="line">ACSWDNB=ACCUMULATED DOWNWELLING SHORTWAVE FLUX AT BOTTOM 底部累积下涌短波通量，单位：J m-2</span><br><span class="line"></span><br><span class="line">ACSWDNBC=ACCUMULATED DOWNWELLING CLEAR SKY SHORTWAVE FLUX AT BOTTOM 底部累积下沉晴空短波通量，单位：J m-2</span><br><span class="line"></span><br><span class="line">ACLWUPT=ACCUMULATED UPWELLING LONGWAVE FLUX AT TOP 顶部累积上升流长波通量，单位：J m-2</span><br><span class="line"></span><br><span class="line">ACLWUPTC=ACCUMULATED UPWELLING CLEAR SKY LONGWAVE FLUX AT TOP 顶部累积上升流晴空长波通量，单位：J m-2</span><br><span class="line"></span><br><span class="line">ACLWDNT=ACCUMULATED DOWNWELLING LONGWAVE FLUX AT TOP 顶部累积下涌长波通量，单位：J m-2</span><br><span class="line"></span><br><span class="line">ACLWDNTC=ACCUMULATED DOWNWELLING CLEAR SKY LONGWAVE FLUX AT TOP 顶部累积下沉晴空长波通量，单位：J m-2</span><br><span class="line"></span><br><span class="line">ACLWUPB=ACCUMULATED UPWELLING LONGWAVE FLUX AT BOTTOM 底部累积上升流长波通量，单位：J m-2</span><br><span class="line"></span><br><span class="line">ACLWUPBC=ACCUMULATED UPWELLING CLEAR SKY LONGWAVE FLUX AT BOTTOM 底部累积上升流晴空长波通量，单位：J m-2</span><br><span class="line"></span><br><span class="line">ACLWDNB=ACCUMULATED DOWNWELLING LONGWAVE FLUX AT BOTTOM 底部累积下涌长波通量，单位：J m-2</span><br><span class="line"></span><br><span class="line">ACLWDNBC=ACCUMULATED DOWNWELLING CLEAR SKY LONGWAVE FLUX AT BOTTOM 底部累积下沉晴空长波通量，单位：J m-2</span><br><span class="line"></span><br><span class="line">SWUPT=INSTANTANEOUS UPWELLING SHORTWAVE FLUX AT TOP 顶部瞬时上升流短波通量，单位：W m-2</span><br><span class="line"></span><br><span class="line">SWUPTC=INSTANTANEOUS UPWELLING CLEAR SKY SHORTWAVE FLUX AT TOP 顶部瞬时上升流晴空短波通量，单位：W m-2</span><br><span class="line"></span><br><span class="line">SWDNT=INSTANTANEOUS DOWNWELLING SHORTWAVE FLUX AT TOP 顶部瞬时下沉短波通量 ，单位：W m-2</span><br><span class="line"></span><br><span class="line">SWDNTC=INSTANTANEOUS DOWNWELLING CLEAR SKY SHORTWAVE FLUX AT TOP 顶部瞬时下沉晴空短波通量，单位：W m-2</span><br><span class="line"></span><br><span class="line">SWUPB=INSTANTANEOUS UPWELLING SHORTWAVE FLUX AT BOTTOM 底部瞬时上升流短波通量，单位：W m-2</span><br><span class="line"></span><br><span class="line">SWUPBC=INSTANTANEOUS UPWELLING CLEAR SKY SHORTWAVE FLUX AT BOTTOM 底部瞬时上升流晴空短波通量，单位：W m-2</span><br><span class="line"></span><br><span class="line">SWDNB=INSTANTANEOUS DOWNWELLING SHORTWAVE FLUX AT BOTTOM 底部瞬时下沉短波通量，单位：W m-2</span><br><span class="line"></span><br><span class="line">SWDNBC=INSTANTANEOUS DOWNWELLING CLEAR SKY SHORTWAVE FLUX AT BOTTOM 底部瞬时下沉晴空短波通量，单位：W m-2</span><br><span class="line"></span><br><span class="line">LWUPT=INSTANTANEOUS UPWELLING LONGWAVE FLUX AT TOP 顶部瞬时上升流长波通量，单位：W m-2</span><br><span class="line"></span><br><span class="line">LWUPTC=INSTANTANEOUS UPWELLING CLEAR SKY LONGWAVE FLUX AT TOP 顶部瞬时上升流晴空长波通量，单位：W m-2</span><br><span class="line"></span><br><span class="line">LWDNT=INSTANTANEOUS DOWNWELLING LONGWAVE FLUX AT TOP 顶部瞬时下沉长波通量，单位：W m-2</span><br><span class="line"></span><br><span class="line">LWDNTC=INSTANTANEOUS DOWNWELLING CLEAR SKY LONGWAVE FLUX AT TOP 顶部瞬时下沉晴空长波通量，单位：W m-2</span><br><span class="line"></span><br><span class="line">LWUPB=INSTANTANEOUS UPWELLING LONGWAVE FLUX AT BOTTOM</span><br><span class="line"></span><br><span class="line">底部瞬时上升流长波通量，单位：W m-2</span><br><span class="line"></span><br><span class="line">LWUPBC=INSTANTANEOUS UPWELLING CLEAR SKY LONGWAVE FLUX AT BOTTOM 底部瞬时上升流晴空长波通量，单位：W m-2</span><br><span class="line"></span><br><span class="line">LWDNB=INSTANTANEOUS DOWNWELLING LONGWAVE FLUX AT BOTTOM 底部瞬时下沉长波通量，单位：W m-2</span><br><span class="line"></span><br><span class="line">LWDNBC=INSTANTANEOUS DOWNWELLING CLEAR SKY LONGWAVE FLUX AT BOTTOM 底部瞬时下沉晴空长波通量，单位：W m-2</span><br><span class="line"></span><br><span class="line">OLR=TOA OUTGOING LONG WAVE TOA输出长波，单位：W m-2</span><br><span class="line"></span><br><span class="line">ALBEDO=ALBEDO 反照率</span><br><span class="line"></span><br><span class="line">ALBBCK=BACKGROUND ALBEDO 背景反照率</span><br><span class="line"></span><br><span class="line">EMISS=SURFACE EMISSIVITY 表面发射率</span><br><span class="line"></span><br><span class="line">NOAHRES=RESIDUAL OF THE NOAH SURFACE ENERGY BUDGET NOAH地表能量收支残差，单位：W m-2</span><br><span class="line"></span><br><span class="line">TMN=SOIL TEMPERATURE AT LOWER BOUNDARY 下边界土壤温度，单位:K</span><br><span class="line"></span><br><span class="line">XLAND=LAND MASK (1 FOR LAND, 2 FOR WATER)</span><br><span class="line"></span><br><span class="line">UST=UIN SIMILARITY THEORY 相似理论中的U*,单位：m s-1</span><br><span class="line"></span><br><span class="line">PBLH=PBL HEIGHT 大气边界层高度，单位：m</span><br><span class="line"></span><br><span class="line">HFX=UPWARD HEAT FLUX AT THE SURFACE 表面向上热流密度,单位：W m-2</span><br><span class="line"></span><br><span class="line">QFX=UPWARD MOISTURE FLUX AT THE SURFACE 表面向上的水分通量,单位：kg m-2 s-1</span><br><span class="line"></span><br><span class="line">LH=LATENT HEAT FLUX AT THE SURFACE 表面潜热通量，单位：W m-2</span><br><span class="line"></span><br><span class="line">ACHFX=ACCUMULATED UPWARD HEAT FLUX AT THE SURFACE 表面累积向上热流，单位：J m-2</span><br><span class="line"></span><br><span class="line">ACLHF=ACCUMULATED UPWARD LATENT HEAT FLUX AT THE SURFACE 地表累积向上潜热通量，单位：J m-2</span><br><span class="line"></span><br><span class="line">SNOWC=FLAG INDICATING SNOW COVERAGE (1 FOR SNOW COVER) 指示积雪覆盖的旗帜（1个用于积雪覆盖）</span><br><span class="line"></span><br><span class="line">SR=fraction of frozen precipitation 冻结降水分数</span><br><span class="line"></span><br><span class="line">PCB=base state dry air mass in column 柱内基态干空气质量，单位：Pa</span><br><span class="line"></span><br><span class="line">PC=perturbation dry air mass in column 柱内干空气质量扰动，单位：Pa</span><br><span class="line"></span><br><span class="line">LANDMASK=LAND MASK (1 FOR LAND, 0 FOR WATER)</span><br><span class="line"></span><br><span class="line">LAKEMASK=LAKE MASK (1 FOR LAKE, 0 FOR NON-LAKE)</span><br><span class="line"></span><br><span class="line">SST=SEA SURFACE TEMPERATURE 单位：K</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>WRF-DA</title>
    <url>/2022/05/01/Tool/WRF-DA/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>参考1：<a href="https://misslh88.github.io/2023/11/18/WRFDA%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/#%E5%AE%89%E8%A3%85WRFDA-for-3DVAR-Run">https://misslh88.github.io/2023/11/18/WRFDA%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/#%E5%AE%89%E8%A3%85WRFDA-for-3DVAR-Run</a></p>
<p>参考2：<a href="https://zhuanlan.zhihu.com/p/565561915">https://zhuanlan.zhihu.com/p/565561915</a></p>
<p><a href="https://www.heywhale.com/mw/project/62f0cee15f0fe96a599eb092">https://www.heywhale.com/mw/project/62f0cee15f0fe96a599eb092</a></p>
<h2 id="安装WRFDA"><a href="#安装WRFDA" class="headerlink" title="安装WRFDA"></a>安装WRFDA</h2><p>不需要单独下载WRFDA的安装包，现在WRFDA、WRFPLUS都是内置于一开始安装的WRF安装包中了。但是不可以在已经安装好的WRF目录下编译WRFDA。需要将WRF的压缩包重新解压，并重命名为WRFDA、WRFPLUS。<br>如果有4dVar的需求，需要先安装WRFPLUS，不需要4Dvar则不需要安装。</p>
<p>官方的教程在以下网址中：</p>
<p><a href="https://www2.mmm.ucar.edu/wrf/users/docs/user_guide_v4/v4.4/users_guide_chap6.html#_Obtaining_WRFDA_Source">https://www2.mmm.ucar.edu/wrf/users/docs/user_guide_v4/v4.4/users_guide_chap6.html#_Obtaining_WRFDA_Source</a></p>
<h3 id="安装WRFDA-for-3DVAR-Run"><a href="#安装WRFDA-for-3DVAR-Run" class="headerlink" title="安装WRFDA for 3DVAR Run"></a>安装WRFDA for 3DVAR Run</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">解压WRF安装包</span><br><span class="line">gunzip &lt;filename&gt;.tar.gz</span><br><span class="line">tar -xvf &lt;filename&gt;.tar</span><br><span class="line">mv WRF WRFDA</span><br><span class="line">cd WRFDA</span><br><span class="line">./configure wrfda</span><br><span class="line">15 # 与WRF的安装中选择相同</span><br><span class="line">./compile all_wrfvar &gt;&amp; compile.out # 大概13分钟左右</span><br><span class="line">ls -l var/build/*exe var/obsproc/src/obsproc.exe</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">生成44个.exe文件表示成功</span></span><br></pre></td></tr></table></figure>

<p>以上，安装之后，3Dvar就安装成功了。</p>
<p>可以为安装好的WRFDA添加一条路径：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export WRFDA_DIR=$&#123;your_source_code_dir&#125;/WRFDA</span><br></pre></td></tr></table></figure>



<h2 id="（非必要）安装WRFPLUS-and-WRFDA-for-4DVAR-Run"><a href="#（非必要）安装WRFPLUS-and-WRFDA-for-4DVAR-Run" class="headerlink" title="（非必要）安装WRFPLUS and WRFDA for 4DVAR Run"></a>（非必要）安装WRFPLUS and WRFDA for 4DVAR Run</h2><p>！！！ 如果不需要使用4DVAR则不需要安装，我安装到一半才发现。</p>
<p>安装WRFPLUS：</p>
<p>As with 3D-Var, “serial” means single-processor, and “dmpar” means Distributed Memory Parallel (MPI). Be sure to select the same option for WRFPLUS as you will use for WRFDA.</p>
<p>安装或者编译WRFDA和WRFPLUS的时候，都要选择相同的’serial’或者‘dmpar’的选项，代表单线程或者多线程。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Download the desired WRFPLUS archive</span><br><span class="line">gunzip &lt;filename&gt;.tar.gz</span><br><span class="line">tar -xvf &lt;filename&gt;.tar</span><br><span class="line">cd WRFPLUSV3</span><br><span class="line">./configure wrfplus</span><br><span class="line">./compile em_real</span><br></pre></td></tr></table></figure>

<p>安装好WRFPLUS后，要把它加入到路径当中：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">setenv WRFPLUS_DIR $&#123;your_source_code_dir&#125;/WRFPLUS</span><br><span class="line">或者</span><br><span class="line">export WRFPLUS_DIR=$&#123;your_source_code_dir&#125;/WRFPLUS</span><br></pre></td></tr></table></figure>



<h2 id="运行OBSPROC（for-3Dvar）"><a href="#运行OBSPROC（for-3Dvar）" class="headerlink" title="运行OBSPROC（for 3Dvar）"></a>运行OBSPROC（for 3Dvar）</h2><p>Observation Preprocessor (OBSPROC)</p>
<p>这一部分是将同化需要使用的观测资料处理成WRFDA可以使用的形式。</p>
<h2 id="运行WRFDA"><a href="#运行WRFDA" class="headerlink" title="运行WRFDA"></a>运行WRFDA</h2><h3 id="手册示例（3Dvar）"><a href="#手册示例（3Dvar）" class="headerlink" title="手册示例（3Dvar）"></a>手册示例（3Dvar）</h3><p><strong>数据准备：</strong></p>
<ul>
<li>初猜场：nc格式，使用WPS+real.exe产生，或者直接是WRF运行的结果。</li>
<li>观测资料：ASCII格式，或者PREPBUFR格式，使用OBSPROC产生。</li>
<li>背景场误差数据：二进制数据(.dat)，通过WRFDA_gen_be_utility或者generic CV3.</li>
</ul>
<p>CV3是NCEP背景误差协方差（<a href="https://blog.csdn.net/Sun_wenxuan/article/details/132164626%EF%BC%89">https://blog.csdn.net/Sun_wenxuan/article/details/132164626）</a><br>从理论上讲，<strong>CV3 BE是一个通用的背景错误统计文件，可用于任何情况。</strong>在您自己的情况下使用 CV3 非常简单。要在您的情况下使用 CV3 BE 文件，请在工作目录中的 namelist.input 中的 &amp;wrfvar7 中设置 cv_options&#x3D;3，并使用位于 WRFDA&#x2F;var&#x2F;run&#x2F;be.dat.cv3 中的 be.dat。</p>
<p>将这些WRFDA需要读入的文件存放在任意的可读文件夹中，将该文件夹的路径设置为<strong>DAT_DIR</strong>。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export DAT_DIR=.....</span><br></pre></td></tr></table></figure>

<p>创建一个同化工作文件夹，比如<strong>WRFDA_DIR&#x2F;workdir</strong>，将这个路径设置为<strong>WORK_DIR</strong>。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export WORK_DIR=$WRFDA_DIR/workdir</span><br></pre></td></tr></table></figure>

<p>然后运行以下命令，在创建的工作目录中，软连接所有需要的数据文件和可执行程序，创建一个namelist.input文件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd $WORK_DIR</span><br><span class="line">cp $DAT_DIR/namelist.input.3dvar namelist.input</span><br><span class="line">ln -sf $WRFDA_DIR/run/LANDUSE.TBL</span><br><span class="line">ln -sf $DAT_DIR/rc/2008020512/wrfinput_d01 ./fg</span><br><span class="line">ln -sf $DAT_DIR/ob/2008020512/obs_gts_2008-02-05_12:00:00.3DVAR ./ob.ascii</span><br><span class="line">ln -sf $WRFDA_DIR/var/da/da_wrfvar.exe</span><br></pre></td></tr></table></figure>

<p>对namelist.input文件进行修改，根据需要设置参数。</p>
<p>修改之后运行程序</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./da_wrfvar.exe &gt;&amp; wrfda.log</span><br></pre></td></tr></table></figure>

<h3 id="namelist-input文件解读"><a href="#namelist-input文件解读" class="headerlink" title="namelist.input文件解读"></a>namelist.input文件解读</h3><p>专指WRFDA的namelist.input文件。</p>
<p><strong>wrfvar1:</strong> 关于输出文件的细节，关于是否开启4dvar。</p>
<p><strong>wrfvar2:</strong> 如果分析场和初猜场的时间差，大于analysis_accu的话，模式会终止；关于三维风场的一些设置。</p>
<p><strong>wrfvar3:</strong> 读入文件的格式等。</p>
<p><strong>wrfvar4:</strong> 关于读入的观测资料选择的一些设置。</p>
<p><strong>wrfvar5:</strong> 关于观测资料质量控制标准的一些设置。</p>
<table>
<thead>
<tr>
<th>put_rand_seed</th>
<th>false</th>
<th>For RANDOMCV: setting to “true” allows you to enter your own seed numbers (see &amp;wrfvar11) to generate random background perturbations.</th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<p><strong>wrfvar6:</strong> 关于极小化的一些选项。</p>
<p><strong>wrfvar7:</strong> 关于一些背景误差协方差尺度参数的设置，针对1-流函数，2-不平衡位势，3-不平衡温度，4-假相对湿度，5-不平衡表面气压。</p>
<table>
<thead>
<tr>
<th>cv_options</th>
<th>5</th>
<th>3: NCEP Background Error model5: NCAR Background Error model (default)6: Use of moisture-multivariate background error statistics (CV6)7: New NCAR Background Error model (CV7)</th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th><em>CV option</em></th>
<th><em>Data source</em></th>
<th><em>Control variables</em></th>
<th><em>cv_options &#x3D;</em></th>
</tr>
</thead>
<tbody><tr>
<td><strong>CV3</strong></td>
<td>Provided be.dat file</td>
<td>ψ, χu, Tu, q, Ps,u</td>
<td>3</td>
</tr>
<tr>
<td><strong>CV5</strong></td>
<td>GEN_BE</td>
<td>ψ, χu, Tu, RHs, Ps,u</td>
<td>5</td>
</tr>
<tr>
<td><strong>CV6</strong></td>
<td>GEN_BE</td>
<td>ψ, χu, Tu, RHs,u, Ps,u</td>
<td>6</td>
</tr>
<tr>
<td><strong>CV7</strong></td>
<td>GEN_BE</td>
<td>u, v, T, RHs, Ps</td>
<td>7</td>
</tr>
</tbody></table>
<p><strong>wrfvar8:</strong> 未开发使用。</p>
<p><strong>wrfvar9:</strong> 追踪程序运行中的一些细节。</p>
<p><strong>wrfvar10:</strong> 提供给程序开发者，对伴随模式和梯度计算进行测试。</p>
<p><strong>wrfvar11:</strong></p>
<table>
<thead>
<tr>
<th>seed_array1</th>
<th>1</th>
<th>For RANDOMCV when put_rand_seed&#x3D;true, first integer for seeding the random function</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>seed_array2</td>
<td>1</td>
<td>For RANDOMCV when put_rand_seed&#x3D;true, second integer for seeding the random function</td>
<td></td>
</tr>
</tbody></table>
<p>这两个参数控制着产生的随机样本，一般将试验时间写成整数形式作为seed1，将想要产生的集合成员数目作为seed2。注意：一般不设置seed为0.</p>
<p><strong>wrfvar12:</strong> 关于WPEC动力学设置。</p>
<p><strong>wrfvar13:</strong> 不懂。</p>
<p><strong>wrfvar14:</strong> 关于辐射。</p>
<p><strong>wrfvar15:</strong> 关于伪观测的坐标设置，需要和wrfvar19一起设置。</p>
<p><strong>wrfvar16:</strong> 混合DA的选项。</p>
<table>
<thead>
<tr>
<th>alphacv_method</th>
<th>2</th>
<th>1: ensemble perturbations in control variable space2: ensemble perturbations in model variable space</th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<p><strong>wrfvar17:</strong> 关于做什么。</p>
<table>
<thead>
<tr>
<th>analysis_type</th>
<th>“3D-VAR”</th>
<th>“3D-VAR”: 3D-VAR mode (default); “QC-OBS”: 3D-VAR mode plus extra filtered_obs output;”VERIFY”: verification mode. WRFDA resets check_max_iv&#x3D;.false. and ntmax&#x3D;0;”RANDOMCV”: for creating ensemble perturbations</th>
</tr>
</thead>
<tbody><tr>
<td>n_randomcv</td>
<td>1</td>
<td>number of ensemble to be generated in one run. New in version 4.2.</td>
</tr>
</tbody></table>
<p><strong>wrfvar18:</strong> 就一个变量。</p>
<table>
<thead>
<tr>
<th>analysis_date</th>
<th>“2002-08-03_00:00:00.0000”</th>
<th>specify the analysis time. It should be consistent with the first guess time; if time difference between analysis_date and date info read in from first guess is larger than the <strong>&amp;wrfvar2</strong> setting “analysis_accu”, WRFDA will abort.</th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<p><strong>wrfvar19:</strong> 与wrfvar15配合，设置伪变量是什么。</p>
<p><strong>wrfvar20:</strong> 网址。</p>
<p><strong>wrfvar21,22:</strong> 同化时间窗。</p>
<p><strong>perturbation:</strong> 关于4Dvar的选项。</p>
<p><strong>radar_da:</strong> 关于雷达的选项。</p>
<h3 id="RANDOMCV产生初始扰动"><a href="#RANDOMCV产生初始扰动" class="headerlink" title="RANDOMCV产生初始扰动"></a>RANDOMCV产生初始扰动</h3><p>control variable space (“psi”,”chi_u”,”t_u”,”rh”,”ps_u”)</p>
<p>除了前面提到的变分方法外，WRFDA系统还支持集成和混合集成&#x2F;变分同化方法。为了利用这些方法，有一个整体的预测是必要的。WRFDA有一个内置的方法来生成集合初始条件，称为RANDOMCV。RANDOMCV的工作原理是在控制变量空间的分析中加入随机噪声。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&amp;wrfvar5</span><br><span class="line">put_rand_seed  true:  enter your own seed numbers to generate random background perturbations. The advantage of this setting is that the same seed numbers will always produce the same perturbation</span><br><span class="line">false: (default behavior) perturbations will be generated “randomly” and give new perturbations each time</span><br><span class="line">&amp;wrfvar11</span><br><span class="line">seed_array1    First integer for seeding the random function (default: 1)</span><br><span class="line">seed_array2    Second integer for seeding the random function (default: 1) It is not necessary to change both seeds to get different perturbations</span><br><span class="line">&amp;wrfvar17</span><br><span class="line">analysis_type  Set this to ‘RANDOMCV’ to use the RANDOMCV capability</span><br><span class="line">n_randomcv     1 (default), number of ensemble to be generated in one run. New in version 4.2.</span><br></pre></td></tr></table></figure>

<p>由于扰动是在控制变量空间中进行的，所以扰动的一般模式将取决于背景误差。您应该能够使用随机cv (CV3, CV5, CV6或CV7)的任何背景错误选项。此外，这意味着你可以通过分别修改背景误差方差和长度缩放变量来控制它们的大小和长度尺度:在wrfvar7中修改。</p>
<h3 id="3DEnVar产生初始扰动"><a href="#3DEnVar产生初始扰动" class="headerlink" title="3DEnVar产生初始扰动"></a>3DEnVar产生初始扰动</h3><p>要进行3DEnVar，需要提供集合平均和扰动数据，这些在hybird中不会产生，需要提前提供，或许还是要按照RANDOMCV的方式产生。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export WORK_DIR=your_hybrid_path</span><br><span class="line">export DAT_DIR=your_data_path</span><br><span class="line">cd $WORK_DIR</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>WZCS</title>
    <url>/2022/05/01/Tool/WZCS/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="x2F-bahsrc"><a href="#x2F-bahsrc" class="headerlink" title="~&#x2F;.bahsrc"></a>~&#x2F;.bahsrc</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">.bashrc</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Source global definitions</span></span><br><span class="line">if [ -f /etc/bashrc ]; then</span><br><span class="line">	. /etc/bashrc</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Uncomment the following line <span class="keyword">if</span> you don<span class="string">&#x27;t like systemctl&#x27;</span>s auto-paging feature:</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">export</span> SYSTEMD_PAGER=</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">User specific aliases and <span class="built_in">functions</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">======== <span class="built_in">alias</span> ===================</span></span><br><span class="line">alias rm=&#x27;rm -i&#x27;</span><br><span class="line">alias ls=&#x27;ls --color&#x27;</span><br><span class="line">alias LS=&#x27;ls --color&#x27;</span><br><span class="line">alias vs=&#x27;code&#x27;</span><br><span class="line"></span><br><span class="line">alias count=&#x27;ls -l | grep &quot;^-&quot; | wc -l&#x27;</span><br><span class="line">alias auto=&#x27;crontab -e&#x27;</span><br><span class="line"></span><br><span class="line">alias work=&#x27;cd /work/home/acyii6v8kt/WORK&#x27;</span><br><span class="line">alias plots=&#x27;cd /work/home/acyii6v8kt/PLOTS&#x27;</span><br><span class="line">alias data=&#x27;cd /work/home/acyii6v8kt/DATA&#x27;</span><br><span class="line">alias out=&#x27;cd /work/home/acyii6v8kt/DATA/OUT&#x27;</span><br><span class="line">alias WPS=&#x27;cd /work/home/acyii6v8kt/WORK/Downscaling/WPS&#x27;</span><br><span class="line">alias WRF=&#x27;cd /work/home/acyii6v8kt/WORK/Downscaling/WRF&#x27;</span><br><span class="line">alias HYX=&#x27;cd /work/home/ac8ulpf0lu&#x27;</span><br><span class="line"></span><br><span class="line">alias load_ncl=&#x27;module load mathlib/ncl_ncarg/6.5.0/gnu&#x27;</span><br><span class="line">alias load_python=&#x27;module load apps/python/3.8.10&#x27;</span><br><span class="line">alias unload_ncl=&#x27;module unload mathlib/ncl_ncarg/6.5.0/gnu&#x27;</span><br><span class="line">alias unload_python=&#x27;module unload apps/python/3.8.10&#x27;</span><br><span class="line"></span><br><span class="line">alias source_venv=&#x27;source venv/bin/activate&#x27;</span><br><span class="line"></span><br><span class="line">alias add_gitignore=&#x27;find . -size +100M | cat &gt;&gt; .gitignore&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">alias rm=&quot;sh /work/home/acyii6v8kt/.remove.sh&quot;</span><br><span class="line">alias delete=&quot;/usr/bin/rm&quot;</span><br><span class="line">alias auto=&quot;crontab -e&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">======== envs ===================</span></span><br><span class="line"></span><br><span class="line">export CC=&#x27;icc -no-multibyte-chars&#x27;</span><br><span class="line">export CXX=icpc</span><br><span class="line">export FC=ifort</span><br><span class="line"></span><br><span class="line">export LANG=en_US.UTF-8</span><br><span class="line">export LC_ALL=en_US.UTF-8</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">======== PATH ===================</span></span><br><span class="line">export LD_LIBRARY_PATH=/work/home/acyii6v8kt/APP/lib:$LD_LIBRARY_PATH</span><br><span class="line"></span><br><span class="line">export PATH=/work/home/acyii6v8kt/APP/bin:$PATH</span><br><span class="line">export PATH=/public/software/mathlib/udunits/2.2.26/intel/bin:$PATH</span><br><span class="line">export LD_LIBRARY_PATH=/work/home/acyii6v8kt/APP/lib:$LD_LIBRARY_PATH</span><br><span class="line"></span><br><span class="line">export DATA=/work/home/acyii6v8kt/DATA/</span><br><span class="line">export OUT=/work/home/acyii6v8kt/DATA/OUT/</span><br><span class="line">export WORK=/work/home/acyii6v8kt/WORK/</span><br><span class="line">export PLOTS=/work/home/acyii6v8kt/PLOTS/</span><br><span class="line">export LD_LIBRARY_PATH=/public/software/apps/R-3.6.3/lib64/R/lib:$LD_LIBRARY_PATH</span><br><span class="line">export LD_LIBRARY_PATH=/public/software/mathlib/udunits/2.2.26/intel/lib:$LD_LIBRARY_PATH</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">export UDUNITS2_INCLUDE=/public/software/mathlib/udunits/2.2.26/intel/include</span><br><span class="line">export UDUNITS2_LIB=/public/software/mathlib/udunits/2.2.26/intel/lib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">export PATH=/work/home/acyii6v8kt/software/ruby/install/bin:$PATH</span><br><span class="line">export GEM_HOME=/work/home/acyii6v8kt/software/ruby/install/lib/ruby/gems</span><br><span class="line"></span><br><span class="line">export PATH=/work/home/acyii6v8kt/software/rocoto/bin:$PATH</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">======== <span class="keyword">for</span> Problem with the SSL CA cert ==========</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">python -c <span class="string">&quot;import certifi; print(certifi.where())&quot;</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">pip config <span class="built_in">set</span> global.cert path/to/ca-bundle.crt</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">======== <span class="keyword">for</span> intel WRF simulation ========</span></span><br><span class="line">source /work/home/acyii6v8kt/Model/WRF/set_wrf_intel_env</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">======== <span class="keyword">for</span> activate <span class="built_in">local</span> conda <span class="built_in">env</span> ====</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">source</span> activate my_conda</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">export C_INCLUDE_PATH=/usr/include/:$C_INCLUDE_PATH</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">-------------------------------------------------------------------------------</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#PALM##</span></span></span><br><span class="line">export PALM_BIN=/work/home/acyii6v8kt/WORK/Palm/trunk/SCRIPTS</span><br><span class="line">export PATH=$PALM_BIN:$PATH</span><br><span class="line"></span><br><span class="line">export PATH=/work/home/acyii6v8kt/WORK/Palm/palm_model_system-v23.10/bin:$&#123;PATH&#125;</span><br></pre></td></tr></table></figure>





<h2 id="Palm-env"><a href="#Palm-env" class="headerlink" title="Palm.env"></a>Palm.env</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source ~/.bashrc</span><br><span class="line"></span><br><span class="line">export LMOD_CMD=$path_install/Lmod/lmod/lmod/libexec/lmod</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">export</span> MODULEPATH=/work/home/ac8ulpf0lu/basic_modules:<span class="variable">$MODULEPATH</span></span></span><br><span class="line">export BASH_ENV=/work/home/ac8ulpf0lu/software/Lmod/lmod/lmod/init/profile</span><br><span class="line">source $BASH_ENV</span><br><span class="line"></span><br><span class="line">export MPI_CC=mpiicc</span><br><span class="line">export MPI_CXX=mpiicpc</span><br><span class="line">export MPI_FC=mpiifort</span><br><span class="line"></span><br><span class="line">module purge</span><br><span class="line">module load anaconda3/5.2.0 </span><br><span class="line">source activate Palm</span><br><span class="line">module load compiler/intel/2021.3.0</span><br><span class="line">module load mpi/intelmpi/2021.3.0</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">module use /work/home/acyii6v8kt/hpc-stack/modulefiles/stack</span></span><br><span class="line">module use /work/home/ac8ulpf0lu/HYX_modules/hafs_wuzhen/modulefiles/stack</span><br><span class="line">module load hpc hpc-intel hpc-impi</span><br><span class="line">module load compiler/cmake/3.23.3</span><br><span class="line">module load hpc-python/3.11.5 </span><br><span class="line">module load pnetcdf/1.12.1</span><br><span class="line">module load netcdf/4.9.2</span><br><span class="line">module load mathlib/ncl_ncarg/6.5.0/gnu</span><br><span class="line">module load mathlib/cdo/1.7.2/intel</span><br><span class="line"></span><br><span class="line">export HAFS_dir=/work/home/ac8ulpf0lu/cdscrub/wuzhen.v1.0.6/com</span><br><span class="line">export OUTPUT_dir=/work/home/acyii6v8kt/WORK/Palm/Operational/OUTPUT</span><br><span class="line"></span><br><span class="line">export lon=&quot;99&quot;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Wget</title>
    <url>/2022/05/01/Tool/Wget/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="使用wget命令下载父目录下的整个子目录"><a href="#使用wget命令下载父目录下的整个子目录" class="headerlink" title="使用wget命令下载父目录下的整个子目录"></a>使用wget命令下载父目录下的整个子目录</h3><p>使用wget命令下载父目录下的整个子目录，命令如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -r --level=0 -E --ignore-length -x -k -p -erobots=off -np -N http://www.remote.com/remote/presentation/dir</span><br></pre></td></tr></table></figure>

<p>将会下载远程服务器的整个文件夹下到你电脑当前文件目录下</p>
<h3 id="如何使用-wget-下载一个目录下的所有文件"><a href="#如何使用-wget-下载一个目录下的所有文件" class="headerlink" title="如何使用 wget 下载一个目录下的所有文件"></a>如何使用 wget 下载一个目录下的所有文件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -r -np -nH -R index.html http://url/including/files/you/want/to/download/</span><br></pre></td></tr></table></figure>

<p>各个参数的含义：</p>
<p>-r : 遍历所有子目录<br>-np : 不到上一层子目录去<br>-nH : 不要将文件保存到主机名文件夹<br>-R index.html : 不下载 index.html 文件</p>
<h3 id="wget下载整个网站或特定目录"><a href="#wget下载整个网站或特定目录" class="headerlink" title="wget下载整个网站或特定目录"></a>wget下载整个网站或特定目录</h3><p>需要下载某个目录下面的所有文件。命令如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -c -r -np -k -L -p www.xxx.org/pub/path/</span><br></pre></td></tr></table></figure>

<p>在下载时。有用到外部域名的图片或连接。如果需要同时下载就要用-H参数。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -np -nH -r --span-hosts www.xxx.org/pub/path/</span><br></pre></td></tr></table></figure>

<p>-c 断点续传<br>-r 递归下载，下载指定网页某一目录下（包括子目录）的所有文件<br>-nd 递归下载时不创建一层一层的目录，把所有的文件下载到当前目录<br>-np 递归下载时不搜索上层目录，如wget -c -r <a href="http://www.xxx.org/pub/path/">www.xxx.org/pub/path/</a><br>没有加参数-np，就会同时下载path的上一级目录pub下的其它文件<br>-k 将绝对链接转为相对链接，下载整个站点后脱机浏览网页，最好加上这个参数<br>-L 递归时不进入其它主机，如wget -c -r <a href="http://www.xxx.org/">www.xxx.org/</a><br>如果网站内有一个这样的链接：<br><a href="http://www.yyy.org,不加参数-l,就会像大火烧山一样,会递归下载www.yyy.org网站/">www.yyy.org，不加参数-L，就会像大火烧山一样，会递归下载www.yyy.org网站</a><br>-p 下载网页所需的所有文件，如图片等<br>-A 指定要下载的文件样式列表，多个样式用逗号分隔<br>-i 后面跟一个文件，文件内指明要下载的URL</p>
<p>还有其他的用法，我从网上搜索的，也一并写上来，方便以后自己使用。</p>
<p><strong>wget的常见用法</strong></p>
<p>wget的使用格式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Usage: wget [OPTION]… [URL]…</span><br></pre></td></tr></table></figure>

<p>用wget做站点镜像:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -r -p -np -k http://dsec.pku.edu.cn/~usr_name/</span><br></pre></td></tr></table></figure>

<p>或者</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -m http://www.tldp.org/LDP/abs/html/</span><br></pre></td></tr></table></figure>

<p>在不稳定的网络上下载一个部分下载的文件，以及在空闲时段下载</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -t 0 -w 31 -c http://dsec.pku.edu.cn/BBC.avi -o down.log &amp;</span><br></pre></td></tr></table></figure>

<p>或者从filelist读入要下载的文件列表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -t 0 -w 31 -c -B ftp://dsec.pku.edu.cn/linuxsoft -i filelist.txt -o</span><br><span class="line">down.log &amp;</span><br></pre></td></tr></table></figure>

<p>上面的代码还可以用来在网络比较空闲的时段进行下载。我的用法是:在mozilla中将不方便当时下载的URL链接拷贝到内存中然后粘贴到文件filelist.txt中，在晚上要出去系统前执行上面代码的第二条。</p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>WRF</title>
    <url>/2022/05/01/Tool/WRF/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Install-WRF"><a href="#Install-WRF" class="headerlink" title="Install WRF"></a>Install WRF</h2><h4 id="1-安装spack，并配置环境变量"><a href="#1-安装spack，并配置环境变量" class="headerlink" title="1. 安装spack，并配置环境变量"></a>1. 安装spack，并配置环境变量</h4><h5 id="1-1-克隆spack仓库到本地"><a href="#1-1-克隆spack仓库到本地" class="headerlink" title="1.1 克隆spack仓库到本地"></a>1.1 克隆spack仓库到本地</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将spack克隆到~/spack文件夹。克隆位置可改</span></span><br><span class="line">git clone -c feature.manyFiles=true https://github.com/spack/spack.git ~/spack</span><br></pre></td></tr></table></figure>

<p>如果你无法连接到互联网，可以在github网页上，下载仓库的zip文件，然后解压到你所需要的位置。</p>
<h5 id="1-2-将spack-setup环境命令加载到bashrc中"><a href="#1-2-将spack-setup环境命令加载到bashrc中" class="headerlink" title="1.2 将spack setup环境命令加载到bashrc中"></a>1.2 将spack setup环境命令加载到bashrc中</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo &quot;source ~/spack/share/spack/setup-env.sh&quot; &gt;&gt; ~/.bashrc</span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure>

<h5 id="1-3-寻找编译器"><a href="#1-3-寻找编译器" class="headerlink" title="1.3 寻找编译器"></a>1.3 寻找编译器</h5><p>spack可以搜索你的环境变量<code>PATH</code>中所有编译器的可执行文件，并将其全路径保存到<code>~/.spack/linux/compilers.yaml</code>文件中。</p>
<p>假设你的超算上已使用module等方法管理编译器，你也可以先load你需要用到的编译器。总之，你需要保证你的编译器的可执行文件位于系统的<code>PATH</code>环境变量中。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">spack compiler find</span><br></pre></td></tr></table></figure>

<p>当然你也可以打开<code>~/.spack/linux/compilers.yaml</code>文件，手动修改路径</p>
<h4 id="2-安装wrf"><a href="#2-安装wrf" class="headerlink" title="2. 安装wrf"></a>2. 安装wrf</h4><h5 id="2-1-如果可以连接互联网"><a href="#2-1-如果可以连接互联网" class="headerlink" title="2.1 如果可以连接互联网"></a>2.1 如果可以连接互联网</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">spack install wrf</span><br></pre></td></tr></table></figure>

<p>这样就完成了！只需一步，立刻就可以完成！</p>
<h5 id="2-2-如果无法连接互联网"><a href="#2-2-如果无法连接互联网" class="headerlink" title="2.2 如果无法连接互联网"></a>2.2 如果无法连接互联网</h5><p>在一台可以连网的liux机器上安装spack；接着，执行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">spack info wrf </span><br></pre></td></tr></table></figure>

<p>查询wrf需要安装哪些依赖项。由输出信息可得知，wrf需要依赖</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hdf5,jemalloc,libtirpc,m4,netcdf-c,parallel-netcdf,pkgconfig,time,jasper,libpng,libtool,mpi,netcdf-fortran,perl,tcsh和zlib；</span><br></pre></td></tr></table></figure>

<p>接着，执行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">spack mirror create hdf5 jemalloc libtirpc  m4 netcdf-c parallel-netcdf pkgconfig time jasper libpng libtool mpi netcdf-fortran  perl tcsh zlib wrf</span><br></pre></td></tr></table></figure>

<p>spack会提示：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Successfully updated mirror in file:/[某路径]</span><br></pre></td></tr></table></figure>

<p>将该路径的文件全部打包，移动到你无法联网的那台机器上。然后再执行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">spack install wrf</span><br></pre></td></tr></table></figure>

<p>即可！</p>
<h2 id="WRF-run-with-CFS"><a href="#WRF-run-with-CFS" class="headerlink" title="WRF run with CFS"></a>WRF run with CFS</h2><p>数据介绍：</p>
<p>Saha, S., Moorthi, S., Wu, X., et al. (2014). The NCEP climate forecast system version 2. Journal of Climate, 27(6), 2185–2208. <a href="https://doi.org/10.1175/JCLI-D-12-00823.1">https://doi.org/10.1175/JCLI-D-12-00823.1</a></p>
<p>实时预报数据下载地址：</p>
<p><a href="https://nomads.ncep.noaa.gov/pub/data/nccf/com/cfs/prod/cfs/">https://nomads.ncep.noaa.gov/pub/data/nccf/com/cfs/prod/cfs/</a></p>
<p>历史预报数据下载地址：</p>
<p><a href="https://www.ncei.noaa.gov/data/climate-forecast-system/access/operational-9-month-forecast/">https://www.ncei.noaa.gov/data/climate-forecast-system/access/operational-9-month-forecast/</a></p>
<p>数据下载脚本：</p>
<p>In [1]:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">@ 气象备忘录</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">@ meteo_notebook@163.com</span></span><br><span class="line"></span><br><span class="line">import os,sys</span><br><span class="line">from datetime import datetime,timedelta</span><br><span class="line">import bisect</span><br><span class="line">import pandas as pd </span><br><span class="line"></span><br><span class="line">def str2time(timestr, format = &quot;%Y%m%d%H&quot;):</span><br><span class="line">    return datetime.strptime(timestr, format)</span><br><span class="line"></span><br><span class="line">def time2str(time, format = &quot;%Y%m%d%H&quot;):</span><br><span class="line">    return datetime.strftime(time, format)</span><br><span class="line"></span><br><span class="line">def download_cfs():</span><br><span class="line">    &#x27;&#x27;&#x27;</span><br><span class="line">    下载实时预报数据</span><br><span class="line">    &#x27;&#x27;&#x27;</span><br><span class="line">    dt_init  = str2time(init)</span><br><span class="line">    </span><br><span class="line">    HH       = time2str(dt_init, &quot;%H&quot;)</span><br><span class="line">    YYYY     = time2str(dt_init, &quot;%Y&quot;)</span><br><span class="line">    YYYYMM   = time2str(dt_init, &quot;%Y%m&quot;)</span><br><span class="line">    YYYYMMDD = time2str(dt_init, &quot;%Y%m%d&quot;)</span><br><span class="line">    </span><br><span class="line">    url_root = &quot;https://nomads.ncep.noaa.gov/pub/data/nccf/com/cfs/prod/cfs&quot;</span><br><span class="line">    url      = f&quot;&#123;url_root&#125;/cfs.&#123;YYYYMMDD&#125;/&#123;HH&#125;/6hrly_grib_01&quot;</span><br><span class="line">    </span><br><span class="line">    valid = time2str(dt_valid)</span><br><span class="line">    # 等压面数据</span><br><span class="line">    os.system(f&quot;axel &#123;url&#125;/pgbf&#123;valid&#125;.01.&#123;init&#125;.grb2&quot;)</span><br><span class="line">    # 地表数据</span><br><span class="line">    os.system(f&quot;axel &#123;url&#125;/flxf&#123;valid&#125;.01.&#123;init&#125;.grb2&quot;)</span><br><span class="line">    </span><br><span class="line">def download_cfs_his():</span><br><span class="line">    &#x27;&#x27;&#x27;</span><br><span class="line">    下载历史数据</span><br><span class="line">    &#x27;&#x27;&#x27;</span><br><span class="line">    dt_init  = str2time(init)</span><br><span class="line">    YYYY     = dt_init.strftime(&quot;%Y&quot;)</span><br><span class="line">    YYYYMM   = dt_init.strftime(&quot;%Y%m&quot;)</span><br><span class="line">    YYYYMMDD = dt_init.strftime(&quot;%Y%m%d&quot;)</span><br><span class="line">    </span><br><span class="line">    url_root = &quot;https://www.ncei.noaa.gov/data/climate-forecast-system/access/operational-9-month-forecast&quot;</span><br><span class="line">    url_pres = f&quot;&#123;url_root&#125;/6-hourly-by-pressure/&#123;YYYY&#125;/&#123;YYYYMM&#125;/&#123;YYYYMMDD&#125;/&#123;init&#125;&quot;</span><br><span class="line">    url_sfc  = f&quot;&#123;url_root&#125;/6-hourly-flux/&#123;YYYY&#125;/&#123;YYYYMM&#125;/&#123;YYYYMMDD&#125;/&#123;init&#125;&quot;</span><br><span class="line">    </span><br><span class="line">    valid = time2str(dt_valid)</span><br><span class="line">    # 等压面数据</span><br><span class="line">    os.system(f&quot;axel &#123;url_pres&#125;/pgbf&#123;valid&#125;.01.&#123;init&#125;.grb2&quot;)</span><br><span class="line">    # 地表数据</span><br><span class="line">    os.system(f&quot;axel &#123;url_sfc&#125;/flxf&#123;valid&#125;.01.&#123;init&#125;.grb2&quot;)</span><br><span class="line"></span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    </span><br><span class="line">    init  = &quot;2022040600&quot;  # 模式起报时间</span><br><span class="line">    </span><br><span class="line">    # 预报时段很长，仅下载其中的一部分</span><br><span class="line">    start = &quot;2022040600&quot;  # 下载数据开始时间</span><br><span class="line">    end   = &quot;2022040700&quot;  # 下载数据结束时间</span><br><span class="line"></span><br><span class="line">    # 下载目录设置</span><br><span class="line">    wrk_dir = f&quot;/home/data/cfs/&#123;init&#125;&quot;</span><br><span class="line">    if not os.path.exists(wrk_dir): os.makedirs(wrk_dir)</span><br><span class="line">    os.chdir(wrk_dir)</span><br><span class="line"></span><br><span class="line">    idx = pd.date_range(str2time(start), str2time(end), freq=&#x27;6H&#x27;)</span><br><span class="line">    for dt_valid in idx:</span><br><span class="line">        print(dt_valid)</span><br><span class="line">        download_cfs()</span><br><span class="line">2022-04-06 00:00:00</span><br><span class="line">2022-04-06 06:00:00</span><br><span class="line">2022-04-06 12:00:00</span><br><span class="line">2022-04-06 18:00:00</span><br><span class="line">2022-04-07 00:00:00</span><br></pre></td></tr></table></figure>

<p>驱动WRF</p>
<p>In [ ]:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ln -sf ungrib/Variable_Tables/Vtable.CFSR Vtable</span><br><span class="line">./link_grib.csh $&#123;DATA_PATH&#125;/*  # 可以同时链接等压面和地表数据</span><br></pre></td></tr></table></figure>



<h2 id="WRF-notes"><a href="#WRF-notes" class="headerlink" title="WRF notes"></a>WRF notes</h2><p><a href="https://mp.weixin.qq.com/s/TkQfZJlnbiOd2_9XFnAehw">https://mp.weixin.qq.com/s/TkQfZJlnbiOd2_9XFnAehw</a></p>
<p>WPS只是WRF运用实际数据模拟的准备过程，这就好比开车要先上车。讲完前处理过程之后 <a href="http://mp.weixin.qq.com/s?__biz=MzIyOTc5NjE4MQ==&mid=2247484195&idx=1&sn=8bbaab8961f31fdcfd7be91edac58480&chksm=e8bc7319dfcbfa0f4128114c2a2745f16d660260b2dbda5f4431beff76b526db341211834642&scene=21#wechat_redirect">WRF模式之WPS的配置运行</a>，就要开始模拟了。</p>
<p>模拟之前同样需要设置参数，这里的参数通过 namelist.input 文件控制，常规的 namelist.input 文件内容如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&amp;time_control</span><br><span class="line"> run_days                            = 1,</span><br><span class="line"> run_hours                           = 0,</span><br><span class="line"> run_minutes                         = 0,</span><br><span class="line"> run_seconds                         = 0,</span><br><span class="line"> start_year                          = 2015, 2015,</span><br><span class="line"> start_month                         = 10, 10,</span><br><span class="line"> start_day                           = 04, 04,</span><br><span class="line"> start_hour                          = 00, 00,</span><br><span class="line"> start_minute                        = 00, 00,</span><br><span class="line"> start_second                        = 00, 00,</span><br><span class="line"> end_year                            = 2015, 2015,</span><br><span class="line"> end_month                           = 10, 10,</span><br><span class="line"> end_day                             = 05, 05,</span><br><span class="line"> end_hour                            = 00, 00,</span><br><span class="line"> end_minute                          = 00, 00,</span><br><span class="line"> end_second                          = 00, 00,</span><br><span class="line"> interval_seconds                    = 21600</span><br><span class="line"> input_from_file                     = .true.,.true.,</span><br><span class="line"> history_interval                    = 10,   5,  # 表示多长时间输出一次结果</span><br><span class="line"> frames_per_outfile                  = 36,  36,  # 表示多少个结果输出到一个文件</span><br><span class="line"> restart                             = .false.,</span><br><span class="line"> restart_interval                    = 360,</span><br><span class="line"> io_form_history                     = 2</span><br><span class="line"> io_form_restart                     = 2</span><br><span class="line"> io_form_input                       = 2</span><br><span class="line"> io_form_boundary                    = 2</span><br><span class="line"> debug_level                         = 10</span><br><span class="line"> /</span><br><span class="line"></span><br><span class="line"> &amp;domains</span><br><span class="line"> time_step                           = 45,</span><br><span class="line"> time_step_fract_num                 = 0,</span><br><span class="line"> time_step_fract_den                 = 1,</span><br><span class="line"> max_dom                             = 2,</span><br><span class="line"> s_we                                = 1,     1,</span><br><span class="line"> e_we                                = 241,   424,</span><br><span class="line"> s_sn                                = 1,     1,</span><br><span class="line"> e_sn                                = 220,   421,</span><br><span class="line"> s_vert                              = 1,     1,</span><br><span class="line"> e_vert                              =  48,    48,</span><br><span class="line"> sfcp_to_sfcp                        = .false.</span><br><span class="line"> dx                                  = 9000,   3000,</span><br><span class="line"> dy                                  = 9000,   3000,</span><br><span class="line"> grid_id                             = 1,     2,</span><br><span class="line"> parent_id                           = 0,     1,</span><br><span class="line"> i_parent_start                      = 0,    50,</span><br><span class="line"> j_parent_start                      = 0,    40,</span><br><span class="line"> parent_grid_ratio                   = 1,    3,</span><br><span class="line"> parent_time_step_ratio              = 1,    3,</span><br><span class="line"> feedback                            = 0,</span><br><span class="line"> smooth_option                       = 1,</span><br><span class="line"> num_metgrid_levels                  = 27,</span><br><span class="line"> num_metgrid_soil_levels             = 4,</span><br><span class="line"> p_top_requested                     = 5000,</span><br><span class="line"> /</span><br><span class="line"></span><br><span class="line"> &amp;physics</span><br><span class="line"> mp_physics                          = 17,     17,</span><br><span class="line"> gsfcgce_hail                        = 0,    </span><br><span class="line"> gsfcgce_2ice                        = 0,    </span><br><span class="line"> ra_lw_physics                       = 1,     1,</span><br><span class="line"> ra_sw_physics                       = 1,     1,</span><br><span class="line"> radt                                = 9,     9,</span><br><span class="line"> sf_sfclay_physics                   = 1,     1,</span><br><span class="line"> sf_surface_physics                  = 2,     2,</span><br><span class="line"> bl_pbl_physics                      = 1,     1,</span><br><span class="line"> bldt                                = 0,     0,</span><br><span class="line"> cu_physics                          = 1,     0,</span><br><span class="line"> cudt                                = 5,     0,</span><br><span class="line"> surface_input_source                = 1,</span><br><span class="line"> num_soil_layers                     = 4,</span><br><span class="line"> maxiens                             = 1,</span><br><span class="line"> maxens                              = 3,</span><br><span class="line"> maxens2                             = 3,</span><br><span class="line"> maxens3                             = 16,</span><br><span class="line"> ensdim                              = 144,</span><br><span class="line"> /</span><br><span class="line"></span><br><span class="line"> &amp;fdda</span><br><span class="line"> /</span><br><span class="line"></span><br><span class="line"> &amp;dynamics</span><br><span class="line"> w_damping                           = 1,</span><br><span class="line"> diff_opt                            = 2,</span><br><span class="line"> km_opt                              = 4,</span><br><span class="line"> diff_6th_opt                        = 2,</span><br><span class="line"> diff_6th_factor                     = 0.12,</span><br><span class="line"> damp_opt                            = 0,</span><br><span class="line"> base_temp                           = 290.</span><br><span class="line"> zdamp                               = 5000.,  5000.,</span><br><span class="line"> dampcoef                            = 0.2,    0.2,</span><br><span class="line"> khdif                               =   0,     0,  </span><br><span class="line"> kvdif                               =   0,     0,  </span><br><span class="line"> non_hydrostatic                     = .true., .true.,</span><br><span class="line"> time_step_sound                     = 6,      6,  </span><br><span class="line"> h_mom_adv_order                     = 5,      5,  </span><br><span class="line"> v_mom_adv_order                     = 5,      5,  </span><br><span class="line"> h_sca_adv_order                     = 5,      5,  </span><br><span class="line"> v_sca_adv_order                     = 5,      5,  </span><br><span class="line"> moist_adv_opt                       = 3,</span><br><span class="line"> scalar_adv_opt                      = 3,</span><br><span class="line"> momentum_adv_opt                    = 3,</span><br><span class="line"> chem_adv_opt                        = 3,</span><br><span class="line"> tke_adv_opt                         = 3,</span><br><span class="line"> /</span><br><span class="line"></span><br><span class="line"> &amp;bdy_control</span><br><span class="line"> spec_bdy_width                      = 5,</span><br><span class="line"> spec_zone                           = 1,</span><br><span class="line"> relax_zone                          = 4,</span><br><span class="line"> specified                           = .true.,</span><br><span class="line"> nested                              = .false., .true.,</span><br><span class="line"> /</span><br><span class="line"></span><br><span class="line"> &amp;grib2</span><br><span class="line"> /</span><br><span class="line"></span><br><span class="line"> &amp;namelist_quilt</span><br><span class="line"> nio_tasks_per_group = 0,</span><br><span class="line"> nio_groups = 1,</span><br><span class="line"> /</span><br></pre></td></tr></table></figure>



<p>一般情况下，在模拟时需要关心的是 &amp;time_control， &amp;domains，&amp;physics部分的参数设置。</p>
<p>&amp;time_control 部分主要控制的是模拟的时间范围，debug 信息输出，输出格式等信息。</p>
<p><strong>注意</strong>：</p>
<p>&amp;domains 部分的参数设置要和所用初始场以及WPS namelist.wps的一些参数设置相同，否则会出错。 </p>
<p>&amp;physics 部分主要控制的是微物理方案，辐射方案以及积云对流参数化等的选择。</p>
<p>&amp;dynamics 部分控制的是动力参数的设置。</p>
<p>&amp;fdda 主要应用于资料同化参数的设置。</p>
<p>还有一些其它部分的参数设置，通常这些部分的参数不需要更改。</p>
<p>大概了解了一下namelist.input的参数设置之后，就可以运行了。再运行之前，先把WPS过程中运行 metgrid.exe 的时候生成了一些 met_em*文件<strong>拷贝</strong>或是<strong>链接</strong>到 WRFV3&#x2F;run下，当然也可以链接到 WRFV3&#x2F;test&#x2F;em_real&#x2F; 下。（关于链接和拷贝的命令看这里 <a href="http://mp.weixin.qq.com/s?__biz=MzIyOTc5NjE4MQ==&mid=2247483970&idx=1&sn=c5c10f9190cb1bfd7a06d830441e927e&chksm=e8bc7278dfcbfb6ec76c6b31b96030a51849ca7a4d643a0323e41046957a47736f8ba9371bfe&scene=21#wechat_redirect">linux常用命令之进阶</a>）</p>
<p>开始之前先进入 WRFV3&#x2F;run 目录下：</p>
<ul>
<li><p>链接 met_em* 文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ln -sf ../../WPS/met_em.d0* .</span><br></pre></td></tr></table></figure></li>
</ul>
<p><strong>注意</strong>： 命令后的 . 不能省，这里的 . 表示当前路径。</p>
<ul>
<li><p>初始化气象要素</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./real.exe</span><br></pre></td></tr></table></figure>

<p>运行成功后会生成一些文件，wrfbdy_d01，wrfinput_d*</p>
</li>
<li><p>模拟积分——开始模拟</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./wrf.exe</span><br></pre></td></tr></table></figure>

<p>上述方式为串行运行，如果编译支持并行运算的话，可以执行以下命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mpirun -np 4 ./wrf.exe</span><br></pre></td></tr></table></figure>

<p>表示使用4个处理器进行运算。当然， real.exe 也支持并行运算。</p>
</li>
</ul>
<p>然后就等模拟结束就行了。耗时长短与模拟个例时间长短，嵌套层数多少，模拟域范围大小等因素有关。当然，如果出错了的话就另说了&#x3D;&#x3D;</p>
<p>模拟结束之后会生成一系列输出文件，比如：wrfout_d01_2015-10-04_00:00:00 等文件。可能没有后缀，但是默认的输出文件格式为 nc。模拟结束之后就是后处理过程了。</p>
<p>关于模式后处理，之前也提到过一些：</p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzIyOTc5NjE4MQ==&mid=2247483979&idx=1&sn=25876476b164990b9baefd8556b437e7&chksm=e8bc7271dfcbfb67d42b57bdf6549b814db47875cb8e003388709a032e788559554874f3350f&scene=21#wechat_redirect">真・WRF模式后处理之Python版</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzIyOTc5NjE4MQ==&mid=2247483947&idx=1&sn=1545c8f3592dcd4a26e39c9d79a4675c&chksm=e8bc7211dfcbfb07404bd16146c3255514dd3e718f3e8c54bf497e3a30f9b949e813279a0ef1&scene=21#wechat_redirect">WRF模式后处理</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzIyOTc5NjE4MQ==&mid=2247484134&idx=1&sn=3d28deab9516aa94e8c37394731845a1&chksm=e8bc72dcdfcbfbca73cbf44fc143b5524f21d907447d1a58c5389e813e513b7fde617be98497&scene=21#wechat_redirect">高维数据可视化</a></p>
<p>后处理过程其实就是处理数据的过程。使用什么工具或是编程语言都可以，没有限制。只要你能得到想要的结果就行了。</p>
<h2 id="Weather-Research-and-Forecasting-WRF"><a href="#Weather-Research-and-Forecasting-WRF" class="headerlink" title="Weather Research and Forecasting | WRF"></a>Weather Research and Forecasting | WRF</h2><p>来源：<a href="https://mp.weixin.qq.com/s/VN3tvMMPRKSPJu7O9hwyiA">https://mp.weixin.qq.com/s/VN3tvMMPRKSPJu7O9hwyiA</a></p>
<p> Weather Research and Forecasting（WRF）是一种由国家大气研究中心（NCAR）、国家海洋和大气管理局（NOAA）及其合作伙伴共同开发的广泛使用的数值天气预测和大气研究工具。它用于模拟短期天气预报、大气过程和长期气候模拟。WRF的精度高于传统的数值天气预报模型，并具有更高的时空分辨率，是气象和大气研究社区的重要工具。</p>
<p>WRF用户手册可通过两种方法获取：</p>
<ol>
<li>下载网址自行下载：</li>
</ol>
<blockquote>
<p>WRF Users’ Guide (ucar.edu)</p>
</blockquote>
<ol start="2">
<li>后台回复 *<strong>WRF用户手册*</strong> 获取。</li>
</ol>
<p><img src="https://p.ipic.vip/6ym20r.gif" alt="Image">### WRF的基本结构</p>
<p><img src="https://p.ipic.vip/w2aw0z.png" alt="Image"></p>
<p>WRF模式包含预处理系统WPS、ARW动态求解器及后处理模块。WPS主要用来定义模拟区域及网格，将外部数据源获得的地面静态数据（如地形、土地利用类型、土壤参数等）插值到模拟域，并将气象数据水平插值到WRF模拟域网格中，为WRF主程序程序提供所需数据。ARW动态求解器是整个WRF模式的核心组成部分，将WPS前处理系统插值处理好的数据转化为指定格式的初始场和边界条件，并进行模式的积分运算。后处理一般采用NCL或者python。</p>
<h3 id="WRF的基本原理"><a href="#WRF的基本原理" class="headerlink" title="WRF的基本原理"></a>WRF的基本原理</h3><p>  WRF模式运用F90语言编写，采用完全可压缩及非静力的平衡模型，在水平方向采用ArakawaC（荒川C）网格点，垂直方向采用eta（地形跟随质量）坐标，时间积分上采用三阶或者四阶的Runge-Kutta算法。基础方程式由运动方程、连续方程、状态方程、热力学方程、水汽方程等组成，通过将势能、位温导入基础的N-S方程并进行地形坐标变换后得到。</p>
<p>  WRF基于用户定义的计算域上这些方程的有限差分或谱离散法，该计算域可以是曲线或伸展的，并且边界条件设置为静态、恒定或时间变化。这使得WRF能够模拟各种天气和气候条件，包括对流和非对流过程、降水、辐射和地表过程。</p>
<h3 id="WRF的参数化方案"><a href="#WRF的参数化方案" class="headerlink" title="WRF的参数化方案"></a>WRF的参数化方案</h3><p>WRF还包括多个物理参数化方案，使用户能够将未在计算域中明确解析的子网格过程纳入模拟。在WRF中使用的物理参数化取决于多种因素，如所模拟的物理进程类型、该进程的尺度以及数值模型的分辨率。这些参数化包括：</p>
<h4 id="微物理过程方案"><a href="#微物理过程方案" class="headerlink" title="微物理过程方案"></a>微物理过程方案</h4><p>微物理过程可以通过调整温湿场结构及过程中水汽相变潜热的释放、降水粒子的拖拽作用，影响积云对流发生的条件，进而影响积云降水的预报。因此，以积云降水为主要因素的研究中微物理过程方案的选择非常重要。</p>
<h4 id="积云对流方案"><a href="#积云对流方案" class="headerlink" title="积云对流方案"></a>积云对流方案</h4><p>积云对流过程在暴雨等强降水天气的模拟预报中比较重要。  </p>
<h4 id="陆面过程方案"><a href="#陆面过程方案" class="headerlink" title="陆面过程方案"></a>陆面过程方案</h4><p>中尺度模拟中需要考虑下垫面的非均匀性，且很难对复杂下垫面进行准确描述，即中尺度模式中能否将下垫面复杂性这一因素较为真实的加入到陆-气相互作用的物理过程中。</p>
<h4 id="行星边界层方案"><a href="#行星边界层方案" class="headerlink" title="行星边界层方案"></a>行星边界层方案</h4><p>行星边界层(PBL)是垂直网格尺度通量的发生地点，它在大气模式中的地位十分重要，不仅能影响低层大气要素，通过边界层的垂直输送也能对高层大气产生影响。</p>
<h4 id="大气辐射方案"><a href="#大气辐射方案" class="headerlink" title="大气辐射方案"></a>大气辐射方案</h4><p>大气辐射传输方案对于模式模拟非常重要，辐射传输计算的准确度将直接影响到大气热力和动力状况，所以提高辐射传输方案的精确性，能够显著提高模拟降水分布和季节变化特征的能力。</p>
<h3 id="WRF输入和输出数据"><a href="#WRF输入和输出数据" class="headerlink" title="WRF输入和输出数据"></a>WRF输入和输出数据</h3><p>  为初始化WRF模拟，用户必须提供初始条件来定义模型运行开始时的大气状态。这些初始条件可能包括大气压力、温度、湿度和风速和方向，以及地表条件，如土壤湿度和植被覆盖。WRF模型可以从各种来源获取数据，包括全球和区域再分析数据、卫星数据以及气象站和探空的观测数据。</p>
<p>  WRF还需要模型边界处的气象数据，称为边界条件，以保持模拟的大气状态和模型域之外的大气状态之间的一致性。这些数据通常从全球模型，如全球预报系统GFS或欧洲中期天气预报中心ECMWF获取。</p>
<p>  WRF模拟的输出数据可以采用许多形式，包括大气变量的格网化数据，例如空气温度、风速和风向以及降水，以及大气变量的垂直剖面。WRF输出可以保存在多种文件格式中，与其他建模和分析工具兼容，包括网络常用数据格式NetCDF和GRIB。</p>
<h3 id="WRF的应用"><a href="#WRF的应用" class="headerlink" title="WRF的应用"></a>WRF的应用</h3><p>  WRF广泛用于许多气象和大气研究应用，包括短期天气预测、季节性和气候预测以及空气质量和大气化学建模。它的高分辨率输出和灵活性使其成为中尺度气象研究、大气边界层过程和边界层相互作用分析以及城市气象研究的重要工具。</p>
<p>​    WRF被全球的操作预报中心和研究机构广泛使用，包括用于日常天气预报以及有关气候变化和环境政策的研究。它已用于广泛的研究，包括：</p>
<p>热带气象和飓风预测：WRF已广泛用于研究热带风暴和飓风，包括预测风暴强度和路径，估计降水和潜在风暴潮，以及分析气候变化对热带气旋的影响。</p>
<p>空气污染建模：WRF用于模拟大气化学输运，分析空气污染物的时间和空间模式，以及预测排放减少政策和其他干预措施对空气质量的影响。</p>
<p>可再生能源预测：WRF用于模拟风能和太阳能资源，并为可再生能源的功率输出开发概率预测。</p>
<p>气候变化和适应规划：WRF可以用于基于不同温室气体排放情景调查区域气候的响应。</p>
<h2 id="WRF-库的安装"><a href="#WRF-库的安装" class="headerlink" title="WRF 库的安装"></a>WRF 库的安装</h2><p>WRF安装之前需要安装编译器和库，本次安装选择的编译器和库的版本如下：</p>
<p><strong>Linux系统</strong>：CentOS 7</p>
<p><strong>编译器版本</strong>：gun(gcc-4.8.5)</p>
<p>注意：gfortran的版本最好不要高于7，因为fortran大于7的版本中iand函数的定义变了，可能会报intmath的错。</p>
<p><strong>库版本:</strong> mpich-3.0.4 | zlib-1.2.7 | libpng-1.2.50 | jasper-1.900.1 hdf5-1.10.5 | netcdf-c-4.8.1 | netcdf-cxx4-4.3.1 | openmpi-3.0.0 | netcdf-fortran-4.5.4</p>
<p>本文章所用的全部文件可后台回复<em><strong>WRF库的安装</strong></em>获取。</p>
<h3 id="环境测试"><a href="#环境测试" class="headerlink" title="环境测试"></a>环境测试</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">gfortran是Fortran 95 编译器，支持Fortran95和一部分Fortran2003的功能</span></span><br><span class="line">which gfortran</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">输出：/usr/bin/gcc</span></span><br><span class="line">which cpp</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">输出：/usr/bin/cpp</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">gcc是GCC中的GUN C Compiler（C 编译器）</span></span><br><span class="line">which gcc</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">输出：/usr/bin/gcc</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看gcc版本</span></span><br><span class="line">gcc --version</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">输出：gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-44)</span></span><br></pre></td></tr></table></figure>

<p>若环境测试未成功，则运行下列程序：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install gcc</span><br><span class="line">yum install cpp gcc-c++</span><br><span class="line">yum install gcc-gfortran</span><br><span class="line">yum install unzip bzip2 time nfs-utils perl tcsh wget m4 mlocate.x86_64 libX11-devel.x86_64 libXext-devel.x86_64 libXrender-devel.x86_64 fontconfig-devel.x86_64 curl-devel cmake subversion</span><br></pre></td></tr></table></figure>



<h3 id="库文件的路径"><a href="#库文件的路径" class="headerlink" title="库文件的路径"></a>库文件的路径</h3><p>以往库文件的安装，都是安装一个库加入一个库的路径，然后手输安装下一个库，但这样不断输入路径过于麻烦，此处我们先建立库文件路径文件<em><strong>libraries.sh</strong></em>，然后把下面内容复制粘贴到库文件路径文件：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">##-------此处路径需要根据自己修改--------</span></span></span><br><span class="line">export DIR=/home/daimu/Desktop/LIBRARIES</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">##-------------------------------------</span></span></span><br><span class="line">export CC=gcc</span><br><span class="line">export CXX=g++</span><br><span class="line">export FC=gfortran</span><br><span class="line">export CFLAGS=-m64</span><br><span class="line">export F77=gfortran</span><br><span class="line">export FFLAGS=-m64</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">##mpich</span></span></span><br><span class="line">export PATH=$DIR/mpich/bin:$PATH</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">##zlib libpng jasper</span></span></span><br><span class="line">export LDFLAGS=-L$DIR/grib2/lib</span><br><span class="line">export CPPFLAGS=-I$DIR/grib2/include</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## zlib</span></span></span><br><span class="line">export LD_LIBRARY_PATH=$DIR/hdf5/lib:$LD_LIBRARY_PATH</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## hdf5</span></span></span><br><span class="line">export PATH=$DIR/hdf5/bin:$PATH</span><br><span class="line">export LD_LIBRARY_PATH=$DIR/hdf5/lib:$LD_LIBRARY_PATH</span><br><span class="line">export HDF5_HOME=$DIR/hdf5</span><br><span class="line">export HDF5_INCDIR=$HDF5_HOME/include</span><br><span class="line">export HDF5_LIBDIR=$HDF5_HOME/lib</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## netcdf</span></span></span><br><span class="line">export PATH=$DIR/netcdf/bin:$PATH</span><br><span class="line">export LD_LIBRARY_PATH=$DIR/netcdf/lib:$LD_LIBRARY_PATH</span><br><span class="line">export NETCDF=$DIR/netcdf</span><br><span class="line">export NETCDF_INC=$NETCDF/include</span><br><span class="line">export NETCDF_LIB=$NETCDF/lib</span><br><span class="line">export NETCDF_INCDIR=$NETCDF/include</span><br><span class="line">export NETCDF_LIBDIR=$NETCDF/lib</span><br><span class="line">export NETCDFPATH=$NETCDF</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## openmpi</span></span></span><br><span class="line">MPI_HOME=$DIR/openmpi3.0.0</span><br><span class="line">export PATH=$&#123;MPI_HOME&#125;/bin:$PATH</span><br><span class="line">export LD_LIBRARY_PATH=$&#123;MPI_HOME&#125;/lib:$LD_LIBRARY_PATH</span><br><span class="line">export MANPATH=$&#123;MPI_HOME&#125;/share/man:$MANPATH</span><br></pre></td></tr></table></figure>



<h3 id="库文件的安装"><a href="#库文件的安装" class="headerlink" title="库文件的安装"></a>库文件的安装</h3><p><strong>方法一</strong>：将<em><strong>库文件</strong></em>和<em><strong>libraries.sh</strong></em>放到同一个文件夹下，打开终端，依次输入以下命令（此方法有点在于可以发现每一步运行的对错，可以及时纠正）：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source libraries.sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mpich-3.0.4</span></span><br><span class="line">tar xzvf mpich-3.0.4.tar.gz</span><br><span class="line">cd mpich-3.0.4</span><br><span class="line">./configure --prefix=$DIR/mpich</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">cd ..</span><br><span class="line">rm -rf mpich-3.0.4</span><br><span class="line">source libraries.sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">zlib-1.2.7</span></span><br><span class="line">tar xzvf zlib-1.2.7.tar.gz</span><br><span class="line">cd zlib-1.2.7</span><br><span class="line">./configure --prefix=$DIR/grib2</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">cd ..</span><br><span class="line">rm -rf zlib-1.2.7</span><br><span class="line">source libraries.sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">libpng-1.2.50</span></span><br><span class="line">tar xzvf libpng-1.2.50.tar.gz</span><br><span class="line">cd libpng-1.2.50</span><br><span class="line">./configure --prefix=$DIR/grib2</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">cd ..</span><br><span class="line">rm -rf libpng-1.2.50</span><br><span class="line">source libraries.sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">jasper-1.900.1</span></span><br><span class="line">tar xzvf jasper-1.900.1.tar.gz</span><br><span class="line">cd jasper-1.900.1</span><br><span class="line">./configure --prefix=$DIR/grib2</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">cd ..</span><br><span class="line">rm -rf jasper-1.900.1</span><br><span class="line">source libraries.sh</span><br><span class="line"></span><br><span class="line">tar xzvf zlib-1.2.7.tar.gz</span><br><span class="line">cd zlib-1.2.7</span><br><span class="line">./configure --prefix=$DIR/hdf5</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">cd ..</span><br><span class="line">rm -rf zlib-1.2.7</span><br><span class="line">source libraries.sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">hdf5-1.10.5</span></span><br><span class="line">tar xzvf hdf5-1.10.5.tar.gz</span><br><span class="line">cd hdf5-1.10.5/</span><br><span class="line">./configure --prefix=$DIR/hdf5 --with-zlib=$DIR/hdf5</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">cd ..</span><br><span class="line">rm -rf hdf5-1.10.5</span><br><span class="line">source libraries.sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">netcdf-c-4.8.1</span></span><br><span class="line">unzip netcdf-c-4.8.1.zip</span><br><span class="line">cd netcdf-c-4.8.1/</span><br><span class="line">CPPFLAGS=&quot;-I$DIR/hdf5/include&quot; LDFLAGS=&quot;-L$DIR/hdf5/lib&quot; ./configure --prefix=$DIR/netcdf --enable-netcdf-4 --enable-netcdf4 --enable-shared --disable-dap</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">cd ..</span><br><span class="line">rm -rf netcdf-c-4.8.1</span><br><span class="line">source libraries.sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">netcdf-fortran-4.5.4</span></span><br><span class="line">unzip netcdf-fortran-4.5.4.zip</span><br><span class="line">cd netcdf-fortran-4.5.4/</span><br><span class="line">CPPFLAGS=&quot;-I$DIR/netcdf/include&quot; LDFLAGS=&quot;-L$DIR/netcdf/lib&quot; ./configure --prefix=$DIR/netcdf</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">cd ..</span><br><span class="line">rm -rf netcdf-fortran-4.5.4</span><br><span class="line">source libraries.sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">netcdf-cxx4-4.3.1</span></span><br><span class="line">unzip netcdf-cxx4-4.3.1.zip</span><br><span class="line">cd netcdf-cxx4-4.3.1/</span><br><span class="line">CPPFLAGS=&quot;-I$DIR/hdf5/include -I$DIR/netcdf/include&quot; LDFLAGS=&quot;-L$DIR/hdf5/lib -L$DIR/netcdf/lib&quot; ./configure --prefix=$DIR/netcdf</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">cd ..</span><br><span class="line">rm -rf netcdf-cxx4-4.3.1</span><br><span class="line">source libraries.sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">openmpi-3.0.0</span></span><br><span class="line">tar xzvf openmpi-3.0.0.tar.tar</span><br><span class="line">cd openmpi-3.0.0</span><br><span class="line">./configure --prefix=$DIR/openmpi3.0.0</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">cd ..</span><br><span class="line">rm -rf openmpi-3.0.0</span><br><span class="line">source libraries.sh</span><br></pre></td></tr></table></figure>

<p><strong>方法二</strong>：将<em><strong>库文件</strong></em>和<em><strong>libraries.sh</strong></em>放到同一个文件夹下，然后创建文件</p>
<p><em><strong>libararies_pack.sh</strong></em>，将上面的代码复制粘贴到该文件，然后终端输入（此方法优点在于方便快捷，但不容易发现内部错误）：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source libararies_pack.sh</span><br></pre></td></tr></table></figure>

<p>&#x2F; To Continue &#x2F;</p>
<p><strong>库安装完成后，可参考官方网站</strong> <strong>Compiling WRF (ucar.edu)</strong> <strong>进行库安装测试。</strong></p>
<h2 id="WRF的安装"><a href="#WRF的安装" class="headerlink" title="WRF的安装"></a>WRF的安装</h2><p>上一篇文章中，我们对编译WRF需要的库进行了安装编译，这次我们就开始正式编译WRF。<br><strong>WRF版本</strong>：WRF4.0  WPS4.0</p>
<h3 id="环境加载"><a href="#环境加载" class="headerlink" title="环境加载"></a>环境加载</h3><p>此处需要用到上文创建的libraries.sh文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source libraries.sh</span><br></pre></td></tr></table></figure>

<p>此处的需要注意的是路径的设置，上面的命令表示和libraries.sh文件在同一文件夹下，如果不在，则类似命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source /home/usr/libraries.sh</span><br></pre></td></tr></table></figure>

<h3 id="WRF的编译"><a href="#WRF的编译" class="headerlink" title="WRF的编译"></a>WRF的编译</h3><p>命令位置：WRF压缩包所在文件夹</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译WRF</span></span><br><span class="line">tar xzvf WRFV4.0.TAR.gz</span><br><span class="line">cd WRF</span><br><span class="line">./configure</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">这里我是在集群计算机上安装所以选的34，在这里需要注意的是编译器和是否多线程</span></span><br><span class="line">34</span><br><span class="line">1</span><br><span class="line">./compile em_real &gt;&amp; log.compile</span><br><span class="line">ls -ls main/*.exe</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">出现4个exe安装成功</span></span><br></pre></td></tr></table></figure>

<h3 id="WPS的编译"><a href="#WPS的编译" class="headerlink" title="WPS的编译"></a>WPS的编译</h3><p>命令位置：WPS压缩包所在文件夹</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译WPS</span></span><br><span class="line">tar xzvf WPSV4.0.TAR.gz</span><br><span class="line">./configure</span><br><span class="line">1 # 和编译WRF一致</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">注意 configure，wps 的 COMPRESSION_LIBS 和 COMPRESSION_INC的路径是否正确，不正确需修改</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">详情看下方的注意事项</span></span><br><span class="line">./compile &gt;&amp; log.compile</span><br><span class="line">ls -ls *.exe</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">出现3个exe即为成功</span></span><br></pre></td></tr></table></figure>

<p>注意事项：<br>WPS使用configure命令后，会出现configure.wps文件，使用compile命令之前，图片内容须保持一致，路径libraries.sh文件中grib2文件夹路径。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">configure.wps  Line:68</span></span><br><span class="line">COMPRESSION_LIBS    = -L/home/daimu/Desktop/LIBRARIES/grib2/lib -ljasper -lpng -lz</span><br><span class="line">COMPRESSION_INC     = -I/home/daimu/Desktop/LIBRARIES/grib2/include</span><br><span class="line">FDEFS               = -DUSE_JPEG2000 -DUSE_PNG</span><br><span class="line">SFC                 = gfortran</span><br><span class="line">SCC                 = gcc</span><br><span class="line">DM_FC               = mpif90</span><br><span class="line">DM_CC               = mpicc</span><br><span class="line">FC                  = $(DM_FC) </span><br><span class="line">CC                  = $(DM_CC)</span><br><span class="line">LD                  = $(FC)</span><br></pre></td></tr></table></figure>



<h2 id="WRF-3DVar的安装"><a href="#WRF-3DVar的安装" class="headerlink" title="WRF 3DVar的安装"></a>WRF 3DVar的安装</h2><p>WRF的同化方法包括三维同化(3DVAR)和四维同化(4DVAR)，选择不同的方法取决于问题的性质和需求，相比较而言，四维同化对服务器性能比三维同化有着更高的要求，本文章我们对3DVAR的编译和安装进行简单介绍。</p>
<p>在WRF4.0版本中，WRFDA被放进了WRF文件夹中，所用的库文件和编译器可参考<a href="http://mp.weixin.qq.com/s?__biz=MzI2NTk2MzU3NA==&mid=2247484087&idx=1&sn=696b2cdb78e45fdc71e78ef0503dc6d2&chksm=ea9413eedde39af8124d2c6970a4024a62d5c62ff62354b77a934a8eeded2db3cbee072f224f&scene=21#wechat_redirect">WRF | WRF库的安装</a>，编译WRFDA只需要把WRF源文件文件解压缩，并重命名为WRFDA，然后编译安装即可。</p>
<p>WRF源文件可后台回复WRF源文件获取。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd WRFDA</span><br><span class="line">./configure wrfda</span><br><span class="line">34 # 与WRF的安装中选择相同</span><br><span class="line">./compile all_wrfvar &gt;&amp; compile.out</span><br><span class="line">ls -l var/build/*exe var/obsproc/src/obsproc.exe</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">生成4个.exe文件表示成功```</span></span><br></pre></td></tr></table></figure>



<h2 id="WRF的运行"><a href="#WRF的运行" class="headerlink" title="WRF的运行"></a>WRF的运行</h2><p><img src="https://p.ipic.vip/9djl0j.png" alt="Image">WRF运行流程</p>
<h3 id="数据准备"><a href="#数据准备" class="headerlink" title="数据准备"></a>数据准备</h3><p>WRF模式的运行，所需要的数据主要有两种：静态地形数据和网格化气象数据。</p>
<h4 id="1-1-静态地形数据"><a href="#1-1-静态地形数据" class="headerlink" title="1.1 静态地形数据"></a>1.1 静态地形数据</h4><p>静态地形数据可在WRF官方网站下载，或是后台回复<strong>WRF地形数据</strong>获取。</p>
<blockquote>
<p><a href="https://www2.mmm.ucar.edu/wrf/users/download/get_sources_wps_geog.html">https://www2.mmm.ucar.edu/wrf/users/download/get_sources_wps_geog.html</a></p>
</blockquote>
<h4 id="1-2-网格化气象数据"><a href="#1-2-网格化气象数据" class="headerlink" title="1.2 网格化气象数据"></a>1.2 网格化气象数据</h4><p>（1）网格化气象数据经常用的是FNL数据，FNL数据可在官方网站（需要注册）下载，或后台回复<strong>WRF_fnl</strong>使用python脚本下载。*(<strong>注意</strong>：由于官方网站python脚本更新较快，如python下载不成功，请移至官网手动下载，或联系作者更新)*</p>
<blockquote>
<p><a href="https://rda.ucar.edu/datasets/ds083.2/">https://rda.ucar.edu/datasets/ds083.2/</a></p>
</blockquote>
<p>（2）由于所选用网格化气象数据格式的不同，ungrib程序需要相对应的变量表解译。由于我们选用的是FNL数据，因此一般用的是Vtable.GFS，该文件在WPS文件夹里，路径为：WPS&#x2F;ungrib&#x2F;Variable_Tables&#x2F;，复制该文件到WPS文件下并改名为Vtable。</p>
<h3 id="WRF运行"><a href="#WRF运行" class="headerlink" title="WRF运行"></a>WRF运行</h3><p>运行之前需要更改两份文件的内容，一个是namelist.wps，另一个是namelist.input。主要是对时间，区域，网格以及参数化方案等内容的修改。<br>（1）namelist.wps 位于WPS&#x2F;namelist.wps，详细信息可参考namelist.wps介绍。</p>
<blockquote>
<p><a href="https://www2.mmm.ucar.edu/wrf/users/namelist_best_prac_wps.html">https://www2.mmm.ucar.edu/wrf/users/namelist_best_prac_wps.html</a></p>
</blockquote>
<p>（2）namelist.input位于WRF&#x2F;test&#x2F;em_real&#x2F;namelist.input，详细信息可参考namelist.input介绍。</p>
<blockquote>
<p><a href="https://www2.mmm.ucar.edu/wrf/users/namelist_best_prac_wrf.html">https://www2.mmm.ucar.edu/wrf/users/namelist_best_prac_wrf.html</a></p>
</blockquote>
<h4 id="WPS运行"><a href="#WPS运行" class="headerlink" title="WPS运行"></a>WPS运行</h4><p><strong>WPS和WRF文件夹应该在同一级目录下</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd WPS</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入作业目录</span></span><br><span class="line">./geogrid.exe</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">定义模拟域，并将各种地面数据集插入模型网格</span></span><br><span class="line">./link_grib.csh path_to_data</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">链接FNL数据 例如：./link_grib.csh /home/FNL/*</span></span><br><span class="line">./ungrib.exe</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">读取 GRIB 文件，“degribs”数据，并以称为中间格式的简单格式写入数据</span></span><br><span class="line">./metgrid.exe</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将 ungrib 程序提取的中间格式气象数据水平插值到 geogrid 程序定义的模拟域中</span></span><br></pre></td></tr></table></figure>

<h4 id="2-2-WRF运行"><a href="#2-2-WRF运行" class="headerlink" title="2.2 WRF运行"></a>2.2 WRF运行</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd ../WRF/test/em_real</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入作业目录</span></span><br><span class="line">ln -sf ../../../WPS/met_em.d* .</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">链接WPS处理的文件</span></span><br><span class="line">./real.exe</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">产生初始场文件和边界场文件</span></span><br><span class="line">./wrf.exe</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">运行</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">注意：这里使用的是单核运行，如有需要可多核多线程</span></span><br></pre></td></tr></table></figure>



<h2 id="WRFDA的运行"><a href="#WRFDA的运行" class="headerlink" title="WRFDA的运行"></a>WRFDA的运行</h2><p> <a href="javascript:void(0);">沐室</a> <em>2023-07-10 22:07</em> <em>Posted on 江苏</em></p>
<p><img src="https://p.ipic.vip/h8sjpd.png" alt="Image">WRFDA运行流程</p>
<h3 id="运行准备"><a href="#运行准备" class="headerlink" title="运行准备"></a>运行准备</h3><p>（1）区分<strong>冷启动</strong>和<strong>暖启动</strong>：通俗的来讲，冷启动指的是不使用上一次模式跑出的数据；暖启动指的是使用上一次模式跑出的数据。<br>（2）区分各变量含义：</p>
<p><img src="https://p.ipic.vip/2iaz9b.png" alt="Image"><img src="https://p.ipic.vip/slh6zj.png" alt="Image"></p>
<h3 id="具体步骤分解"><a href="#具体步骤分解" class="headerlink" title="具体步骤分解"></a>具体步骤分解</h3><h4 id="2-1-背景误差协方差矩阵B0"><a href="#2-1-背景误差协方差矩阵B0" class="headerlink" title="2.1 背景误差协方差矩阵B0"></a>2.1 背景误差协方差矩阵B0</h4><p><strong>简单介绍：</strong>背景误差协方差矩阵算的是模式跑的同一个时间点所用不同时间的误差，举个例子就是从0点跑到24点和从12点跑到24点的误差。<br><strong>代码位置</strong>：WRFDA&#x2F;var&#x2F;scripts&#x2F;gen_be&#x2F;gen_be_wrapper.ksh<br><strong>使用方法：</strong>gen_be 的输入数据是 WRF 预测，用于生成模型扰动，用作预测误差估计的代理。对于 NMC 方法，模型扰动是同时有效的预测之间的差异（例如，T+24 减去 T+12 是区域应用的典型值，T+48 减去 T+24 是全球应用的典型值）。然后可以通过对一段时间（例如一个月）内的这些预报差异进行平均来获得背景误差的气候估计。给定来自集合预测系统 (EPS) 的输入，输入是集合预报，创建的模型扰动是转换后的集合扰动。gen_be 代码旨在处理预测差异或基于集合的扰动。<br><strong>运行结果示例：</strong>注意文件名以及文件所在的文件夹名</p>
<p><img src="https://p.ipic.vip/iaqtd9.png" alt="Image"></p>
<h4 id="观测数据文件y0，R"><a href="#观测数据文件y0，R" class="headerlink" title="观测数据文件y0，R"></a>观测数据文件y0，R</h4><p><strong>简单介绍：</strong>主要是为了生成同化可用的观测数据文件，处理为ASCII 或PREPBUFR 格式。外来的观测数据需要改写成LITTLE_R格式，由于本次示例是从下面网站获得。</p>
<blockquote>
<p><a href="https://www2.mmm.ucar.edu/wrf/users/wrfda/download/free_data.html">https://www2.mmm.ucar.edu/wrf/users/wrfda/download/free_data.html</a></p>
</blockquote>
<p><strong>代码和程序位置：</strong>WRFDA&#x2F;var&#x2F;obsproc&#x2F;obserr.txt        WRFDA&#x2F;var&#x2F;obsproc&#x2F;obsproc.exe<br>WRFDA&#x2F;var&#x2F;obsproc&#x2F;prepbufr_table_filename（当OUTPUT_OB_FORMAT&#x3D;1或3时需要链接）</p>
<h3 id="运行流程"><a href="#运行流程" class="headerlink" title="运行流程"></a>运行流程</h3><p>背景误差协方差矩阵B0可在运行同化之前先生成背景误差协方差文件，同化时直接使用。</p>
<h4 id="冷启动"><a href="#冷启动" class="headerlink" title="冷启动"></a>冷启动</h4><p><strong>流程：</strong>WRF-real—-obsproc—更新初始场—更新边界场—WRF-wrf<br><strong>示例脚本：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">DATE=2011092800</span><br><span class="line">RUN_TYPE=cycle #coldorcycle</span><br><span class="line">DOMAIN_ID=01</span><br><span class="line">NPROC=6</span><br><span class="line">DATDIR=/home//WRF/Data</span><br><span class="line">run_dir=/home/WRF/Project/</span><br><span class="line">DA_SRCDIR=/home/WRF/WRF4.0v2/WRFDA</span><br><span class="line">project_name=test_WRF</span><br><span class="line">TIMEWINDOW1=-1h30m</span><br><span class="line">TIMEWINDOW2=1h30m</span><br><span class="line">CYCLE_PERIOD=06</span><br><span class="line">lon_e=105</span><br><span class="line">lon_w=125</span><br><span class="line">lat_n=24</span><br><span class="line">lat_s=12</span><br><span class="line">VERTICAL_GRID_NUMBER=33</span><br><span class="line">GRID_DISTANCE=9000</span><br><span class="line"></span><br><span class="line">WRFDIR=$&#123;run_dir&#125;$&#123;project_name&#125;/WRF</span><br><span class="line">RUN_BASEDIR=$&#123;run_dir&#125;$&#123;project_name&#125;/run</span><br><span class="line">BIN_DIR=$&#123;DA_SRCDIR&#125;/var/build</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">WEST_EAST_GRID_NUMBER=$[(lon_w-lon_e)*111000/GRID_DISTANCE+10]</span><br><span class="line">SOUTH_NORTH_GRID_NUMBER=$[(lat_n-lat_s)*111000/GRID_DISTANCE+10]</span><br><span class="line">lat_ns=$[(lat_n+lat_s)/2]</span><br><span class="line">lon_we=$[(lon_w+lon_e)/2]</span><br><span class="line"></span><br><span class="line">DATE_MIN=$($&#123;BIN_DIR&#125;/da_advance_time.exe $&#123;DATE&#125; $&#123;TIMEWINDOW1&#125; -w)</span><br><span class="line">DATE_MAX=$($&#123;BIN_DIR&#125;/da_advance_time.exe $&#123;DATE&#125; $&#123;TIMEWINDOW2&#125; -w)</span><br><span class="line">PREV_DATE=$($&#123;BIN_DIR&#125;/da_advance_time.exe $&#123;DATE&#125; -$&#123;CYCLE_PERIOD&#125;)</span><br><span class="line">VARBC_PREV_DATE=$($&#123;BIN_DIR&#125;/da_advance_time.exe $&#123;DATE&#125; -24)</span><br><span class="line"></span><br><span class="line">if [ ! -d &quot;$&#123;RUN_BASEDIR&#125;&quot; ];then</span><br><span class="line">  mkdir $&#123;RUN_BASEDIR&#125;</span><br><span class="line">else</span><br><span class="line">  rm -rf $&#123;RUN_BASEDIR&#125;</span><br><span class="line">  mkdir $&#123;RUN_BASEDIR&#125;</span><br><span class="line"></span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">cd $&#123;DA_SRCDIR&#125;</span><br><span class="line">source ../libraries.sh</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">-----------------------------------------------------------ob-------------------------------------------</span></span><br><span class="line">echo &quot;处理观测数据ob&quot;</span><br><span class="line">mkdir $&#123;RUN_BASEDIR&#125;/ob</span><br><span class="line">cd $&#123;RUN_BASEDIR&#125;/ob</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">-----链接一些必要的文件</span></span><br><span class="line">cp $&#123;DATDIR&#125;/&#x27;OBS_&#x27;$&#123;DATE&#125; ./</span><br><span class="line"></span><br><span class="line">ln -fs $&#123;DA_SRCDIR&#125;/var/obsproc/obserr.txt ./obserr.txt</span><br><span class="line"></span><br><span class="line">ln -fs $&#123;DA_SRCDIR&#125;/var/obsproc/prepbufr_table_filename ./prepbufr_table_filename</span><br><span class="line"></span><br><span class="line">ln -fs $&#123;DA_SRCDIR&#125;/var/obsproc/obsproc.exe .</span><br><span class="line"></span><br><span class="line">touch namelist.obsproc</span><br><span class="line">cat &gt; namelist.obsproc &lt;&lt; EOF</span><br><span class="line">&amp;record1</span><br><span class="line"> obs_gts_filename = &#x27;OBS_$&#123;DATE&#125;&#x27;,</span><br><span class="line"> obs_err_filename = &#x27;obserr.txt&#x27;,</span><br><span class="line"> gts_from_mmm_archive = .true.,</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;record2</span><br><span class="line"> time_window_min  = $&#123;DATE_MIN&#125;,</span><br><span class="line"> time_analysis    = $&#123;DATE:0:4&#125;-$&#123;DATE:4:2&#125;-$&#123;DATE:6:2&#125;_$&#123;DATE:8:2&#125;:00:00,</span><br><span class="line"> time_window_max  = $&#123;DATE_MAX&#125;,</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;record3</span><br><span class="line"> max_number_of_obs        = 400000,</span><br><span class="line"> fatal_if_exceed_max_obs  = .TRUE.,</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;record4</span><br><span class="line"> qc_test_vert_consistency = .TRUE.,</span><br><span class="line"> qc_test_convective_adj   = .TRUE.,</span><br><span class="line"> qc_test_above_lid        = .TRUE.,</span><br><span class="line"> remove_above_lid         = .false.,</span><br><span class="line"> domain_check_h           = .true.,</span><br><span class="line"> Thining_SATOB            = .false.,</span><br><span class="line"> Thining_SSMI             = .false.,</span><br><span class="line"> Thining_QSCAT            = .false.,</span><br><span class="line"> calc_psfc_from_qnh       = .true.,</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;record5</span><br><span class="line"> print_gts_read           = .TRUE.,</span><br><span class="line"> print_gpspw_read         = .TRUE.,</span><br><span class="line"> print_recoverp           = .TRUE.,</span><br><span class="line"> print_duplicate_loc      = .TRUE.,</span><br><span class="line"> print_duplicate_time     = .TRUE.,</span><br><span class="line"> print_recoverh           = .TRUE.,</span><br><span class="line"> print_qc_vert            = .TRUE.,</span><br><span class="line"> print_qc_conv            = .TRUE.,</span><br><span class="line"> print_qc_lid             = .TRUE.,</span><br><span class="line"> print_uncomplete         = .TRUE.,</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;record6</span><br><span class="line"> ptop =  1000.0,</span><br><span class="line"> base_pres       = 100000.0,</span><br><span class="line"> base_temp       = 290.0,</span><br><span class="line"> base_lapse      = 50.0,</span><br><span class="line"> base_strat_temp = 215.0,</span><br><span class="line"> base_tropo_pres = 20000.0</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;record7</span><br><span class="line"> IPROJ = 1,</span><br><span class="line"> PHIC  = $&#123;lat_ns&#125;,</span><br><span class="line"> XLONC = $&#123;lon_we&#125;,</span><br><span class="line"> TRUELAT1= $&#123;lat_s&#125;,</span><br><span class="line"> TRUELAT2= $&#123;lat_n&#125;,</span><br><span class="line"> MOAD_CEN_LAT = $&#123;lat_ns&#125;,</span><br><span class="line"> STANDARD_LON = $&#123;lon_we&#125;,</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;record8</span><br><span class="line"> IDD    =   1,</span><br><span class="line"> MAXNES =   1,</span><br><span class="line"> NESTIX =  256,  200,  136,  181,  211,</span><br><span class="line"> NESTJX =  158,  200,  181,  196,  211,</span><br><span class="line"> DIS    =  9,  10.,  3.3,  1.1,  1.1,</span><br><span class="line"> NUMC   =    1,    1,   2,     3,    4,</span><br><span class="line"> NESTI  =    1,   40,  28,    35,   45,</span><br><span class="line"> NESTJ  =    1,   60,  25,    65,   55,</span><br><span class="line"> / </span><br><span class="line"></span><br><span class="line">&amp;record9</span><br><span class="line"> PREPBUFR_OUTPUT_FILENAME = &#x27;prepbufr_output&#x27;,</span><br><span class="line"> PREPBUFR_TABLE_FILENAME = &#x27;prepbufr_table_filename&#x27;,</span><br><span class="line"> OUTPUT_OB_FORMAT = 3</span><br><span class="line"> use_for          = &#x27;3DVAR&#x27;,</span><br><span class="line"> num_slots_past   = 3,</span><br><span class="line"> num_slots_ahead  = 3,</span><br><span class="line"> write_synop = .true., </span><br><span class="line"> write_ship  = .true.,</span><br><span class="line"> write_metar = .true.,</span><br><span class="line"> write_buoy  = .true., </span><br><span class="line"> write_pilot = .true.,</span><br><span class="line"> write_sound = .true.,</span><br><span class="line"> write_amdar = .true.,</span><br><span class="line"> write_satem = .true.,</span><br><span class="line"> write_satob = .true.,</span><br><span class="line"> write_airep = .true.,</span><br><span class="line"> write_gpspw = .true.,</span><br><span class="line"> write_gpsztd= .true.,</span><br><span class="line"> write_gpsref= .true.,</span><br><span class="line"> write_gpseph= .true.,</span><br><span class="line"> write_ssmt1 = .true.,</span><br><span class="line"> write_ssmt2 = .true.,</span><br><span class="line"> write_ssmi  = .true.,</span><br><span class="line"> write_tovs  = .true.,</span><br><span class="line"> write_qscat = .true.,</span><br><span class="line"> write_profl = .true.,</span><br><span class="line"> write_bogus = .true.,</span><br><span class="line"> write_airs  = .true.,</span><br><span class="line"> /</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">./obsproc.exe</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">-----------------------------------------------------ini-----------------------------------------</span></span><br><span class="line">echo &quot;更新初始场&quot;</span><br><span class="line">rm -rf $&#123;RUN_BASEDIR&#125;/ini</span><br><span class="line">mkdir $&#123;RUN_BASEDIR&#125;/ini</span><br><span class="line">cd $&#123;RUN_BASEDIR&#125;/ini</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">-----链接一些必要的文件</span></span><br><span class="line">ln -fs $&#123;DA_SRCDIR&#125;/run/LANDUSE.TBL ./LANDUSE.TBL</span><br><span class="line"></span><br><span class="line">ln -fs $&#123;RUN_BASEDIR&#125;/ob/obs_gts_$&#123;DATE:0:4&#125;-$&#123;DATE:4:2&#125;-$&#123;DATE:6:2&#125;_$&#123;DATE:8:2&#125;:00:00.3DVAR ./ob.ascii</span><br><span class="line"></span><br><span class="line">ln -fs $&#123;DATDIR&#125;/be.dat ./be.dat</span><br><span class="line"></span><br><span class="line">cp -p $&#123;WRFDIR&#125;/wrfinput_d01 ./fg</span><br><span class="line"></span><br><span class="line">touch namelist.input</span><br><span class="line">cat &gt; namelist.input &lt;&lt; EOF</span><br><span class="line">&amp;wrfvar1</span><br><span class="line">var4d=false,</span><br><span class="line">print_detail_grad=false,</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar2</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar3</span><br><span class="line">ob_format=2,</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar4</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar5</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar6</span><br><span class="line">max_ext_its=1,</span><br><span class="line">ntmax=50,</span><br><span class="line">orthonorm_gradient=true,</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar7</span><br><span class="line">cv_options=5,</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar8</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar9</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar10</span><br><span class="line">test_transforms=false,</span><br><span class="line">test_gradient=false,</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar11</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar12</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar13</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar14</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar15</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar16</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar17</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar18</span><br><span class="line">analysis_date=$&#123;DATE:0:4&#125;-$&#123;DATE:4:2&#125;-$&#123;DATE:6:2&#125;_$&#123;DATE:8:2&#125;:00:00,</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar19</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar20</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar21</span><br><span class="line">time_window_min=$&#123;DATE_MIN&#125;,</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar22</span><br><span class="line">time_window_max=$&#123;DATE_MAX&#125;,</span><br><span class="line">/</span><br><span class="line">&amp;time_control</span><br><span class="line">start_year=$&#123;DATE:0:4&#125;,</span><br><span class="line">start_month=$&#123;DATE:4:2&#125;,</span><br><span class="line">start_day=$&#123;DATE:6:2&#125;,</span><br><span class="line">start_hour=$&#123;DATE:8:2&#125;,</span><br><span class="line">end_year=$&#123;DATE:0:4&#125;,</span><br><span class="line">end_month=$&#123;DATE:4:2&#125;,</span><br><span class="line">end_day=$&#123;DATE:6:2&#125;,</span><br><span class="line">end_hour=$&#123;DATE:8:2&#125;,</span><br><span class="line">/</span><br><span class="line">&amp;fdda</span><br><span class="line">/</span><br><span class="line">&amp;domains</span><br><span class="line">e_we=$&#123;WEST_EAST_GRID_NUMBER&#125;,</span><br><span class="line">e_sn=$&#123;SOUTH_NORTH_GRID_NUMBER&#125;,</span><br><span class="line">e_vert=$&#123;VERTICAL_GRID_NUMBER&#125;,</span><br><span class="line">dx=$&#123;GRID_DISTANCE&#125;,</span><br><span class="line">dy=$&#123;GRID_DISTANCE&#125;,</span><br><span class="line">/</span><br><span class="line">&amp;dfi_control</span><br><span class="line">/</span><br><span class="line">&amp;tc</span><br><span class="line">/</span><br><span class="line">&amp;physics</span><br><span class="line"> mp_physics                          = 3,     </span><br><span class="line"> ra_lw_physics                       = 1,     </span><br><span class="line"> ra_sw_physics                       = 1,     </span><br><span class="line"> radt                                = 30,    </span><br><span class="line"> sf_sfclay_physics                   = 1,     </span><br><span class="line"> sf_surface_physics                  = 2,    </span><br><span class="line"> bl_pbl_physics                      = 1,    </span><br><span class="line"> bldt                                = 0,    </span><br><span class="line"> cu_physics                          = 1,     </span><br><span class="line"> cudt                                = 5,     </span><br><span class="line"> isfflx                              = 1,</span><br><span class="line"> ifsnow                              = 1,</span><br><span class="line"> icloud                              = 1,</span><br><span class="line"> surface_input_source                = 1,</span><br><span class="line"> num_soil_layers                     = 4,</span><br><span class="line"> sf_urban_physics                    = 0,    </span><br><span class="line">/</span><br><span class="line">&amp;scm</span><br><span class="line">/</span><br><span class="line">&amp;dynamics</span><br><span class="line">/</span><br><span class="line">&amp;bdy_control</span><br><span class="line">/</span><br><span class="line">&amp;grib2</span><br><span class="line">/</span><br><span class="line">&amp;fire</span><br><span class="line">/</span><br><span class="line">&amp;namelist_quilt</span><br><span class="line">/</span><br><span class="line">&amp;perturbation</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">ln -sf $&#123;DA_SRCDIR&#125;/var/build/da_wrfvar.exe ./da_wrfvar.exe</span><br><span class="line">mpirun -np 6 ./da_wrfvar.exe</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">-----------------------------------------------------bdy-----------------------------------------</span></span><br><span class="line">echo &quot;更新边界场&quot;</span><br><span class="line"></span><br><span class="line">mkdir $&#123;RUN_BASEDIR&#125;/bdy</span><br><span class="line">cd $&#123;RUN_BASEDIR&#125;/bdy</span><br><span class="line"></span><br><span class="line">cp $&#123;WRFDIR&#125;/wrfbdy_d01 ./wrfbdy_d01</span><br><span class="line"></span><br><span class="line">touch parame.in</span><br><span class="line">cat &gt; parame.in &lt;&lt; EOF</span><br><span class="line">&amp;control_param</span><br><span class="line">da_file            = &#x27;$&#123;RUN_BASEDIR&#125;/ini/wrfvar_output&#x27;,</span><br><span class="line">wrf_bdy_file       = &#x27;./wrfbdy_d01&#x27;</span><br><span class="line">wrf_input          = &#x27;$&#123;WRFDIR&#125;/wrfinput_d01&#x27;,</span><br><span class="line">domain_id          = 1</span><br><span class="line">cycling = .false. </span><br><span class="line">debug   = .true.</span><br><span class="line">low_bdy_only = .false.             </span><br><span class="line">update_lsm = .true. </span><br><span class="line">var4d_lbc = .false.</span><br><span class="line">/</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">ln -sf $&#123;DA_SRCDIR&#125;/var/build/da_update_bc.exe ./da_update_bc.exe</span><br><span class="line">./da_update_bc.exe</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">----------------------------------------------------wrf-------------------------------------------</span></span><br><span class="line">cd $&#123;WRFDIR&#125;</span><br><span class="line">ln -fs $&#123;RUN_BASEDIR&#125;/bdy/wrfbdy_d01    ./wrfbdy_d01</span><br><span class="line">ln -fs $&#123;RUN_BASEDIR&#125;/ini/wrfvar_output ./wrfinput_d01</span><br><span class="line">mpirun -np 20 ./wrf.exe</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">---------------------------------------------------result-----------------------------------------</span></span><br><span class="line">mkdir $&#123;run_dir&#125;/result</span><br><span class="line">cd $&#123;run_dir&#125;/result</span><br><span class="line">cp $&#123;WRFDIR&#125;/wrfout* ./</span><br><span class="line">cd $&#123;run_dir&#125;</span><br></pre></td></tr></table></figure>



<h4 id="3-2-热启动"><a href="#3-2-热启动" class="headerlink" title="3.2 热启动"></a>3.2 热启动</h4><p><strong>流程：</strong>WRF-wrf—-obsproc—更新底边界—更新初始场—更新边界场—WRF-wrf<br><strong>示例脚本</strong>：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">DATE=2011092806</span><br><span class="line">RUN_TYPE=cycle </span><br><span class="line">DOMAIN_ID=01</span><br><span class="line">NPROC=6</span><br><span class="line">DATDIR=/home/WRF/Data</span><br><span class="line">run_dir=/home/WRF/Project/</span><br><span class="line">DA_SRCDIR=/home/WRF/WRF4.0v2/WRFDA</span><br><span class="line">project_name=test_WRF</span><br><span class="line">TIMEWINDOW1=-1h30m</span><br><span class="line">TIMEWINDOW2=1h30m</span><br><span class="line">CYCLE_PERIOD=06</span><br><span class="line">lon_e=105</span><br><span class="line">lon_w=125</span><br><span class="line">lat_n=24</span><br><span class="line">lat_s=12</span><br><span class="line">VERTICAL_GRID_NUMBER=33</span><br><span class="line">GRID_DISTANCE=9000</span><br><span class="line"></span><br><span class="line">WRFDIR=$&#123;run_dir&#125;$&#123;project_name&#125;/WRF</span><br><span class="line">RUN_BASEDIR=$&#123;run_dir&#125;$&#123;project_name&#125;/run</span><br><span class="line">BIN_DIR=$&#123;DA_SRCDIR&#125;/var/build</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">WEST_EAST_GRID_NUMBER=$[(lon_w-lon_e)*111000/GRID_DISTANCE+10]</span><br><span class="line">SOUTH_NORTH_GRID_NUMBER=$[(lat_n-lat_s)*111000/GRID_DISTANCE+10]</span><br><span class="line">lat_ns=$[(lat_n+lat_s)/2]</span><br><span class="line">lon_we=$[(lon_w+lon_e)/2]</span><br><span class="line"></span><br><span class="line">DATE_MIN=$($&#123;BIN_DIR&#125;/da_advance_time.exe $&#123;DATE&#125; $&#123;TIMEWINDOW1&#125; -w)</span><br><span class="line">DATE_MAX=$($&#123;BIN_DIR&#125;/da_advance_time.exe $&#123;DATE&#125; $&#123;TIMEWINDOW2&#125; -w)</span><br><span class="line">PREV_DATE=$($&#123;BIN_DIR&#125;/da_advance_time.exe $&#123;DATE&#125; -$&#123;CYCLE_PERIOD&#125;)</span><br><span class="line">VARBC_PREV_DATE=$($&#123;BIN_DIR&#125;/da_advance_time.exe $&#123;DATE&#125; -24)</span><br><span class="line"></span><br><span class="line">if [ ! -d &quot;$&#123;RUN_BASEDIR&#125;&quot; ];then</span><br><span class="line">  mkdir $&#123;RUN_BASEDIR&#125;</span><br><span class="line">else</span><br><span class="line">  rm -rf $&#123;RUN_BASEDIR&#125;</span><br><span class="line">  mkdir $&#123;RUN_BASEDIR&#125;</span><br><span class="line"></span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">cd $&#123;DA_SRCDIR&#125;</span><br><span class="line">source ../libraries.sh</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">-----------------------------------------------------------ob-------------------------------------------</span></span><br><span class="line">echo &quot;处理观测数据ob&quot;</span><br><span class="line">mkdir $&#123;RUN_BASEDIR&#125;/ob</span><br><span class="line">cd $&#123;RUN_BASEDIR&#125;/ob</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">-----链接一些必要的文件</span></span><br><span class="line">cp $&#123;DATDIR&#125;/&#x27;OBS_&#x27;$&#123;DATE&#125; ./</span><br><span class="line"></span><br><span class="line">ln -fs $&#123;DA_SRCDIR&#125;/var/obsproc/obserr.txt ./obserr.txt</span><br><span class="line"></span><br><span class="line">ln -fs $&#123;DA_SRCDIR&#125;/var/obsproc/prepbufr_table_filename ./prepbufr_table_filename</span><br><span class="line"></span><br><span class="line">ln -fs $&#123;DA_SRCDIR&#125;/var/obsproc/obsproc.exe .</span><br><span class="line"></span><br><span class="line">touch namelist.obsproc</span><br><span class="line">cat &gt; namelist.obsproc &lt;&lt; EOF</span><br><span class="line">&amp;record1</span><br><span class="line"> obs_gts_filename = &#x27;OBS_$&#123;DATE&#125;&#x27;,</span><br><span class="line"> obs_err_filename = &#x27;obserr.txt&#x27;,</span><br><span class="line"> gts_from_mmm_archive = .true.,</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;record2</span><br><span class="line"> time_window_min  = $&#123;DATE_MIN&#125;,</span><br><span class="line"> time_analysis    = $&#123;DATE:0:4&#125;-$&#123;DATE:4:2&#125;-$&#123;DATE:6:2&#125;_$&#123;DATE:8:2&#125;:00:00,</span><br><span class="line"> time_window_max  = $&#123;DATE_MAX&#125;,</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;record3</span><br><span class="line"> max_number_of_obs        = 400000,</span><br><span class="line"> fatal_if_exceed_max_obs  = .TRUE.,</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;record4</span><br><span class="line"> qc_test_vert_consistency = .TRUE.,</span><br><span class="line"> qc_test_convective_adj   = .TRUE.,</span><br><span class="line"> qc_test_above_lid        = .TRUE.,</span><br><span class="line"> remove_above_lid         = .false.,</span><br><span class="line"> domain_check_h           = .true.,</span><br><span class="line"> Thining_SATOB            = .false.,</span><br><span class="line"> Thining_SSMI             = .false.,</span><br><span class="line"> Thining_QSCAT            = .false.,</span><br><span class="line"> calc_psfc_from_qnh       = .true.,</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;record5</span><br><span class="line"> print_gts_read           = .TRUE.,</span><br><span class="line"> print_gpspw_read         = .TRUE.,</span><br><span class="line"> print_recoverp           = .TRUE.,</span><br><span class="line"> print_duplicate_loc      = .TRUE.,</span><br><span class="line"> print_duplicate_time     = .TRUE.,</span><br><span class="line"> print_recoverh           = .TRUE.,</span><br><span class="line"> print_qc_vert            = .TRUE.,</span><br><span class="line"> print_qc_conv            = .TRUE.,</span><br><span class="line"> print_qc_lid             = .TRUE.,</span><br><span class="line"> print_uncomplete         = .TRUE.,</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;record6</span><br><span class="line"> ptop =  1000.0,</span><br><span class="line"> base_pres       = 100000.0,</span><br><span class="line"> base_temp       = 290.0,</span><br><span class="line"> base_lapse      = 50.0,</span><br><span class="line"> base_strat_temp = 215.0,</span><br><span class="line"> base_tropo_pres = 20000.0</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;record7</span><br><span class="line"> IPROJ = 1,</span><br><span class="line"> PHIC  = $&#123;lat_ns&#125;,</span><br><span class="line"> XLONC = $&#123;lon_we&#125;,</span><br><span class="line"> TRUELAT1= $&#123;lat_s&#125;,</span><br><span class="line"> TRUELAT2= $&#123;lat_n&#125;,</span><br><span class="line"> MOAD_CEN_LAT = $&#123;lat_ns&#125;,</span><br><span class="line"> STANDARD_LON = $&#123;lon_we&#125;,</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;record8</span><br><span class="line"> IDD    =   1,</span><br><span class="line"> MAXNES =   1,</span><br><span class="line"> NESTIX =  256,  200,  136,  181,  211,</span><br><span class="line"> NESTJX =  158,  200,  181,  196,  211,</span><br><span class="line"> DIS    =  9,  10.,  3.3,  1.1,  1.1,</span><br><span class="line"> NUMC   =    1,    1,   2,     3,    4,</span><br><span class="line"> NESTI  =    1,   40,  28,    35,   45,</span><br><span class="line"> NESTJ  =    1,   60,  25,    65,   55,</span><br><span class="line"> / </span><br><span class="line"></span><br><span class="line">&amp;record9</span><br><span class="line"> PREPBUFR_OUTPUT_FILENAME = &#x27;prepbufr_output&#x27;,</span><br><span class="line"> PREPBUFR_TABLE_FILENAME = &#x27;prepbufr_table_filename&#x27;,</span><br><span class="line"> OUTPUT_OB_FORMAT = 3</span><br><span class="line"> use_for          = &#x27;3DVAR&#x27;,</span><br><span class="line"> num_slots_past   = 3,</span><br><span class="line"> num_slots_ahead  = 3,</span><br><span class="line"> write_synop = .true., </span><br><span class="line"> write_ship  = .true.,</span><br><span class="line"> write_metar = .true.,</span><br><span class="line"> write_buoy  = .true., </span><br><span class="line"> write_pilot = .true.,</span><br><span class="line"> write_sound = .true.,</span><br><span class="line"> write_amdar = .true.,</span><br><span class="line"> write_satem = .true.,</span><br><span class="line"> write_satob = .true.,</span><br><span class="line"> write_airep = .true.,</span><br><span class="line"> write_gpspw = .true.,</span><br><span class="line"> write_gpsztd= .true.,</span><br><span class="line"> write_gpsref= .true.,</span><br><span class="line"> write_gpseph= .true.,</span><br><span class="line"> write_ssmt1 = .true.,</span><br><span class="line"> write_ssmt2 = .true.,</span><br><span class="line"> write_ssmi  = .true.,</span><br><span class="line"> write_tovs  = .true.,</span><br><span class="line"> write_qscat = .true.,</span><br><span class="line"> write_profl = .true.,</span><br><span class="line"> write_bogus = .true.,</span><br><span class="line"> write_airs  = .true.,</span><br><span class="line"> /</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">./obsproc.exe</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">-----------------------------------------------------low-----------------------------------------</span></span><br><span class="line">echo &quot;更新底边界&quot;</span><br><span class="line">mkdir $&#123;RUN_BASEDIR&#125;/low</span><br><span class="line">cd $&#123;RUN_BASEDIR&#125;/low</span><br><span class="line"></span><br><span class="line">cp -p $&#123;run_dir&#125;/result/wrfout_d$&#123;DOMAIN_ID&#125;_$&#123;DATE:0:4&#125;-$&#123;DATE:4:2&#125;-$&#123;DATE:6:2&#125;_$&#123;DATE:8:2&#125;:00:00 ./fg</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">touch parame.in</span><br><span class="line">cat &gt; parame.in &lt;&lt; EOF</span><br><span class="line">&amp;control_param</span><br><span class="line"> da_file            = &#x27;./fg&#x27;</span><br><span class="line"> wrf_input          = &#x27;$&#123;WRFDIR&#125;/wrfinput_d01&#x27;</span><br><span class="line"> domain_id          = $&#123;DOMAIN_ID&#125;</span><br><span class="line"> debug              = .false.</span><br><span class="line"> update_lateral_bdy = .false.</span><br><span class="line"> update_low_bdy     = .true.</span><br><span class="line"> update_lsm         = .false.</span><br><span class="line"> iswater            = 16</span><br><span class="line">/</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">ln -sf $&#123;DA_SRCDIR&#125;/var/build/da_update_bc.exe ./da_update_bc.exe</span><br><span class="line">./da_update_bc.exe</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">-----------------------------------------------------ini-----------------------------------------</span></span><br><span class="line">echo &quot;更新初始场&quot;</span><br><span class="line">mkdir $&#123;RUN_BASEDIR&#125;/ini</span><br><span class="line">cd $&#123;RUN_BASEDIR&#125;/ini</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">-----链接一些必要的文件</span></span><br><span class="line">ln -fs $&#123;DA_SRCDIR&#125;/run/LANDUSE.TBL ./LANDUSE.TBL</span><br><span class="line"></span><br><span class="line">ln -fs $&#123;RUN_BASEDIR&#125;/ob/obs_gts_$&#123;DATE:0:4&#125;-$&#123;DATE:4:2&#125;-$&#123;DATE:6:2&#125;_$&#123;DATE:8:2&#125;:00:00.3DVAR ./ob.ascii</span><br><span class="line"></span><br><span class="line">ln -fs $&#123;DATDIR&#125;/be.dat ./be.dat</span><br><span class="line"></span><br><span class="line">cp -p $&#123;RUN_BASEDIR&#125;/low/fg ./fg</span><br><span class="line"></span><br><span class="line">touch namelist.input</span><br><span class="line">cat &gt; namelist.input &lt;&lt; EOF</span><br><span class="line">&amp;wrfvar1</span><br><span class="line">var4d=false,</span><br><span class="line">print_detail_grad=false,</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar2</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar3</span><br><span class="line">ob_format=2,</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar4</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar5</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar6</span><br><span class="line">max_ext_its=1,</span><br><span class="line">ntmax=50,</span><br><span class="line">orthonorm_gradient=true,</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar7</span><br><span class="line">cv_options=5,</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar8</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar9</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar10</span><br><span class="line">test_transforms=false,</span><br><span class="line">test_gradient=false,</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar11</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar12</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar13</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar14</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar15</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar16</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar17</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar18</span><br><span class="line">analysis_date=$&#123;DATE:0:4&#125;-$&#123;DATE:4:2&#125;-$&#123;DATE:6:2&#125;_$&#123;DATE:8:2&#125;:00:00,</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar19</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar20</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar21</span><br><span class="line">time_window_min=$&#123;DATE_MIN&#125;,</span><br><span class="line">/</span><br><span class="line">&amp;wrfvar22</span><br><span class="line">time_window_max=$&#123;DATE_MAX&#125;,</span><br><span class="line">/</span><br><span class="line">&amp;time_control</span><br><span class="line">start_year=$&#123;DATE:0:4&#125;,</span><br><span class="line">start_month=$&#123;DATE:4:2&#125;,</span><br><span class="line">start_day=$&#123;DATE:6:2&#125;,</span><br><span class="line">start_hour=$&#123;DATE:8:2&#125;,</span><br><span class="line">end_year=$&#123;DATE:0:4&#125;,</span><br><span class="line">end_month=$&#123;DATE:4:2&#125;,</span><br><span class="line">end_day=$&#123;DATE:6:2&#125;,</span><br><span class="line">end_hour=$&#123;DATE:8:2&#125;,</span><br><span class="line">/</span><br><span class="line">&amp;fdda</span><br><span class="line">/</span><br><span class="line">&amp;domains</span><br><span class="line">e_we=$&#123;WEST_EAST_GRID_NUMBER&#125;,</span><br><span class="line">e_sn=$&#123;SOUTH_NORTH_GRID_NUMBER&#125;,</span><br><span class="line">e_vert=$&#123;VERTICAL_GRID_NUMBER&#125;,</span><br><span class="line">dx=$&#123;GRID_DISTANCE&#125;,</span><br><span class="line">dy=$&#123;GRID_DISTANCE&#125;,</span><br><span class="line">/</span><br><span class="line">&amp;dfi_control</span><br><span class="line">/</span><br><span class="line">&amp;tc</span><br><span class="line">/</span><br><span class="line">&amp;physics</span><br><span class="line"> mp_physics                          = 3,     </span><br><span class="line"> ra_lw_physics                       = 1,     </span><br><span class="line"> ra_sw_physics                       = 1,     </span><br><span class="line"> radt                                = 30,    </span><br><span class="line"> sf_sfclay_physics                   = 1,     </span><br><span class="line"> sf_surface_physics                  = 2,    </span><br><span class="line"> bl_pbl_physics                      = 1,    </span><br><span class="line"> bldt                                = 0,    </span><br><span class="line"> cu_physics                          = 1,     </span><br><span class="line"> cudt                                = 5,     </span><br><span class="line"> isfflx                              = 1,</span><br><span class="line"> ifsnow                              = 1,</span><br><span class="line"> icloud                              = 1,</span><br><span class="line"> surface_input_source                = 1,</span><br><span class="line"> num_soil_layers                     = 4,</span><br><span class="line"> sf_urban_physics                    = 0,    </span><br><span class="line">/</span><br><span class="line">&amp;scm</span><br><span class="line">/</span><br><span class="line">&amp;dynamics</span><br><span class="line">/</span><br><span class="line">&amp;bdy_control</span><br><span class="line">/</span><br><span class="line">&amp;grib2</span><br><span class="line">/</span><br><span class="line">&amp;fire</span><br><span class="line">/</span><br><span class="line">&amp;namelist_quilt</span><br><span class="line">/</span><br><span class="line">&amp;perturbation</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">ln -sf $&#123;DA_SRCDIR&#125;/var/build/da_wrfvar.exe ./da_wrfvar.exe</span><br><span class="line">mpirun -np 6 ./da_wrfvar.exe</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">-----------------------------------------------------bdy-----------------------------------------</span></span><br><span class="line">echo &quot;更新边界场&quot;</span><br><span class="line"></span><br><span class="line">mkdir $&#123;RUN_BASEDIR&#125;/bdy</span><br><span class="line">cd $&#123;RUN_BASEDIR&#125;/bdy</span><br><span class="line"></span><br><span class="line">cp $&#123;WRFDIR&#125;/wrfbdy_d01 ./wrfbdy_d01</span><br><span class="line"></span><br><span class="line">touch parame.in</span><br><span class="line">cat &gt; parame.in &lt;&lt; EOF</span><br><span class="line">&amp;control_param</span><br><span class="line">da_file            = &#x27;$&#123;RUN_BASEDIR&#125;/ini/wrfvar_output&#x27;,</span><br><span class="line">wrf_bdy_file       = &#x27;./wrfbdy_d01&#x27;</span><br><span class="line">wrf_input          = &#x27;$&#123;WRFDIR&#125;/wrfinput_d01&#x27;,</span><br><span class="line">domain_id          = 1</span><br><span class="line">cycling = .false. </span><br><span class="line">debug   = .true.</span><br><span class="line">low_bdy_only = .false.             </span><br><span class="line">update_lsm = .true. </span><br><span class="line">var4d_lbc = .false.</span><br><span class="line">/</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">ln -sf $&#123;DA_SRCDIR&#125;/var/build/da_update_bc.exe ./da_update_bc.exe</span><br><span class="line">./da_update_bc.exe</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">----------------------------------------------------wrf-------------------------------------------</span></span><br><span class="line">cd $&#123;WRFDIR&#125;</span><br><span class="line">ln -fs $&#123;RUN_BASEDIR&#125;/bdy/wrfbdy_d01    ./wrfbdy_d01</span><br><span class="line">ln -fs $&#123;RUN_BASEDIR&#125;/ini/wrfvar_output ./wrfinput_d01</span><br><span class="line">mpirun -np 20 ./wrf.exe</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">---------------------------------------------------result-----------------------------------------</span></span><br><span class="line">if [ ! -d &quot;$&#123;run_dir&#125;result&quot; ];then</span><br><span class="line">  mkdir $&#123;run_dir&#125;result</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">cd $&#123;run_dir&#125;result</span><br><span class="line">cp $&#123;WRFDIR&#125;/wrfout* ./</span><br><span class="line">cd $&#123;run_dir&#125;</span><br></pre></td></tr></table></figure>



<h2 id="WRF-台风个例"><a href="#WRF-台风个例" class="headerlink" title="WRF 台风个例"></a>WRF 台风个例</h2><h3 id="台风介绍"><a href="#台风介绍" class="headerlink" title="台风介绍"></a>台风介绍</h3><p>2011年第17号强台风“纳沙”（英文名：NESAT，名字来源：柬埔寨，名字意义：渔夫）于2011年9月24日上午在西北太平洋洋面上生成，9月26日夜间和29日7时两度加强成为强台风，是2011年以来登陆中国强度最强的台风（以强台风级别登陆海南），也是6年来登陆海南的最强台风。<img src="https://p.ipic.vip/mv27e1.png" alt="Image"></p>
<h3 id="模拟范围"><a href="#模拟范围" class="headerlink" title="模拟范围"></a>模拟范围</h3><p>经度：105°E-125°E<br>纬度：12°N-24°N<br>时间：2011-09-28_06至2011-09-28_12<br>网格分辨率：9000 x 9000<br>本次模拟不涉及嵌套，作为示例时间只模拟6小时。</p>
<h3 id="文件准备"><a href="#文件准备" class="headerlink" title="文件准备"></a>文件准备</h3><h4 id="文件夹准备"><a href="#文件夹准备" class="headerlink" title="文件夹准备"></a>文件夹准备</h4><p><img src="https://p.ipic.vip/4j8av8.png" alt="Image">FNL、WPS、WRF文件夹</p>
<h4 id="FNL文件"><a href="#FNL文件" class="headerlink" title="FNL文件"></a>FNL文件</h4><p>位置：&#x2F;FNL<img src="https://p.ipic.vip/jzedpp.png" alt="Image"></p>
<h4 id="namelist-wps-文件"><a href="#namelist-wps-文件" class="headerlink" title="namelist.wps 文件"></a>namelist.wps 文件</h4><p>位置：&#x2F;WPS</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> &amp;share</span><br><span class="line"> wrf_core = &#x27;ARW&#x27;,</span><br><span class="line"> max_dom = 1,</span><br><span class="line"> start_date = 2011-09-28_06:00:00,&#x27;2006-08-16_12:00:00&#x27;,</span><br><span class="line"> end_date   = 2011-09-28_12:00:00,&#x27;2006-08-16_12:00:00&#x27;,</span><br><span class="line"> interval_seconds = 21600</span><br><span class="line"> io_form_geogrid = 2,</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;geogrid</span><br><span class="line"> parent_id         =   1,   1,</span><br><span class="line"> parent_grid_ratio =   1,   3,</span><br><span class="line"> i_parent_start    =   1,  31,</span><br><span class="line"> j_parent_start    =   1,  17,</span><br><span class="line"> e_we              =  256, 112,</span><br><span class="line"> e_sn              =  158,  97,</span><br><span class="line"> !</span><br><span class="line"> !!!!!!!!!!!!!!!!!!!!!!!!!!!! IMPORTANT NOTE !!!!!!!!!!!!!!!!!!!!!!!!!!!!</span><br><span class="line"> ! The default datasets used to produce the MAXSNOALB and ALBEDO12M</span><br><span class="line"> ! fields have changed in WPS v4.0. These fields are now interpolated</span><br><span class="line"> ! from MODIS-based datasets.</span><br><span class="line"> !</span><br><span class="line"> ! To match the output given by the default namelist.wps in WPS v3.9.1,</span><br><span class="line"> ! the following setting for geog_data_res may be used:</span><br><span class="line"> !</span><br><span class="line"> ! geog_data_res = &#x27;maxsnowalb_ncep+albedo_ncep+default&#x27;, &#x27;maxsnowalb_ncep+albedo_ncep+default&#x27;, </span><br><span class="line"> !</span><br><span class="line"> !!!!!!!!!!!!!!!!!!!!!!!!!!!! IMPORTANT NOTE !!!!!!!!!!!!!!!!!!!!!!!!!!!!</span><br><span class="line"> !</span><br><span class="line"> geog_data_res = &#x27;10m&#x27;,&#x27;2m&#x27;,</span><br><span class="line"> dx = 9000,</span><br><span class="line"> dy = 9000,</span><br><span class="line"> map_proj = &#x27;lambert&#x27;,</span><br><span class="line"> ref_lat   = 18,</span><br><span class="line"> ref_lon   = 115,</span><br><span class="line"> truelat1  = 12,</span><br><span class="line"> truelat2  = 24,</span><br><span class="line"> stand_lon = 115,</span><br><span class="line"> geog_data_path = &#x27;/home/daimu/Desktop/WRF/geog/geog&#x27;</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;ungrib</span><br><span class="line"> out_format = &#x27;WPS&#x27;,</span><br><span class="line"> prefix = &#x27;FILE&#x27;,</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;metgrid</span><br><span class="line"> fg_name = &#x27;FILE&#x27;</span><br><span class="line"> io_form_metgrid = 2, </span><br><span class="line">/</span><br></pre></td></tr></table></figure>

<h4 id="namelist-input-文件"><a href="#namelist-input-文件" class="headerlink" title="namelist.input 文件"></a>namelist.input 文件</h4><p>位置：&#x2F;WRF&#x2F;test&#x2F;em_real</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&amp;time_control</span><br><span class="line">run_days                            = 0,</span><br><span class="line">run_hours                           = 3,</span><br><span class="line">run_minutes                         = 0,</span><br><span class="line">run_seconds                         = 0,</span><br><span class="line">start_year                          = 2011, 2000, 2000,</span><br><span class="line">start_month                         = 09,   01,   01,</span><br><span class="line">start_day                           = 28,   24,   24,</span><br><span class="line">start_hour                          = 06,   12,   12,</span><br><span class="line">end_year                            = 2011, 2000, 2000,</span><br><span class="line">end_month                           = 09,   01,   01,</span><br><span class="line">end_day                             = 28,   25,   25,</span><br><span class="line">end_hour                            = 12,   12,   12,</span><br><span class="line">interval_seconds                    = 21600</span><br><span class="line">input_from_file                     = .true.,.true.,.true.,</span><br><span class="line">history_interval                    = 180,  60,   60,</span><br><span class="line">frames_per_outfile                  = 1, 1000, 1000,</span><br><span class="line">restart                             = .false.,</span><br><span class="line">restart_interval                    = 180,</span><br><span class="line">io_form_history                     = 2</span><br><span class="line">io_form_restart                     = 2</span><br><span class="line">io_form_input                       = 2</span><br><span class="line">io_form_boundary                    = 2</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;domains</span><br><span class="line">time_step                           = 30,</span><br><span class="line">time_step_fract_num                 = 0,</span><br><span class="line">time_step_fract_den                 = 1,</span><br><span class="line">max_dom                             = 1,</span><br><span class="line">e_we                                = 256,    112,   94,</span><br><span class="line">e_sn                                = 158,    97,    91,</span><br><span class="line">e_vert                              = 33,    33,    33,</span><br><span class="line">p_top_requested                     = 5000,</span><br><span class="line">num_metgrid_levels                  = 27,</span><br><span class="line">num_metgrid_soil_levels             = 4,</span><br><span class="line">dx                                  = 9000, 10000,  3333.33,</span><br><span class="line">dy                                  = 9000, 10000,  3333.33,</span><br><span class="line">grid_id                             = 1,     2,     3,</span><br><span class="line">parent_id                           = 0,     1,     2,</span><br><span class="line">i_parent_start                      = 1,     31,    30,</span><br><span class="line">j_parent_start                      = 1,     17,    30,</span><br><span class="line">parent_grid_ratio                   = 1,     3,     3,</span><br><span class="line">parent_time_step_ratio              = 1,     3,     3,</span><br><span class="line">feedback                            = 1,</span><br><span class="line">smooth_option                       = 0</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;physics</span><br><span class="line">mp_physics                          = 3,     3,     3,</span><br><span class="line">ra_lw_physics                       = 1,     1,     1,</span><br><span class="line">ra_sw_physics                       = 1,     1,     1,</span><br><span class="line">radt                                = 30,    30,    30,</span><br><span class="line">sf_sfclay_physics                   = 1,     1,     1,</span><br><span class="line">sf_surface_physics                  = 2,     2,     2,</span><br><span class="line">bl_pbl_physics                      = 1,     1,     1,</span><br><span class="line">bldt                                = 0,     0,     0,</span><br><span class="line">cu_physics                          = 1,     1,     0,</span><br><span class="line">cudt                                = 5,     5,     5,</span><br><span class="line">isfflx                              = 1,</span><br><span class="line">ifsnow                              = 1,</span><br><span class="line">icloud                              = 1,</span><br><span class="line">surface_input_source                = 1,</span><br><span class="line">num_soil_layers                     = 4,</span><br><span class="line">sf_urban_physics                    = 0,     0,     0,</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;fdda</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;dynamics</span><br><span class="line">hybrid_opt                          = 2, </span><br><span class="line">w_damping                           = 0,</span><br><span class="line">diff_opt                            = 1,      1,      1,</span><br><span class="line">km_opt                              = 4,      4,      4,</span><br><span class="line">diff_6th_opt                        = 0,      0,      0,</span><br><span class="line">diff_6th_factor                     = 0.12,   0.12,   0.12,</span><br><span class="line">base_temp                           = 290.</span><br><span class="line">damp_opt                            = 3,</span><br><span class="line">zdamp                               = 5000.,  5000.,  5000.,</span><br><span class="line">dampcoef                            = 0.2,    0.2,    0.2</span><br><span class="line">khdif                               = 0,      0,      0,</span><br><span class="line">kvdif                               = 0,      0,      0,</span><br><span class="line">non_hydrostatic                     = .true., .true., .true.,</span><br><span class="line">moist_adv_opt                       = 1,      1,      1,     </span><br><span class="line">scalar_adv_opt                      = 1,      1,      1,     </span><br><span class="line">gwd_opt                             = 1,</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;bdy_control</span><br><span class="line">spec_bdy_width                      = 5,</span><br><span class="line">specified                           = .true.</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;grib2</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">&amp;namelist_quilt</span><br><span class="line">nio_tasks_per_group = 0,</span><br><span class="line">nio_groups = 1,</span><br><span class="line">/</span><br></pre></td></tr></table></figure>

<h3 id="运行流程-1"><a href="#运行流程-1" class="headerlink" title="运行流程"></a>运行流程</h3><h4 id="WPS文件夹"><a href="#WPS文件夹" class="headerlink" title="WPS文件夹"></a>WPS文件夹</h4><h5 id="step-1-x2F-geogrid-exe"><a href="#step-1-x2F-geogrid-exe" class="headerlink" title="step 1 : .&#x2F;geogrid.exe"></a>step 1 : .&#x2F;geogrid.exe</h5><p>终端：<img src="https://p.ipic.vip/sk328j.png" alt="Image"></p>
<p>WPS文件夹-增加的文件：<img src="https://p.ipic.vip/0wwhq9.png" alt="Image"></p>
<h5 id="step-2-x2F-link-grib-csh-x2F-FNL-x2F-fnl"><a href="#step-2-x2F-link-grib-csh-x2F-FNL-x2F-fnl" class="headerlink" title="step 2 : .&#x2F;link_grib.csh ..&#x2F;FNL&#x2F;fnl*"></a>step 2 : .&#x2F;link_grib.csh ..&#x2F;FNL&#x2F;fnl*</h5><p>终端：<img src="https://p.ipic.vip/cl7l0t.png" alt="Image"></p>
<p>WPS文件夹-增加的文件：<img src="https://p.ipic.vip/vffxc4.png" alt="Image"></p>
<h5 id="step-3-x2F-ungrib-exe"><a href="#step-3-x2F-ungrib-exe" class="headerlink" title="step 3 : .&#x2F;ungrib.exe"></a>step 3 : .&#x2F;ungrib.exe</h5><p>终端：<img src="https://p.ipic.vip/c74ejp.png" alt="Image"><img src="https://p.ipic.vip/qoeivu.png" alt="Image"></p>
<p>WPS文件夹-增加的文件：<img src="https://p.ipic.vip/xbdaaa.png" alt="Image"></p>
<h5 id="step-4-x2F-metgrid-exe"><a href="#step-4-x2F-metgrid-exe" class="headerlink" title="step 4 : .&#x2F;metgrid.exe"></a>step 4 : .&#x2F;metgrid.exe</h5><p>终端：<img src="https://p.ipic.vip/z2whzc.png" alt="Image"></p>
<p>WPS文件夹-增加的文件：<img src="https://p.ipic.vip/1qdnni.png" alt="Image"></p>
<h4 id="WRF-test-em-real文件夹"><a href="#WRF-test-em-real文件夹" class="headerlink" title="WRF-test-em_real文件夹"></a>WRF-test-em_real文件夹</h4><h5 id="step-1-ln-sf-x2F-x2F-x2F-WPS-x2F-met-em-d"><a href="#step-1-ln-sf-x2F-x2F-x2F-WPS-x2F-met-em-d" class="headerlink" title="step 1 : ln -sf ..&#x2F;..&#x2F;..&#x2F;WPS&#x2F;met_em.d* ."></a>step 1 : ln -sf ..&#x2F;..&#x2F;..&#x2F;WPS&#x2F;met_em.d* .</h5><p>终端：<img src="https://p.ipic.vip/8t49f3.png" alt="Image"></p>
<p>WRF文件夹-增加的文件：<img src="https://p.ipic.vip/5wtgm5.png" alt="Image"></p>
<h5 id="step-2-x2F-real-exe"><a href="#step-2-x2F-real-exe" class="headerlink" title="step 2 : .&#x2F;real.exe"></a>step 2 : .&#x2F;real.exe</h5><p>终端：<img src="https://p.ipic.vip/2vke3c.png" alt="Image"></p>
<p>WRF文件夹-增加的文件：<img src="https://p.ipic.vip/mj3htg.png" alt="Image"></p>
<h5 id="step-3-x2F-wrf-exe"><a href="#step-3-x2F-wrf-exe" class="headerlink" title="step 3 : .&#x2F;wrf.exe"></a>step 3 : .&#x2F;wrf.exe</h5><p>终端：<img src="https://p.ipic.vip/jt4zdb.png" alt="Image"></p>
<p>WRF文件夹-增加的文件：<img src="https://p.ipic.vip/uv0a7d.png" alt="Image"></p>
<p><strong>注意：如有问题，请查阅（用几个核就会出现几个文件）：</strong><img src="https://p.ipic.vip/6emdvi.png" alt="Image"></p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Writting</title>
    <url>/2022/05/01/Tool/Writting/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="你写论文时发现了哪些非常神的网站？"><a href="#你写论文时发现了哪些非常神的网站？" class="headerlink" title="你写论文时发现了哪些非常神的网站？"></a>你写论文时发现了哪些非常神的网站？</h2><p>作者：Leo Dong<br>链接：<a href="https://www.zhihu.com/question/35931336/answer/1338390359">https://www.zhihu.com/question/35931336/answer/1338390359</a></p>
<p>我根据这些网站的不同功能，把这些网站分成了5个大类，让在不同阶段的同学都能找到适合自己的网站，达到真正的指哪打哪！</p>
<p>而且每一个大类下都有你<strong>必须要用</strong>的网站，所以一定要认真看完哦~</p>
<h3 id="一、文献类"><a href="#一、文献类" class="headerlink" title="一、文献类"></a>一、文献类</h3><p><strong>1. 文献查找及下载</strong></p>
<p><strong>1）维普网</strong></p>
<p>链接：<a href="https://link.zhihu.com/?target=http://www.cqvip.com/">维普网</a></p>
<p><img src="https://p.ipic.vip/3wn39v.jpg" alt="img"><img src="https://p.ipic.vip/pjucbj.jpg" alt="img"></p>
<p>这个网站是用于中文文献查找。</p>
<p>对于本科同学写论文时，一般不要求英文论文，所以这个网站对于需要写中文论文的同学非常有帮助。</p>
<p><strong>2）知网</strong></p>
<p>链接：<a href="https://link.zhihu.com/?target=https://www.cnki.net/">知网</a></p>
<p><img src="https://p.ipic.vip/y61kqp.png" alt="img"><img src="https://p.ipic.vip/xe8l0a.png" alt="img"></p>
<p>这个网站我相信不用我再多说了吧，作为一个研究人员，你要是问知网是什么？那是会出事的哦！这个是有前车之鉴的哈。</p>
<p><strong>3）Web of Science</strong></p>
<p>链接：<a href="https://link.zhihu.com/?target=https://apps.webofknowledge.com/WOS_GeneralSearch_input.do?product=WOS&search_mode=GeneralSearch&SID=D5uXqzHOILovzqau6uI&preferencesSaved=">Web of Science</a></p>
<p><img src="https://p.ipic.vip/0ro5f7.png" alt="img"><img src="https://p.ipic.vip/9d0ano.png" alt="img"></p>
<p>这个网站我在之前的中<a href="https://www.zhihu.com/question/304334959/answer/1312667716">研究生新生怎么看论文</a>的回答中提到过，是国内的学生查找文献的神器，搜索功能齐全，数据和文献也比较多，建议大家好好利用！</p>
<p><strong>4）Open Access Library</strong> </p>
<p>链接：<a href="https://link.zhihu.com/?target=https://www.oalib.com/">OAL</a></p>
<p><img src="https://p.ipic.vip/z8un1e.jpg" alt="img"><img src="https://p.ipic.vip/zuld6h.jpg" alt="img"></p>
<p>这个网站有一个好处是，你搜索出来文献以后，它会有相关的文章推荐，而且在右边会有相应的期刊推荐。</p>
<p>这样不仅你在查找文献的时候方便，你要想找对应期刊投稿时，也可以用这个网站的功能。</p>
<p><strong>5）谷歌镜像</strong></p>
<p>链接：<a href="https://link.zhihu.com/?target=https://ac.scmor.com/">谷歌镜像</a></p>
<p><img src="https://p.ipic.vip/p7m4sv.png" alt="img"><img src="https://p.ipic.vip/712un2.png" alt="img"></p>
<p>有了它，查找起英文文献来和在国外没有两样。我在国外最常用的两个查文献的网站就是<strong>“Google Scholar”</strong>和<strong>“Pubmed</strong>”。</p>
<p>现在这两个网站分别可以被“谷歌镜像”和“Web of Science”给替代！真的强！</p>
<p><strong>6）SCI-hub</strong></p>
<p>链接：<a href="https://link.zhihu.com/?target=http://www.sci-hub.wang/">SCI-hub</a></p>
<p><img src="https://p.ipic.vip/l1xq1t.jpg" alt="img"><img src="https://p.ipic.vip/oipqw3.jpg" alt="img"></p>
<p>超级屌的一个文献下载网站，要是你在上述我讲的文献网站中有打不开的文献，直接把DOI搞过来，在这里一复制，就解决了！</p>
<p><strong>2、文献整理</strong></p>
<p><strong>1）Endnote</strong></p>
<p>下载链接：<a href="https://link.zhihu.com/?target=https://endnote.com/">Endnote</a></p>
<p>视频教程：<a href="https://link.zhihu.com/?target=https://www.bilibili.com/video/BV1Qb411J7ES?from=search&seid=15317469315053722643">教程</a></p>
<p><img src="https://p.ipic.vip/3fdefn.jpg" alt="img"><img src="https://p.ipic.vip/82b1w6.jpg" alt="img">图片来自网络，侵删</p>
<p>Endnote作为文献的分类和整理还是很强大的，而且在你写作的时候，文献的插入也是会用到Endnote的。</p>
<p>不过就是需要付费，但是如果你是研究生的话，你们组里应该已经买了，所以不用担心。</p>
<p>实在不行可以试一下破解版。</p>
<p><strong>2）Mendeley</strong></p>
<p>下载链接：<a href="https://link.zhihu.com/?target=https://www.mendeley.com/download-desktop-new/">Mendeley</a></p>
<p>视频教程：<a href="https://link.zhihu.com/?target=https://www.bilibili.com/video/BV137411g7kS?from=search&seid=13335511356968292770">教程</a></p>
<p><img src="https://p.ipic.vip/cxavzs.jpg" alt="img"><img src="https://p.ipic.vip/lvhplf.jpg" alt="img">图片来自网络，侵删</p>
<p>用Mendeley来做笔记也是很好的选择。所以笔记分类两不误。</p>
<p><strong>3）Zotero</strong></p>
<p>下载链接：<a href="https://link.zhihu.com/?target=https://www.zotero.org/download/">Zotero</a></p>
<p>视频教程：<a href="https://link.zhihu.com/?target=https://www.bilibili.com/video/BV1Xb411i7eg?from=search&seid=16851644318711406912">教程</a></p>
<p><img src="https://p.ipic.vip/pdclrh.jpg" alt="img"><img src="https://p.ipic.vip/2jpyxj.jpg" alt="img"></p>
<p>这个也是笔记和整理两不误，不过这个我没有用过，我看了一下教程，感觉跟Mendeley的感觉有点像！大家可以自己选择。</p>
<p><strong>4）Papers</strong></p>
<p>下载链接：<a href="https://link.zhihu.com/?target=https://www.papersapp.com/download/">Papers</a></p>
<p>视频教程：<a href="https://link.zhihu.com/?target=https://search.bilibili.com/all?keyword=papers%E6%95%99%E7%A8%8B">教程</a></p>
<p><img src="https://p.ipic.vip/82rzps.jpg" alt="img"><img src="https://p.ipic.vip/2ucaa8.jpg" alt="img"></p>
<p>是一个app，要用的话需要花钱，但是有30天的免费试用期！</p>
<p>但是如果有破解版，我们为啥要花这个冤枉钱呐！哈哈</p>
<p>这四个都是文献整理和做笔记比较好用的工具，你可以选择一个你自己喜欢的，然后去看我贴上的视频教程！咔咔就完事儿了！</p>
<p><strong>3. 文献翻译</strong></p>
<p><strong>1）DocTranslator</strong></p>
<p>链接：<a href="https://link.zhihu.com/?target=https://www.onlinedoctranslator.com/">DocTranslator</a></p>
<p><img src="https://p.ipic.vip/5vpuo4.png" alt="img"><img src="https://p.ipic.vip/8mhgm8.png" alt="img"></p>
<p>直接把你下载下来的英文文献拖入到这个框里，然后下拉到翻译页面就可以了。</p>
<p>这个是用来直接翻译整个文档的。</p>
<p>如果你只是想在看文献时，查找个别不认识的词，可以用下面这个网站。</p>
<p><strong>2）Mate translate</strong></p>
<p>链接：<a href="https://link.zhihu.com/?target=https://chrome.google.com/webstore/detail/mate-translate-%E2%80%93-translat/ihmgiclibbndffejedjimfjmfoabpcke">Mate Translate</a></p>
<p><img src="https://p.ipic.vip/xpmbny.jpg" alt="img"><img src="https://p.ipic.vip/1n8dn1.jpg" alt="img"></p>
<p>这个是谷歌浏览器的一个插件，可以直接在网上浏览时，选择单词或者句子，就可以直接进行翻译了</p>
<p>方便你在看文献的时候用。</p>
<h3 id="二、英文论文写作"><a href="#二、英文论文写作" class="headerlink" title="二、英文论文写作"></a>二、英文论文写作</h3><p><strong>1. Linggle</strong></p>
<p>链接：<a href="https://link.zhihu.com/?target=https://www.linggle.com/">Linggle</a></p>
<p><img src="https://p.ipic.vip/17igph.png" alt="img"><img src="https://p.ipic.vip/ju7fb6.png" alt="img"></p>
<p>这个真的算的上是英文论文写作中的神网站了，完美的解决</p>
<ul>
<li>词组搭配</li>
<li>近义词</li>
<li>高频词汇查询</li>
</ul>
<p>这3个写作中常遇到的问题，非常推荐大家在写论文的时候用一下。</p>
<p><strong>2. Netspeak</strong></p>
<p><strong>链接：</strong><a href="https://link.zhihu.com/?target=https://netspeak.org/">Netspeak</a></p>
<p><img src="https://p.ipic.vip/qbx1m6.jpg" alt="img"><img src="https://p.ipic.vip/ctinfi.jpg" alt="img"></p>
<p>这个网站也是词汇，不过是用来查找你记不太清楚的词汇，比如artwork，你不记得全部拼写了，你就可以在这个网站上来查一下。</p>
<p><strong>3. Academic Phrasebank</strong> </p>
<p>链接：<a href="https://link.zhihu.com/?target=http://www.phrasebank.manchester.ac.uk/">Academic Phrasebank</a></p>
<p><img src="https://p.ipic.vip/oqrfos.jpg" alt="img"><img src="https://p.ipic.vip/94pgs2.jpg" alt="img"></p>
<p>英文论文写作必用软件，上面两个解决的是词汇问题。</p>
<p>Academic phrasebank 解决的是句子和表达问题。而且每一个部分最常用的一些表达，替代，你都可以在这个网站里找到。</p>
<p>可谓是英文论文写作中的王牌助手！</p>
<p><strong>4. Grammarly</strong></p>
<p>链接：<a href="https://link.zhihu.com/?target=https://www.grammarly.com/">Grammarly</a></p>
<p><img src="https://p.ipic.vip/559zfo.jpg" alt="img"><img src="https://p.ipic.vip/xzq8of.jpg" alt="img"></p>
<p>语法错误查询好助手！</p>
<p>可以安装为word的插件，在你写作的时候就可以纠正你的语法错误！</p>
<p>有免费的和付费的服务，某宝上价格不贵！对于要写英文论文的同学，我还是很推荐的。</p>
<h3 id="三、期刊查询"><a href="#三、期刊查询" class="headerlink" title="三、期刊查询"></a>三、期刊查询</h3><p><strong>1. 中科院文献情报中心分区表</strong></p>
<p>下载：直接在微信小程序中搜索“中国科学院文献情报中心”就行。</p>
<p><img src="https://p.ipic.vip/dhhjf1.png" alt="img"><img src="https://p.ipic.vip/56uyhd.png" alt="img"></p>
<p>这个对于写完论文想要发表的同学有很大的用处！查询你想要期刊的影响因子和中科院分区，能够帮助你更好的做出期刊的选择。</p>
<p><strong>2. LetPub</strong></p>
<p>链接：<a href="https://link.zhihu.com/?target=https://www.letpub.com.cn/index.php?page=journalapp">LetPub</a></p>
<p><img src="https://p.ipic.vip/pmj5y3.jpg" alt="img"><img src="https://p.ipic.vip/yaxq6f.jpg" alt="img"></p>
<p>这个也是一个期刊查询的网站。</p>
<p>但是这个网站除了查询，你还可以选择你自己所在的领域，然后去看你的领域里都有哪些期刊，然后选择你想要投的期刊进行了解。</p>
<p>这个网站里还会有用户对期刊的评论，投稿难度的评价，非常实用。</p>
<p><strong>3. Medsci</strong></p>
<p><strong>链接：</strong><a href="https://link.zhihu.com/?target=https://www.medsci.cn/sci/index.do">Medsci</a></p>
<p><img src="https://p.ipic.vip/thwl1d.png" alt="img"><img src="https://p.ipic.vip/d0wvba.png" alt="img"></p>
<p>这个网站也是可以进行期刊的查询和选择。</p>
<p>除此之外多的一点就是，这里面有每一个期刊的论坛，如果你对某一个期刊特别感兴趣，那你可以进入这个论坛，看看大家的讨论，这对你自己投的时候帮助是非常大的。</p>
<h3 id="四、学术交流平台"><a href="#四、学术交流平台" class="headerlink" title="四、学术交流平台"></a>四、学术交流平台</h3><p><strong>1. 小木虫</strong></p>
<p>链接：<a href="https://link.zhihu.com/?target=http://muchong.com/bbs/">小木虫</a></p>
<p><img src="https://p.ipic.vip/ybh6bn.jpg" alt="img"><img src="https://p.ipic.vip/oip4s2.jpg" alt="img"></p>
<p>做的非常好的一个科研交流平台。</p>
<p>这个论坛上面的信息非常全，有很多的板块，包括考研，考博经验，论文投稿，基金申请。</p>
<p>这些都可以在这个平台上找到。 </p>
<p><strong>2. ResearchGate</strong></p>
<p>链接：<a href="https://link.zhihu.com/?target=https://www.researchgate.net/">ResearchGate</a></p>
<p><img src="https://p.ipic.vip/566oyk.png" alt="img"><img src="https://p.ipic.vip/4lqx66.png" alt="img"></p>
<p>国外的几乎所有科研人员都会用的一个学术交流平台，这个上面也有很多学术大牛！</p>
<p>可以在上面问问题，不过这个平台是英文的平台，所以你也可以用这个平台来练习你的学术英文的表达！</p>
<h3 id="五、论文查重"><a href="#五、论文查重" class="headerlink" title="五、论文查重"></a>五、论文查重</h3><p><strong>1. Copycheck</strong></p>
<p>链接：<a href="https://link.zhihu.com/?target=https://www.copycheck.com/">copycheck</a></p>
<p><img src="https://p.ipic.vip/xz79cm.jpg" alt="img"><img src="https://p.ipic.vip/2y0c3v.jpg" alt="img"></p>
<p>查重不论对于写课程论文还是毕业论文的同学来讲，是非常有必要的！</p>
<p>因为在本科刚开始写论文的时候，我们很难把握好摘抄和改写的度，很容易就造成<a href="https://www.zhihu.com/search?q=%E9%87%8D%E5%A4%8D%E7%8E%87&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:1338390359%7D">重复率</a>过高的情况。</p>
<p>所以不要为了省那么几十块钱，最后由于查重过不了，导致挂科，甚至毕业成了问题，就得不偿失了！</p>
<p>这个查重网站的优点是入驻了百度学术，也就是说查重的结果和学校使用的查重系统偏差非常小！</p>
<p>所以如果有同学有长期的查重需求，这个网站比起其他按字数收费的，性价比算是很高了。</p>
<p><strong>2. 明鉴查重</strong></p>
<p>链接：<a href="https://link.zhihu.com/?target=http://www.okcheck.cn/">明鉴查重</a></p>
<p><img src="https://p.ipic.vip/kjx2fi.jpg" alt="img"><img src="https://p.ipic.vip/qm2pwv.jpg" alt="img"></p>
<p>这个网站有多种查重渠道，优势是可以查中文也可以查英文，但是查重英文论文的价格并不是很便宜。</p>
<p>但是如果有需求还是可以去了解一下。</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>以上这些就是我感觉大家在写论文中有可能会需要用到的全部网站了。看到这里的你，我笃定你一定是一个努力学习的好学生，所以老规矩，一张思维导图送给你，便于翻看。</p>
<p><img src="https://p.ipic.vip/4z4kdb.jpg" alt="img"><img src="https://p.ipic.vip/lra278.jpg" alt="img"></p>
<p><strong>归纳加上试用这些网站花了Leo一周的时间，如果你觉得这些网站对你有帮助的话，请花一秒的时间双击屏幕给个赞吧</strong>，你们的支持是我输出优质干货的最大动力。</p>
<h2 id="跟Nature-Communications学习审稿意见回复"><a href="#跟Nature-Communications学习审稿意见回复" class="headerlink" title="跟Nature Communications学习审稿意见回复"></a>跟Nature Communications学习审稿意见回复</h2><p>相信大多数人在投稿过程中，关于审稿意见的回复都是比较头疼的问题，而是否能对审稿人提出的问题恰当地回复直接决定了文章的命运，那么在回复过程中应当如何把握分寸，如何措辞，如何打动审稿人从而使文章顺利接收？或许你会在这里找到答案。</p>
<p>也许很多人都不知道，有些文章在出版时，是会连同同行评议文件（包括审稿意见和作者回复）一起出版，以供大家进行学习和参考，这本身就是难的学习资料，但如果平时不关注的话很多时候可能匆忙中不太容易找到。那么在这里本人将自己所关注领域中nature子刊系列中出版过同行评议文件的文章罗列了部分出来，以供大家学习和参考。</p>
<ul>
<li>Free-space creation of ultralong anti-diffracting beam with multiple energy oscillations adjusted using optical pen</li>
</ul>
<p>期刊：Nature Communications（2018）</p>
<p>原文链接：<a href="https://www.nature.com/articles/s41467-018-07282-y">https://www.nature.com/articles/s41467-018-07282-y</a></p>
<p>同行评议文件：</p>
<p><a href="https://static-content.springer.com/esm/art%3A10.1038%2Fs41467-018-07282-y/MediaObjects/41467_2018_7282_MOESM2_ESM.pdf">https://static-content.springer.com/esm/art%3A10.1038%2Fs41467-018-07282-y/MediaObjects/41467_2018_7282_MOESM2_ESM.pdf</a></p>
<ul>
<li>Optical framed knots as information carriers</li>
</ul>
<p>期刊：Nature Communications（2020）</p>
<p>原文链接：<a href="https://www.nature.com/articles/s41467-020-18792-z">https://www.nature.com/articles/s41467-020-18792-z</a></p>
<p>同行评议文件：</p>
<p><a href="https://static-content.springer.com/esm/art%3A10.1038%2Fs41467-020-18792-z/MediaObjects/41467_2020_18792_MOESM2_ESM.pdf">https://static-content.springer.com/esm/art%3A10.1038%2Fs41467-020-18792-z/MediaObjects/41467_2020_18792_MOESM2_ESM.pdf</a></p>
<ul>
<li>Efficient nonlinear beam shaping in three-dimensional lithium niobate nonlinear photonic crystals</li>
</ul>
<p>期刊：Nature Communications（2019）</p>
<p>原文链接：<a href="https://www.nature.com/articles/s41467-019-12251-0">https://www.nature.com/articles/s41467-019-12251-0</a></p>
<p>同行评议文件：</p>
<p><a href="https://static-content.springer.com/esm/art%3A10.1038%2Fs41467-019-12251-0/MediaObjects/41467_2019_12251_MOESM2_ESM.pdf">https://static-content.springer.com/esm/art%3A10.1038%2Fs41467-019-12251-0/MediaObjects/41467_2019_12251_MOESM2_ESM.pdf</a></p>
<ul>
<li>Supertoroidal light pulses as electromagnetic skyrmions propagating in free space</li>
</ul>
<p>期刊：Nature Communications（2021）</p>
<p>原文链接：<a href="https://www.nature.com/articles/s41467-021-26037-w">https://www.nature.com/articles/s41467-021-26037-w</a></p>
<p>同行评议文件：</p>
<p><a href="https://static-content.springer.com/esm/art%3A10.1038%2Fs41467-021-26037-w/MediaObjects/41467_2021_26037_MOESM2_ESM.pdf">https://static-content.springer.com/esm/art%3A10.1038%2Fs41467-021-26037-w/MediaObjects/41467_2021_26037_MOESM2_ESM.pdf</a></p>
<ul>
<li>Optical tweezers-controlled hotspot for sensitive and reproducible surface-enhanced Raman spectroscopy characterization of native protein structures</li>
</ul>
<p>期刊：Nature Communications（2021）</p>
<p>原文链接：<a href="https://www.nature.com/articles/s41467-021-21543-3">https://www.nature.com/articles/s41467-021-21543-3</a></p>
<p>同行评议文件：</p>
<p><a href="https://static-content.springer.com/esm/art%3A10.1038%2Fs41467-021-21543-3/MediaObjects/41467_2021_21543_MOESM3_ESM.pdf">https://static-content.springer.com/esm/art%3A10.1038%2Fs41467-021-21543-3/MediaObjects/41467_2021_21543_MOESM3_ESM.pdf</a></p>
<ul>
<li>Nonlinear wavefront shaping with optically induced three-dimensional nonlinear photonic crystals</li>
</ul>
<p>期刊：Nature Communications（2019）</p>
<p>原文链接：<a href="https://www.nature.com/articles/s41467-019-11114-y">https://www.nature.com/articles/s41467-019-11114-y</a></p>
<p>同行评议文件：</p>
<p><a href="https://static-content.springer.com/esm/art%3A10.1038%2Fs41467-019-11114-y/MediaObjects/41467_2019_11114_MOESM2_ESM.pdf">https://static-content.springer.com/esm/art%3A10.1038%2Fs41467-019-11114-y/MediaObjects/41467_2019_11114_MOESM2_ESM.pdf</a></p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Yaml</title>
    <url>/2022/05/01/Tool/Yaml/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Yaml-amp-gprof-amp-hpctoolkit-使用参考"><a href="#Yaml-amp-gprof-amp-hpctoolkit-使用参考" class="headerlink" title="Yaml &amp; gprof &amp; hpctoolkit 使用参考"></a>Yaml &amp; gprof &amp; hpctoolkit 使用参考</h1><h2 id="1-Yaml"><a href="#1-Yaml" class="headerlink" title="1. Yaml"></a>1. <strong>Yaml</strong></h2><ul>
<li><p><strong>Yaml 基本语法：</strong></p>
<ul>
<li><p>大小写敏感</p>
</li>
<li><p>使用缩进，表示层级关系</p>
</li>
<li><p>缩进不允许使用tab，只允许空格</p>
</li>
<li><p>缩进的空格数不重要，相同层级，左对齐即可</p>
</li>
<li><p>‘#’表示注释</p>
</li>
</ul>
</li>
<li><p><strong>Yaml 数据类型</strong></p>
<ol>
<li><p>对象：键值对的集合</p>
<ul>
<li><p>键值对典型结构：key: value</p>
<p>key为键值名，value为键值。value 可以是任一数据类型，包括键值对。</p>
</li>
<li><p>示例：</p>
  <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">icosTr_grid:</span></span><br><span class="line">  <span class="attr">glvl:</span> <span class="number">4</span></span><br><span class="line">  <span class="attr">slvl:</span> <span class="number">2</span></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>列表：一组按次序排列的值</p>
<ul>
<li><p>列表典型结构：<code>key: [value1, value2]</code>, 或者 :</p>
 <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">key:</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">value1</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">value2</span></span><br></pre></td></tr></table></figure>

<p>key为列表名，value为列表值。</p>
</li>
<li><p>示例：</p>
  <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">latlon_grid:</span></span><br><span class="line">  <span class="attr">num_grid:</span> [<span class="number">1025</span>, <span class="number">1025</span>]</span><br><span class="line">  <span class="attr">domain_latlon:</span> [<span class="number">21.0</span>, <span class="number">25.0</span>, <span class="number">111.5</span>, <span class="number">115.0</span>]</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>读取Yaml文件</p>
<ul>
<li><p>读取文件：test.yml的信息：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">modelState:</span></span><br><span class="line">  <span class="attr">vLevel:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">varList:</span> </span><br><span class="line">   <span class="bullet">-</span> <span class="string">uwnd</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">vwnd</span> </span><br><span class="line">   <span class="bullet">-</span> <span class="string">temp</span> </span><br><span class="line">   <span class="bullet">-</span> <span class="string">qvapor</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">rho</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">qrain</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>子程序读取：<code>CALL yaml_read(‘test.yml’, ‘modelState’, ‘vLevel’, rt_vlevel)</code>, <code>rt_vlevel</code> 为返回值。</p>
</li>
<li><p>函数读取：<code>file_open = yaml_get_var((‘test.yml’, ‘modelState’, ‘vLevel’, rt_vars)</code>, <code>file_open</code> 为 <strong>0</strong> 表示变量读取成功。</p>
</li>
</ul>
</li>
</ol>
</li>
<li><p><strong>Yaml Parser:</strong> <a href="https://codebeautify.org/yaml-parser-online">YAML Parser is easy to use tool to parser YAML String and visualize in hierarchy. Copy, Paste, and Parse.</a></p>
</li>
</ul>
<h2 id="2-gprof使用"><a href="#2-gprof使用" class="headerlink" title="2. gprof使用"></a>2. <strong>gprof</strong>使用</h2><p>  查看用户自定函数的调用关系及运行时间。编译一般使用 <code>-O3</code> 。<a href="https://hpc.llnl.gov/software/development-environment-software/gprof">查看：参考链接</a></p>
<ul>
<li><p><strong>基本原理：</strong></p>
<ul>
<li><p>gcc&#x2F;g++ 编译时加上 <code>-pg</code></p>
</li>
<li><p>编译器在每个函数的开头加 <code>mcount</code> 函数调用</p>
</li>
<li><p>保存函数的调用关系图和函数的调用信息</p>
</li>
<li><p>最终在程序退出时保存在 <code>gmon.out</code> 文件中</p>
</li>
</ul>
</li>
<li><p><strong>基本使用方法：</strong></p>
<ol>
<li><p>使用 <code>-pg</code> 参数编译程序</p>
</li>
<li><p>运行程序，并正常退出</p>
</li>
<li><p>使用 <code>gprof</code> 命令查看 <code>gmon.out</code> 文件</p>
</li>
</ol>
</li>
<li><p><strong>使用举例</strong></p>
<p>测试运行 <code>Test_IOGrapes.exe</code></p>
<ol>
<li><p><code>cmake</code>时，添加参数<code>-pg</code>: <code>SET (CMAKE_Fortran_FLAGS &quot;$&#123;CMAKE_Fortran_FLAGS&#125; -pg&quot;)</code></p>
</li>
<li><p>编译并运行 <code>Test_IOGrapes.exe</code>，运行成功生成 <code>gmon.out</code></p>
</li>
<li><p>使用 <code>gprof</code>查看 <code>gmon.out</code>：<code>gprof Debug/ Test_IOGrapes.exe gmon.out &gt; gprof.txt</code></p>
</li>
<li><p>生成运行及调用信息图：<code>gprof Debug/Test_IOGrapes.exe gmon.out | gprof2dot |dot -Tpng -o example.png</code></p>
</li>
</ol>
</li>
</ul>
<h2 id="3-HPCTOOLKIT-安装使用"><a href="#3-HPCTOOLKIT-安装使用" class="headerlink" title="3. HPCTOOLKIT 安装使用"></a>3. <strong>HPCTOOLKIT</strong> 安装使用</h2><p>  多线程热点分析工具。编译一般使用 <code>-g -O3</code> 。<a href="https://hpc.llnl.gov/software/development-environment-software/hpc-toolkit">查看：参考链接</a></p>
<ul>
<li><p><strong>通过spack安装：<code>spack install hpctoolkit</code></strong></p>
<p>如果安装失败，出现类似由 <code>&#39;make -j16 install&#39;</code>的报错，尝试使用<code>spack install -j1 hpctoolkit</code>安装。</p>
</li>
<li><p><strong>以 <code>Test_IOGrapes.exe</code>为例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1. mpirun -np 4 hpcrun -t Debug/Test_IOGrapes.exe</span><br><span class="line">2. hpcstruct Debug/Test_IOGrapes.exe</span><br><span class="line">3. hpcprof hpctoolkit-Test_IOGrapes.exe-measurements</span><br><span class="line">4. hpcviewer hpctoolkit-Test_IOGrapes.exe-database</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>bashrc</title>
    <url>/2022/05/01/Tool/bashrc/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="bashrc-常用设置"><a href="#bashrc-常用设置" class="headerlink" title=".bashrc 常用设置"></a>.bashrc 常用设置</h2><h3 id="alias"><a href="#alias" class="headerlink" title="alias"></a>alias</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alias ls=&#x27;ls --color=auto&#x27;</span><br></pre></td></tr></table></figure>



<h3 id=""><a href="#" class="headerlink" title=""></a></h3>]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>iPic</title>
    <url>/2022/05/01/Tool/iPic/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="iPic外链图失效，快速迁移图片至新的图床"><a href="#iPic外链图失效，快速迁移图片至新的图床" class="headerlink" title="iPic外链图失效，快速迁移图片至新的图床"></a>iPic外链图失效，快速迁移图片至新的图床</h2><p>拥有个人网站的朋友，为了节省成本，想必都使用过外链图片，最普遍的大概是微博的外链图片吧，而在今年微博正式对部分域名的外链图片开启了防盗链，这也导致大量的网站图片直接失效，包括后续使用简书等平台也都开启了防盗链。</p>
<p>题外话：外链图片失效问题解决办法<br>不过针对这种防盗链的问题，简单的解决办法不是没有，那就是在网站的<head>标签内添加referrer的规则：</p>
<meta name=“referrer” content=“same-origin”>
<meta name=“referrer” content=“no-referrer”/>
添加这条规则之后，后续全站使用微博、简书等外链图就基本不会出现问题了，如果变更复杂防盗链设置就另说了。

<p>不过这种办法会影响部分基于referrer规则的功能，例如百度统计。再者，如果要求长远运营的话，外链图片始终不是长久之道，迁移至自建图床依然是最稳妥的办法。</p>
<p>那么问题来了，图片迁移势必是一件不小的工程，一张张上传替换基本不现实，奇客君这里提供一种稍微方便一些的方法提供参考，适用那些网站内文章不多的用户。</p>
<h4 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h4><p>奇客君的网站也正如大家所看，只有十几篇文章，图片虽然不过一百多张，但如果一张一张上传替换，那估计这大半天我基本不用干别的了。奇客君使用的是又拍云的自建图床，这次迁移需要配合两个工具：iPic 和 iPic Mover。</p>
<p><img src="https://p.ipic.vip/zzpavj.jpg" alt="img"></p>
<p>直接在 Mac 端 APP Store就可以下载，是的，这种方法仅适用于Mac用户，很抱歉我没有注意Windows或者Linux端是否有类似的工具，欢迎大家举荐。</p>
<h4 id="在iPic配置图床"><a href="#在iPic配置图床" class="headerlink" title="在iPic配置图床"></a>在iPic配置图床</h4><p>首先，需要在iPic中配置好自己的图床信息，完成后设置为默认图床。</p>
<p><img src="https://p.ipic.vip/6qebpy.jpg" alt="img"></p>
<p>目前 iPic 支持下列图床：微博图床（即默认图床）、七牛云 、又拍云、阿里云 OSS 、腾讯云 COS 、Imgur 、Flickr 、Amazon S3。基本能够满足大部分的需求，需要注意的是，除了默认图床，添加使用其他图床需要开通高级版，月费6元，年费60元，根据自己需求选择。</p>
<p>iPic Mover是不用付费的，图片迁移过程中主要依赖iPic的图片上传功能。</p>
<h4 id="将需要迁移图片的文章全文导出为本地markdown文件"><a href="#将需要迁移图片的文章全文导出为本地markdown文件" class="headerlink" title="将需要迁移图片的文章全文导出为本地markdown文件"></a>将需要迁移图片的文章全文导出为本地markdown文件</h4><p>迁移开始前，还需要将需要迁移图片的文章全文保存为本地的markdown格式，为了方便操作建议大家在Wordpress中安装一个markdown编辑器，直接复制出来就好；至于其他的建站工具可能默认支持markdown就不必了。</p>
<p><img src="https://p.ipic.vip/kri9ea.jpg" alt="img"></p>
<p>如果没有使用markdown编辑器的话，也可以直接在前端复制全文使用其他在线工具转为markdown格式。把多篇文章markdown文件放在同一个文件夹。</p>
<h4 id="图片迁移"><a href="#图片迁移" class="headerlink" title="图片迁移"></a>图片迁移</h4><p>保持iPic在后台打开，运行iPic Mover，根据自身需要勾选对应选项，接着点击“选择Markdown文件所在文件夹”，找到刚刚准备好的文件夹打开即可。</p>
<p><img src="https://p.ipic.vip/oot4f7.jpg" alt="img"></p>
<p><img src="https://p.ipic.vip/5k1bvw.jpg" alt="img"></p>
<p>软件会自动读取到markdown文件中所有的图片链接，如果有不需要迁移的图片，取消勾选就可以了，确认无误之后点击右下角“迁移图片”，便会开始使用iPic上传图片。</p>
<p><img src="https://p.ipic.vip/kq3lho.jpg" alt="img"></p>
<p><img src="https://p.ipic.vip/we0lj2.jpg" alt="img"></p>
<p>迁移完成后，iPic Mover中显示结果全部为绿色就表示成功，markdown文件中的图片链接就会全部自动被替换为iPic中默认图床的链接。而未能迁移成功的图则会显示红色，则需要单独排查问题重新操作。</p>
<h4 id="更新文章"><a href="#更新文章" class="headerlink" title="更新文章"></a>更新文章</h4><p>最后，把更新图片的markdown文本一一对应替换网站原文就好了，基本就是第二步的逆向操作。</p>
<p>###总结<br>整个过程操作还是比较简单的，感谢开发者@JINGSEN ZHENG提供如此便捷好用的工具。最后也提醒各位站长，如果真有长期运营网站的打算，尽量还是使用主流的自建图床，更加稳定可靠。</p>
<hr>
<p>来源：<a href="https://zhuanlan.zhihu.com/p/93075520">https://zhuanlan.zhihu.com/p/93075520</a></p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
  </entry>
  <entry>
    <title>Pangu</title>
    <url>/2023/05/01/Recharge/Pangu/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="盘古气象大模型算法浅析"><a href="#盘古气象大模型算法浅析" class="headerlink" title="盘古气象大模型算法浅析"></a>盘古气象大模型算法浅析</h2><p>来源：<a href="https://zhuanlan.zhihu.com/p/646134046">https://zhuanlan.zhihu.com/p/646134046</a></p>
<p>华为云盘古气象大模型登上 Nature 正刊，令人振奋，对论文做了一遍通读，将算法模型部分进行提炼，并思考其中的创新点和技术价值。论文摘要如下：</p>
<p><img src="https://p.ipic.vip/754f2d.jpg" alt="img"></p>
<p><strong>摘要：</strong></p>
<p>在本文中，我们提出了一个基于 <strong>深度学习</strong> 的快速准确的全球天气预报系统 Pangu-Weather。我们下载了第五代 ECMWF (ERA5) 数据中 <strong>43 年</strong> 的 <strong>每小时</strong> 全球天气数据，并训练了若干个总共约 <strong>2.56亿个参数的深度神经网络</strong>。预测的分辨率以 0.25 × 0.25 为粒度，可与现行的综合预报系统 (IFS) 相媲美。更重要的是，基于人工智能的方法首次在 <strong>多个因素</strong> (如：位置、湿度、风速、温度等) 和 <strong>多个时间范围</strong> (从一小时到一周) 的准确率方面优于传统最先进的数值天气预报 (NWP) 方法。有两个关键策略可以提高预测精度:</p>
<p>(i) 设计一个 <strong>3D Earth Specific Transformer</strong>，将地理位置的高度信息转化为三维张量数据；</p>
<p>(ii) 采用一种 <strong>分层时间聚合算法（hierarchical temporal</strong> <strong>aggregation algorithm）</strong>来减轻累积预测误差。</p>
<p><strong>结论：</strong></p>
<p>（1）建立了一个深度学习框架，预测效果首次超越了 IFS；</p>
<p>（2）3D Earth Specific Transformer + HTAA 保证了预测的精度；</p>
<p>（3）声明了 Pangu-Weather 能够预测极端天气时间（如：洪水、干旱、飓风等）</p>
<p><strong>关键图表：</strong></p>
<p><img src="https://p.ipic.vip/o8ul67.jpg" alt="img"></p>
<p><strong>具体的：</strong></p>
<p><strong>1、场景价值</strong></p>
<p>运用深度学习方法预测未来天气变化，尤其是对极端天气事件（如洪水、干旱、飓风等）的精准预测。</p>
<p><strong>2、传统方法的问题</strong></p>
<p>传统的 NWP（Numerical Weather Prediction，数值天气预报） 方法大多采用基于模拟的范式，使用数学方程来描述大气、海洋和地球系统的物理过程，并通过数值模拟进行求解。由于求解具有高度复杂性，这些 NWP 方法通常效率缓慢。10天预测的单个模拟过程可能需要使用大规模集群的数百个节点进行 <strong>数小时</strong>，<strong>制约了日常天气预报的时效性</strong>。此外，传统的 NWP 算法在很大程度上依赖于参数化数值模型，这些模型非常复杂，对未解决的过程进行参数化会引入误差。</p>
<p><strong>注：这里让我回想到了 prophet 模型，将时间序列拆解为 趋势项（gt） + 周期项（st） + 节假日项（ht），并基于强假设拟合每一个函数，但问题是现实世界的时间序列往往难以遵循理想化的假设函数。</strong></p>
<p><img src="https://p.ipic.vip/e33t6x.jpg" alt="img"></p>
<p><img src="https://p.ipic.vip/aj7hwe.jpg" alt="img"></p>
<p><img src="https://p.ipic.vip/za91yq.jpg" alt="img"></p>
<p><img src="https://p.ipic.vip/jzkkdt.jpg" alt="img"></p>
<p><strong>3、此前人工智能方法的问题</strong></p>
<p>FourCastNet 将空间分辨率提高到 0.25 × 0.25，可与 ECMWF 综合预报系统(IFS)相媲美。然而，FourCastNet的预报精度仍然不能令人满意。</p>
<p><strong>4、盘古模型的成果</strong></p>
<p>精度：盘古气象模型优于所有现有的天气预报系统。尤其是对未来 5天的预测，Z500 指标的 RMSE 为 296.7，明显优于 IFS 和之前基于人工智能的最佳方法 (即 FourCastNet)，前者分别报告了 333.7 和 462.5。它还提供高质量的极端天气预报 (例如，热带气旋跟踪)。</p>
<p>效率：Pangu-Weather 在单个 GPU上 的推理成本仅为1.400 ms，比 IFS 快 10000 多倍，与 FourCastNet 相当。</p>
<p><img src="https://p.ipic.vip/33v78t.jpg" alt="img"></p>
<p><strong>5、技术创新</strong></p>
<p><strong>5.1、3D Earth Specific Transformer</strong></p>
<p>这是这篇论文的精髓，设计了一套 Transformer 架构来处理气象数据，网络结构如下所示：</p>
<p><img src="https://p.ipic.vip/emqhm3.jpg" alt="img"></p>
<p><strong>输入层：</strong></p>
<p>（1）高空大气变量：13个大气压力级别及其每个级别对应的变量，13个气压级别为 50hPa、100hPa、150hPa、200hPa、250hPa、300hPa、400hPa、500hPa、600hPa、700hPa、850hPa、925hPa 和 1000hPa；每个级别对应的变量为 位置、湿度、温度、风速的u分量和v分量。张量化处理为 13 × 1440×721×5。</p>
<p>（2）地表变量：4个地面天气变量，包括 2m温度、10m风速的u分量和v分量、平均海平面压力，张量化处理为 1×1440×721×4。</p>
<p><strong>注：个人认为这是极其重要的输入层设计，同一个经纬度，在不同的高度可能会表现出迥然不同的气候现象，同时对地表和高层大气数据建模，有利于学习到气象数据背后蕴含的复杂物理规律。</strong></p>
<p><strong>Transformer 层：</strong></p>
<p>Encoder-Decoder 架构，8个编码层 + 8个解码层</p>
<p>（1）前2个编码层尺寸为 8 × 360 × 181 × C，后6个编码层为 8 × 180 × 91 × 2C</p>
<p>（2）前6个解码层尺寸为 8 × 180 × 91 × 2C，后6个解码层为 8 × 360 × 181 × C</p>
<p><strong>注：这里有一个独特的设计，第2编码层 和 第7解码层 的输出沿信道尺寸串联，对应图中如下：</strong></p>
<p><img src="https://p.ipic.vip/o16sd1.jpg" alt="img"></p>
<p><img src="https://p.ipic.vip/6brno8.jpg" alt="img"></p>
<p><strong>个人认为这可能是一种类似 ResNet 的残差设计思路，使顶部的编码层与底部的解码层串通，促使网络更好地训练参数。</strong></p>
<p><img src="https://p.ipic.vip/y9miqa.jpg" alt="img"></p>
<p>从 <strong>评估指标</strong> 推测损失函数：</p>
<p><img src="https://p.ipic.vip/jaapn6.jpg" alt="img"></p>
<p><img src="https://p.ipic.vip/j5cjug.jpg" alt="img"></p>
<p>注：论文中未指明使用哪种损失函数进行训练，从评估指标猜测是一个<strong>变种的平方误差的期望</strong>，用 t0 时刻去预测 tn 时刻，并拿 tn 时刻的实际值做损失。</p>
<p><strong>注意力机制方面</strong>，引入地理位置偏差，修改标准算法，如下：</p>
<p><img src="https://p.ipic.vip/273j4a.jpg" alt="img"></p>
<p><strong>5.2、hierarchical temporal aggregation algorithm</strong></p>
<p>意为“分层时间聚合算法”，其实很好理解，就是训练一系列子模型，最后根据贪心策略汇总结果，子模型为1小时、3小时、6小时 和 24小时预测模型。实际推理时，采用贪心策略，例如：</p>
<p>任务：7天预报</p>
<p>策略：24小时模型 * 7次</p>
<p>任务：23小时预报</p>
<p>策略：6小时模型 * 3次 + 3小时模型 * 1次 + 1小时模型 * 1次</p>
<p><strong>注：这部分创新类似“集成学习”，机器学习屡试不爽的 tricks，贪心策略是一个巧妙的设计。</strong></p>
<p><img src="https://p.ipic.vip/0tnvsg.jpg" alt="img"></p>
<p><strong>6、数据量</strong></p>
<p>团队使用了 ERA5 数据集，即第5代 ECMWF 数据，他们下载了 <strong>43年(1979-2021)的全球天气数据</strong>。其中，使用1979-2017年的数据进行训练，使用2019年的数据进行验证，使用2018、2020、2021年的数据进行测试数据，数据粒度为 <strong>小时</strong> 级别（这就导致<strong>它能进行每小时的天气预报</strong>）。</p>
<p><strong>7、算力投入</strong></p>
<p>基于华为云的GPU集群，采用192颗 NVIDIA Tesla-V100 GPU，训练 100 个 Epochs，大约15天。作者指出，当前的参数配置并未达到完全收敛，在预算允许的情况下，可以继续深入训练。</p>
<p><img src="https://p.ipic.vip/t2oaja.jpg" alt="img"></p>
<p><strong>8、参考资料</strong></p>
<p><a href="https://link.zhihu.com/?target=https://arxiv.org/abs/2211.02556">论文地址</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/582285853">华为云提出盘古气象大模型</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/641851617">盘古气象大模型后续进展综述</a></p>
]]></content>
      <categories>
        <category>Recharge</category>
      </categories>
  </entry>
  <entry>
    <title>EGU 2022</title>
    <url>/2022/05/23/Seminar/20220523-EGU%202022/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="AS1-20-Subseasonal-to-Seasonal-Prediction-Processes-and-Impacts"><a href="#AS1-20-Subseasonal-to-Seasonal-Prediction-Processes-and-Impacts" class="headerlink" title="AS1.20 Subseasonal-to-Seasonal Prediction: Processes and Impacts"></a><font color=red>AS1.20 Subseasonal-to-Seasonal Prediction: Processes and Impacts</font></h2><h4 id="Aengenheyster-M-Sparrow-S-Watson-P-Wallom-D-Zanna-L-and-Allen-M-Impact-of-sub-seasonal-atmosphere-ocean-interactions-in-a-large-ensemble-EGU-General-Assembly-2022-Vienna-Austria-23–27-May-2022-EGU22-12033-https-doi-org-10-5194-egusphere-egu22-12033-2022"><a href="#Aengenheyster-M-Sparrow-S-Watson-P-Wallom-D-Zanna-L-and-Allen-M-Impact-of-sub-seasonal-atmosphere-ocean-interactions-in-a-large-ensemble-EGU-General-Assembly-2022-Vienna-Austria-23–27-May-2022-EGU22-12033-https-doi-org-10-5194-egusphere-egu22-12033-2022" class="headerlink" title="Aengenheyster, M., Sparrow, S., Watson, P., Wallom, D., Zanna, L., and Allen, M.: Impact of sub-seasonal atmosphere-ocean interactions in a large ensemble, EGU General Assembly 2022, Vienna, Austria, 23–27 May 2022, EGU22-12033, https://doi.org/10.5194/egusphere-egu22-12033, 2022."></a>Aengenheyster, M., Sparrow, S., Watson, P., Wallom, D., Zanna, L., and Allen, M.: Impact of sub-seasonal atmosphere-ocean interactions in a large ensemble, EGU General Assembly 2022, Vienna, Austria, 23–27 May 2022, EGU22-12033, <a href="https://doi.org/10.5194/egusphere-egu22-12033">https://doi.org/10.5194/egusphere-egu22-12033</a>, 2022.</h4><p>Air-sea coupling is critical in influencing atmospheric temperature and precipitation. The effect of greenhouse gases has influenced atmospheric variability and extreme events. Understanding and quantifying the effect of air-sea feedback on atmospheric variability and extremes remains unknown.</p>
<p>In this work we show results obtained from two numerical experiments. We use the HadSM4 configuration that couples the HadAM4 model at N144 resolution with a Slab Ocean to generate a large ensemble (~1000 members) of realizations of the 2013-14 October-March winter season, forced with a calibrated ocean heat convergence flux.</p>
<p>A twin experiment is performed by forcing HadAM4 with the diagnosed SST and sea ice from the ensemble, yielding a new ensemble with identical realizations of SST and sea ice. The only difference between the two ensembles is the enabling or disabling of the feedback of air-sea heat fluxes on SST.</p>
<p>While the impact of the feedback on the mean climate is relatively small, we show that its influence has important consequences for the variability of many important quantities, including air-sea fluxes and return periods of extreme events.</p>
<p><img src="https://p.ipic.vip/vp0d37.jpg" alt="Screen Shot 2022-05-27 at 15.45.54"></p>
<p><img src="https://p.ipic.vip/hc3muv.jpg" alt="Screen Shot 2022-05-27 at 15.48.05"></p>
<p><img src="https://p.ipic.vip/u6qdxz.jpg" alt="Screen Shot 2022-05-27 at 15.48.15"></p>
<hr>
<h4 id="Domeisen-D-I-V-White-C-J-Afargan-Gerstman-H-Antoine-S-Ardilouze-C-Batte-L-Camargo-S-J-Collins-D-Ferranti-L-Infanti-J-M-Janiga-M-A-Kolstad-E-W-LaJoie-E-Magnusson-L-Strazzo-S-Vitart-F-and-Wulff-C-O-Teleconnection-driven-sub-seasonal-predictability-of-extreme-events-Relevant-case-studies-EGU-General-Assembly-2022-Vienna-Austria-23–27-May-2022-EGU22-4948-https-doi-org-10-5194-egusphere-egu22-4948-2022"><a href="#Domeisen-D-I-V-White-C-J-Afargan-Gerstman-H-Antoine-S-Ardilouze-C-Batte-L-Camargo-S-J-Collins-D-Ferranti-L-Infanti-J-M-Janiga-M-A-Kolstad-E-W-LaJoie-E-Magnusson-L-Strazzo-S-Vitart-F-and-Wulff-C-O-Teleconnection-driven-sub-seasonal-predictability-of-extreme-events-Relevant-case-studies-EGU-General-Assembly-2022-Vienna-Austria-23–27-May-2022-EGU22-4948-https-doi-org-10-5194-egusphere-egu22-4948-2022" class="headerlink" title="Domeisen, D. I. V., White, C. J., Afargan-Gerstman, H., Antoine, S., Ardilouze, C., Batté, L., Camargo, S. J., Collins, D., Ferranti, L., Infanti, J. M., Janiga, M. A., Kolstad, E. W., LaJoie, E., Magnusson, L., Strazzo, S., Vitart, F., and Wulff, C. O.: Teleconnection-driven sub-seasonal predictability of extreme events: Relevant case studies, EGU General Assembly 2022, Vienna, Austria, 23–27 May 2022, EGU22-4948, https://doi.org/10.5194/egusphere-egu22-4948, 2022."></a>Domeisen, D. I. V., White, C. J., Afargan-Gerstman, H., Antoine, S., Ardilouze, C., Batté, L., Camargo, S. J., Collins, D., Ferranti, L., Infanti, J. M., Janiga, M. A., Kolstad, E. W., LaJoie, E., Magnusson, L., Strazzo, S., Vitart, F., and Wulff, C. O.: Teleconnection-driven sub-seasonal predictability of extreme events: Relevant case studies, EGU General Assembly 2022, Vienna, Austria, 23–27 May 2022, EGU22-4948, <a href="https://doi.org/10.5194/egusphere-egu22-4948">https://doi.org/10.5194/egusphere-egu22-4948</a>, 2022.</h4><p>Extreme weather events have devastating impacts on human health, economic activities, ecosystems, and infrastructure. It is therefore crucial to anticipate extremes and their impacts to allow for preparedness and emergency measures. There is indeed potential for probabilistic subseasonal prediction on timescales of several weeks for selected cases of extreme events that are linked to remote drivers and large-scale teleconnections. We here present a range of case studies, including heatwaves, cold spells, and tropical cyclones, where precursors and global linkages may have improved sub-seasonal predictability. These linkages include teleconnections from the tropics as well as the stratosphere, in addition to circumglobal teleconnections. The considered heatwaves exhibit predictability on timescales of 3-4 weeks, while this timescale is 2-3 weeks for cold spells. Precipitation extremes are the least predictable among the considered extremes. Tropical cyclones, on the other hand, can exhibit probabilistic forecast skill on timescales of up to 3 weeks, which tends to be favored by remote precursors such as the Madden-Julian Oscillation. These case studies clearly illustrate the potential for event – dependent advance warnings for a wide range of extreme events globally. The subseasonal predictability of extreme events allows for an extension of warning horizons, can provide advance information to impact modelers, and informs communities and stakeholders affected by the impacts of extreme weather events.</p>
<p><img src="https://p.ipic.vip/xzn8dn.jpg" alt="Screen Shot 2022-05-27 at 15.50.14"></p>
<p><img src="https://p.ipic.vip/dfgbou.jpg" alt="Screen Shot 2022-05-27 at 15.52.21"></p>
<h2 id="OS1-7-The-North-Atlantic-natural-variability-and-global-change"><a href="#OS1-7-The-North-Atlantic-natural-variability-and-global-change" class="headerlink" title="OS1.7 The North Atlantic: natural variability and global change"></a><font color=red>OS1.7 The North Atlantic: natural variability and global change</font></h2><h4 id="Reintges-A-Robson-J-Sutton-R-and-Yeager-S-Diversity-in-NAO-AMOC-interaction-on-interannual-to-decadal-timescales-across-CMIP6-models-EGU-General-Assembly-2022-Vienna-Austria-23–27-May-2022-EGU22-7402-https-doi-org-10-5194-egusphere-egu22-7402-2022"><a href="#Reintges-A-Robson-J-Sutton-R-and-Yeager-S-Diversity-in-NAO-AMOC-interaction-on-interannual-to-decadal-timescales-across-CMIP6-models-EGU-General-Assembly-2022-Vienna-Austria-23–27-May-2022-EGU22-7402-https-doi-org-10-5194-egusphere-egu22-7402-2022" class="headerlink" title="Reintges, A., Robson, J., Sutton, R., and Yeager, S.: Diversity in NAO-AMOC interaction on interannual to decadal timescales across CMIP6 models, EGU General Assembly 2022, Vienna, Austria, 23–27 May 2022, EGU22-7402, https://doi.org/10.5194/egusphere-egu22-7402, 2022."></a>Reintges, A., Robson, J., Sutton, R., and Yeager, S.: Diversity in NAO-AMOC interaction on interannual to decadal timescales across CMIP6 models, EGU General Assembly 2022, Vienna, Austria, 23–27 May 2022, EGU22-7402, <a href="https://doi.org/10.5194/egusphere-egu22-7402">https://doi.org/10.5194/egusphere-egu22-7402</a>, 2022.</h4><p>The variations of the winter climate in Europe are influenced by the North Atlantic Oscillation (NAO). Therefore, the ability to predict the NAO is of great value. Predictability of the NAO can be enabled through oceanic processes that are characterized by relatively long time scales, for example interannual to decadal. An important variable for the interannual to (multi-)decadal variability in the North Atlantic is the Atlantic Meridional Overturning Circulation (AMOC). The NAO and the AMOC are known to interact, but observational records of the AMOC are short and the details of this interaction are unknown. Thus, our understanding largely relies on climate model simulations. However, the interaction of NAO and AMOC is very model dependent.</p>
<p>Here, we present the diversity across CMIP6 models in pre-industrial control experiments. The focus lies on simulations of the NAO, the AMOC, their interaction, and related variables on interannual to decadal timescales. Regarding the NAO-AMOC interaction, there are large differences in the strength of their relationship, in the location (like the latitude of the AMOC), its periodicity and in the time-lag between both variables.</p>
<p>Furthermore, we propose hypotheses of the causes for this diversity in the models. Specific processes involved in NAO-AMOC interaction might be of varying relative importance from model to model, for example, NAO-related buoyancy versus wind-forcing affecting the AMOC. Also, mean state difference like in the North Atlantic sea surface temperature might play an important role for causing differences in the variability across models.</p>
<p><img src="https://p.ipic.vip/6l7ist.jpg" alt="Screen Shot 2022-05-31 at 14.46.32"></p>
<hr>
<h4 id="Sanders-R-Jones-D-Josey-S-Sinha-B-and-Forget-G-Using-mixed-layer-heat-budgets-to-determine-the-drivers-of-the-2015-North-Atlantic-cold-anomaly-in-ocean-state-estimates-EGU-General-Assembly-2022-Vienna-Austria-23–27-May-2022-EGU22-1682-https-doi-org-10-5194-egusphere-egu22-1682-2022"><a href="#Sanders-R-Jones-D-Josey-S-Sinha-B-and-Forget-G-Using-mixed-layer-heat-budgets-to-determine-the-drivers-of-the-2015-North-Atlantic-cold-anomaly-in-ocean-state-estimates-EGU-General-Assembly-2022-Vienna-Austria-23–27-May-2022-EGU22-1682-https-doi-org-10-5194-egusphere-egu22-1682-2022" class="headerlink" title="Sanders, R., Jones, D., Josey, S., Sinha, B., and Forget, G.: Using mixed layer heat budgets to determine the drivers of the 2015 North Atlantic cold anomaly in ocean state estimates, EGU General Assembly 2022, Vienna, Austria, 23–27 May 2022, EGU22-1682, https://doi.org/10.5194/egusphere-egu22-1682, 2022."></a>Sanders, R., Jones, D., Josey, S., Sinha, B., and Forget, G.: Using mixed layer heat budgets to determine the drivers of the 2015 North Atlantic cold anomaly in ocean state estimates, EGU General Assembly 2022, Vienna, Austria, 23–27 May 2022, EGU22-1682, <a href="https://doi.org/10.5194/egusphere-egu22-1682">https://doi.org/10.5194/egusphere-egu22-1682</a>, 2022.</h4><p>Record low surface temperatures were observed in the subpolar North Atlantic during 2015, despite the majority of the global ocean experiencing higher than average surface temperatures. We compute mixed layer temperature budgets in the ECCO Version 4 state estimate to further understand the processes responsible for the North Atlantic cold anomaly. We show that surface forcing was the cause of approximately 75% of the initial cooling in the winter of 2013&#x2F;14, after which the cold anomaly was sequestered beneath the deep winter mixed layer. Re-emergence of the cold anomaly during the summer&#x2F;autumn of 2014 was primarily driven by a strong temperature gradient across the base of the mixed layer. Vertical diffusion resulted in approximately 70% of the re-emergence, with entrainment of deeper water driving the remaining 30%. In the summer of 2015, surface warming of the mixed layer was then anomalously low, resulting in the most negative temperature anomalies. Spatial patterns in the budgets show that the initial surface cooling was strongest in the south of the region, due to strong westerly winds related to the positive phase of the East Atlantic Pattern. Subsequent anomalies in surface fluxes associated with the North Atlantic Oscillation were stronger in the north, but the impact on the average temperature of the mixed layer was largely masked by anomalously high winter mixed layer depths.</p>
<p><img src="https://p.ipic.vip/y0ifoe.jpg" alt="Screen Shot 2022-05-31 at 15.00.02"></p>
<p><img src="https://p.ipic.vip/uotnhw.jpg" alt="Screen Shot 2022-05-31 at 15.02.13"></p>
<p><img src="https://p.ipic.vip/kvjnep.jpg" alt="Screen Shot 2022-05-31 at 15.04.54"></p>
<hr>
<h4 id="Mecking-J-Sinha-B-Harvey-B-Robson-J-and-Bracegirdle-T-Seasonal-differences-in-the-persistence-of-SST’s-Response-to-the-North-Atlantic-Jet-Stream-EGU-General-Assembly-2022-Vienna-Austria-23–27-May-2022-EGU22-5829-https-doi-org-10-5194-egusphere-egu22-5829-2022"><a href="#Mecking-J-Sinha-B-Harvey-B-Robson-J-and-Bracegirdle-T-Seasonal-differences-in-the-persistence-of-SST’s-Response-to-the-North-Atlantic-Jet-Stream-EGU-General-Assembly-2022-Vienna-Austria-23–27-May-2022-EGU22-5829-https-doi-org-10-5194-egusphere-egu22-5829-2022" class="headerlink" title="Mecking, J., Sinha, B., Harvey, B., Robson, J., and Bracegirdle, T.: Seasonal differences in the persistence of SST’s Response to the North Atlantic Jet Stream, EGU General Assembly 2022, Vienna, Austria, 23–27 May 2022, EGU22-5829, https://doi.org/10.5194/egusphere-egu22-5829, 2022."></a>Mecking, J., Sinha, B., Harvey, B., Robson, J., and Bracegirdle, T.: Seasonal differences in the persistence of SST’s Response to the North Atlantic Jet Stream, EGU General Assembly 2022, Vienna, Austria, 23–27 May 2022, EGU22-5829, <a href="https://doi.org/10.5194/egusphere-egu22-5829">https://doi.org/10.5194/egusphere-egu22-5829</a>, 2022.</h4><p>The North Atlantic Jet Stream is well known to leave an imprint on the North Atlantic SST in the form of a tri-polar pattern. The majority of the existing research has focused on the winter jet stream position or strength of the jet stream. Here we look at the response of the North Atlantic SSTs to the strength and position of the North Atlantic Jet Stream across all seasons in the CMIP6 piControl simulations. For the case of both the strength and position of the jet stream the multi-model mean response is a tripolar SST pattern, with the response to the changes in strength showing a slight horseshoe pattern with the northern and southern most anomalies connected on the east and most evident in the summer. The SST response to winter and spring jet stream changes persist the longest with the northern most imprint on the SSTs lasting up to 2 years. The response to changes in the jet stream in the summer and fall leave an imprint on the SSTs lasting atmost into the following year.  Furthermore, we investigate at how these responses vary among the CMIP6 models and potential mechanisms leading to the persistence.</p>
<p><img src="https://p.ipic.vip/ccq3is.jpg" alt="Screen Shot 2022-05-31 at 15.08.15"></p>
<p><img src="https://p.ipic.vip/57bmdr.jpg" alt="Screen Shot 2022-05-31 at 15.10.30"></p>
<p><img src="https://p.ipic.vip/j9b3ic.jpg" alt="Screen Shot 2022-05-31 at 15.13.10"></p>
<p><img src="https://p.ipic.vip/mciutu.jpg" alt="Screen Shot 2022-05-31 at 15.12.55"></p>
<hr>
<h4 id="Hellmich-L-Matei-D-Suarez-Gutierrez-L-and-Muller-W-A-Contribution-of-the-Atlantic-Ocean-to-European-Heat-Extremes-EGU-General-Assembly-2022-Vienna-Austria-23–27-May-2022-EGU22-5694-https-doi-org-10-5194-egusphere-egu22-5694-2022"><a href="#Hellmich-L-Matei-D-Suarez-Gutierrez-L-and-Muller-W-A-Contribution-of-the-Atlantic-Ocean-to-European-Heat-Extremes-EGU-General-Assembly-2022-Vienna-Austria-23–27-May-2022-EGU22-5694-https-doi-org-10-5194-egusphere-egu22-5694-2022" class="headerlink" title="Hellmich, L., Matei, D., Suarez-Gutierrez, L., and Müller, W. A.: Contribution of the Atlantic Ocean to European Heat Extremes, EGU General Assembly 2022, Vienna, Austria, 23–27 May 2022, EGU22-5694, https://doi.org/10.5194/egusphere-egu22-5694, 2022"></a>Hellmich, L., Matei, D., Suarez-Gutierrez, L., and Müller, W. A.: Contribution of the Atlantic Ocean to European Heat Extremes, EGU General Assembly 2022, Vienna, Austria, 23–27 May 2022, EGU22-5694, <a href="https://doi.org/10.5194/egusphere-egu22-5694">https://doi.org/10.5194/egusphere-egu22-5694</a>, 2022</h4><p>Mechanisms explaining the internal variability of mean summer temperatures have been found on seasonal to sub- and multi-decadal timescales, but their contribution to variability in extreme temperatures is not fully established. Here, we investigate the sub-decadal (5-10yr) variability of European summer heat extremes and their potential drivers. By using reanalyses (ERA5&#x2F;ORA-20C) and the Max Planck Institute Grand Ensemble (MPI-GE), we identify dominant timescales of temperature extremes variability over Europe. We are able to link heat extremes over Central Europe with a southward development of a meridional ocean heat transport anomaly over the North Atlantic (NA), starting about 6 years prior an extreme event. This connection is reinforced by other variables such as ocean heat content and atmospheric sea level pressure and jet stream displacement. The results indicate the important role of the inertia of the NA for the occurrence of heat extremes over Europe, and possibly help to improve their predictability several years ahead.</p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>百年风云讲坛 | 气候变化的机理与模拟预估</title>
    <url>/2022/05/27/Seminar/20220527-%E7%99%BE%E5%B9%B4%E9%A3%8E%E4%BA%91%E8%AE%B2%E5%9D%9B%20%7C%20%E6%B0%94%E5%80%99%E5%8F%98%E5%8C%96%E7%9A%84%E6%9C%BA%E7%90%86%E4%B8%8E%E6%A8%A1%E6%8B%9F%E9%A2%84%E4%BC%B0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="《气象学报》百年风云讲坛第2期：气候变化的机理与模拟预估"><a href="#《气象学报》百年风云讲坛第2期：气候变化的机理与模拟预估" class="headerlink" title="《气象学报》百年风云讲坛第2期：气候变化的机理与模拟预估"></a>《气象学报》百年风云讲坛第2期：气候变化的机理与模拟预估</h2><p><strong>回看网址：<a href="https://live.polyv.cn/watch/3073689">https://live.polyv.cn/watch/3073689</a></strong></p>
<h3 id="南亚和东亚季风环流对全球变暖的不同响应-李天明-夏威夷大学"><a href="#南亚和东亚季风环流对全球变暖的不同响应-李天明-夏威夷大学" class="headerlink" title="南亚和东亚季风环流对全球变暖的不同响应 李天明 夏威夷大学"></a>南亚和东亚季风环流对全球变暖的不同响应 李天明 夏威夷大学</h3><p>Li, T. <em>et al.</em> Distinctive South and East Asian monsoon circulation responses to global warming. <em>Sci Bull</em> <strong>67</strong>, 762–770 (2022).  </p>
<p><strong>南亚季风减弱+东亚季风增强 、降水均增强</strong></p>
<p><img src="https://p.ipic.vip/s39xra.jpg" alt="Screen Shot 2022-06-01 at 11.21.03"></p>
<p><img src="https://p.ipic.vip/ujyrzc.jpg" alt="Screen Shot 2022-06-01 at 11.23.31"></p>
<p>垂直平流主导，且主要由水汽变化贡献，动力项在南亚季风区是正贡献，东亚在东亚季风区是负贡献（与总的水汽平流相反）</p>
<p>Why is the rainfall rate much smaller than the moisture increase rate?</p>
<ul>
<li><p>Atmospheric moistening</p>
</li>
<li><p>Global energy balance</p>
</li>
</ul>
<p>水汽增加7.5%，降水增加2%，全球来看垂直运动减弱，但对区域不一定适用</p>
<p>Global Hydrological Cycle Constraint (Held and Soden 2006)</p>
<p>一部分增加大气水汽含量，另一部分用来增加降水</p>
<p>Relative Role of Static Stability and Diabatic Heating (Knuston ana Manabe 1995)</p>
<p>Greater warming in upper troposphere leads to a more stable stratification under GW</p>
<p>Enhanced precipitation under global warming leas to strengthened diabatic heating</p>
<p><img src="https://p.ipic.vip/bs5h0m.jpg" alt="Screen Shot 2022-06-01 at 11.32.40"></p>
<p><strong>水汽有利于radiative cooling，从能量平衡的角度解释降水只增加2%</strong></p>
<p><img src="https://p.ipic.vip/1b7gje.jpg" alt="Screen Shot 2022-06-01 at 11.34.41"></p>
<p>  <strong>最强者拿水汽</strong></p>
<h4 id="为什么南亚季风减弱，东亚季风增强？"><a href="#为什么南亚季风减弱，东亚季风增强？" class="headerlink" title="为什么南亚季风减弱，东亚季风增强？"></a>为什么南亚季风减弱，东亚季风增强？</h4><p>4XCO2，first year 只看陆地的响应，不考虑海洋</p>
<p><img src="https://p.ipic.vip/n525mf.jpg" alt="Screen Shot 2022-06-01 at 11.40.45"></p>
<p><strong>The strengthened EASM circulation is dominated by the fast response</strong></p>
<p><strong>The weakened SASM circulation is dominated by the slow process</strong></p>
<h4 id="Why-is-the-EASM-circulation-strengthed-in-the-fast-response"><a href="#Why-is-the-EASM-circulation-strengthed-in-the-fast-response" class="headerlink" title="Why is the EASM circulation strengthed in the fast response?"></a>Why is the EASM circulation strengthed in the fast response?</h4><p><img src="https://p.ipic.vip/58e4a8.jpg" alt="Screen Shot 2022-06-01 at 11.45.08"></p>
<p>陆地增温是通过青藏高原的加热作用完成的：夏季作用更加明显</p>
<h4 id="Why-is-the-SASM-circulation-weakened-in-the-fast-response"><a href="#Why-is-the-SASM-circulation-weakened-in-the-fast-response" class="headerlink" title="Why is the SASM circulation weakened in the fast response?"></a>Why is the SASM circulation weakened in the fast response?</h4><p><img src="https://p.ipic.vip/7hqwxe.jpg" alt="Screen Shot 2022-06-01 at 11.49.16"></p>
<h4 id="Why-is-the-SASM-circulation-weakened-in-the-slow-response"><a href="#Why-is-the-SASM-circulation-weakened-in-the-slow-response" class="headerlink" title="Why is the SASM circulation weakened in the slow response?"></a>Why is the SASM circulation weakened in the slow response?</h4><p><img src="https://p.ipic.vip/x9qggh.jpg" alt="Screen Shot 2022-06-01 at 11.50.25"></p>
<h4 id="Why-is-the-EASM-circulation-weakened-in-the-slow-reponse"><a href="#Why-is-the-EASM-circulation-weakened-in-the-slow-reponse" class="headerlink" title="Why is the EASM circulation weakened in the slow reponse?"></a>Why is the EASM circulation weakened in the slow reponse?</h4><p><img src="https://p.ipic.vip/hnezsy.jpg" alt="Screen Shot 2022-06-01 at 11.54.35"></p>
<p><img src="https://p.ipic.vip/q2itle.jpg" alt="Screen Shot 2022-06-01 at 11.56.31"></p>
<h3 id="气候模拟和预估：历史、现状和未来-周天军-中科院大气所"><a href="#气候模拟和预估：历史、现状和未来-周天军-中科院大气所" class="headerlink" title="气候模拟和预估：历史、现状和未来  周天军  中科院大气所"></a>气候模拟和预估：历史、现状和未来  周天军  中科院大气所</h3><p><img src="https://p.ipic.vip/x7o5uj.jpg" alt="Screen Shot 2022-06-01 at 14.51.33"></p>
<p><img src="https://p.ipic.vip/mzl51x.jpg" alt="Screen Shot 2022-06-01 at 14.51.11"></p>
<p><img src="https://p.ipic.vip/r0b01g.jpg" alt="Screen Shot 2022-06-01 at 14.52.46"></p>
<p><img src="https://p.ipic.vip/8pjlg9.jpg" alt="Screen Shot 2022-06-01 at 14.54.26"></p>
<p><img src="https://p.ipic.vip/gy47yd.jpg" alt="Screen Shot 2022-06-01 at 14.56.10"></p>
<p><img src="https://p.ipic.vip/1lor22.jpg" alt="Screen Shot 2022-06-01 at 16.25.23"></p>
<p><img src="https://p.ipic.vip/l4vkrd.jpg" alt="Screen Shot 2022-06-01 at 16.28.16"></p>
<p><img src="https://p.ipic.vip/zs4xi5.jpg" alt="Screen Shot 2022-06-01 at 16.28.55"></p>
<p><img src="https://p.ipic.vip/6nxz0l.jpg" alt="Screen Shot 2022-06-01 at 16.30.14"></p>
<p><img src="https://p.ipic.vip/1iutde.jpg" alt="Screen Shot 2022-06-01 at 16.31.41"></p>
<h4 id="1-历史变化的机理"><a href="#1-历史变化的机理" class="headerlink" title="1. 历史变化的机理"></a>1. 历史变化的机理</h4><p>观测中进65年南亚夏季风降水的变化</p>
<p><img src="https://p.ipic.vip/23esz6.jpg" alt="Screen Shot 2022-06-01 at 16.33.47"></p>
<h4 id="2-近中期气候预估的噪音问题"><a href="#2-近中期气候预估的噪音问题" class="headerlink" title="2. 近中期气候预估的噪音问题"></a>2. 近中期气候预估的噪音问题</h4><p>内部变率、模式不确定性、情景不确定性</p>
<p>近期预估内部变率重要：例如IPO对南亚季风的影响</p>
<h4 id="3-长期气候预估的不确定性"><a href="#3-长期气候预估的不确定性" class="headerlink" title="3. 长期气候预估的不确定性"></a>3. 长期气候预估的不确定性</h4><p>模式不确定性占主导</p>
<p><img src="https://p.ipic.vip/czerf9.jpg" alt="Screen Shot 2022-06-01 at 16.38.29"></p>
<p><img src="https://p.ipic.vip/6ufmf5.jpg" alt="Screen Shot 2022-06-01 at 16.39.38"></p>
<h4 id="4-如何解决CMIP6模式“过热”问题"><a href="#4-如何解决CMIP6模式“过热”问题" class="headerlink" title="4. 如何解决CMIP6模式“过热”问题"></a>4. 如何解决CMIP6模式“过热”问题</h4><p><img src="https://p.ipic.vip/loaqbl.jpg" alt="Screen Shot 2022-06-01 at 16.41.52"></p>
<h4 id="5-新需求-基于温升阈值的气候预估"><a href="#5-新需求-基于温升阈值的气候预估" class="headerlink" title="5. 新需求-基于温升阈值的气候预估"></a>5. 新需求-基于温升阈值的气候预估</h4><p><img src="https://p.ipic.vip/gefk67.jpg" alt="Screen Shot 2022-06-01 at 16.44.11"></p>
<h4 id="6-新关注-近期年代际预估问题"><a href="#6-新关注-近期年代际预估问题" class="headerlink" title="6. 新关注-近期年代际预估问题"></a>6. 新关注-近期年代际预估问题</h4><p><img src="https://p.ipic.vip/2e1b8v.jpg" alt="Screen Shot 2022-06-01 at 16.50.59"></p>
<p><img src="https://p.ipic.vip/jquydh.jpg" alt="Screen Shot 2022-06-01 at 16.51.24"></p>
<p><img src="https://p.ipic.vip/puqiip.jpg" alt="Screen Shot 2022-06-01 at 16.51.51"></p>
<p><img src="https://p.ipic.vip/nr2ame.jpg" alt="Screen Shot 2022-06-01 at 16.53.36"></p>
<p><img src="https://p.ipic.vip/u000s9.jpg" alt="Screen Shot 2022-06-01 at 16.56.15"></p>
<p>模式中的降水频率偏高，量级偏小</p>
<p><img src="https://p.ipic.vip/hobupr.jpg" alt="WechatIMG2698"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>谢元富</title>
    <url>/2021/10/20/Seminar/20211020-%E8%B0%A2%E5%85%83%E5%AF%8C/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>回看链接：<a href="https://page.om.qq.com/page/OxE9VaVXfcdOU_3rhPJwnqyA0">https://page.om.qq.com/page/OxE9VaVXfcdOU_3rhPJwnqyA0</a></p>
<h2 id="谢元富-面向需求的数值预报数据同化创新"><a href="#谢元富-面向需求的数值预报数据同化创新" class="headerlink" title="谢元富  面向需求的数值预报数据同化创新"></a>谢元富  面向需求的数值预报数据同化创新</h2><p><img src="https://p.ipic.vip/ig7xro.png" alt="Screenshot 2023-05-30 at 15.37.25"></p>
<p><img src="https://p.ipic.vip/3eaeyr.png" alt="Screenshot 2023-05-30 at 15.37.41"></p>
<p><img src="https://p.ipic.vip/99u60m.png" alt="Screenshot 2023-05-30 at 15.37.57"></p>
<p><img src="https://p.ipic.vip/c94iy3.png" alt="Screenshot 2023-05-30 at 15.38.16"></p>
<p><img src="https://p.ipic.vip/praypv.png" alt="Screenshot 2023-05-30 at 15.38.34"></p>
<p><img src="https://p.ipic.vip/0b0xib.png" alt="Screenshot 2023-05-30 at 15.39.28"></p>
<p><img src="https://p.ipic.vip/4f5ooq.png" alt="Screenshot 2023-05-30 at 15.39.28"></p>
<p><img src="https://p.ipic.vip/5w97ch.png" alt="Screenshot 2023-05-30 at 15.40.07"></p>
<p><img src="https://p.ipic.vip/ui504v.png" alt="Screenshot 2023-05-30 at 15.14.41"></p>
<p><img src="https://p.ipic.vip/3fe1cw.png" alt="Screenshot 2023-05-30 at 15.17.10"></p>
<p><img src="https://p.ipic.vip/6ohsgf.png" alt="Screenshot 2023-05-30 at 15.18.27"></p>
<p><img src="https://p.ipic.vip/xmyopk.png" alt="Screenshot 2023-05-30 at 15.21.24"></p>
<p><img src="https://p.ipic.vip/ukd7c1.png" alt="Screenshot 2023-05-30 at 15.23.09"></p>
<p><img src="https://p.ipic.vip/vi2t0l.png" alt="Screenshot 2023-05-30 at 15.24.08"></p>
<p><img src="https://p.ipic.vip/l4gscj.png" alt="Screenshot 2023-05-30 at 15.26.31"></p>
<p><img src="https://p.ipic.vip/x4467b.png" alt="Screenshot 2023-05-30 at 15.27.45"></p>
<p><img src="https://p.ipic.vip/2lm1wp.png" alt="Screenshot 2023-05-30 at 15.29.00"></p>
<p><img src="https://p.ipic.vip/n0cab2.png" alt="Screenshot 2023-05-30 at 15.29.48"></p>
<p><img src="https://p.ipic.vip/1xkbec.png" alt="Screenshot 2023-05-30 at 15.30.27"></p>
<p><img src="https://p.ipic.vip/tbsuus.png" alt="Screenshot 2023-05-30 at 15.32.02"></p>
<p><img src="https://p.ipic.vip/jdrt4u.png" alt="Screenshot 2023-05-30 at 15.33.49"></p>
<p><img src="https://p.ipic.vip/0crnow.png" alt="Screenshot 2023-05-30 at 15.36.11"></p>
<ul>
<li>提问环节：</li>
</ul>
<p>4DVar的效果可能依赖于好的数值预报模式</p>
<p>如何提取不同观测资料的共性：</p>
<p>软件工程只有好于坏，没有对与错</p>
<p>都有观测值（Obs_val）、观测误差（Obs_err）、质控（Obs_QC）、观测算子（Obs_Mapping）</p>
<p>观测的时间、地点、高度等信息</p>
<p>面向对象的优点，可以生成派生类型</p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>张昕</title>
    <url>/2021/09/24/Seminar/20210924-%E5%BC%A0%E6%98%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>回看链接：<a href="https://page.om.qq.com/page/O1iVhAdzcYWZDFBKZGMiEEnA0">https://page.om.qq.com/page/O1iVhAdzcYWZDFBKZGMiEEnA0</a></p>
<h2 id="张昕发展一个“自主可控”的面向对象的统一资料同化系统进展介绍和初步结果"><a href="#张昕发展一个“自主可控”的面向对象的统一资料同化系统进展介绍和初步结果" class="headerlink" title="张昕发展一个“自主可控”的面向对象的统一资料同化系统进展介绍和初步结果"></a>张昕发展一个“自主可控”的面向对象的统一资料同化系统进展介绍和初步结果</h2><p><img src="https://p.ipic.vip/ynoqbv.png" alt="Screenshot 2023-05-30 at 16.11.50"></p>
<p><img src="https://p.ipic.vip/uy2m0r.png" alt="Screenshot 2023-05-30 at 16.15.46"></p>
<p><img src="https://p.ipic.vip/qhnrwl.png" alt="Screenshot 2023-05-30 at 16.18.27"></p>
<p><img src="https://p.ipic.vip/k8v3rq.png" alt="Screenshot 2023-05-30 at 16.21.58"></p>
<p><img src="https://p.ipic.vip/6dzduk.png" alt="Screenshot 2023-05-30 at 16.24.18"></p>
<p><img src="https://p.ipic.vip/k3p8bz.png" alt="Screenshot 2023-05-30 at 16.24.41"></p>
<p><img src="https://p.ipic.vip/nplvg8.png" alt="Screenshot 2023-05-30 at 16.28.28"></p>
<p><img src="https://p.ipic.vip/l11fvx.png" alt="Screenshot 2023-05-30 at 16.29.29"></p>
<p><img src="https://p.ipic.vip/zh89on.png" alt="Screenshot 2023-05-30 at 16.29.29"></p>
<p><img src="https://p.ipic.vip/i8j6fj.png" alt="Screenshot 2023-05-30 at 16.35.01"></p>
<p><img src="https://p.ipic.vip/qq5dkw.png" alt="Screenshot 2023-05-30 at 16.39.00"></p>
<p><img src="https://p.ipic.vip/420l6v.png" alt="Screenshot 2023-05-30 at 16.39.59"></p>
<p><img src="https://p.ipic.vip/1bu8xt.png" alt="Screenshot 2023-05-30 at 16.40.55"></p>
<p><img src="https://p.ipic.vip/i66uq3.png" alt="Screenshot 2023-05-30 at 16.42.47"></p>
<p><img src="https://p.ipic.vip/d5ht7e.png" alt="Screenshot 2023-05-30 at 16.43.10"></p>
<p><img src="https://p.ipic.vip/r5msux.png" alt="Screenshot 2023-05-30 at 16.43.28"></p>
<p><img src="https://p.ipic.vip/5pwo1r.png" alt="Screenshot 2023-05-30 at 16.43.56"></p>
<p><img src="https://p.ipic.vip/uvqzg3.png" alt="Screenshot 2023-05-30 at 16.45.45"></p>
<p><img src="https://p.ipic.vip/ntvwmy.png" alt="Screenshot 2023-05-30 at 16.46.13"></p>
<p><img src="https://p.ipic.vip/keuy95.png" alt="Screenshot 2023-05-30 at 16.46.58"></p>
<p><img src="https://p.ipic.vip/0dviln.png" alt="Screenshot 2023-05-30 at 16.47.21"></p>
<p><img src="https://p.ipic.vip/2qtsjc.png" alt="Screenshot 2023-05-30 at 16.47.43"></p>
<p><img src="https://p.ipic.vip/tiqe4q.png" alt="Screenshot 2023-05-30 at 16.49.50"></p>
<p><img src="https://p.ipic.vip/l0dy88.png" alt="Screenshot 2023-05-30 at 16.49.58"></p>
<p><img src="https://p.ipic.vip/9up3zl.png" alt="Screenshot 2023-05-30 at 16.50.20"></p>
<p><img src="https://p.ipic.vip/0w2kgz.png" alt="Screenshot 2023-05-30 at 16.51.07"></p>
<p><img src="https://p.ipic.vip/8hdmss.png" alt="Screenshot 2023-05-30 at 16.51.25"></p>
<p><img src="https://p.ipic.vip/bjvmgk.png" alt="Screenshot 2023-05-30 at 16.51.55"></p>
<p><img src="https://p.ipic.vip/p4fnc7.png" alt="Screenshot 2023-05-30 at 16.53.00"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>应俊</title>
    <url>/2022/05/17/Seminar/20220517-%E5%BA%94%E4%BF%8A/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="热带太平洋气候变化显现（Emergence）应俊-第二海洋研究所"><a href="#热带太平洋气候变化显现（Emergence）应俊-第二海洋研究所" class="headerlink" title="热带太平洋气候变化显现（Emergence）应俊  第二海洋研究所"></a>热带太平洋气候变化显现（Emergence）应俊  第二海洋研究所</h2><h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p>warmer get wetter &amp; wet get wetter</p>
<p>CMIP6 intensity of ENSO 一致性</p>
<p>Increased ENSO rainfall variability in response to global warming</p>
<p><img src="https://p.ipic.vip/r50iei.jpg" alt="Screen Shot 2022-05-17 at 09.40.05"></p>
<h3 id="Methods"><a href="#Methods" class="headerlink" title="Methods"></a>Methods</h3><p><img src="https://p.ipic.vip/t4fyk5.jpg" alt="Screen Shot 2022-05-17 at 09.41.11"></p>
<p><img src="https://p.ipic.vip/kuaqva.jpg" alt="Screen Shot 2022-05-17 at 09.50.17"></p>
<p>relative SST 模式和观测差异很大   </p>
<p>模式EN-like，观测LN-Like</p>
<p><img src="https://p.ipic.vip/q9srf5.jpg" alt="Screen Shot 2022-05-17 at 10.01.23"></p>
<p>relative SST 的变化信号显现较 annual mean 晚</p>
<p>ENSO海温：振幅  </p>
<p>ENSO降水：东移</p>
<p>ENSO降水变化信号较海温早30年左右</p>
<p>动力部分起主导作用：温度相对变化</p>
<h3 id="Conclusions"><a href="#Conclusions" class="headerlink" title="Conclusions"></a>Conclusions</h3><p><img src="https://p.ipic.vip/ixr49l.jpg" alt="Screen Shot 2022-05-17 at 10.10.21"></p>
<p><strong>学术报告 2022-11</strong></p>
<p><strong>报告时间：2022年5月17日 09:30</strong></p>
<p><strong>腾讯会议ID（线上）：472 427 746</strong></p>
<hr>
<ul>
<li><p>报告人简介</p>
<p>应俊，自然资源部第二海洋研究所卫星海洋环境动力学国家重点实验室副研究员。2016年博士毕业于中国科学院大气物理研究所。于2020-2021年访问英国埃克塞特大学。研究方向为气候动力学、热带海气相互作用等，在Nature Climate Change, Nature Reviews Earth&amp;Environment, Journal of Climate, Climate Dynamics等期刊发表论文近30篇，出版个人学术专著一部。获中国科学院优秀博士学位论文奖（2017），领跑者5000—中国精品科技期刊顶尖学术论文奖（2017），自然资源部第二海洋研究所“青年英才”项目（2020）。</p>
</li>
<li><p>报告摘要</p>
<p>Future changes in the mean climate of the tropical Pacific and characteristics of the El Niño-Southern Oscillation (ENSO) are established as likely. Determining the time of emergence (ToE) of climate change signals from the natural variability is critical for mitigation strategies and adaptation planning. Here, using a multi-model ensemble, we find that the annual-mean sea surface temperature (SST) signal has already emerged across much of the tropical Pacific, appearing last in the east. The signal of a wetter annual-mean rainfall in the east is expected to emerge by mid-century, with some sensitivity to emission scenario. However, the ENSO-related rainfall variability signal is projected to emerge by around 2040 regardless of emission scenario, around 30 years earlier than ENSO-related SST variability signal at around 2070. Our results are instructive for the detection of climate change signals and reinforce the rapidly emerging risks of ENSO-induced climate extremes regardless of mitigation actions.</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>张荣华</title>
    <url>/2022/06/01/Seminar/20220601-%E5%BC%A0%E8%8D%A3%E5%8D%8E/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="海洋生物过程引发的加热效应及对ENSO的调制影响-张荣华-中科院海洋所"><a href="#海洋生物过程引发的加热效应及对ENSO的调制影响-张荣华-中科院海洋所" class="headerlink" title="海洋生物过程引发的加热效应及对ENSO的调制影响   张荣华  中科院海洋所"></a>海洋生物过程引发的加热效应及对ENSO的调制影响   张荣华  中科院海洋所</h2><p><img src="https://p.ipic.vip/g58dil.jpg" alt="Screen Shot 2022-06-01 at 15.11.44"></p>
<p><img src="https://p.ipic.vip/of5il4.jpg" alt="Screen Shot 2022-06-01 at 15.16.30"></p>
<p>penetration depth: 太阳辐射的穿透深度</p>
<p>赤道中东太平洋chla高值与上升流有关</p>
<p><img src="https://p.ipic.vip/byd1nw.jpg" alt="Screen Shot 2022-06-01 at 15.19.15"></p>
<p><img src="https://p.ipic.vip/4tyqns.jpg" alt="Screen Shot 2022-06-01 at 15.20.47"></p>
<p>El Niño期间，CHLA少，穿透得深，混合层吸收得少</p>
<p><img src="https://p.ipic.vip/mha36o.jpg" alt="Screen Shot 2022-06-01 at 15.25.46"></p>
<p>![Screen Shot 2022-06-01 at 15.27.08](&#x2F;Users&#x2F;ruyanc&#x2F;Desktop&#x2F;Screen Shot 2022-06-01 at 15.27.08.png)</p>
<p><img src="https://p.ipic.vip/mp8w1j.jpg" alt="Screen Shot 2022-06-01 at 15.28.03"></p>
<p><img src="https://p.ipic.vip/s9goo9.jpg" alt="Screen Shot 2022-06-01 at 15.29.25"></p>
<p><img src="https://p.ipic.vip/3k5d84.jpg" alt="Screen Shot 2022-06-01 at 15.31.01"></p>
<p>clm chla ENSO振幅较观测偏大</p>
<p><img src="https://p.ipic.vip/djhq5q.jpg" alt="Screen Shot 2022-06-01 at 15.33.32"></p>
<p>考虑年际可变的叶绿素异常后ENSO振幅明显减小</p>
<p><img src="https://p.ipic.vip/s6cnxl.jpg" alt="Screen Shot 2022-06-01 at 15.36.18"></p>
<p>周期偏长的偏差也明显改善</p>
<p><img src="https://p.ipic.vip/o7ef7o.jpg" alt="Screen Shot 2022-06-01 at 15.37.21"></p>
<p>简单大气+复杂OGCM</p>
<p><img src="https://p.ipic.vip/h09a1g.jpg" alt="Screen Shot 2022-06-01 at 15.40.29"></p>
<p>试验：分别考虑CHLA年际异常和淡水通量年际异常对ENSO的影响</p>
<p><img src="https://p.ipic.vip/85738p.jpg" alt="Screen Shot 2022-06-01 at 15.40.54"></p>
<p>方式和程度存在差异：CHLA为负反馈，淡水通量为正反馈</p>
<p>同时均对周期存在影响</p>
<p><img src="https://p.ipic.vip/jgaavj.jpg" alt="Screen Shot 2022-06-01 at 15.42.30"></p>
<p><img src="https://p.ipic.vip/qu181p.jpg" alt="Screen Shot 2022-06-01 at 15.42.58"></p>
<p>导致了ENSO的复杂性</p>
<p>CESM中缺乏负反馈，可能导致ENSO模拟偏强</p>
<p><img src="https://p.ipic.vip/7dga79.jpg" alt="Screen Shot 2022-06-01 at 15.45.38"></p>
<p><img src="https://p.ipic.vip/l68k3r.jpg" alt="Screen Shot 2022-06-01 at 15.46.45"></p>
<p>全球变暖背景下，海洋上层生物量减少的可能影响？</p>
<p><img src="https://p.ipic.vip/sfwgh0.jpg" alt="Screen Shot 2022-06-01 at 15.48.30"></p>
<p>海洋生物同样可以通过动力过程影响海洋</p>
<p><img src="https://p.ipic.vip/lty0rw.jpg" alt="Screen Shot 2022-06-01 at 15.49.11"></p>
<p><img src="https://p.ipic.vip/pam1fx.jpg" alt="Screen Shot 2022-06-01 at 15.50.47"></p>
<p><img src="https://p.ipic.vip/qxf0cs.jpg" alt="3961320ee9f45786d865fd2a54fbf839"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>罗德海</title>
    <url>/2022/06/09/Seminar/20220609-%E7%BD%97%E5%BE%B7%E6%B5%B7/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="多尺度动力学及灾害性天气预报系列讲座-罗德海-中科院大气所"><a href="#多尺度动力学及灾害性天气预报系列讲座-罗德海-中科院大气所" class="headerlink" title="多尺度动力学及灾害性天气预报系列讲座  罗德海 中科院大气所"></a>多尺度动力学及灾害性天气预报系列讲座  罗德海 中科院大气所</h2><h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p><img src="https://p.ipic.vip/m8wdgs.jpg" alt="Screen Shot 2022-06-09 at 15.14.12"></p>
<p><img src="https://p.ipic.vip/basuz9.jpg" alt="Screen Shot 2022-06-09 at 15.14.59"></p>
<p><img src="https://p.ipic.vip/z8v6vz.jpg" alt="Screen Shot 2022-06-09 at 15.18.49"></p>
<p><img src="https://p.ipic.vip/xobvlf.jpg" alt="Screen Shot 2022-06-09 at 15.21.41"></p>
<p><img src="https://p.ipic.vip/9urypc.jpg" alt="Screen Shot 2022-06-09 at 15.22.07"></p>
<p><img src="https://p.ipic.vip/ycka7u.jpg" alt="Screen Shot 2022-06-09 at 15.22.40"></p>
<p><img src="https://p.ipic.vip/au4bln.jpg" alt="Screen Shot 2022-06-09 at 15.23.31"></p>
<p><img src="https://p.ipic.vip/aft8rz.jpg" alt="Screen Shot 2022-06-09 at 15.24.39"></p>
<p><img src="https://p.ipic.vip/0a85uw.jpg" alt="Screen Shot 2022-06-09 at 15.24.51"></p>
<p><img src="https://p.ipic.vip/4nurzj.jpg" alt="Screen Shot 2022-06-09 at 15.28.17"></p>
<p><strong>小振幅阻塞的持续时间长，影响更大</strong></p>
<p><img src="https://p.ipic.vip/mndtut.jpg" alt="Screen Shot 2022-06-09 at 15.29.57"></p>
<p><img src="https://p.ipic.vip/tny63c.jpg" alt="Screen Shot 2022-06-09 at 15.31.02"></p>
<p><img src="https://p.ipic.vip/loid83.jpg" alt="Screen Shot 2022-06-09 at 15.31.40"></p>
<h3 id="Methods"><a href="#Methods" class="headerlink" title="Methods"></a>Methods</h3><p><img src="https://p.ipic.vip/qc1g61.jpg" alt="Screen Shot 2022-06-09 at 15.33.20"></p>
<p><img src="https://p.ipic.vip/kux0uj.jpg" alt="Screen Shot 2022-06-09 at 15.34.16"></p>
<p><img src="https://p.ipic.vip/z5769p.jpg" alt="Screen Shot 2022-06-09 at 15.35.08"></p>
<p><img src="https://p.ipic.vip/1e4f90.jpg" alt="Screen Shot 2022-06-09 at 15.37.13"></p>
<p><img src="https://p.ipic.vip/i3rprk.jpg" alt="Screen Shot 2022-06-09 at 15.39.32"></p>
<p><img src="https://p.ipic.vip/tfoyuk.jpg" alt="Screen Shot 2022-06-09 at 15.40.51"></p>
<p><img src="https://p.ipic.vip/zqbu8j.jpg" alt="Screen Shot 2022-06-09 at 15.41.56"></p>
<p><strong>位涡梯度决定了变化</strong></p>
<p><img src="https://p.ipic.vip/74xdjm.jpg" alt="Screen Shot 2022-06-09 at 15.43.44"></p>
<p><img src="https://p.ipic.vip/d0efvs.jpg" alt="Screen Shot 2022-06-09 at 15.44.05"></p>
<p><img src="https://p.ipic.vip/p0thfl.jpg" alt="Screen Shot 2022-06-09 at 15.44.51"></p>
<p><img src="https://p.ipic.vip/teas8n.jpg" alt="Screen Shot 2022-06-09 at 15.45.10"></p>
<p><img src="https://p.ipic.vip/z5o6xa.jpg" alt="Screen Shot 2022-06-09 at 15.46.33"></p>
<p><img src="https://p.ipic.vip/0hz65o.jpg" alt="Screen Shot 2022-06-09 at 15.47.03"></p>
<p><img src="https://p.ipic.vip/fyl4jb.jpg" alt="Screen Shot 2022-06-09 at 15.47.38"></p>
<p><img src="https://p.ipic.vip/47r4tq.jpg" alt="Screen Shot 2022-06-09 at 15.49.07"></p>
<p><img src="https://p.ipic.vip/pgqreq.jpg" alt="Screen Shot 2022-06-09 at 15.51.38"></p>
<h3 id="Application"><a href="#Application" class="headerlink" title="Application"></a>Application</h3><p><img src="https://p.ipic.vip/ccd66g.jpg" alt="Screen Shot 2022-06-09 at 15.55.40"></p>
<p><img src="https://p.ipic.vip/zxum4j.jpg" alt="Screen Shot 2022-06-09 at 15.56.28"></p>
<p><img src="https://p.ipic.vip/x0djyq.jpg" alt="Screen Shot 2022-06-09 at 15.58.17"></p>
<p><img src="https://p.ipic.vip/q4xqxm.jpg" alt="Screen Shot 2022-06-09 at 15.59.12"></p>
<p><img src="https://p.ipic.vip/9ha9qs.jpg" alt="Screen Shot 2022-06-09 at 16.01.20"></p>
<p><img src="https://p.ipic.vip/4jslbw.jpg" alt="Screen Shot 2022-06-09 at 16.01.54"></p>
<p><img src="https://p.ipic.vip/5xk3l5.jpg" alt="Screen Shot 2022-06-09 at 16.03.04"></p>
<p><img src="https://p.ipic.vip/rpkpfz.jpg" alt="Screen Shot 2022-06-09 at 16.03.53"></p>
<p><img src="https://p.ipic.vip/6fxu2l.jpg" alt="Screen Shot 2022-06-09 at 16.04.40"></p>
<p><img src="https://p.ipic.vip/lzn5mz.jpg" alt="Screen Shot 2022-06-09 at 16.05.46"></p>
<p><img src="https://p.ipic.vip/9d38w4.jpg" alt="Screen Shot 2022-06-09 at 16.06.35"></p>
<p><img src="https://p.ipic.vip/9rqv2u.jpg" alt="Screen Shot 2022-06-09 at 16.08.38"></p>
<p><img src="https://p.ipic.vip/xxc840.jpg" alt="Screen Shot 2022-06-09 at 16.10.02"></p>
<p><img src="https://p.ipic.vip/m7lvff.jpg" alt="Screen Shot 2022-06-09 at 16.12.12"></p>
<p><img src="https://p.ipic.vip/mpyb6j.jpg" alt="Screen Shot 2022-06-09 at 16.13.29"></p>
<h3 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h3><p><img src="https://p.ipic.vip/7pn58b.jpg" alt="Screen Shot 2022-06-09 at 16.13.40"></p>
<p><img src="https://p.ipic.vip/rvnluq.jpg" alt="Screen Shot 2022-06-09 at 16.15.19"></p>
<hr>
<p><img src="https://p.ipic.vip/ydf4an.jpg" alt="461f7b9349ac0ce3face6d57b133f5a0"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>学习会</title>
    <url>/2022/06/02/Seminar/20220602-%E5%AD%A6%E4%B9%A0%E4%BC%9A/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="IPCC-冰冻圈变化-洪宇、鞠汶姗"><a href="#IPCC-冰冻圈变化-洪宇、鞠汶姗" class="headerlink" title="IPCC 冰冻圈变化 - 洪宇、鞠汶姗"></a>IPCC 冰冻圈变化 - 洪宇、鞠汶姗</h2><h4 id="北极海冰"><a href="#北极海冰" class="headerlink" title="北极海冰"></a>北极海冰</h4><p><img src="https://p.ipic.vip/zlozq0.jpg" alt="Screen Shot 2022-06-02 at 15.07.55"></p>
<p>2℃增暖，北极夏季无冰，但可恢复</p>
<h4 id="南极海冰"><a href="#南极海冰" class="headerlink" title="南极海冰"></a>南极海冰</h4><p>没有明显趋势，不同海区趋势不一致</p>
<p><img src="https://p.ipic.vip/0ucv7r.jpg" alt="Screen Shot 2022-06-02 at 15.09.24"></p>
<p><img src="https://p.ipic.vip/pamdbh.jpg" alt="Screen Shot 2022-06-02 at 15.11.18"></p>
<p>动力作用对海冰的生成重要</p>
<h3 id="冰盖"><a href="#冰盖" class="headerlink" title="冰盖"></a>冰盖</h3><p>只有穿过grounding line的冰盖才会对海平面造成影响</p>
<p>冰架对海平面没有影响</p>
<p><img src="https://p.ipic.vip/6cqi8z.jpg" alt="Screen Shot 2022-06-02 at 15.35.18"></p>
<h4 id="格陵兰冰盖"><a href="#格陵兰冰盖" class="headerlink" title="格陵兰冰盖"></a>格陵兰冰盖</h4><p><img src="https://p.ipic.vip/4bjms8.jpg" alt="Screen Shot 2022-06-02 at 15.15.24"></p>
<p><img src="https://p.ipic.vip/hg32jn.jpg" alt="Screen Shot 2022-06-02 at 15.16.49"></p>
<h4 id="南极冰盖"><a href="#南极冰盖" class="headerlink" title="南极冰盖"></a>南极冰盖</h4><p><img src="https://p.ipic.vip/s255dc.jpg" alt="Screen Shot 2022-06-02 at 15.17.58"></p>
<p><img src="https://p.ipic.vip/htu5ag.jpg" alt="Screen Shot 2022-06-02 at 15.19.36"></p>
<p><img src="https://p.ipic.vip/bs7kzp.jpg" alt="Screen Shot 2022-06-02 at 15.20.28"></p>
<p><img src="https://p.ipic.vip/8c60um.jpg" alt="Screen Shot 2022-06-02 at 15.21.35"></p>
<p>次表层海水增暖，溶解底部的冰盖</p>
<h3 id="冰川"><a href="#冰川" class="headerlink" title="冰川"></a>冰川</h3><p><img src="https://p.ipic.vip/3cf43x.jpg" alt="Screen Shot 2022-06-02 at 15.23.04"></p>
<h2 id="Sea-Level-change"><a href="#Sea-Level-change" class="headerlink" title="Sea Level change"></a>Sea Level change</h2><h4 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h4><p><img src="https://p.ipic.vip/k7uohk.jpg" alt="Screen Shot 2022-06-02 at 15.40.57"></p>
<h4 id="Pre-satellite-era"><a href="#Pre-satellite-era" class="headerlink" title="Pre-satellite era"></a>Pre-satellite era</h4><p><img src="https://p.ipic.vip/0z3etk.jpg" alt="Screen Shot 2022-06-02 at 15.45.09"></p>
<p>冰川主导</p>
<h4 id="Satellite-era"><a href="#Satellite-era" class="headerlink" title="Satellite era"></a>Satellite era</h4><p><img src="https://p.ipic.vip/xwohas.jpg" alt="Screen Shot 2022-06-02 at 15.46.19"></p>
<p>冰盖主导</p>
<h4 id="Regional-budget"><a href="#Regional-budget" class="headerlink" title="Regional budget"></a>Regional budget</h4><p><img src="https://p.ipic.vip/muhf4n.jpg" alt="Screen Shot 2022-06-02 at 15.47.28"></p>
<h4 id="Projection"><a href="#Projection" class="headerlink" title="Projection"></a>Projection</h4><p><img src="https://p.ipic.vip/x876b9.jpg" alt="Screen Shot 2022-06-02 at 15.52.48"></p>
<p><img src="https://p.ipic.vip/npzz2a.jpg" alt="Screen Shot 2022-06-02 at 15.56.58"></p>
<h4 id="Drivers"><a href="#Drivers" class="headerlink" title="Drivers"></a>Drivers</h4><p><img src="https://p.ipic.vip/u84ik6.jpg" alt="Screen Shot 2022-06-02 at 15.59.23"></p>
<p>another perspective on uncertainties: 达到对应海平面变化的出现时间的跨度</p>
<h4 id="Extreme-sea-level-Tides-surges-and-waves"><a href="#Extreme-sea-level-Tides-surges-and-waves" class="headerlink" title="Extreme sea level: Tides, surges and waves"></a>Extreme sea level: Tides, surges and waves</h4><p><img src="https://p.ipic.vip/bovzpn.jpg" alt="Screen Shot 2022-06-02 at 16.03.26"></p>
<h4 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h4><p><img src="https://p.ipic.vip/4572ls.jpg" alt="Screen Shot 2022-06-02 at 16.05.17"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>魏云涛</title>
    <url>/2022/06/09/Seminar/20220609-%E9%AD%8F%E4%BA%91%E6%B6%9B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Modulation-of-ENSO-on-MJO-Eastward-Propagation-and-Vertical-Structure-魏云涛-复旦大学"><a href="#Modulation-of-ENSO-on-MJO-Eastward-Propagation-and-Vertical-Structure-魏云涛-复旦大学" class="headerlink" title="Modulation of ENSO on MJO Eastward Propagation and Vertical Structure 魏云涛 复旦大学"></a>Modulation of ENSO on MJO Eastward Propagation and Vertical Structure 魏云涛 复旦大学</h2><h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p><img src="https://p.ipic.vip/mvpc3v.jpg" alt="Screen Shot 2022-06-09 at 09.33.09"></p>
<p><img src="https://p.ipic.vip/2xq5eh.jpg" alt="Screen Shot 2022-06-09 at 09.34.14"></p>
<p><img src="https://p.ipic.vip/kpvasy.jpg" alt="Screen Shot 2022-06-09 at 09.34.56"></p>
<p><img src="https://p.ipic.vip/p1wpyb.jpg" alt="Screen Shot 2022-06-09 at 09.35.58"></p>
<h3 id="ENSO-modulation-on-MJO-propagation"><a href="#ENSO-modulation-on-MJO-propagation" class="headerlink" title="ENSO modulation on MJO propagation"></a>ENSO modulation on MJO propagation</h3><p><img src="https://p.ipic.vip/53qoso.jpg" alt="Screen Shot 2022-06-09 at 09.37.22"></p>
<p><img src="https://p.ipic.vip/x7hp8o.jpg" alt="Screen Shot 2022-06-09 at 09.38.37"></p>
<p><img src="https://p.ipic.vip/tnm4yl.jpg" alt="Screen Shot 2022-06-09 at 09.40.20"></p>
<p><img src="https://p.ipic.vip/vy6bv9.jpg" alt="Screen Shot 2022-06-09 at 09.42.44"></p>
<hr>
<ul>
<li><p>报告人简介</p>
<p>魏云涛，博士毕业于中科院海洋研究所，先后在美国犹他大学从事博士后研究工作，中国气象科学研究院担任研究助理。研究方向主要涉及：热带次季节变率机理及预测、多尺度相互作用、日变化、对流触发，中尺度和气候数值模拟。在Journal of Climate, Geophysical Research Letters, Climate Dynamics等国际SCI刊物发表论文15篇。担任Bulletin of the American Meteorological Society等十余种SCI杂志同行评审。</p>
</li>
<li><p>报告摘要</p>
<p>Madden-Julian Oscillation (MJO) and El Niño-Southern Oscillation (ENSO) are the two dominant modes of tropical intraseasonal (20–100-day) and interannual (2–7-year) variabilities, respectively. There are profound two-way interactions between them and exploring how ENSO affects MJO is of great importance for the subseasonal to seasonal (S2S) scale predictions of global weather and climate. Unlike previous studies that often focus on MJO strength, this study explore how ENSO exerts diversified modulation effects on MJO propagation speed and vertical structure. The results reveal that: under the warm phase of ENSO, the MJO is relatively fast, shows evident westward energy dispersion, and the moisture disturbances in the lower troposphere grow more rapidly than that in the mid troposphere; on the contrary, under the cold phase of ENSO, the propagation speed of MJO is slow without significant energy dispersion and the rapid moisture growth is elevated towards the mid troposphere, leading to a “top-heavy” MJO. The underlying mechanisms mainly involve the multiscale interactions in the maritime continent-western Pacific regions among high-frequency synoptic weather, low-frequency background mean state, and intraseasonal scales. In particular, ENSO acts to regulate the horizontal tilt extent of tropical depression-type disturbances that rectify the vertical structures of MJO by influencing mid-tropospheric nonlinear moist dynamics. Implications for S2S prediction and open questions deserved future studies will be also discussed.</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>王林</title>
    <url>/2022/06/14/Seminar/20220614-%E7%8E%8B%E6%9E%97/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="南极平流层爆发性增温-王林-中科院大气所"><a href="#南极平流层爆发性增温-王林-中科院大气所" class="headerlink" title="南极平流层爆发性增温 王林 中科院大气所"></a>南极平流层爆发性增温 王林 中科院大气所</h2><h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p><img src="https://p.ipic.vip/ohihl4.jpg" alt="Screen Shot 2022-06-14 at 14.34.30"></p>
<p><img src="https://p.ipic.vip/thl3mk.jpg" alt="Screen Shot 2022-06-14 at 14.35.04"></p>
<p><img src="https://p.ipic.vip/4vqd5q.jpg" alt="Screen Shot 2022-06-14 at 14.38.27"></p>
<p><img src="https://p.ipic.vip/mv4aai.jpg" alt="Screen Shot 2022-06-14 at 14.41.47"></p>
<p><img src="https://p.ipic.vip/0h8js4.jpg" alt="Screen Shot 2022-06-14 at 14.42.23"></p>
<p><img src="https://p.ipic.vip/twbxxj.jpg" alt="Screen Shot 2022-06-14 at 14.44.08"></p>
<h3 id="南极SSW的特征、机制和影响"><a href="#南极SSW的特征、机制和影响" class="headerlink" title="南极SSW的特征、机制和影响"></a>南极SSW的特征、机制和影响</h3><p><img src="https://p.ipic.vip/tv2ggp.jpg" alt="Screen Shot 2022-06-14 at 14.45.09"></p>
<p><img src="https://p.ipic.vip/kjzm40.jpg" alt="Screen Shot 2022-06-14 at 14.47.59"></p>
<p><img src="https://p.ipic.vip/h072xx.jpg" alt="Screen Shot 2022-06-14 at 14.49.13"></p>
<p><img src="https://p.ipic.vip/0s2sda.jpg" alt="Screen Shot 2022-06-14 at 14.51.50"></p>
<p><img src="https://p.ipic.vip/414etf.jpg" alt="Screen Shot 2022-06-14 at 14.52.37"></p>
<p><img src="https://p.ipic.vip/mgbr8q.jpg" alt="Screen Shot 2022-06-14 at 14.53.42"></p>
<p><img src="https://p.ipic.vip/dnq1u2.jpg" alt="Screen Shot 2022-06-14 at 14.54.06"></p>
<p><img src="https://p.ipic.vip/rfybsk.jpg" alt="Screen Shot 2022-06-14 at 14.55.45"></p>
<p><img src="https://p.ipic.vip/3qpjyz.jpg" alt="Screen Shot 2022-06-14 at 14.59.28"></p>
<p><img src="https://p.ipic.vip/anpjlw.jpg" alt="Screen Shot 2022-06-14 at 15.01.33"></p>
<p><img src="https://p.ipic.vip/jlqwyr.jpg" alt="Screen Shot 2022-06-14 at 15.04.07"></p>
<p><img src="https://p.ipic.vip/a2oug3.jpg" alt="Screen Shot 2022-06-14 at 15.07.51"></p>
<p><img src="https://p.ipic.vip/r5zl7x.jpg" alt="Screen Shot 2022-06-14 at 15.10.40"></p>
<p><img src="https://p.ipic.vip/qusc2s.jpg" alt="Screen Shot 2022-06-14 at 15.13.06"></p>
<p><img src="https://p.ipic.vip/ynvmqm.jpg" alt="Screen Shot 2022-06-14 at 15.13.53"></p>
<h3 id="气候影响"><a href="#气候影响" class="headerlink" title="气候影响"></a>气候影响</h3><p><img src="https://p.ipic.vip/m9ux3r.jpg" alt="Screen Shot 2022-06-14 at 15.15.28"></p>
<p><img src="https://p.ipic.vip/ddehxj.jpg" alt="Screen Shot 2022-06-14 at 15.17.16"></p>
<p><img src="https://p.ipic.vip/hgamo7.jpg" alt="Screen Shot 2022-06-14 at 15.18.37"></p>
<p><img src="https://p.ipic.vip/bfvxsk.jpg" alt="Screen Shot 2022-06-14 at 15.20.45"></p>
<p><img src="https://p.ipic.vip/gdbq01.jpg" alt="Screen Shot 2022-06-14 at 15.21.14"></p>
<h3 id="2019年南极SSW的个例分析"><a href="#2019年南极SSW的个例分析" class="headerlink" title="2019年南极SSW的个例分析"></a>2019年南极SSW的个例分析</h3><p><img src="https://p.ipic.vip/g2rjqf.jpg" alt="Screen Shot 2022-06-14 at 15.22.49"></p>
<p><img src="https://p.ipic.vip/oh7z77.jpg" alt="Screen Shot 2022-06-14 at 15.24.32"></p>
<p><img src="https://p.ipic.vip/c0g75y.jpg" alt="Screen Shot 2022-06-14 at 15.26.04"></p>
<p><img src="https://p.ipic.vip/x199dl.jpg" alt="Screen Shot 2022-06-14 at 15.27.52"></p>
<p><img src="https://p.ipic.vip/i1ja9y.jpg" alt="Screen Shot 2022-06-14 at 15.30.04"></p>
<p>![Screen Shot 2022-06-14 at 15.30.25](&#x2F;Users&#x2F;ruyanc&#x2F;Desktop&#x2F;Screen Shot 2022-06-14 at 15.30.25.png)</p>
<p><img src="https://p.ipic.vip/tf5upq.jpg" alt="Screen Shot 2022-06-14 at 15.33.41"></p>
<p><img src="https://p.ipic.vip/hksi23.jpg" alt="Screen Shot 2022-06-14 at 15.34.19"></p>
<p><img src="https://p.ipic.vip/arie51.jpg" alt="Screen Shot 2022-06-14 at 15.35.49"></p>
<p><img src="https://p.ipic.vip/j1wpap.jpg" alt="Screen Shot 2022-06-14 at 15.36.53"></p>
<p><img src="https://p.ipic.vip/spa5pv.jpg" alt="Screen Shot 2022-06-14 at 15.37.30"></p>
<p><img src="https://p.ipic.vip/d8uyd1.jpg" alt="Screen Shot 2022-06-14 at 15.37.58"></p>
<p><img src="https://p.ipic.vip/vjv9km.jpg" alt="Screen Shot 2022-06-14 at 15.38.50"></p>
<p><img src="https://p.ipic.vip/61883i.jpg" alt="Screen Shot 2022-06-14 at 15.39.14"></p>
<hr>
<p><img src="https://p.ipic.vip/jqkcqd.jpg" alt="WechatIMG5366"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>秦大河</title>
    <url>/2022/06/06/Seminar/20220606-%E7%A7%A6%E5%A4%A7%E6%B2%B3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="气候变化与冰冻圈科学的发展-秦大河-兰州大学"><a href="#气候变化与冰冻圈科学的发展-秦大河-兰州大学" class="headerlink" title="气候变化与冰冻圈科学的发展  秦大河 兰州大学"></a>气候变化与冰冻圈科学的发展  秦大河 兰州大学</h2><h3 id="气候变化科学的发展"><a href="#气候变化科学的发展" class="headerlink" title="气候变化科学的发展"></a>气候变化科学的发展</h3><p>WMO 2021年气候公报</p>
<p><img src="https://p.ipic.vip/9z9za4.jpg" alt="Screen Shot 2022-06-06 at 15.42.05"></p>
<p><img src="https://p.ipic.vip/zqv668.jpg" alt="Screen Shot 2022-06-06 at 15.44.17"></p>
<p><img src="https://p.ipic.vip/8j6g1u.jpg" alt="Screen Shot 2022-06-06 at 15.51.43"></p>
<p><img src="https://p.ipic.vip/qievxe.jpg" alt="Screen Shot 2022-06-06 at 15.52.51"></p>
<p><img src="https://p.ipic.vip/u55g32.jpg" alt="Screen Shot 2022-06-06 at 15.53.13"></p>
<p><img src="https://p.ipic.vip/61z2o4.jpg" alt="Screen Shot 2022-06-06 at 15.54.30"></p>
<p><img src="https://p.ipic.vip/8s18b8.jpg" alt="Screen Shot 2022-06-06 at 15.55.41"></p>
<p><img src="https://p.ipic.vip/6s0q87.jpg" alt="Screen Shot 2022-06-06 at 15.56.55"></p>
<p><img src="https://p.ipic.vip/xv3alv.jpg" alt="Screen Shot 2022-06-06 at 15.57.52"></p>
<p><img src="https://p.ipic.vip/rbm79e.jpg" alt="Screen Shot 2022-06-06 at 15.58.14"></p>
<p><img src="https://p.ipic.vip/1yflxd.jpg" alt="Screen Shot 2022-06-06 at 15.59.54"></p>
<h3 id="冰冻圈和冰冻圈科学"><a href="#冰冻圈和冰冻圈科学" class="headerlink" title="冰冻圈和冰冻圈科学"></a>冰冻圈和冰冻圈科学</h3><p><img src="https://p.ipic.vip/9bnu8n.jpg" alt="Screen Shot 2022-06-06 at 16.02.30"></p>
<p><img src="https://p.ipic.vip/igfezt.jpg" alt="Screen Shot 2022-06-06 at 16.07.22"></p>
<p><img src="https://p.ipic.vip/39m0zq.jpg" alt="Screen Shot 2022-06-06 at 16.07.53"></p>
<p><img src="https://p.ipic.vip/lge4e3.jpg" alt="Screen Shot 2022-06-06 at 16.09.10"></p>
<p><img src="https://p.ipic.vip/9rabb3.jpg" alt="Screen Shot 2022-06-06 at 16.10.12"></p>
<p><img src="https://p.ipic.vip/kwcje5.jpg" alt="Screen Shot 2022-06-06 at 16.12.02"></p>
<p><img src="https://p.ipic.vip/bhjex3.jpg" alt="Screen Shot 2022-06-06 at 16.12.26"></p>
<p><img src="https://p.ipic.vip/yk9dgl.jpg" alt="Screen Shot 2022-06-06 at 16.14.06"></p>
<p><img src="https://p.ipic.vip/74jl0m.jpg" alt="Screen Shot 2022-06-06 at 16.15.38"></p>
<p><img src="https://p.ipic.vip/yjwbq5.jpg" alt="Screen Shot 2022-06-06 at 16.17.27"></p>
<p><img src="https://p.ipic.vip/a2msm7.jpg" alt="Screen Shot 2022-06-06 at 16.18.07"></p>
<p><img src="https://p.ipic.vip/b2ey9y.jpg" alt="Screen Shot 2022-06-06 at 16.20.52"></p>
<p><img src="https://p.ipic.vip/csu1we.jpg" alt="Screen Shot 2022-06-06 at 16.22.46"></p>
<p><img src="https://p.ipic.vip/49uqpe.jpg" alt="Screen Shot 2022-06-06 at 16.23.31"></p>
<p><img src="https://p.ipic.vip/upg5x8.jpg" alt="Screen Shot 2022-06-06 at 16.24.29"></p>
<p><img src="https://p.ipic.vip/kyul4v.jpg" alt="Screen Shot 2022-06-06 at 16.25.21"></p>
<p><img src="https://p.ipic.vip/i5e114.jpg" alt="Screen Shot 2022-06-06 at 16.26.40"></p>
<p><img src="https://p.ipic.vip/yr8fc1.jpg" alt="Screen Shot 2022-06-06 at 16.28.37"></p>
<h3 id="健康地球"><a href="#健康地球" class="headerlink" title="健康地球"></a>健康地球</h3><p><img src="https://p.ipic.vip/u27axy.jpg" alt="Screen Shot 2022-06-06 at 16.36.47"></p>
<p><img src="https://p.ipic.vip/9wmnqb.jpg" alt="Screen Shot 2022-06-06 at 16.37.29"></p>
<p><img src="https://p.ipic.vip/l6ft7c.jpg" alt="Screen Shot 2022-06-06 at 16.38.51"></p>
<p><img src="https://p.ipic.vip/olzkfi.jpg" alt="Screen Shot 2022-06-06 at 16.39.35"></p>
<p><img src="https://p.ipic.vip/gxr82y.jpg" alt="Screen Shot 2022-06-06 at 16.40.34"></p>
<p><img src="https://p.ipic.vip/hg25sf.jpg" alt="Screen Shot 2022-06-06 at 16.42.14"></p>
<p><img src="https://p.ipic.vip/3drgmu.jpg" alt="Screen Shot 2022-06-06 at 16.43.41"></p>
<p><img src="https://p.ipic.vip/zjy1u4.jpg" alt="Screen Shot 2022-06-06 at 16.48.34"></p>
<h3 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h3><p><strong>冰川 Glacier</strong></p>
<p>根据冰川的形态和规模，可将冰川为为3类：大陆冰川、山谷冰川、山麓冰川。南极冰川就是大陆冰川。</p>
<p>大陆冰川为规模广大的冰川，覆盖在大陆或高原区，所有的高山、低谷以及平原全部受到覆盖。中央部位较高，冰自中央向周围任何方向移动，不经融化而直接入海，因其覆盖整个陆地再由陆地边缘直接入海，故称大陆冰川。</p>
<p><strong>冰盖 Ice sheet</strong></p>
<p>冰盖，又称大陆冰川，是覆盖着广大地区的极厚的冰层的陆地面积（一般常见于高原地区），覆盖面积大于5万平方公里。覆盖面积少于5万平方公里的叫做冰原。地球上有2个冰盖，分别是南极冰盖和格陵兰冰盖。</p>
<p><strong>冰架 Iceshelf</strong></p>
<p>冰架是冰盖（大陆冰川）向海洋中的延伸部分。最大的冰架是罗斯冰架、菲尔希纳冰架、龙尼冰架和亚美利冰架。冰架能以每年2500米的速度移向海洋，在它的边缘，断裂的冰架渐渐漂移到海洋中，形成巨大的冰山。</p>
<p><strong>冰山 Iceberg</strong></p>
<p>冰架崩解后成为冰山，或者说冰山的来源就是冰架崩解。北极海上的冰山大多呈尖塔状，是北极圈内各个岛上的冰河滑落海中所造成；南极附近的冰山大多呈平顶桌状，是由覆盖在南极大陆上的大冰层末端逐渐塌陷而浮于海上所致。</p>
<p>简单概述一下就是，南极的冰川是大陆冰川，因为覆盖面积大于5万平方公里，所以称之为冰盖。冰盖边缘的冰架会向海洋漂移，断裂的冰架独自在海洋中存在，称之为冰山。</p>
<hr>
<p><img src="https://p.ipic.vip/ymmhh8.jpg" alt="WechatIMG2732"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>组会</title>
    <url>/2022/06/21/Seminar/20220621-%E7%BB%84%E4%BC%9A/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="夏一凡-环流动力工作总结"><a href="#夏一凡-环流动力工作总结" class="headerlink" title="夏一凡 - 环流动力工作总结"></a>夏一凡 - 环流动力工作总结</h2><p><img src="https://p.ipic.vip/a3dah1.jpg" alt="Screen Shot 2022-06-22 at 15.02.37"></p>
<p><img src="https://p.ipic.vip/crpbgo.jpg" alt="Screen Shot 2022-06-22 at 15.03.59"></p>
<p><img src="https://p.ipic.vip/sh1btd.jpg" alt="Screen Shot 2022-06-22 at 15.05.02"></p>
<p><img src="https://p.ipic.vip/8ky56y.jpg" alt="Screen Shot 2022-06-22 at 15.05.44"></p>
<p><img src="https://p.ipic.vip/x8oadi.jpg" alt="Screen Shot 2022-06-22 at 15.06.41"></p>
<p><img src="https://p.ipic.vip/74qz3f.jpg" alt="Screen Shot 2022-06-22 at 15.08.00"></p>
<p><img src="https://p.ipic.vip/dnwit2.jpg" alt="Screen Shot 2022-06-22 at 15.19.51"></p>
<h2 id="孙启伟-东南印度洋海表盐度对IOD的非对称响应"><a href="#孙启伟-东南印度洋海表盐度对IOD的非对称响应" class="headerlink" title="孙启伟 - 东南印度洋海表盐度对IOD的非对称响应"></a>孙启伟 - 东南印度洋海表盐度对IOD的非对称响应</h2><p><img src="https://p.ipic.vip/x92id3.jpg" alt="Screen Shot 2022-06-22 at 16.26.36"></p>
<p><img src="https://p.ipic.vip/yh11dl.jpg" alt="Screen Shot 2022-06-22 at 16.28.30"></p>
<p><img src="https://p.ipic.vip/p9ss3m.jpg" alt="Screen Shot 2022-06-22 at 16.33.18"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>俎婷婷+周巍</title>
    <url>/2022/06/22/Seminar/20220622-%E4%BF%8E%E5%A9%B7%E5%A9%B7+%E5%91%A8%E5%B7%8D/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="海洋ROMS模式介绍-俎婷婷-中科院南海所"><a href="#海洋ROMS模式介绍-俎婷婷-中科院南海所" class="headerlink" title="海洋ROMS模式介绍 俎婷婷  中科院南海所"></a>海洋ROMS模式介绍 俎婷婷  中科院南海所</h2><p><img src="https://p.ipic.vip/5muglb.jpg" alt="Screen Shot 2022-06-22 at 20.03.55"></p>
<p><img src="https://p.ipic.vip/43d4f2.jpg" alt="Screen Shot 2022-06-22 at 20.05.16"></p>
<p><img src="https://p.ipic.vip/qvrz5d.jpg" alt="Screen Shot 2022-06-22 at 20.05.57"></p>
<p><img src="https://p.ipic.vip/t7gnn0.jpg" alt="Screen Shot 2022-06-22 at 20.07.55"></p>
<p><img src="https://p.ipic.vip/geyi4f.jpg" alt="Screen Shot 2022-06-22 at 20.08.37"></p>
<p><img src="https://p.ipic.vip/0mau7j.jpg" alt="Screen Shot 2022-06-22 at 20.09.24"></p>
<p><img src="https://p.ipic.vip/vjjx2x.jpg" alt="Screen Shot 2022-06-22 at 20.12.09"></p>
<p><img src="https://p.ipic.vip/ms1783.jpg" alt="Screen Shot 2022-06-22 at 20.15.55"></p>
<p><img src="https://p.ipic.vip/ut9ly4.jpg" alt="Screen Shot 2022-06-22 at 20.17.04"></p>
<p><img src="https://p.ipic.vip/bvh0z9.jpg" alt="Screen Shot 2022-06-22 at 20.18.36"></p>
<p><img src="https://p.ipic.vip/3i5l41.jpg" alt="Screen Shot 2022-06-22 at 20.19.39"></p>
<p><img src="https://p.ipic.vip/osigrj.jpg" alt="Screen Shot 2022-06-22 at 20.20.47"></p>
<p><img src="https://p.ipic.vip/kyug1x.jpg" alt="Screen Shot 2022-06-22 at 20.21.33"></p>
<p><img src="https://p.ipic.vip/hsby8n.jpg" alt="Screen Shot 2022-06-22 at 20.22.03"></p>
<p><img src="https://p.ipic.vip/tbfkc3.jpg" alt="Screen Shot 2022-06-22 at 20.23.52"></p>
<p><img src="https://p.ipic.vip/dzswj6.jpg" alt="Screen Shot 2022-06-22 at 20.24.31"></p>
<p><img src="https://p.ipic.vip/owh065.jpg" alt="Screen Shot 2022-06-22 at 20.25.47"></p>
<p><img src="https://p.ipic.vip/injvwo.jpg" alt="Screen Shot 2022-06-22 at 20.26.24"></p>
<p><img src="https://p.ipic.vip/93s157.jpg" alt="Screen Shot 2022-06-22 at 20.27.52"></p>
<p><img src="https://p.ipic.vip/cgmp3j.jpg" alt="Screen Shot 2022-06-22 at 20.28.26"></p>
<p><img src="https://p.ipic.vip/97cn5s.jpg" alt="Screen Shot 2022-06-22 at 20.28.34"></p>
<p><img src="https://p.ipic.vip/k24j4d.jpg" alt="Screen Shot 2022-06-22 at 20.30.42"></p>
<h2 id="南海所高性能计算集群使用简介和ROMS模式安装运行-周巍-中科院南海所"><a href="#南海所高性能计算集群使用简介和ROMS模式安装运行-周巍-中科院南海所" class="headerlink" title="南海所高性能计算集群使用简介和ROMS模式安装运行 周巍  中科院南海所"></a>南海所高性能计算集群使用简介和ROMS模式安装运行 周巍  中科院南海所</h2><p><img src="https://p.ipic.vip/pf46zt.jpg" alt="Screen Shot 2022-06-22 at 20.44.38"></p>
<p><img src="https://p.ipic.vip/v1qpiu.jpg" alt="Screen Shot 2022-06-22 at 20.46.30"></p>
<p><img src="https://p.ipic.vip/m44jcm.jpg" alt="Screen Shot 2022-06-22 at 20.50.31"></p>
<p><img src="https://p.ipic.vip/d4ogkp.jpg" alt="Screen Shot 2022-06-22 at 20.52.34"></p>
<p><img src="https://p.ipic.vip/4l3t87.jpg" alt="Screen Shot 2022-06-22 at 20.54.14"></p>
<p><img src="https://p.ipic.vip/4imvvw.jpg" alt="Screen Shot 2022-06-22 at 20.55.06"></p>
<p><img src="https://p.ipic.vip/khan9e.jpg" alt="Screen Shot 2022-06-22 at 20.55.37"></p>
<p><img src="https://p.ipic.vip/umaob0.jpg" alt="Screen Shot 2022-06-22 at 20.57.02"></p>
<p><img src="https://p.ipic.vip/wnsk45.jpg" alt="Screen Shot 2022-06-22 at 20.59.11"></p>
<p><img src="https://p.ipic.vip/djtpds.jpg" alt="Screen Shot 2022-06-22 at 20.59.58"></p>
<p><img src="https://p.ipic.vip/dapaoi.jpg" alt="Screen Shot 2022-06-22 at 21.02.52"></p>
<p><img src="https://p.ipic.vip/912v2y.jpg" alt="Screen Shot 2022-06-22 at 21.03.47"></p>
<p><img src="https://p.ipic.vip/7df3l1.jpg" alt="Screen Shot 2022-06-22 at 21.04.05"></p>
<p>![Screen Shot 2022-06-22 at 21.04.34](&#x2F;Users&#x2F;ruyanc&#x2F;Desktop&#x2F;Screen Shot 2022-06-22 at 21.04.34.png)</p>
<p>![Screen Shot 2022-06-22 at 21.04.42](&#x2F;Users&#x2F;ruyanc&#x2F;Desktop&#x2F;Screen Shot 2022-06-22 at 21.04.42.png)</p>
<p><img src="https://p.ipic.vip/nqk3uv.jpg" alt="Screen Shot 2022-06-22 at 21.05.09"></p>
<p><img src="https://p.ipic.vip/ioumq8.jpg" alt="Screen Shot 2022-06-22 at 21.06.25"></p>
<p><img src="https://p.ipic.vip/78i29d.jpg" alt="Screen Shot 2022-06-22 at 21.07.22"></p>
<p><img src="https://p.ipic.vip/159egf.jpg" alt="Screen Shot 2022-06-22 at 21.08.11"></p>
<p><img src="https://p.ipic.vip/ryjn53.jpg" alt="Screen Shot 2022-06-22 at 21.09.07"></p>
<p><img src="https://p.ipic.vip/q9atsg.jpg" alt="Screen Shot 2022-06-22 at 21.09.36"></p>
<p><img src="https://p.ipic.vip/1luaac.jpg" alt="Screen Shot 2022-06-22 at 21.09.53"></p>
<p><img src="https://p.ipic.vip/uau2zn.jpg" alt="Screen Shot 2022-06-22 at 21.09.59"></p>
<p>ppn&#x3D;28</p>
<p>nodes&#x3D;15&#x2F;20…95 max</p>
<p><img src="https://p.ipic.vip/te90yb.jpg" alt="Screen Shot 2022-06-22 at 21.14.02"></p>
<p><img src="https://p.ipic.vip/5x1j7s.jpg" alt="Screen Shot 2022-06-22 at 21.16.09"></p>
<p><img src="https://p.ipic.vip/phvpz2.jpg" alt="Screen Shot 2022-06-22 at 21.16.27"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>黄瑞新</title>
    <url>/2022/06/24/Seminar/20220624-%E9%BB%84%E7%91%9E%E6%96%B0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Thermohaline-circulation-sea-water-thermodynamics-and-climate-changes-黄瑞新-伍兹霍尔海洋研究所"><a href="#Thermohaline-circulation-sea-water-thermodynamics-and-climate-changes-黄瑞新-伍兹霍尔海洋研究所" class="headerlink" title="Thermohaline circulation, sea water thermodynamics and climate changes 黄瑞新  伍兹霍尔海洋研究所"></a>Thermohaline circulation, sea water thermodynamics and climate changes 黄瑞新  伍兹霍尔海洋研究所</h2><p><img src="https://p.ipic.vip/ikr1vd.jpg" alt="Screen Shot 2022-06-24 at 20.06.35"></p>
<p><img src="https://p.ipic.vip/oqgihz.jpg" alt="Screen Shot 2022-06-24 at 20.07.19"></p>
<p><img src="https://p.ipic.vip/jgpmq9.jpg" alt="Screen Shot 2022-06-24 at 20.08.02"></p>
<p><img src="https://p.ipic.vip/hc7n0i.jpg" alt="Screen Shot 2022-06-24 at 20.10.13"></p>
<p><img src="https://p.ipic.vip/4ead2o.jpg" alt="Screen Shot 2022-06-24 at 20.11.04"></p>
<p><img src="https://p.ipic.vip/pp4873.jpg" alt="Screen Shot 2022-06-24 at 20.11.32"></p>
<p><img src="https://p.ipic.vip/a5jgft.jpg" alt="Screen Shot 2022-06-24 at 20.12.23"></p>
<p><img src="https://p.ipic.vip/q04ipz.jpg" alt="Screen Shot 2022-06-24 at 20.14.10"></p>
<p><img src="https://p.ipic.vip/knt6hc.jpg" alt="Screen Shot 2022-06-24 at 20.15.39"></p>
<p><img src="https://p.ipic.vip/6gocbi.jpg" alt="Screen Shot 2022-06-24 at 20.16.19"></p>
<p><img src="https://p.ipic.vip/hxol7e.jpg" alt="Screen Shot 2022-06-24 at 20.16.59"></p>
<p><img src="https://p.ipic.vip/8nqx8g.jpg" alt="Screen Shot 2022-06-24 at 20.17.55"></p>
<p><img src="https://p.ipic.vip/wvgkre.jpg" alt="Screen Shot 2022-06-24 at 20.18.56"></p>
<p><img src="https://p.ipic.vip/alob3r.jpg" alt="Screen Shot 2022-06-24 at 20.19.15"></p>
<p><img src="https://p.ipic.vip/brjcdi.jpg" alt="Screen Shot 2022-06-24 at 20.20.11"></p>
<p><img src="https://p.ipic.vip/9xxt2r.jpg" alt="Screen Shot 2022-06-24 at 20.20.29"></p>
<p><img src="https://p.ipic.vip/k3govo.jpg" alt="Screen Shot 2022-06-24 at 20.22.08"></p>
<p><img src="https://p.ipic.vip/ulyzh3.jpg" alt="Screen Shot 2022-06-24 at 20.22.52"></p>
<p><img src="https://p.ipic.vip/2smxnk.jpg" alt="Screen Shot 2022-06-24 at 20.23.23"></p>
<p><img src="https://p.ipic.vip/1ozaga.jpg" alt="Screen Shot 2022-06-24 at 20.25.13"></p>
<p><img src="https://p.ipic.vip/jvgu4f.jpg" alt="Screen Shot 2022-06-24 at 20.27.24"></p>
<p><img src="https://p.ipic.vip/l13zzi.jpg" alt="Screen Shot 2022-06-24 at 20.29.24"></p>
<p><img src="https://p.ipic.vip/jj0wtg.jpg" alt="Screen Shot 2022-06-24 at 20.30.58"></p>
<p><img src="https://p.ipic.vip/g3jyhs.jpg" alt="Screen Shot 2022-06-24 at 20.31.57"></p>
<p><img src="https://p.ipic.vip/an42ap.jpg" alt="Screen Shot 2022-06-24 at 20.32.30"></p>
<p><img src="https://p.ipic.vip/gvzpi0.jpg" alt="Screen Shot 2022-06-24 at 20.34.07"></p>
<p><img src="https://p.ipic.vip/4pfjc1.jpg" alt="Screen Shot 2022-06-24 at 20.34.55"></p>
<p><img src="https://p.ipic.vip/dn0div.jpg" alt="Screen Shot 2022-06-24 at 20.36.27"></p>
<p><img src="https://p.ipic.vip/lbqy0w.jpg" alt="Screen Shot 2022-06-25 at 19.17.01"></p>
<p><img src="https://p.ipic.vip/t9tqda.jpg" alt="Screen Shot 2022-06-25 at 19.16.28"></p>
<p><img src="https://p.ipic.vip/d8l9jo.jpg" alt="Screen Shot 2022-06-25 at 19.16.28"></p>
<p><img src="https://p.ipic.vip/ceuldo.jpg" alt="Screen Shot 2022-06-25 at 19.12.47"></p>
<p><img src="https://p.ipic.vip/i67u3n.jpg" alt="Screen Shot 2022-06-25 at 19.13.01"></p>
<p><img src="https://p.ipic.vip/ke8ap3.jpg" alt="Screen Shot 2022-06-25 at 19.13.13"></p>
<p><img src="https://p.ipic.vip/s96v7l.jpg" alt="Screen Shot 2022-06-25 at 19.13.24"></p>
<p><img src="https://p.ipic.vip/t8lzds.jpg" alt="Screen Shot 2022-06-25 at 19.13.37"></p>
<hr>
<p><img src="https://p.ipic.vip/z247rc.jpg" alt="Screen Shot 2022-06-24 at 20.01.44"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>高嘉祥</title>
    <url>/2022/06/23/Seminar/20220623-%E9%AB%98%E5%98%89%E7%A5%A5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="The-simulation-and-projection-of-bomb-cyclones-in-HighResMIP-PRIMAVERA-models-高嘉祥-自然资源部第三海洋研究所"><a href="#The-simulation-and-projection-of-bomb-cyclones-in-HighResMIP-PRIMAVERA-models-高嘉祥-自然资源部第三海洋研究所" class="headerlink" title="The simulation and projection of bomb cyclones in HighResMIP-PRIMAVERA models 高嘉祥 自然资源部第三海洋研究所"></a>The simulation and projection of bomb cyclones in HighResMIP-PRIMAVERA models 高嘉祥 自然资源部第三海洋研究所</h2><h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p><img src="https://p.ipic.vip/32c9di.jpg" alt="Screen Shot 2022-06-23 at 09.33.08"></p>
<p><img src="https://p.ipic.vip/vg9hb4.jpg" alt="Screen Shot 2022-06-23 at 09.33.44"></p>
<p><img src="https://p.ipic.vip/7s6e9x.jpg" alt="Screen Shot 2022-06-23 at 09.34.35"></p>
<p><img src="https://p.ipic.vip/5ahrxm.jpg" alt="Screen Shot 2022-06-23 at 09.36.00"></p>
<p><img src="https://p.ipic.vip/vc21vi.jpg" alt="Screen Shot 2022-06-23 at 09.38.21"></p>
<p><img src="https://p.ipic.vip/g4bhqc.jpg" alt="Screen Shot 2022-06-23 at 09.38.33"></p>
<p><img src="https://p.ipic.vip/t1dpbf.jpg" alt="Screen Shot 2022-06-23 at 09.40.47"></p>
<h3 id="Results"><a href="#Results" class="headerlink" title="Results"></a>Results</h3><p><img src="https://p.ipic.vip/paokv7.jpg" alt="Screen Shot 2022-06-23 at 09.41.21"></p>
<p><img src="https://p.ipic.vip/409qst.jpg" alt="Screen Shot 2022-06-23 at 09.42.41"></p>
<p><img src="https://p.ipic.vip/vunepf.jpg" alt="Screen Shot 2022-06-23 at 09.44.53"></p>
<p><img src="https://p.ipic.vip/24qkv2.jpg" alt="Screen Shot 2022-06-23 at 09.46.17"></p>
<p><img src="https://p.ipic.vip/lr8ros.jpg" alt="Screen Shot 2022-06-23 at 09.47.17"></p>
<p><img src="https://p.ipic.vip/r9be8e.jpg" alt="Screen Shot 2022-06-23 at 09.47.52"></p>
<p><img src="https://p.ipic.vip/hafunh.jpg" alt="Screen Shot 2022-06-23 at 09.50.34"></p>
<p><img src="https://p.ipic.vip/8zgzy2.jpg" alt="Screen Shot 2022-06-23 at 09.51.19"></p>
<p><img src="https://p.ipic.vip/kz2nwh.jpg" alt="Screen Shot 2022-06-23 at 09.52.12"></p>
<p><img src="https://p.ipic.vip/m04n2f.jpg" alt="Screen Shot 2022-06-23 at 09.57.01"></p>
<hr>
<ul>
<li><p>报告人简介</p>
<p>高嘉祥，硕士毕业于中科院海洋研究所，后于日本北海道大学获博士学位，博导为Minobe Shoshiro教授。研究方向主要涉及：高分辨率全球气候模式，气候变化，极端事件模拟和中小尺度海气相互作用等。研究成果发表于Environmental Research Letters, Journal of Oceanology and Limnology等SCI期刊。</p>
</li>
<li><p>报告摘要</p>
<p>爆发性气旋是一类发展极为迅速的温带气旋，常常伴随着强风、暴雨（雪）和风暴潮等灾害性天气现象。准确认识气候变化对爆发性气旋活动的影响，有助于我们更好地评估区域气候风险。但是，以CMIP5模式为代表的传统全球气候模式大多严重低估了爆发性气旋的产生频率，不利于相关研究开展。这一模拟误差可能与模式水平分辨率较低有关。在CMIP6中，进行了高分辨率模式比较计划HighResMIP，首次提供了一个高分辨率（~25km）全球气候模式集合，以及同一模式的低分辨率模拟结果，旨在系统性地了解水平分辨率对气候模拟结果的影响。本研究采用最早完成的一部分HighResMIP模拟结果，分析了其中爆发性气旋的历史模拟结果以及在SSP5-8.5情境下的未来变化预估。研究结果显示，水平分辨率对模拟中爆发性气旋的产生频率有着显著的影响。采用高分辨率模式能够基本消除传统模式中的频率模拟误差。同时，高分辨率下，模拟中爆发性气旋的最大风速显著增加，发现了更多的极端强风事件。在SSP5-8.5情境下，模拟显示爆发性气旋的活动在北太平洋和南半球将向极地方向偏移，在西北大西洋的产生频率显著降低。未发现这些预估结果受到水平分辨率影响。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>海洋热浪研讨会</title>
    <url>/2022/06/30/Seminar/20220630-%E6%B5%B7%E6%B4%8B%E7%83%AD%E6%B5%AA%E7%A0%94%E8%AE%A8%E4%BC%9A/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Marine-Heat-Wave"><a href="#Marine-Heat-Wave" class="headerlink" title="Marine Heat Wave"></a>Marine Heat Wave</h2><h3 id="Ming-Feng"><a href="#Ming-Feng" class="headerlink" title="Ming Feng"></a>Ming Feng</h3><p><img src="https://p.ipic.vip/1gwxaf.jpg" alt="WechatIMG880"></p>
<p><img src="https://p.ipic.vip/dbq8mt.jpg" alt="Screen Shot 2022-06-30 at 10.35.51"></p>
<p><img src="https://p.ipic.vip/0oh35v.jpg" alt="Screen Shot 2022-06-30 at 10.37.45"></p>
<p><img src="https://p.ipic.vip/a3liep.jpg" alt="Screen Shot 2022-06-30 at 10.39.14"></p>
<p><img src="https://p.ipic.vip/0vsnxt.jpg" alt="Screen Shot 2022-06-30 at 10.40.13"></p>
<p><img src="https://p.ipic.vip/l9wxyp.jpg" alt="Screen Shot 2022-06-30 at 10.43.10"></p>
<p><img src="https://p.ipic.vip/gw978o.jpg" alt="Screen Shot 2022-06-30 at 10.44.12"></p>
<p><img src="https://p.ipic.vip/tuqwcn.jpg" alt="Screen Shot 2022-06-30 at 10.48.48"></p>
<h3 id="Kang-Xu"><a href="#Kang-Xu" class="headerlink" title="Kang Xu"></a>Kang Xu</h3><p><img src="https://p.ipic.vip/bq33e5.jpg" alt="Screen Shot 2022-06-30 at 11.04.46"></p>
<p><img src="https://p.ipic.vip/qpvqx3.jpg" alt="Screen Shot 2022-06-30 at 11.05.40"></p>
<p><img src="https://p.ipic.vip/gi9zj3.jpg" alt="Screen Shot 2022-06-30 at 11.05.57"></p>
<p><img src="https://p.ipic.vip/tenthw.jpg" alt="Screen Shot 2022-06-30 at 11.06.18"></p>
<p><img src="https://p.ipic.vip/zzgqo1.jpg" alt="Screen Shot 2022-06-30 at 11.07.19"></p>
<p><img src="https://p.ipic.vip/hk6rb8.jpg" alt="Screen Shot 2022-06-30 at 11.07.42"></p>
<p><img src="https://p.ipic.vip/rjb04q.jpg" alt="Screen Shot 2022-06-30 at 11.09.01"></p>
<p><img src="https://p.ipic.vip/bivt1c.jpg" alt="Screen Shot 2022-06-30 at 11.09.39"></p>
<p><img src="https://p.ipic.vip/mxh23c.jpg" alt="Screen Shot 2022-06-30 at 11.09.47"></p>
<p><img src="https://p.ipic.vip/9aq94l.jpg" alt="Screen Shot 2022-06-30 at 11.10.32"></p>
<p><img src="https://p.ipic.vip/mrtnyi.jpg" alt="Screen Shot 2022-06-30 at 11.10.59"></p>
<p><img src="https://p.ipic.vip/o7pvvh.jpg" alt="Screen Shot 2022-06-30 at 11.12.40"></p>
<p><img src="https://p.ipic.vip/9m6p8w.jpg" alt="Screen Shot 2022-06-30 at 11.14.00"></p>
<p><img src="https://p.ipic.vip/cejkma.jpg" alt="Screen Shot 2022-06-30 at 11.15.34"></p>
<p><img src="https://p.ipic.vip/obdmea.jpg" alt="Screen Shot 2022-06-30 at 11.16.12"></p>
<p><img src="https://p.ipic.vip/7cp7zp.jpg" alt="Screen Shot 2022-06-30 at 11.16.43"></p>
<h3 id="Yan-Du"><a href="#Yan-Du" class="headerlink" title="Yan Du"></a>Yan Du</h3><p><img src="https://p.ipic.vip/2cuai7.jpg" alt="Screen Shot 2022-06-30 at 11.28.19"></p>
<p><img src="https://p.ipic.vip/228c55.jpg" alt="Screen Shot 2022-06-30 at 11.28.59"></p>
<p><img src="https://p.ipic.vip/2qq7kp.jpg" alt="Screen Shot 2022-06-30 at 11.29.36"></p>
<p><img src="https://p.ipic.vip/a8ph2v.jpg" alt="Screen Shot 2022-06-30 at 11.30.15"></p>
<p><img src="https://p.ipic.vip/udl78y.jpg" alt="Screen Shot 2022-06-30 at 11.30.31"></p>
<p><img src="https://p.ipic.vip/hmx38u.jpg" alt="Screen Shot 2022-06-30 at 11.30.56"></p>
<p><img src="https://p.ipic.vip/z455vw.jpg" alt="Screen Shot 2022-06-30 at 11.31.19"></p>
<p><img src="https://p.ipic.vip/a6wypf.jpg" alt="Screen Shot 2022-06-30 at 11.31.42"></p>
<p><img src="https://p.ipic.vip/pgarek.jpg" alt="Screen Shot 2022-06-30 at 11.32.00"></p>
<p><img src="https://p.ipic.vip/k2wria.jpg" alt="Screen Shot 2022-06-30 at 11.32.56"></p>
<p><img src="https://p.ipic.vip/iqh8y8.jpg" alt="Screen Shot 2022-06-30 at 11.33.45"></p>
<p><img src="https://p.ipic.vip/jb5nqb.jpg" alt="Screen Shot 2022-06-30 at 11.34.32"></p>
<p><img src="https://p.ipic.vip/wcss84.jpg" alt="Screen Shot 2022-06-30 at 11.34.50"></p>
<p><img src="https://p.ipic.vip/3gegty.jpg" alt="Screen Shot 2022-06-30 at 11.35.55"></p>
<p><img src="https://p.ipic.vip/lovezv.jpg" alt="Screen Shot 2022-06-30 at 11.36.50"></p>
<p><img src="https://p.ipic.vip/d2h5hq.jpg" alt="Screen Shot 2022-06-30 at 11.38.13"></p>
<p><img src="https://p.ipic.vip/lgjvxe.jpg" alt="Screen Shot 2022-06-30 at 11.38.33"></p>
<p><img src="https://p.ipic.vip/gwwl3o.jpg" alt="Screen Shot 2022-06-30 at 11.38.57"></p>
<p><img src="https://p.ipic.vip/p9nk0y.jpg" alt="Screen Shot 2022-06-30 at 11.39.33"></p>
<p><img src="https://p.ipic.vip/2aacnj.jpg" alt="Screen Shot 2022-06-30 at 11.39.57"></p>
<p><img src="https://p.ipic.vip/sadivu.jpg" alt="Screen Shot 2022-06-30 at 11.41.09"></p>
<p><img src="https://p.ipic.vip/irs4g8.jpg" alt="Screen Shot 2022-06-30 at 11.41.42"></p>
<p><img src="https://p.ipic.vip/0l03se.jpg" alt="Screen Shot 2022-06-30 at 11.42.49"></p>
<p><img src="https://p.ipic.vip/m2gmhk.jpg" alt="Screen Shot 2022-06-30 at 11.43.58"></p>
<p><img src="https://p.ipic.vip/5mnjyi.jpg" alt="Screen Shot 2022-06-30 at 11.44.11"></p>
<p><img src="https://p.ipic.vip/cr6sx4.jpg" alt="Screen Shot 2022-06-30 at 11.44.40"></p>
<p><img src="https://p.ipic.vip/pyrzdg.jpg" alt="Screen Shot 2022-06-30 at 11.45.12"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>郑佳喻+何超</title>
    <url>/2022/06/30/Seminar/20220630-%E9%83%91%E4%BD%B3%E5%96%BB+%E4%BD%95%E8%B6%85/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Influences-of-three-oceans-on-record-breaking-rainfall-over-the-Yangtze-River-Vally-in-June-2022-郑佳喻-中科院南海所"><a href="#Influences-of-three-oceans-on-record-breaking-rainfall-over-the-Yangtze-River-Vally-in-June-2022-郑佳喻-中科院南海所" class="headerlink" title="Influences of three oceans on record-breaking rainfall over the Yangtze River Vally in June 2022 郑佳喻  中科院南海所"></a>Influences of three oceans on record-breaking rainfall over the Yangtze River Vally in June 2022 郑佳喻  中科院南海所</h2><p><img src="https://p.ipic.vip/p3obkj.jpg" alt="Screen Shot 2022-06-30 at 14.46.46"></p>
<p><img src="https://p.ipic.vip/zsycuo.jpg" alt="Screen Shot 2022-06-30 at 14.47.05"></p>
<p><img src="https://p.ipic.vip/az4b5a.jpg" alt="Screen Shot 2022-06-30 at 14.48.06"></p>
<p><img src="https://p.ipic.vip/xp4e0g.jpg" alt="Screen Shot 2022-06-30 at 14.48.43"></p>
<p><img src="https://p.ipic.vip/xe6wmo.jpg" alt="Screen Shot 2022-06-30 at 14.49.28"></p>
<p><img src="https://p.ipic.vip/mqtvme.jpg" alt="Screen Shot 2022-06-30 at 14.49.52"></p>
<p><img src="https://p.ipic.vip/6vrt4j.jpg" alt="Screen Shot 2022-06-30 at 14.50.50"></p>
<p><img src="https://p.ipic.vip/i3bw98.jpg" alt="Screen Shot 2022-06-30 at 14.51.19"></p>
<p><img src="https://p.ipic.vip/7omjmv.jpg" alt="Screen Shot 2022-06-30 at 14.52.32"></p>
<p><img src="https://p.ipic.vip/nbmzeu.jpg" alt="Screen Shot 2022-06-30 at 14.52.52"></p>
<p><img src="https://p.ipic.vip/9e8v1a.jpg" alt="Screen Shot 2022-06-30 at 14.55.13"></p>
<h2 id="东亚夏季风对COVID-19和全球变暖的响应机制-何超-暨南大学"><a href="#东亚夏季风对COVID-19和全球变暖的响应机制-何超-暨南大学" class="headerlink" title="东亚夏季风对COVID-19和全球变暖的响应机制 何超   暨南大学"></a>东亚夏季风对COVID-19和全球变暖的响应机制 何超   暨南大学</h2><p><img src="https://p.ipic.vip/6f9otc.jpg" alt="Screen Shot 2022-06-30 at 15.14.43"></p>
<p><img src="https://p.ipic.vip/rht5yh.jpg" alt="Screen Shot 2022-06-30 at 15.16.30"></p>
<p><img src="https://p.ipic.vip/c4vnc8.jpg" alt="Screen Shot 2022-06-30 at 15.17.11"></p>
<p><img src="https://p.ipic.vip/x3j1xt.jpg" alt="Screen Shot 2022-06-30 at 15.18.58"></p>
<p><img src="https://p.ipic.vip/haj1rx.jpg" alt="Screen Shot 2022-06-30 at 15.22.32"></p>
<p><img src="https://p.ipic.vip/87x8cg.jpg" alt="Screen Shot 2022-06-30 at 15.23.47"></p>
<p><img src="https://p.ipic.vip/l232o0.jpg" alt="Screen Shot 2022-06-30 at 15.25.29"></p>
<p><img src="https://p.ipic.vip/1qew7e.jpg" alt="Screen Shot 2022-06-30 at 15.27.26"></p>
<p><img src="https://p.ipic.vip/wmuqnb.jpg" alt="Screen Shot 2022-06-30 at 15.27.54"></p>
<p><img src="https://p.ipic.vip/2rekmd.jpg" alt="Screen Shot 2022-06-30 at 15.29.14"></p>
<p><strong>EASM对COVID-19的响应幅度达到了EASM自然年际年率幅度的1&#x2F;3左右</strong></p>
<p><img src="https://p.ipic.vip/vuk2hp.jpg" alt="Screen Shot 2022-06-30 at 15.30.59"></p>
<p><img src="https://p.ipic.vip/3ejty7.jpg" alt="Screen Shot 2022-06-30 at 15.33.32"></p>
<p><img src="https://p.ipic.vip/hoiqsb.jpg" alt="Screen Shot 2022-06-30 at 15.34.20"></p>
<p><img src="https://p.ipic.vip/06g0ro.jpg" alt="Screen Shot 2022-06-30 at 15.36.21"></p>
<p><img src="https://p.ipic.vip/yqhi6f.jpg" alt="Screen Shot 2022-06-30 at 15.36.49"></p>
<p><img src="https://p.ipic.vip/y5hjg3.jpg" alt="Screen Shot 2022-06-30 at 15.38.11"></p>
<p><img src="https://p.ipic.vip/s3hk6f.jpg" alt="Screen Shot 2022-06-30 at 15.39.16"></p>
<p><img src="https://p.ipic.vip/nea49c.jpg" alt="Screen Shot 2022-06-30 at 15.39.58"></p>
<p><img src="https://p.ipic.vip/r2woem.jpg" alt="Screen Shot 2022-06-30 at 15.41.59"></p>
<p><img src="https://p.ipic.vip/i1xg9a.jpg" alt="Screen Shot 2022-06-30 at 15.43.34"></p>
<p><img src="https://p.ipic.vip/2ekpbp.jpg" alt="Screen Shot 2022-06-30 at 15.43.58"></p>
<p><img src="https://p.ipic.vip/wbu9fx.jpg" alt="Screen Shot 2022-06-30 at 15.45.35"></p>
<p><img src="https://p.ipic.vip/x33y4v.jpg" alt="Screen Shot 2022-06-30 at 15.46.15"></p>
<p><img src="https://p.ipic.vip/8t8oag.jpg" alt="Screen Shot 2022-06-30 at 15.47.15"></p>
<p><img src="https://p.ipic.vip/i8d21y.jpg" alt="Screen Shot 2022-06-30 at 15.50.24"></p>
<p><img src="https://p.ipic.vip/af6oyz.jpg" alt="Screen Shot 2022-06-30 at 15.54.46"></p>
<p><img src="https://p.ipic.vip/huoe7y.jpg" alt="Screen Shot 2022-06-30 at 15.59.46"><img src="/" alt="Screen Shot 2022-06-30 at 15.55.04"></p>
<p>西太副高：快的正响应+慢的负响应</p>
<p>青藏高原：稳步发展的正响应</p>
<p><img src="https://p.ipic.vip/hslaga.jpg" alt="Screen Shot 2022-06-30 at 16.01.18"></p>
<p><img src="https://p.ipic.vip/mmix26.jpg" alt="Screen Shot 2022-06-30 at 16.03.05"></p>
<hr>
<p><img src="https://p.ipic.vip/zlyln2.jpg" alt="WechatIMG2774"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>周天军</title>
    <url>/2022/07/01/Seminar/20220701-%E5%91%A8%E5%A4%A9%E5%86%9B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="季风降水变化的检测归因和预测研究—以2020年和2021年为例-周天军-中科院大气所"><a href="#季风降水变化的检测归因和预测研究—以2020年和2021年为例-周天军-中科院大气所" class="headerlink" title="季风降水变化的检测归因和预测研究—以2020年和2021年为例   周天军   中科院大气所"></a>季风降水变化的检测归因和预测研究—以2020年和2021年为例   周天军   中科院大气所</h2><p><img src="https://p.ipic.vip/9dzyiq.jpg" alt="Screen Shot 2022-07-01 at 10.32.26"></p>
<h3 id="为什么要做归因检测"><a href="#为什么要做归因检测" class="headerlink" title="为什么要做归因检测"></a>为什么要做归因检测</h3><p><img src="https://p.ipic.vip/qvrc1m.jpg" alt="Screen Shot 2022-07-01 at 10.10.15"></p>
<p><img src="https://p.ipic.vip/rr89i2.jpg" alt="Screen Shot 2022-07-01 at 10.11.50"></p>
<p><img src="https://p.ipic.vip/61igjc.jpg" alt="Screen Shot 2022-07-01 at 10.15.04"></p>
<p><img src="https://p.ipic.vip/2kgu2w.jpg" alt="Screen Shot 2022-07-01 at 10.15.33"></p>
<h3 id="季风区降水变化的检测归因"><a href="#季风区降水变化的检测归因" class="headerlink" title="季风区降水变化的检测归因"></a>季风区降水变化的检测归因</h3><p><img src="https://p.ipic.vip/r7zaqx.jpg" alt="Screen Shot 2022-07-01 at 10.16.30"></p>
<p><img src="https://p.ipic.vip/xho1jm.jpg" alt="Screen Shot 2022-07-01 at 10.17.00"></p>
<p><img src="https://p.ipic.vip/xgljcl.jpg" alt="Screen Shot 2022-07-01 at 10.17.26"></p>
<p><img src="https://p.ipic.vip/p35of7.jpg" alt="Screen Shot 2022-07-01 at 10.18.33"></p>
<p><img src="https://p.ipic.vip/muicqn.jpg" alt="Screen Shot 2022-07-01 at 10.19.12"></p>
<p><img src="https://p.ipic.vip/zacuqo.jpg" alt="Screen Shot 2022-07-01 at 10.19.37"></p>
<p><img src="https://p.ipic.vip/ytla9n.jpg" alt="Screen Shot 2022-07-01 at 10.20.27"></p>
<p><img src="https://p.ipic.vip/qtiqll.jpg" alt="Screen Shot 2022-07-01 at 10.20.47"></p>
<p><img src="https://p.ipic.vip/t1lbj8.jpg" alt="Screen Shot 2022-07-01 at 10.21.21"></p>
<p><img src="https://p.ipic.vip/53emfo.jpg" alt="Screen Shot 2022-07-01 at 10.21.36"></p>
<p><img src="https://p.ipic.vip/warf6m.jpg" alt="Screen Shot 2022-07-01 at 10.22.27"></p>
<p><img src="https://p.ipic.vip/hrdnw3.jpg" alt="Screen Shot 2022-07-01 at 10.22.58"></p>
<p><img src="https://p.ipic.vip/yqjt5t.jpg" alt="Screen Shot 2022-07-01 at 10.23.30"></p>
<p><img src="https://p.ipic.vip/fayezj.jpg" alt="Screen Shot 2022-07-01 at 10.24.29"></p>
<p><img src="https://p.ipic.vip/4w1jmr.jpg" alt="Screen Shot 2022-07-01 at 10.24.57"></p>
<p><img src="https://p.ipic.vip/1d3g17.jpg" alt="Screen Shot 2022-07-01 at 10.25.27"></p>
<p><img src="https://p.ipic.vip/kqcjzd.jpg" alt="Screen Shot 2022-07-01 at 10.26.21"></p>
<h3 id="为什么要做预测预估"><a href="#为什么要做预测预估" class="headerlink" title="为什么要做预测预估"></a>为什么要做预测预估</h3><p><img src="https://p.ipic.vip/5qykz4.jpg" alt="Screen Shot 2022-07-01 at 10.27.23"></p>
<p><img src="https://p.ipic.vip/vq11d9.jpg" alt="Screen Shot 2022-07-01 at 10.28.29"></p>
<p><img src="https://p.ipic.vip/2jsv40.jpg" alt="Screen Shot 2022-07-01 at 10.28.59"></p>
<p><img src="https://p.ipic.vip/xh5ls8.jpg" alt="Screen Shot 2022-07-01 at 10.29.18"></p>
<p><img src="https://p.ipic.vip/3ek6sp.jpg" alt="Screen Shot 2022-07-01 at 10.29.41"></p>
<p><img src="https://p.ipic.vip/x8r9ti.jpg" alt="Screen Shot 2022-07-01 at 10.29.58"></p>
<p><img src="https://p.ipic.vip/pojw6u.jpg" alt="Screen Shot 2022-07-01 at 10.30.49"></p>
<p><img src="https://p.ipic.vip/gb0oyb.jpg" alt="Screen Shot 2022-07-01 at 10.31.31"></p>
<h3 id="近期年代际预测"><a href="#近期年代际预测" class="headerlink" title="近期年代际预测"></a>近期年代际预测</h3><p><img src="https://p.ipic.vip/zuwq9w.jpg" alt="Screen Shot 2022-07-01 at 10.32.57"></p>
<h3 id="近期气候预估"><a href="#近期气候预估" class="headerlink" title="近期气候预估"></a>近期气候预估</h3><p><img src="https://p.ipic.vip/mcyt5a.jpg" alt="Screen Shot 2022-07-01 at 10.32.57"></p>
<p><img src="https://p.ipic.vip/j4p87l.jpg" alt="Screen Shot 2022-07-01 at 10.34.33"></p>
<p><img src="https://p.ipic.vip/7pwjl4.jpg" alt="Screen Shot 2022-07-01 at 10.35.06"></p>
<p><img src="https://p.ipic.vip/0c9a7b.jpg" alt="Screen Shot 2022-07-01 at 10.35.52"></p>
<p><img src="https://p.ipic.vip/ovip2v.jpg" alt="Screen Shot 2022-07-01 at 10.36.42"></p>
<h3 id="中期气候预估"><a href="#中期气候预估" class="headerlink" title="中期气候预估"></a>中期气候预估</h3><p><img src="https://p.ipic.vip/potg5f.jpg" alt="Screen Shot 2022-07-01 at 10.38.50"></p>
<p><img src="https://p.ipic.vip/00zqae.jpg" alt="Screen Shot 2022-07-01 at 10.40.31"></p>
<p><img src="https://p.ipic.vip/l83jl5.jpg" alt="Screen Shot 2022-07-01 at 10.42.10"></p>
<p><img src="https://p.ipic.vip/wo1539.jpg" alt="Screen Shot 2022-07-01 at 10.43.43"></p>
<p><img src="https://p.ipic.vip/wtzc3b.jpg" alt="Screen Shot 2022-07-01 at 10.45.07"></p>
<h3 id="长期预估"><a href="#长期预估" class="headerlink" title="长期预估"></a>长期预估</h3><p><img src="https://p.ipic.vip/7yt9u9.jpg" alt="Screen Shot 2022-07-01 at 10.45.30"></p>
<p><img src="https://p.ipic.vip/0druwo.jpg" alt="Screen Shot 2022-07-01 at 10.45.57"></p>
<p><img src="https://p.ipic.vip/zeo1n2.jpg" alt="Screen Shot 2022-07-01 at 10.46.55"></p>
<p><img src="https://p.ipic.vip/6kxte5.jpg" alt="Screen Shot 2022-07-01 at 10.48.26"></p>
<p><img src="https://p.ipic.vip/luxtm7.jpg" alt="Screen Shot 2022-07-01 at 10.51.05"></p>
<p><img src="https://p.ipic.vip/ziaykj.jpg" alt="Screen Shot 2022-07-01 at 10.52.17"></p>
<p><img src="https://p.ipic.vip/j5vr6a.jpg" alt="Screen Shot 2022-07-01 at 10.53.49"></p>
<p><img src="https://p.ipic.vip/k4kgjq.jpg" alt="Screen Shot 2022-07-01 at 10.55.25"></p>
<p><img src="https://p.ipic.vip/1sg8tc.jpg" alt="Screen Shot 2022-07-01 at 10.56.42"></p>
<p><img src="https://p.ipic.vip/nj83po.jpg" alt="Screen Shot 2022-07-01 at 10.57.10"></p>
<p><img src="https://p.ipic.vip/4tsqoe.jpg" alt="Screen Shot 2022-07-01 at 10.59.13"></p>
<p><img src="https://p.ipic.vip/c6enex.jpg" alt="Screen Shot 2022-07-01 at 11.00.31"></p>
<p><img src="https://p.ipic.vip/q9nqd4.jpg" alt="Screen Shot 2022-07-01 at 11.01.19"></p>
<p><img src="https://p.ipic.vip/64zetj.jpg" alt="Screen Shot 2022-07-01 at 11.02.35"></p>
<p><img src="https://p.ipic.vip/xqybcw.jpg" alt="Screen Shot 2022-07-01 at 11.04.03"></p>
<p><img src="https://p.ipic.vip/t1aeel.jpg" alt="Screen Shot 2022-07-01 at 11.05.14"></p>
<p><img src="https://p.ipic.vip/p9ix6u.jpg" alt="Screen Shot 2022-07-01 at 11.06.10"></p>
<p><img src="https://p.ipic.vip/tasizl.jpg" alt="Screen Shot 2022-07-01 at 11.06.27"></p>
<p><img src="https://p.ipic.vip/gqwi2i.jpg" alt="Screen Shot 2022-07-01 at 11.09.55"></p>
<hr>
<p><img src="https://p.ipic.vip/moopkj.jpg" alt="WechatIMG5676"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>复旦大学第二届大气科学前沿研讨会</title>
    <url>/2022/07/04/Seminar/20220704-%E5%A4%8D%E6%97%A6%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%BA%8C%E5%B1%8A%E5%A4%A7%E6%B0%94%E7%A7%91%E5%AD%A6%E5%89%8D%E6%B2%BF%E7%A0%94%E8%AE%A8%E4%BC%9A/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="The-second-Fudan-International-Workshop-on-Atmospheric-Science-Frontier-FIWAS"><a href="#The-second-Fudan-International-Workshop-on-Atmospheric-Science-Frontier-FIWAS" class="headerlink" title="The second Fudan International Workshop on Atmospheric Science Frontier (FIWAS)"></a>The second Fudan International Workshop on Atmospheric Science Frontier (FIWAS)</h2><p><img src="https://p.ipic.vip/8tw0lx.jpg" alt="WechatIMG888"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>赵俊虎</title>
    <url>/2022/06/30/Seminar/20220630-%E8%B5%B5%E4%BF%8A%E8%99%8E/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="三大洋对我国汛期降水的影响及物理机制—以2020年和2021年为例-赵俊虎-国家气候中心"><a href="#三大洋对我国汛期降水的影响及物理机制—以2020年和2021年为例-赵俊虎-国家气候中心" class="headerlink" title="三大洋对我国汛期降水的影响及物理机制—以2020年和2021年为例   赵俊虎   国家气候中心"></a>三大洋对我国汛期降水的影响及物理机制—以2020年和2021年为例   赵俊虎   国家气候中心</h2><h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p><img src="https://p.ipic.vip/p045vt.jpg" alt="Screen Shot 2022-06-30 at 09.37.14"></p>
<p><img src="https://p.ipic.vip/957dbs.jpg" alt="Screen Shot 2022-06-30 at 09.38.02"></p>
<h3 id="2020年江淮流域超强梅雨的驱动因子分析"><a href="#2020年江淮流域超强梅雨的驱动因子分析" class="headerlink" title="2020年江淮流域超强梅雨的驱动因子分析"></a>2020年江淮流域超强梅雨的驱动因子分析</h3><p><img src="https://p.ipic.vip/7pj5hf.jpg" alt="Screen Shot 2022-06-30 at 09.39.51"></p>
<p><img src="https://p.ipic.vip/7bisb0.jpg" alt="Screen Shot 2022-06-30 at 09.40.33"></p>
<p><img src="https://p.ipic.vip/c7wehf.jpg" alt="Screen Shot 2022-06-30 at 09.41.52"></p>
<p><img src="https://p.ipic.vip/05ve6h.jpg" alt="Screen Shot 2022-06-30 at 09.42.50"></p>
<p><img src="https://p.ipic.vip/wjio3x.jpg" alt="Screen Shot 2022-06-30 at 09.44.04"></p>
<p><img src="https://p.ipic.vip/ktab0c.jpg" alt="Screen Shot 2022-06-30 at 09.45.18"></p>
<p><img src="https://p.ipic.vip/636aci.jpg" alt="Screen Shot 2022-06-30 at 09.48.27"></p>
<p><img src="https://p.ipic.vip/siamkq.jpg" alt="Screen Shot 2022-06-30 at 09.48.53"></p>
<p><img src="https://p.ipic.vip/64svzg.jpg" alt="Screen Shot 2022-06-30 at 09.49.51"></p>
<p><img src="https://p.ipic.vip/oebj82.jpg" alt="Screen Shot 2022-06-30 at 09.50.24"></p>
<p><img src="https://p.ipic.vip/dtyqbc.jpg" alt="Screen Shot 2022-06-30 at 09.50.44"></p>
<p><img src="https://p.ipic.vip/yy6oe0.jpg" alt="Screen Shot 2022-06-30 at 09.51.23"></p>
<p><img src="https://p.ipic.vip/nj3wld.jpg" alt="Screen Shot 2022-06-30 at 09.52.05"></p>
<p><img src="https://p.ipic.vip/o3docj.jpg" alt="Screen Shot 2022-06-30 at 09.53.11"></p>
<p><img src="https://p.ipic.vip/wwpv95.jpg" alt="Screen Shot 2022-06-30 at 09.53.26"></p>
<h3 id="2021年长江流域“倒黄梅”驱动因子分析"><a href="#2021年长江流域“倒黄梅”驱动因子分析" class="headerlink" title="2021年长江流域“倒黄梅”驱动因子分析"></a>2021年长江流域“倒黄梅”驱动因子分析</h3><p><img src="https://p.ipic.vip/h1vbr6.jpg" alt="Screen Shot 2022-06-30 at 09.54.19"></p>
<p><img src="https://p.ipic.vip/oi31r3.jpg" alt="Screen Shot 2022-06-30 at 09.54.49"></p>
<p><img src="https://p.ipic.vip/zkk058.jpg" alt="Screen Shot 2022-06-30 at 09.55.32"></p>
<p><img src="https://p.ipic.vip/05v2yo.jpg" alt="Screen Shot 2022-06-30 at 09.56.34"></p>
<p><img src="https://p.ipic.vip/87m0w8.jpg" alt="Screen Shot 2022-06-30 at 09.58.13"></p>
<p><img src="https://p.ipic.vip/ujdg0q.jpg" alt="Screen Shot 2022-06-30 at 09.59.40"></p>
<p><img src="https://p.ipic.vip/h6eufz.jpg" alt="Screen Shot 2022-06-30 at 10.00.49"></p>
<p><img src="https://p.ipic.vip/y34r8i.jpg" alt="Screen Shot 2022-06-30 at 10.01.35"></p>
<p><img src="https://p.ipic.vip/1iod2w.jpg" alt="Screen Shot 2022-06-30 at 10.03.45"></p>
<p><img src="https://p.ipic.vip/k7l8q3.jpg" alt="Screen Shot 2022-06-30 at 10.04.14"></p>
<h3 id="三大洋对东北盛夏降水年际变率的影响及机理"><a href="#三大洋对东北盛夏降水年际变率的影响及机理" class="headerlink" title="三大洋对东北盛夏降水年际变率的影响及机理"></a>三大洋对东北盛夏降水年际变率的影响及机理</h3><p><img src="https://p.ipic.vip/0fzdc8.jpg" alt="Screen Shot 2022-06-30 at 10.04.47"></p>
<p><img src="https://p.ipic.vip/04oy0f.jpg" alt="Screen Shot 2022-06-30 at 10.05.12"></p>
<p><img src="https://p.ipic.vip/rkyozo.jpg" alt="Screen Shot 2022-06-30 at 10.06.46"></p>
<p><img src="https://p.ipic.vip/zchkcy.jpg" alt="Screen Shot 2022-06-30 at 10.07.22"></p>
<p><img src="https://p.ipic.vip/2i9coc.jpg" alt="Screen Shot 2022-06-30 at 10.07.39"></p>
<p><img src="https://p.ipic.vip/rm4ubs.jpg" alt="Screen Shot 2022-06-30 at 10.08.07"></p>
<p><img src="https://p.ipic.vip/8a5s0o.jpg" alt="Screen Shot 2022-06-30 at 10.09.27"></p>
<p><img src="https://p.ipic.vip/0xyjzr.jpg" alt="Screen Shot 2022-06-30 at 10.10.32"></p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><img src="https://p.ipic.vip/cs434o.jpg" alt="Screen Shot 2022-06-30 at 10.11.14"></p>
<p><img src="https://p.ipic.vip/gexej1.jpg" alt="Screen Shot 2022-06-30 at 10.12.23"></p>
<p><img src="https://p.ipic.vip/rrpm1e.jpg" alt="Screen Shot 2022-06-30 at 10.15.10"></p>
<p><img src="https://p.ipic.vip/q5yp3r.jpg" alt="Screen Shot 2022-06-30 at 10.17.18"></p>
<p><img src="https://p.ipic.vip/zbig5o.jpg" alt="Screen Shot 2022-06-30 at 10.19.26"></p>
<hr>
<ul>
<li><p>报告人简介</p>
<p>赵俊虎，2009年中山大学本科毕业，2014年兰州大学博士毕业，获首届国家博士奖学金、兰州大学“三好研究生”、“优秀毕业研究生”荣誉称号；博导为封国林教授。研究方向为短期气候预测和极端事件机理等。承担了2019&#x2F;2020年全国年度气候趋势预测主班、2021年全国汛期气候趋势预测主班，获2021年中国气象局重大气象服务优秀个人通报表扬、国家气候中心先进个人和突出贡献嘉奖。主持了国家自然科学基金项目3项，骨干参加两项重大研发计划。发表学术论文70余篇，其中第一和通讯作者论文34篇，出版专著《中国汛期降水动力-统计预测研究》（第2作者）。研究成果获“教育部科学技术进步”二等奖和中国气象学会“气象科学技术进步成果奖”二等奖2项奖励。入选国家气象科技创新工程“次季节至季节气候预测和气候系统模式”攻关团队骨干成员。</p>
</li>
<li><p>报告摘要</p>
<p>汛期降水预测是我国气象部门一项重要的科研和业务工作。准确认识海温异常对汛期降水的影响，有助于我们更加准确地预测汛期降水。采用观测诊断和数值模拟相结合的手段，研究了三大洋对我国东部汛期降水的影响及物理机制：1）揭示了2020年夏季江淮流域超强梅雨年际异常的驱动因子及其物理机制；2）探讨了2021年汛期降水季节内变化的成因，并揭示了热带北大西洋暖海温和第二次拉尼娜发展等多因子对8月长江中下游倒黄梅的共同作用；3）研究了三大洋海温异常对东北盛夏降水年际变率的影响，建立了基于海温驱动的经验预测模型，大幅度地改进了东北夏季降水的预测技巧。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>潘宝祥</title>
    <url>/2022/07/11/Seminar/20220711-%E6%BD%98%E5%AE%9D%E7%A5%A5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Learning-a-Digital-Twin-of-the-Earth-Climate-System-via-Neural-Turing-Test-潘宝祥-美国劳伦斯利弗摩尔国家实验室研究员"><a href="#Learning-a-Digital-Twin-of-the-Earth-Climate-System-via-Neural-Turing-Test-潘宝祥-美国劳伦斯利弗摩尔国家实验室研究员" class="headerlink" title="Learning a Digital Twin of the Earth Climate System via Neural Turing Test 潘宝祥 美国劳伦斯利弗摩尔国家实验室研究员"></a>Learning a Digital Twin of the Earth Climate System via Neural Turing Test 潘宝祥 美国劳伦斯利弗摩尔国家实验室研究员</h2><p><img src="https://p.ipic.vip/2qi26u.jpg" alt="Screen Shot 2022-07-11 at 10.10.29"></p>
<p><img src="https://p.ipic.vip/nihr4r.jpg" alt="Screen Shot 2022-07-11 at 10.13.14"></p>
<p><img src="https://p.ipic.vip/shxm39.jpg" alt="Screen Shot 2022-07-11 at 10.20.09"></p>
<p><img src="https://p.ipic.vip/g5pzjk.jpg" alt="Screen Shot 2022-07-11 at 10.24.10"></p>
<p><img src="https://p.ipic.vip/y84xdi.jpg" alt="Screen Shot 2022-07-11 at 10.26.16"></p>
<p><img src="https://p.ipic.vip/86qnkn.jpg" alt="Screen Shot 2022-07-11 at 10.31.59"></p>
<p><img src="https://p.ipic.vip/x2nyws.jpg" alt="Screen Shot 2022-07-11 at 10.35.14"></p>
<p><img src="https://p.ipic.vip/xvolfx.jpg" alt="Screen Shot 2022-07-11 at 10.38.31"></p>
<p><img src="https://p.ipic.vip/6eawtz.jpg" alt="Screen Shot 2022-07-11 at 10.42.23"></p>
<p><img src="https://p.ipic.vip/yscpx9.jpg" alt="Screen Shot 2022-07-11 at 10.42.56"></p>
<p><img src="https://p.ipic.vip/hk0raf.jpg" alt="Screen Shot 2022-07-11 at 10.42.56"></p>
<p><img src="https://p.ipic.vip/cb28ya.jpg" alt="Screen Shot 2022-07-11 at 10.43.48"></p>
<p><img src="https://p.ipic.vip/3awvfs.jpg" alt="Screen Shot 2022-07-11 at 10.44.31"></p>
<p><img src="https://p.ipic.vip/25mph9.jpg" alt="Screen Shot 2022-07-11 at 10.45.22"></p>
<p>要通过气候图灵测试构建完美气候模式的充分必要条件：无法区分实际观测和模拟 ( Digital twin )</p>
<p><img src="https://p.ipic.vip/xrdvl5.jpg" alt="Screen Shot 2022-07-11 at 10.49.04"></p>
<p>利用约束对抗学习试验自动化调参 Climatic Turing test</p>
<p><img src="https://p.ipic.vip/lkvm2m.jpg" alt="Screen Shot 2022-07-11 at 10.51.14"></p>
<p>混沌动力系统：概率</p>
<p><img src="https://p.ipic.vip/ylnry3.jpg" alt="Screen Shot 2022-07-11 at 10.52.47"></p>
<h2 id="Deep-learning-in-science-and-technology"><a href="#Deep-learning-in-science-and-technology" class="headerlink" title="Deep learning in science and technology"></a>Deep learning in science and technology</h2><p><img src="https://p.ipic.vip/496wkn.jpg" alt="Screen Shot 2022-07-11 at 15.55.38"></p>
<p><img src="https://p.ipic.vip/uq5ybp.jpg" alt="Screen Shot 2022-07-11 at 14.43.36"></p>
<p><img src="https://p.ipic.vip/55hpj2.jpg" alt="Screen Shot 2022-07-11 at 14.49.20"></p>
<p><img src="https://p.ipic.vip/hf45su.jpg" alt="Screen Shot 2022-07-11 at 14.55.27"></p>
<p><img src="https://p.ipic.vip/pdz57i.jpg" alt="Screen Shot 2022-07-11 at 15.02.33"></p>
<p>二维信息得到三维信息：概率分布</p>
<p><img src="https://p.ipic.vip/lcqo1u.jpg" alt="Screen Shot 2022-07-11 at 15.08.46"></p>
<p><img src="https://p.ipic.vip/h1q4gg.jpg" alt="Screen Shot 2022-07-11 at 15.13.24"></p>
<p><img src="https://p.ipic.vip/j5vp5f.jpg" alt="Screen Shot 2022-07-11 at 15.15.13"></p>
<p>Exploration: 当数据超越模式时，说明有效信息尚未完全提取</p>
<p><img src="https://p.ipic.vip/4a2yxb.jpg" alt="Screen Shot 2022-07-11 at 15.18.15"></p>
<p>新算法的优势，如何设计模型，更好地进行误差分析</p>
<p><img src="https://p.ipic.vip/zccnbk.jpg" alt="Screen Shot 2022-07-11 at 15.18.15"></p>
<p><img src="https://p.ipic.vip/2v2k0l.jpg" alt="Screen Shot 2022-07-11 at 15.22.59"></p>
<p><img src="https://p.ipic.vip/z72xs5.jpg" alt="Screen Shot 2022-07-11 at 15.28.29"></p>
<p><img src="https://p.ipic.vip/1498x7.jpg" alt="Screen Shot 2022-07-11 at 15.32.33"></p>
<p><img src="https://p.ipic.vip/pefd1x.jpg" alt="Screen Shot 2022-07-11 at 15.34.21"></p>
<p>关注的不确定性来自哪里，如何设计loss function</p>
<p><img src="https://p.ipic.vip/b9p3hl.jpg" alt="Screen Shot 2022-07-11 at 15.37.50"></p>
<p>区分三种不确定度    You see what you care</p>
<p><img src="https://p.ipic.vip/covasa.jpg" alt="Screen Shot 2022-07-11 at 15.40.47"></p>
<p><img src="https://p.ipic.vip/6s81pq.jpg" alt="Screen Shot 2022-07-11 at 15.41.57"></p>
<p><img src="https://p.ipic.vip/sdpc9m.jpg" alt="Screen Shot 2022-07-11 at 15.42.18"></p>
<p>概率描述，X得到唯一的Y，Y反过来不能得到唯一的X</p>
<p><img src="https://p.ipic.vip/nhd4af.jpg" alt="Screen Shot 2022-07-11 at 15.44.49"></p>
<p><img src="https://p.ipic.vip/z7iyzk.jpg" alt="Screen Shot 2022-07-11 at 15.45.36"></p>
<p><img src="https://p.ipic.vip/ie1n4l.jpg" alt="Screen Shot 2022-07-11 at 15.47.55"></p>
<p><img src="https://p.ipic.vip/0pzf2v.jpg" alt="Screen Shot 2022-07-11 at 15.48.40"></p>
<p><img src="https://p.ipic.vip/xfx8og.jpg" alt="Screen Shot 2022-07-11 at 15.49.47"></p>
<p><img src="https://p.ipic.vip/ax8scf.jpg" alt="Screen Shot 2022-07-11 at 15.51.57"></p>
<p><img src="https://p.ipic.vip/hs4f94.jpg" alt="Screen Shot 2022-07-11 at 15.52.31"></p>
<p><img src="https://p.ipic.vip/4fjent.jpg" alt="Screen Shot 2022-07-11 at 15.52.53"></p>
<h2 id="Improving-Seasonal-Forecast-Using-Probabilistic-Deep-Learning"><a href="#Improving-Seasonal-Forecast-Using-Probabilistic-Deep-Learning" class="headerlink" title="Improving Seasonal Forecast Using Probabilistic Deep Learning"></a>Improving Seasonal Forecast Using Probabilistic Deep Learning</h2><p><img src="https://p.ipic.vip/220l9e.jpg" alt="Screen Shot 2022-07-11 at 16.11.19"></p>
<p><img src="https://p.ipic.vip/ybso6z.jpg" alt="Screen Shot 2022-07-11 at 16.11.57"></p>
<p><img src="https://p.ipic.vip/z6razb.jpg" alt="Screen Shot 2022-07-11 at 16.17.01"></p>
<p><img src="https://p.ipic.vip/r5v28g.jpg" alt="Screen Shot 2022-07-11 at 16.21.17"></p>
<p><img src="https://p.ipic.vip/cdfe02.jpg" alt="Screen Shot 2022-07-11 at 16.26.26"></p>
<p><img src="https://p.ipic.vip/m5te9v.jpg" alt="Screen Shot 2022-07-11 at 16.27.09"></p>
<p><img src="https://p.ipic.vip/8tvnq5.jpg" alt="Screen Shot 2022-07-11 at 16.29.30"></p>
<p><img src="https://p.ipic.vip/tes7y6.jpg" alt="Screen Shot 2022-07-11 at 16.31.28"></p>
<p><img src="https://p.ipic.vip/ckwdbg.jpg" alt="Screen Shot 2022-07-11 at 16.33.21"></p>
<p><img src="https://p.ipic.vip/2qgyxz.jpg" alt="Screen Shot 2022-07-11 at 16.35.44"></p>
<p>从模式中学应用到预报，结果超越模式：可能原因是1000个member的使用</p>
<p><img src="https://p.ipic.vip/qdrc4p.jpg" alt="Screen Shot 2022-07-11 at 16.36.58"></p>
<p>生成模型</p>
<p><img src="https://p.ipic.vip/4rfiqg.jpg" alt="Screen Shot 2022-07-11 at 16.37.56"></p>
<p>Functional Error</p>
<p><img src="https://p.ipic.vip/qblrum.jpg" alt="Screen Shot 2022-07-11 at 16.39.31"></p>
<p><img src="https://p.ipic.vip/cfcgj7.jpg" alt="Screen Shot 2022-07-11 at 16.40.33"></p>
<hr>
<ul>
<li><p>主讲人简介</p>
<p>潘宝祥，美国劳伦斯利弗摩尔国家实验室研究员，主要研究兴趣包括概率信息理论、结合机器学 习与动力模式的天气-气候尺度预报、动力系统可预报性。2012年本科毕业于武汉大学，2015年 在清华大学获得工学硕士学位，2019年于加州大学欧文分校(University of California, Irvine) 获得工学博士学位，师从Dr. Soroosh Sorooshian, Dr. Kuolin Hsu, Dr. Amir AghaKouchak。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>杨泽芸+耿雨</title>
    <url>/2022/07/14/Seminar/20220714-%E6%9D%A8%E6%B3%BD%E8%8A%B8+%E8%80%BF%E9%9B%A8%20copy/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="The-Optimal-Precursor-of-El-Nino-in-the-GFDL-CM2p1-Model-杨泽芸-国家海洋信息中心海洋环境信息保障技术重点实验室-助理研究员"><a href="#The-Optimal-Precursor-of-El-Nino-in-the-GFDL-CM2p1-Model-杨泽芸-国家海洋信息中心海洋环境信息保障技术重点实验室-助理研究员" class="headerlink" title="The Optimal Precursor of El Niño in the GFDL CM2p1 Model  杨泽芸  国家海洋信息中心海洋环境信息保障技术重点实验室 助理研究员"></a>The Optimal Precursor of El Niño in the GFDL CM2p1 Model  杨泽芸  国家海洋信息中心海洋环境信息保障技术重点实验室 助理研究员</h3><p><img src="https://p.ipic.vip/961qv8.jpg" alt="Screen Shot 2022-07-14 at 09.34.17"></p>
<p><img src="https://p.ipic.vip/ryoc26.jpg" alt="Screen Shot 2022-07-14 at 09.34.26"></p>
<p><img src="https://p.ipic.vip/bfy3nk.jpg" alt="Screen Shot 2022-07-14 at 09.35.10"></p>
<p><img src="https://p.ipic.vip/k90mky.jpg" alt="Screen Shot 2022-07-14 at 09.36.57"></p>
<p><img src="https://p.ipic.vip/nt2vik.jpg" alt="Screen Shot 2022-07-14 at 09.39.57"></p>
<p><img src="https://p.ipic.vip/42uw0b.jpg" alt="Screen Shot 2022-07-14 at 09.40.54"></p>
<p><img src="https://p.ipic.vip/liibdy.jpg" alt="Screen Shot 2022-07-14 at 09.42.51"></p>
<p><img src="https://p.ipic.vip/mfv0iy.jpg" alt="Screen Shot 2022-07-14 at 09.44.21"></p>
<p><img src="https://p.ipic.vip/9h7ldc.jpg" alt="Screen Shot 2022-07-14 at 09.45.08"></p>
<p><img src="https://p.ipic.vip/bxg6d1.jpg" alt="Screen Shot 2022-07-14 at 09.46.52"></p>
<p><img src="https://p.ipic.vip/14aerq.png" alt="Screen Shot 2022-07-14 at 09.47.44"></p>
<p><img src="https://p.ipic.vip/i0ez98.jpg" alt="Screen Shot 2022-07-14 at 09.48.29"></p>
<p><img src="https://p.ipic.vip/8jq9ac.jpg" alt="Screen Shot 2022-07-14 at 09.49.18"></p>
<h3 id="秋季东亚气候对黑潮延伸体区域海温异常的响应-耿雨，中国气象科学研究院-博士后"><a href="#秋季东亚气候对黑潮延伸体区域海温异常的响应-耿雨，中国气象科学研究院-博士后" class="headerlink" title="秋季东亚气候对黑潮延伸体区域海温异常的响应 耿雨，中国气象科学研究院 博士后"></a>秋季东亚气候对黑潮延伸体区域海温异常的响应 耿雨，中国气象科学研究院 博士后</h3><p><img src="https://p.ipic.vip/orl01g.jpg" alt="Screen Shot 2022-07-14 at 10.05.45"></p>
<p><img src="https://p.ipic.vip/sowqxd.jpg" alt="Screen Shot 2022-07-14 at 10.06.55"></p>
<p><img src="https://p.ipic.vip/1mqlo3.jpg" alt="Screen Shot 2022-07-14 at 10.07.52"></p>
<p><img src="https://p.ipic.vip/2yjak9.jpg" alt="Screen Shot 2022-07-14 at 10.08.51"></p>
<p><img src="https://p.ipic.vip/nbe54o.jpg" alt="Screen Shot 2022-07-14 at 10.09.27"></p>
<p><img src="https://p.ipic.vip/l22yt5.jpg" alt="Screen Shot 2022-07-14 at 10.12.00"></p>
<p><img src="https://p.ipic.vip/ci87ek.jpg" alt="Screen Shot 2022-07-14 at 10.13.01"></p>
<p><img src="https://p.ipic.vip/0h8ypn.jpg" alt="Screen Shot 2022-07-14 at 10.15.15"></p>
<p><img src="https://p.ipic.vip/644tjt.jpg" alt="Screen Shot 2022-07-14 at 10.16.07"></p>
<p><img src="https://p.ipic.vip/qhacfu.jpg" alt="Screen Shot 2022-07-14 at 10.17.44"></p>
<hr>
<ul>
<li><p>报告人简介</p>
<p>杨泽芸，本科毕业于厦门大学海洋与地球学院，博士毕业于中科院海洋研究所。研究方向主要为初始误差对两类厄尔尼诺事件可预报性的影响以及目标观测研究等。本次报告相关内容发表于Journal of Geophysical Research: Oceans。</p>
</li>
<li><p>报告摘要</p>
<p>By applying the principal component analysis-based particle swarm optimization algorithm, the conditional nonlinear optimal perturbation is firstly calculated in the Geophysical Fluid Dynamic Laboratory Climate Model version 2p1 (GFDL CM2p1) to identify the optimal precursor (OPR) of El Niño. Specifically, through optimizing the initial perturbation, the OPRs that have the largest nonlinear evolution (i.e., mature state of El Niño) for two reference states are obtained, which are then confirmed according to the validation test. The results indicated that both OPRs show positive sea surface temperature perturbation in the west (2°N–2°S, 135.5–165.5°E). For the subsurface component, they exhibit positive subsurface temperature perturbation (STP) in the whole mixed layer of the west and negative STP in the upper layer of the east (i.e., 0‐ to 85‐m depth, 2°N–2°S, 79.5–109.5°W). Further analyses of the evolution of the sea surface temperature perturbation, STP, and surface wind perturbation suggest that the development of the OPRs in the model is consistent with the recognized mechanism for El Niño-Southern Oscillation development, that is, through the Bjerkness positive feedback. The results indicate that the model can realistically capture the dominant processes for El Niño development, and the principal component analysis-based particle swarm optimization algorithm is a practical solution for calculating the conditional nonlinear optimal perturbation in a complicated numerical model such as the GFDL CM2p1. They both shed a light on guiding the realistic observing systems.</p>
</li>
<li><p>报告人简介</p>
<p>耿雨，博士毕业于中国科学院海洋研究所，目前于中国气象科学研究院从事博士后研究。研究方向主要为北太平洋西边界流的影响及其可预报性，相关成果发表于Journal of Climate, Journal of Geophysical Research: Oceans, Ocean Modelling 等国际SCI期刊。</p>
</li>
<li><p>报告摘要<br>黑潮延伸体区域是全球海气相互作用最为显著的区域之一，该区域内海温的变化通过改变海洋热量和水汽的释放，在中纬度天气和气候系统的调控中发挥重要作用。考虑到秋季气温和降水对东亚农作物生产的重要性，本报告基于再分析资料和数值模式分析了黑潮延伸体区域海温异常变化对秋季东亚气候影响的物理机制，揭示了热成风调整和瞬变涡活动在此过程中的重要性。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>裘波</title>
    <url>/2022/07/27/Seminar/20220727-%E8%A3%98%E6%B3%A2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Submesoscales-Dynamics-Impact-and-Observations-裘波-夏威夷大学"><a href="#Submesoscales-Dynamics-Impact-and-Observations-裘波-夏威夷大学" class="headerlink" title="Submesoscales: Dynamics, Impact, and Observations  裘波   夏威夷大学"></a>Submesoscales: Dynamics, Impact, and Observations  裘波   夏威夷大学</h2><p><img src="https://p.ipic.vip/xfde6v.jpg" alt="Screen Shot 2022-07-27 at 11.04.41"></p>
<p><img src="https://p.ipic.vip/val7w7.jpg" alt="Screen Shot 2022-07-27 at 11.10.01"></p>
<p><img src="https://p.ipic.vip/7qdvdh.jpg" alt="Screen Shot 2022-07-27 at 11.12.04"></p>
<p><img src="https://p.ipic.vip/wab5ym.jpg" alt="Screen Shot 2022-07-27 at 11.17.06"></p>
<p><img src="https://p.ipic.vip/xuw1uv.jpg" alt="Screen Shot 2022-07-27 at 11.18.43"></p>
<p><img src="https://p.ipic.vip/gvfq6n.jpg" alt="Screen Shot 2022-07-27 at 11.21.54"></p>
<hr>
<ul>
<li><p>报告人简介</p>
<p>裘波，夏威夷大学海洋系教授，国际知名物理海洋学家。在大洋环流动力学、中尺度涡与亚中尺度过程研究领域取得系列原创性成果。</p>
</li>
<li><p>报告摘要</p>
<p>介绍亚中尺度过程研究的最新进展，包括亚中尺度过程的基本特征、生成机制，与中尺度涡的相互作用、对物质的输运作用等，同时介绍在亚中尺度研究领域海洋学界所面临的机会和挑战。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>组会</title>
    <url>/2022/07/13/Seminar/20220713-%E7%BB%84%E4%BC%9A/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://p.ipic.vip/5b8876.jpg" alt="Screen Shot 2022-07-13 at 15.50.29"></p>
<p><img src="https://p.ipic.vip/yrr93j.jpg" alt="Screen Shot 2022-07-13 at 16.19.53"></p>
<p><img src="https://p.ipic.vip/p5qqay.jpg" alt="Screen Shot 2022-07-13 at 16.20.05"></p>
<p><img src="https://p.ipic.vip/neo7tj.jpg" alt="Screen Shot 2022-07-13 at 16.20.48"></p>
<p><img src="https://p.ipic.vip/2s7hzp.jpg" alt="Screen Shot 2022-07-13 at 16.21.23"></p>
<p><img src="https://p.ipic.vip/4fpxkd.jpg" alt="Screen Shot 2022-07-13 at 16.22.41"></p>
<p><img src="https://p.ipic.vip/rtap98.jpg" alt="Screen Shot 2022-07-13 at 16.24.46"></p>
<p><img src="https://p.ipic.vip/ti00oh.jpg" alt="Screen Shot 2022-07-13 at 16.25.52"></p>
<p><img src="https://p.ipic.vip/kbsmvq.jpg" alt="Screen Shot 2022-07-13 at 16.27.41"></p>
<p><img src="https://p.ipic.vip/xlfia1.jpg" alt="Screen Shot 2022-07-13 at 16.29.51"></p>
<p><img src="https://p.ipic.vip/md5hvl.jpg" alt="Screen Shot 2022-07-13 at 16.31.38"></p>
<p><img src="https://p.ipic.vip/byxu9g.jpg" alt="Screen Shot 2022-07-13 at 16.34.32"></p>
<p><img src="https://p.ipic.vip/fsagkf.jpg" alt="Screen Shot 2022-07-13 at 16.38.20"></p>
<p><img src="https://p.ipic.vip/8iypes.jpg" alt="Screen Shot 2022-07-13 at 16.39.20"></p>
<p><img src="https://p.ipic.vip/gv17da.jpg" alt="Screen Shot 2022-07-13 at 16.40.28"></p>
<p><img src="https://p.ipic.vip/v79tba.jpg" alt="Screen Shot 2022-07-13 at 16.50.09"></p>
<p><img src="https://p.ipic.vip/i9pshp.jpg" alt="Screen Shot 2022-07-13 at 16.51.17"></p>
<p><img src="https://p.ipic.vip/uhp7rh.jpg" alt="Screen Shot 2022-07-13 at 16.58.27"></p>
<p><img src="https://p.ipic.vip/rkibds.jpg" alt="Screen Shot 2022-07-13 at 16.59.29"></p>
<p><img src="https://p.ipic.vip/lrk4ev.jpg" alt="Screen Shot 2022-07-13 at 17.01.45"></p>
<p><img src="https://p.ipic.vip/pjewda.jpg" alt="Screen Shot 2022-07-13 at 17.03.49"></p>
<p><img src="https://p.ipic.vip/dl853n.jpg" alt="Screen Shot 2022-07-13 at 17.10.12"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>学习会</title>
    <url>/2022/07/01/Seminar/20220701-%E5%AD%A6%E4%B9%A0%E4%BC%9A/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Weather-and-Climate-extreme-events-in-a-chaning-climate"><a href="#Weather-and-Climate-extreme-events-in-a-chaning-climate" class="headerlink" title="Weather and Climate extreme events in a chaning climate"></a>Weather and Climate extreme events in a chaning climate</h2><h3 id="陈云帆"><a href="#陈云帆" class="headerlink" title="陈云帆"></a>陈云帆</h3><p><img src="https://p.ipic.vip/rowtba.jpg" alt="Screen Shot 2022-07-01 at 15.05.56"></p>
<p><img src="https://p.ipic.vip/k0ytab.jpg" alt="Screen Shot 2022-07-01 at 15.07.15"></p>
<p><img src="https://p.ipic.vip/nxd88k.jpg" alt="Screen Shot 2022-07-01 at 15.11.26"></p>
<p><img src="https://p.ipic.vip/u3er0a.jpg" alt="Screen Shot 2022-07-01 at 15.16.58"></p>
<p><img src="https://p.ipic.vip/7cfe0k.jpg" alt="Screen Shot 2022-07-01 at 15.18.53"></p>
<p><img src="https://p.ipic.vip/31445y.jpg" alt="Screen Shot 2022-07-01 at 15.19.38"></p>
<h3 id="张莹"><a href="#张莹" class="headerlink" title="张莹"></a>张莹</h3><p><img src="https://p.ipic.vip/77fney.jpg" alt="Screen Shot 2022-07-01 at 15.42.15"></p>
<p><img src="https://p.ipic.vip/q9pshg.jpg" alt="Screen Shot 2022-07-01 at 15.51.26"></p>
<p><img src="https://p.ipic.vip/daemqc.jpg" alt="Screen Shot 2022-07-01 at 15.54.29"></p>
<p><img src="https://p.ipic.vip/xjasjx.jpg" alt="Screen Shot 2022-07-01 at 16.17.05"></p>
<p><img src="https://p.ipic.vip/gkp3nq.jpg" alt="Screen Shot 2022-07-01 at 16.20.49"></p>
<p><img src="https://p.ipic.vip/lb7kqr.jpg" alt="Screen Shot 2022-07-01 at 16.25.02"></p>
<p><img src="https://p.ipic.vip/l2rqof.jpg" alt="Screen Shot 2022-07-01 at 16.25.55"></p>
<p><img src="https://p.ipic.vip/kvhuwm.jpg" alt="Screen Shot 2022-07-01 at 16.26.55"></p>
<p><img src="https://p.ipic.vip/g69eoc.jpg" alt="Screen Shot 2022-07-01 at 16.31.20"></p>
<p><img src="https://p.ipic.vip/v63igx.gif" alt="Screen Shot 2022-07-01 at 16.31.58"></p>
<p><img src="https://p.ipic.vip/t0ilh0.jpg" alt="Screen Shot 2022-07-01 at 16.34.03"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>学习会</title>
    <url>/2022/08/26/Seminar/20220826-%E5%AD%A6%E4%B9%A0%E4%BC%9A/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="王祥鹏"><a href="#王祥鹏" class="headerlink" title="王祥鹏"></a>王祥鹏</h2><p><img src="https://p.ipic.vip/0p3c1n.jpg" alt="Screen Shot 2022-08-26 at 15.06.22"></p>
<p><img src="https://p.ipic.vip/6bh36z.jpg" alt="Screen Shot 2022-08-26 at 15.11.11"></p>
<p><img src="https://p.ipic.vip/rzieup.jpg" alt="Screen Shot 2022-08-26 at 15.14.59"></p>
<p><img src="https://p.ipic.vip/ok6emb.jpg" alt="Screen Shot 2022-08-26 at 15.19.38"></p>
<p><img src="https://p.ipic.vip/v112g8.jpg" alt="Screen Shot 2022-08-26 at 15.24.17"></p>
<p><img src="https://p.ipic.vip/5fo37z.jpg" alt="Screen Shot 2022-08-26 at 15.29.45"></p>
<h2 id="谢培炜"><a href="#谢培炜" class="headerlink" title="谢培炜"></a>谢培炜<img src="https://p.ipic.vip/z6dw4x.jpg" alt="Screen Shot 2022-08-26 at 15.35.56"></h2><p><img src="https://p.ipic.vip/ofcpq8.jpg" alt="Screen Shot 2022-08-26 at 15.43.54"></p>
<p><img src="https://p.ipic.vip/qzcgno.jpg" alt="Screen Shot 2022-08-26 at 15.46.45"></p>
<p><img src="https://p.ipic.vip/ptequu.jpg" alt="Screen Shot 2022-08-26 at 15.47.38"></p>
<p><img src="https://p.ipic.vip/9aoie2.jpg" alt="Screen Shot 2022-08-26 at 15.48.40"></p>
<p><img src="https://p.ipic.vip/tbd1yv.jpg" alt="Screen Shot 2022-08-26 at 15.49.28"></p>
<p><img src="https://p.ipic.vip/6qzy5j.jpg" alt="Screen Shot 2022-08-26 at 15.50.55"></p>
<p><img src="https://p.ipic.vip/ldwuzc.jpg" alt="Screen Shot 2022-08-26 at 15.55.24"></p>
<p><img src="https://p.ipic.vip/cb0hfg.jpg" alt="Screen Shot 2022-08-26 at 15.58.55"></p>
<p><img src="https://p.ipic.vip/m5ezbn.jpg" alt="Screen Shot 2022-08-26 at 16.00.29"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>皇甫静亮</title>
    <url>/2022/08/25/Seminar/20220825-%E7%9A%87%E7%94%AB%E9%9D%99%E4%BA%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="天气尺度波动对南海夏季风建立的影响-皇甫静亮-中科院大气所"><a href="#天气尺度波动对南海夏季风建立的影响-皇甫静亮-中科院大气所" class="headerlink" title="天气尺度波动对南海夏季风建立的影响   皇甫静亮   中科院大气所"></a>天气尺度波动对南海夏季风建立的影响   皇甫静亮   中科院大气所</h2><p><img src="https://p.ipic.vip/r8aqud.jpg" alt="Screen Shot 2022-08-25 at 09.36.15"></p>
<p><img src="https://p.ipic.vip/qva47r.jpg" alt="Screen Shot 2022-08-25 at 09.38.18"></p>
<p><img src="https://p.ipic.vip/nu6nxj.jpg" alt="Screen Shot 2022-08-25 at 09.39.21"></p>
<p><img src="https://p.ipic.vip/ghseox.jpg" alt="Screen Shot 2022-08-25 at 09.40.19"></p>
<p><img src="https://p.ipic.vip/vofq07.jpg" alt="Screen Shot 2022-08-25 at 09.41.26"></p>
<p><img src="https://p.ipic.vip/stsx7e.jpg" alt="Screen Shot 2022-08-25 at 09.42.14"></p>
<p><img src="https://p.ipic.vip/j12f28.jpg" alt="Screen Shot 2022-08-25 at 09.42.38"></p>
<p><img src="https://p.ipic.vip/3vp81x.jpg" alt="Screen Shot 2022-08-25 at 09.43.08"></p>
<p><img src="https://p.ipic.vip/4i8t47.jpg" alt="Screen Shot 2022-08-25 at 09.44.08"></p>
<p><img src="https://p.ipic.vip/w9p3sn.jpg" alt="Screen Shot 2022-08-25 at 09.45.58"></p>
<p><img src="https://p.ipic.vip/gapndh.jpg" alt="Screen Shot 2022-08-25 at 09.46.22"></p>
<p><img src="https://p.ipic.vip/st76ic.jpg" alt="Screen Shot 2022-08-25 at 09.46.58"></p>
<p><img src="https://p.ipic.vip/57lk5h.jpg" alt="Screen Shot 2022-08-25 at 09.47.45"></p>
<p><img src="https://p.ipic.vip/xvkuwp.jpg" alt="Screen Shot 2022-08-25 at 09.49.02"></p>
<p><img src="https://p.ipic.vip/knplq8.jpg" alt="Screen Shot 2022-08-25 at 09.49.29"></p>
<p><img src="https://p.ipic.vip/bu0g6h.jpg" alt="Screen Shot 2022-08-25 at 09.49.45"></p>
<p><img src="https://p.ipic.vip/su31pr.jpg" alt="Screen Shot 2022-08-25 at 09.50.11"></p>
<p><img src="https://p.ipic.vip/ax9l00.jpg" alt="Screen Shot 2022-08-25 at 09.50.27"></p>
<hr>
<ul>
<li><p>报告人简介</p>
<p>皇甫静亮，中国科学院大气物理研究所副研究员。主要从事台风气候学和季风气候学相关研究，在JC、CD等发表论文近40篇，担任JC、CD、Frontiers、AR、JOC等国际期刊审稿专家。围绕台风气候学和季风气候学研究，近年来的研究方向包括：印度洋—太平洋协同作用、平流层—对流层相互作用、CMIP6数据对台风的模拟评估等。承担国家重点研发计划—全球变暖背景下热带关键区海气相互作用及其对东亚夏季风气候的影响研究（2016YFA0600603）、国家重点研发计划—平流层准两年振荡机理及对东亚气候年际变率的影响研究（2018YFC1506003）、中国科学院前沿科学重点研究计划项目等相关研究。</p>
</li>
<li><p>报告摘要</p>
<p>南海夏季风的建立是广义东亚夏季风的开端，副热带高压撤出南海，西北太平洋台风季同时进入盛期。与前人更多关注季节内振荡不同，我们的研究着眼于天气尺度波动对南海夏季风建立的影响，并把这种影响分为南海夏季风建立前的触发作用和南海夏季风建立之后的维持作用。相比于季节内振荡，天气尺度波动具有更强大的动能。单次的强天气尺度波动（06年台风Chanchu）和频繁的天气尺度波动产生的累积效应对于南海夏季风的建立过程都很重要。南海夏季风建立前后对天气尺度波的观测可以对季风建立时间的确定、季风间断事件的发生提供判定的科学依据。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>王春在</title>
    <url>/2022/08/23/Seminar/20220823-%E7%8E%8B%E6%98%A5%E5%9C%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="为什么近年来地球上热浪频发？-王春在-中科院南海所"><a href="#为什么近年来地球上热浪频发？-王春在-中科院南海所" class="headerlink" title="为什么近年来地球上热浪频发？  王春在  中科院南海所"></a>为什么近年来地球上热浪频发？  王春在  中科院南海所</h2><p><img src="https://p.ipic.vip/jk60co.jpg" alt="Screen Shot 2022-08-23 at 09.45.31"></p>
<p><img src="https://p.ipic.vip/1qugrd.jpg" alt="Screen Shot 2022-08-23 at 09.46.11"></p>
<h3 id="A-brief-review-of-previous-studies"><a href="#A-brief-review-of-previous-studies" class="headerlink" title="A brief review of previous studies"></a>A brief review of previous studies</h3><p><img src="https://p.ipic.vip/1nqk5d.jpg" alt="Screen Shot 2022-08-23 at 09.47.03"></p>
<p><img src="https://p.ipic.vip/521u89.jpg" alt="Screen Shot 2022-08-23 at 09.48.43"></p>
<p><img src="https://p.ipic.vip/u8i86j.jpg" alt="Screen Shot 2022-08-23 at 09.49.28"></p>
<p><img src="https://p.ipic.vip/d9ax4u.jpg" alt="Screen Shot 2022-08-23 at 09.50.13"></p>
<p><img src="https://p.ipic.vip/s8e2l5.jpg" alt="Screen Shot 2022-08-23 at 09.51.17"></p>
<p><img src="https://p.ipic.vip/c6sw3n.jpg" alt="Screen Shot 2022-08-23 at 09.52.57"></p>
<h3 id="Heat-dome-and-heatwave"><a href="#Heat-dome-and-heatwave" class="headerlink" title="Heat dome and heatwave"></a>Heat dome and heatwave</h3><p><img src="https://p.ipic.vip/ymj2xb.jpg" alt="Screen Shot 2022-08-23 at 09.54.24"></p>
<p><img src="https://p.ipic.vip/ahwxaz.jpg" alt="Screen Shot 2022-08-23 at 09.58.22"></p>
<p><img src="https://p.ipic.vip/g6mn2j.jpg" alt="Screen Shot 2022-08-23 at 09.58.40"></p>
<p><img src="https://p.ipic.vip/0dgo52.jpg" alt="Screen Shot 2022-08-23 at 10.00.31"></p>
<h3 id="Atmospheric-circulation-patterns-and-hot-summers"><a href="#Atmospheric-circulation-patterns-and-hot-summers" class="headerlink" title="Atmospheric circulation patterns and hot summers"></a>Atmospheric circulation patterns and hot summers</h3><p><img src="https://p.ipic.vip/4kolnz.jpg" alt="Screen Shot 2022-08-23 at 10.01.30"></p>
<p><img src="https://p.ipic.vip/3phswk.jpg" alt="Screen Shot 2022-08-23 at 10.02.04"></p>
<h3 id="Global-warming-and-heatwaves"><a href="#Global-warming-and-heatwaves" class="headerlink" title="Global warming and heatwaves"></a>Global warming and heatwaves</h3><p><img src="https://p.ipic.vip/7pgvcp.jpg" alt="Screen Shot 2022-08-23 at 10.05.12"></p>
<p><img src="https://p.ipic.vip/5rtbe7.jpg" alt="Screen Shot 2022-08-23 at 10.06.30"></p>
<p><img src="https://p.ipic.vip/26yst0.jpg" alt="Screen Shot 2022-08-23 at 10.08.28"></p>
<p><img src="https://p.ipic.vip/8p7ums.jpg" alt="Screen Shot 2022-08-23 at 10.08.56"></p>
<h3 id="Summer-length-and-humid-heatwaves"><a href="#Summer-length-and-humid-heatwaves" class="headerlink" title="Summer length and humid heatwaves"></a>Summer length and humid heatwaves</h3><p><img src="https://p.ipic.vip/ltjjom.jpg" alt="Screen Shot 2022-08-23 at 10.11.31"></p>
<p><img src="https://p.ipic.vip/5ldm0x.jpg" alt="Screen Shot 2022-08-23 at 10.14.19"></p>
<p><img src="https://p.ipic.vip/0z8stf.jpg" alt="Screen Shot 2022-08-23 at 10.12.42"></p>
<p><img src="https://p.ipic.vip/lw0mov.jpg" alt="Screen Shot 2022-08-23 at 10.16.02"></p>
<p><img src="https://p.ipic.vip/czu4m8.jpg" alt="Screen Shot 2022-08-23 at 10.17.12"></p>
<p><img src="https://p.ipic.vip/1x9o67.jpg" alt="Screen Shot 2022-08-23 at 10.17.12"></p>
<p><img src="https://p.ipic.vip/yzmwt0.jpg" alt="Screen Shot 2022-08-23 at 10.17.43"></p>
<p><img src="https://p.ipic.vip/nzhbuj.jpg" alt="Screen Shot 2022-08-23 at 10.18.20"></p>
<h3 id="Perspective-of-ocean’s-roles"><a href="#Perspective-of-ocean’s-roles" class="headerlink" title="Perspective of ocean’s roles"></a>Perspective of ocean’s roles</h3><p><img src="https://p.ipic.vip/jy1rd3.jpg" alt="Screen Shot 2022-08-23 at 10.19.45"></p>
<p><img src="https://p.ipic.vip/70udcp.jpg" alt="Screen Shot 2022-08-23 at 10.21.17"></p>
<p><img src="https://p.ipic.vip/cxaac1.jpg" alt="Screen Shot 2022-08-23 at 10.23.41"></p>
<p><img src="https://p.ipic.vip/0tbxk2.jpg" alt="Screen Shot 2022-08-23 at 10.24.36"></p>
<p><img src="https://p.ipic.vip/01s6qn.jpg" alt="Screen Shot 2022-08-23 at 10.27.53"></p>
<p><img src="https://p.ipic.vip/rq2qlc.jpg" alt="Screen Shot 2022-08-23 at 10.29.46"></p>
<p><img src="https://p.ipic.vip/lxw0de.jpg" alt="Screen Shot 2022-08-23 at 10.31.19"></p>
<p><img src="https://p.ipic.vip/rczd3c.jpg" alt="Screen Shot 2022-08-23 at 10.32.16"></p>
<p><img src="https://p.ipic.vip/dnqc5b.jpg" alt="Screen Shot 2022-08-23 at 10.33.13"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>黄科+鞠汶姗</title>
    <url>/2022/09/01/Seminar/20220901-%E9%BB%84%E7%A7%91+%E9%9E%A0%E6%B1%B6%E5%A7%97/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Leading-Mode-Connections-of-the-Inter-annual-Variability-in-Upper-Ocean-Salinity-in-the-Tropical-Indian-Ocean-黄科-中国科学院南海海洋研究所副研究员"><a href="#Leading-Mode-Connections-of-the-Inter-annual-Variability-in-Upper-Ocean-Salinity-in-the-Tropical-Indian-Ocean-黄科-中国科学院南海海洋研究所副研究员" class="headerlink" title="Leading-Mode Connections of the Inter-annual Variability in Upper-Ocean Salinity in the Tropical Indian Ocean 黄科 中国科学院南海海洋研究所副研究员"></a>Leading-Mode Connections of the Inter-annual Variability in Upper-Ocean Salinity in the Tropical Indian Ocean 黄科 中国科学院南海海洋研究所副研究员</h2><p><img src="https://p.ipic.vip/aje0sn.jpg" alt="Screen Shot 2022-09-01 at 09.33.48"></p>
<p><img src="https://p.ipic.vip/cqxu9h.jpg" alt="Screen Shot 2022-09-01 at 09.34.43"></p>
<p><img src="https://p.ipic.vip/ghqj9p.jpg" alt="Screen Shot 2022-09-01 at 09.35.39"></p>
<p><img src="https://p.ipic.vip/48ly3x.jpg" alt="Screen Shot 2022-09-01 at 09.36.22"></p>
<p><img src="https://p.ipic.vip/ousqvz.jpg" alt="Screen Shot 2022-09-01 at 09.38.43"></p>
<p><img src="https://p.ipic.vip/yeiucb.jpg" alt="Screen Shot 2022-09-01 at 09.39.49"></p>
<p><img src="https://p.ipic.vip/4n4hlp.jpg" alt="Screen Shot 2022-09-01 at 09.41.14"></p>
<p><img src="https://p.ipic.vip/wbf2fh.jpg" alt="Screen Shot 2022-09-01 at 09.41.52"></p>
<p><img src="https://p.ipic.vip/c0ryml.jpg" alt="Screen Shot 2022-09-01 at 09.44.10"></p>
<p><img src="https://p.ipic.vip/orpi2x.jpg" alt="Screen Shot 2022-09-01 at 09.45.05"></p>
<p><img src="https://p.ipic.vip/7fq6gn.jpg" alt="Screen Shot 2022-09-01 at 09.48.47"></p>
<p><img src="https://p.ipic.vip/649rs2.jpg" alt="Screen Shot 2022-09-01 at 09.50.02"></p>
<p><img src="https://p.ipic.vip/96i6q5.jpg" alt="Screen Shot 2022-09-01 at 09.50.30"></p>
<p><img src="https://p.ipic.vip/6k5vqh.jpg" alt="Screen Shot 2022-09-01 at 09.54.26"></p>
<p><img src="https://p.ipic.vip/9v7rjs.jpg" alt="Screen Shot 2022-09-01 at 09.57.02"></p>
<p><img src="https://p.ipic.vip/r1c2ut.jpg" alt="Screen Shot 2022-09-01 at 09.58.31"></p>
<p><img src="https://p.ipic.vip/pjnqte.jpg" alt="Screen Shot 2022-09-01 at 10.01.52"></p>
<h4 id="讨论："><a href="#讨论：" class="headerlink" title="讨论："></a>讨论：</h4><p>体积守恒模式，存在虚拟盐度：例如当地盐度只有平均盐度的50%，模式会夸大当地盐度一倍；当地盐度较平均盐度大时，会低估当地盐度</p>
<p>孟加拉湾等河口区域问题模式对盐度的误差较大</p>
<p>降水，实际重力位能增加，但模式中重力位能减少</p>
<p>Argo 1000-2000m</p>
<p>如果只同化Argo，模式在深海会产生盐度的负偏差</p>
<h2 id="报告题目二：Subsurface-Cooling-in-the-Tropical-Pacific-Under-a-Warming-Climate-鞠汶姗-中国科学院南海海洋研究所2020级博士研究生"><a href="#报告题目二：Subsurface-Cooling-in-the-Tropical-Pacific-Under-a-Warming-Climate-鞠汶姗-中国科学院南海海洋研究所2020级博士研究生" class="headerlink" title="报告题目二：Subsurface Cooling in the Tropical Pacific Under a Warming Climate  鞠汶姗 中国科学院南海海洋研究所2020级博士研究生"></a>报告题目二：Subsurface Cooling in the Tropical Pacific Under a Warming Climate  鞠汶姗 中国科学院南海海洋研究所2020级博士研究生</h2><p><img src="https://p.ipic.vip/w4ub1d.jpg" alt="Screen Shot 2022-09-01 at 10.28.43"></p>
<p><img src="https://p.ipic.vip/jddq1p.jpg" alt="Screen Shot 2022-09-01 at 10.30.16"></p>
<p><img src="https://p.ipic.vip/9kgn1g.jpg" alt="Screen Shot 2022-09-01 at 10.30.44"></p>
<p><img src="https://p.ipic.vip/ce4hrm.jpg" alt="Screen Shot 2022-09-01 at 10.31.27"></p>
<p><img src="https://p.ipic.vip/7b3kam.jpg" alt="Screen Shot 2022-09-01 at 10.32.03"></p>
<p><img src="https://p.ipic.vip/0rl3jq.jpg" alt="Screen Shot 2022-09-01 at 10.33.00"></p>
<p><img src="https://p.ipic.vip/8ddwas.jpg" alt="Screen Shot 2022-09-01 at 10.33.00"></p>
<p><img src="https://p.ipic.vip/gy12or.jpg" alt="Screen Shot 2022-09-01 at 10.33.56"></p>
<p><img src="https://p.ipic.vip/s4mlx2.jpg" alt="Screen Shot 2022-09-01 at 10.35.20"></p>
<p><img src="https://p.ipic.vip/y9igjs.jpg" alt="Screen Shot 2022-09-01 at 10.35.42"></p>
<p><img src="https://p.ipic.vip/o5sczx.jpg" alt="Screen Shot 2022-09-01 at 10.37.11"></p>
<p><img src="https://p.ipic.vip/1citt7.jpg" alt="Screen Shot 2022-09-01 at 10.37.34"></p>
<p><img src="https://p.ipic.vip/pt023h.jpg" alt="Screen Shot 2022-09-01 at 10.39.05"></p>
<p><img src="https://p.ipic.vip/nyv3ik.jpg" alt="Screen Shot 2022-09-01 at 10.39.51"></p>
<p><img src="https://p.ipic.vip/c506ht.jpg" alt="Screen Shot 2022-09-01 at 10.40.36"></p>
<p><img src="https://p.ipic.vip/r0wgdd.jpg" alt="Screen Shot 2022-09-01 at 10.43.02"></p>
<p><img src="https://p.ipic.vip/weqiaj.jpg" alt="Screen Shot 2022-09-01 at 10.44.22"></p>
<p><img src="https://p.ipic.vip/a7owvv.jpg" alt="Screen Shot 2022-09-01 at 10.46.14"></p>
<h4 id="讨论：-1"><a href="#讨论：-1" class="headerlink" title="讨论："></a>讨论：</h4><p>黄瑞新：太平洋变淡厉害</p>
<p>又咸又热对应涩度较大的海水</p>
<p>提问：利用涩度研究冷海温是否合适？太平洋变淡的影响？是否是变淡导致的变冷？</p>
<p>Ishii 海洋观测</p>
<p>北太平洋副热带环流和赤道在次表层的交互主要在日界线附近</p>
<p>1950年开始的观测数据，夹杂了PDO的信号，不能完全归因成 global warming</p>
<p>陈更新：太平洋赤道潜流在增强</p>
<h4 id="附录："><a href="#附录：" class="headerlink" title="附录："></a>附录：</h4><p>太平洋赤道潜流 (EUC)是<strong>存在于赤道太平洋次表层中的一条强劲的东向洋流</strong>，它不仅构成了太平洋赤道海域中温跃层的主体，同时还是冷舌区上升流的主要水源。</p>
<p>太平洋赤道潜流，位于赤道两旁南、北纬2度之间，海面以下100～300米深的水层中，厚度约为200米，宽度300千米左右，从亚洲东部菲律宾外海向东，流到美洲西部加拉帕戈斯岛附近，流长1.4万千米。海流的核心位置自西向东逐渐上升，在东部没有风的时候有时可达到海面。最大流速100～200厘米&#x2F;秒。</p>
<p>近十几年又发现，在太平洋赤道潜流两侧，南、北纬5度处，还分别存在着一支潜流，位于200～300米水深处。这两支潜流的性质，既不同于表层海流，又与赤道潜流有所区别。它们愈向西，愈靠近赤道，深度也变得愈浅，在太平洋中部与赤道潜流合为一处。</p>
<hr>
<ul>
<li><p>报告人简介</p>
<p>黄科，博士毕业于中国科学院大学，曾在美国缅因大学、澳大利亚联邦科学与工业研究组织访问，2018年担任中国科学院南海海洋研究所副研究员。研究方向主要涉及：热带海洋环流、海气相互作用和生态环境变化。在Journal of Physical Oceanography, Journal of Geophysical Research: Oceans, Deep Sea Research II等国际SCI刊物发表论文20余篇。担任Journal of Climate, Journal of Physical Oceanography等十余种SCI杂志同行评审。</p>
</li>
<li><p>报告摘要</p>
<p>Leading modes of inter-annual variability in upper-ocean salinity in the tropical Indian Ocean (TIO) and their connections were studied based on 17 years (2002–2018) of oceanic historical and reanalysis data. Empirical orthogonal function (EOF) analysis depicted the dominant roles of the first two leading modes in salinity variability in the TIO over a wide range of inter-annual timescales. Among the rich oscillations of the leading EOF modes, a coherent near-biennial band was identified with basin-wide loading of sea surface salinity anomalies (SSSa) (EOF1) leading&#x2F;lagging the northeast–southwest dipolar mode of SSSa (EOF2) by around 4 months across the TIO, with southwestward migration of SSSa center. The spatial loadings of the SSSa leading modes in the TIO were strongly shaped by sea surface temperature–related freshwater fluxes and wind-driven regional ocean circulation on a near-biennial timescale. Composite analysis of the mixed-layer salinity budget reﬂected characteristic features of basin-scale ocean–atmosphere coupling, both temporally and regionally during the life cycle of the near-biennial fluctuation in anomalous salinity in the TIO. Consistent with the intrinsic oscillation paradigm in the observed Indian Ocean Dipole (IOD) variation, the dynamic and thermodynamic feedbacks associated with switches from the positive to negative IOD modes provided the phase-connection mechanisms for the SSSa leading-mode displacement over the TIO.</p>
</li>
<li><p>报告人简介</p>
<p>鞠汶姗，中国科学院南海海洋研究所2020级博士研究生，研究方向为太平洋温盐及环流结构对全球变暖的响应。</p>
</li>
<li><p>报告摘要</p>
<p>本研究基于CMIP6模式的Historical和SSP2-4.5情景，探究了全球变暖背景下热带太平洋次表层温度的变化趋势。研究发现，在1950-2100年间热带太平洋近赤道区域两侧存在对称的次表层冷却趋势（2-8°N&#x2F;S, 100-200 m）。冷却趋势主要由两个因素导致:温跃层的抬升（Thermocline Heaving）和涩度（Spiciness）的负趋势，即固定等密度面上温度的降低。这两个因素的贡献比例相当。一方面，南北太平洋近赤道风应力旋度出现显著变化趋势，引起埃克曼抽吸使温跃层抬升，导致下层冷水向次表层流动；另一方面，全球变暖背景下海水温度不断升高使露头线持续向极移动，高纬度较冷的海水通过潜沉作用直接到达副热带东部区域；此外，沿等密度面的异常平流作用也促进了海水降温。以上过程使南北太平洋副热带东部次表层的等密度面上产生显著的冷趋势，并沿地转流线传播到近赤道次表层海洋，进一步引起该区域的冷却。本研究主要强调了在全球变暖背景下涩度对次表层温度趋势预测的重要作用。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>邢雯</title>
    <url>/2022/09/08/Seminar/20220908-%E9%82%A2%E9%9B%AF/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Mechanisms-and-prediction-of-Southeast-Asian-summer-monsoon-precipitation-variability-邢雯-中国科学院南海海洋研究所研究员"><a href="#Mechanisms-and-prediction-of-Southeast-Asian-summer-monsoon-precipitation-variability-邢雯-中国科学院南海海洋研究所研究员" class="headerlink" title="Mechanisms and prediction of Southeast Asian summer monsoon precipitation variability 邢雯 中国科学院南海海洋研究所研究员"></a>Mechanisms and prediction of Southeast Asian summer monsoon precipitation variability 邢雯 中国科学院南海海洋研究所研究员</h2><p><img src="https://p.ipic.vip/l34n2b.jpg" alt="Screen Shot 2022-09-08 at 09.40.03"></p>
<h3 id="Prediction-of-SEA-JA-rainfall"><a href="#Prediction-of-SEA-JA-rainfall" class="headerlink" title="Prediction of SEA JA rainfall"></a>Prediction of SEA JA rainfall</h3><p><img src="https://p.ipic.vip/847rmc.jpg" alt="Screen Shot 2022-09-08 at 09.40.51"></p>
<p><img src="https://p.ipic.vip/61y98g.jpg" alt="Screen Shot 2022-09-08 at 09.42.42"></p>
<p><img src="https://p.ipic.vip/9hbyr7.jpg" alt="Screen Shot 2022-09-08 at 09.45.30"></p>
<p><img src="https://p.ipic.vip/zu9dzw.jpg" alt="Screen Shot 2022-09-08 at 09.46.26"></p>
<p><img src="https://p.ipic.vip/1wxdxu.jpg" alt="Screen Shot 2022-09-08 at 09.49.33"></p>
<p><img src="https://p.ipic.vip/jcshbf.jpg" alt="Screen Shot 2022-09-08 at 09.50.15"></p>
<p><img src="https://p.ipic.vip/6eom1h.jpg" alt="Screen Shot 2022-09-08 at 09.52.05"></p>
<p><img src="https://p.ipic.vip/yhazf8.jpg" alt="Screen Shot 2022-09-08 at 09.53.52"></p>
<p><img src="https://p.ipic.vip/phlrp5.jpg" alt="Screen Shot 2022-09-08 at 09.56.45"></p>
<p><img src="https://p.ipic.vip/56uh80.jpg" alt="Screen Shot 2022-09-08 at 09.58.31"></p>
<p><img src="https://p.ipic.vip/4zae2y.jpg" alt="Screen Shot 2022-09-08 at 09.59.04"></p>
<p><img src="https://p.ipic.vip/uvtj5k.jpg" alt="Screen Shot 2022-09-08 at 10.00.04"></p>
<p><img src="https://p.ipic.vip/3i1si8.jpg" alt="Screen Shot 2022-09-08 at 10.03.27"></p>
<p><img src="https://p.ipic.vip/6ise35.jpg" alt="Screen Shot 2022-09-08 at 10.06.03"></p>
<p><img src="https://p.ipic.vip/mcxtv7.jpg" alt="Screen Shot 2022-09-08 at 10.07.41"></p>
<p><img src="https://p.ipic.vip/tjv2j2.jpg" alt="Screen Shot 2022-09-08 at 10.09.20"></p>
<p><img src="https://p.ipic.vip/qxxpvr.jpg" alt="Screen Shot 2022-09-08 at 10.11.13"></p>
<p><img src="https://p.ipic.vip/hwytps.jpg" alt="Screen Shot 2022-09-08 at 10.12.33"></p>
<p>s</p>
<hr>
<ul>
<li><p>报告人简介</p>
<p>邢雯，博士，中国科学院南海海洋研究所研究员，博士生导师，中国科学院率先行动青年项目候选人。2015年获得中国海洋大学气象学博士学位。2022年6月起就职于中科院南海所热带海洋环境国家重点实验室。主要研究方向为“亚洲季风气候动力学”，在探究“亚洲夏季风爆发的年际变化、影响东亚夏季降水过程的动力过程以及亚洲夏季降水季节可预报性”等研究领域取得了多项创新性的成果。在学科主流期刊Journal of Climate、Climate Dynamics等共发表论文15篇，其中第一作者论文9篇。</p>
</li>
<li><p>报告摘要</p>
<p>东亚夏季风系统具有复杂的时空特征以及显著的季节行进过程，对夏季降水的年际预报始终是气候研究领域具有挑战性并亟需解决的科学问题之一。目前受分辨率、对流参数化等因素所限，气候动力模式对东亚夏季降水预报偏差较大。本次报告利用“可预报模态分析”方法，创新性的建立起一系列以动力机制为基础的统计预报模型，根据不同时期各预报因子对预报量的相对贡献对东亚夏季降水进行预报，不仅能够显著提高预报技巧，而且能够估算夏季降水的可预报性。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>组会</title>
    <url>/2022/07/27/Seminar/20220727-%E7%BB%84%E4%BC%9A/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="王天宇"><a href="#王天宇" class="headerlink" title="王天宇"></a>王天宇</h3><p><img src="https://p.ipic.vip/lf21lj.jpg" alt="Screen Shot 2022-07-27 at 15.05.31"></p>
<p><img src="https://p.ipic.vip/p8zpna.jpg" alt="Screen Shot 2022-07-27 at 15.09.02"></p>
<p><img src="https://p.ipic.vip/sqjjy0.jpg" alt="Screen Shot 2022-07-27 at 15.09.21"></p>
<p><img src="https://p.ipic.vip/4dz62n.jpg" alt="Screen Shot 2022-07-27 at 15.12.07"></p>
<p><img src="https://p.ipic.vip/93c74w.jpg" alt="Screen Shot 2022-07-27 at 15.14.56"></p>
<p><img src="https://p.ipic.vip/si2ysp.jpg" alt="Screen Shot 2022-07-27 at 15.23.49"></p>
<p><img src="https://p.ipic.vip/vt8mvh.jpg" alt="Screen Shot 2022-07-27 at 15.31.58"></p>
<p>光、波动、风的搅拌、大气沉降、温度和盐度</p>
<h3 id="周润洁"><a href="#周润洁" class="headerlink" title="周润洁"></a>周润洁</h3><p><img src="https://p.ipic.vip/0wdnke.jpg" alt="Screen Shot 2022-07-27 at 15.58.59"></p>
<p><img src="https://p.ipic.vip/tdfg3n.jpg" alt="Screen Shot 2022-07-27 at 17.08.05"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>裘波</title>
    <url>/2022/09/09/Seminar/20220909-%E8%A3%98%E6%B3%A2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Lecture-1-Fundamentals-of-wind-driven-large-scale-circulation-裘波"><a href="#Lecture-1-Fundamentals-of-wind-driven-large-scale-circulation-裘波" class="headerlink" title="Lecture 1:  Fundamentals of wind-driven large-scale circulation 裘波"></a>Lecture 1:  Fundamentals of wind-driven large-scale circulation 裘波</h2><p><img src="https://p.ipic.vip/zu982c.jpg" alt="Screen Shot 2022-09-09 at 15.12.08"></p>
<p><img src="https://p.ipic.vip/iz9a00.jpg" alt="Screen Shot 2022-09-09 at 15.12.47"></p>
<p><img src="https://p.ipic.vip/adliso.jpg" alt="Screen Shot 2022-09-09 at 15.13.12"></p>
<p><img src="https://p.ipic.vip/iom8nc.jpg" alt="Screen Shot 2022-09-09 at 15.15.19"></p>
<p><img src="https://p.ipic.vip/yca9vb.jpg" alt="Screen Shot 2022-09-09 at 15.16.02"></p>
<p><img src="https://p.ipic.vip/vykfdk.jpg" alt="Screen Shot 2022-09-09 at 15.17.07"></p>
<p><img src="https://p.ipic.vip/7d8a8m.jpg" alt="Screen Shot 2022-09-09 at 15.19.06"></p>
<p><img src="https://p.ipic.vip/yvd549.jpg" alt="Screen Shot 2022-09-09 at 15.21.01"></p>
<ul>
<li>纬度越低，扰动强度越强，Ekman layer depth 越深</li>
</ul>
<p><img src="https://p.ipic.vip/gd4nxl.jpg" alt="Screen Shot 2022-09-09 at 15.22.34"></p>
<p><img src="https://p.ipic.vip/j26n14.jpg" alt="Screen Shot 2022-09-09 at 15.25.02"></p>
<ul>
<li>纬度越高，科氏力越大，为了平衡，南边流速大，往西走的流量大</li>
</ul>
<p><img src="https://p.ipic.vip/xpmfhu.jpg" alt="Screen Shot 2022-09-09 at 15.28.59"></p>
<p><img src="https://p.ipic.vip/mojrqj.jpg" alt="Screen Shot 2022-09-09 at 15.29.24"></p>
<p><img src="https://p.ipic.vip/csxnyi.jpg" alt="Screen Shot 2022-09-09 at 15.31.01"></p>
<p><img src="https://p.ipic.vip/xy3mse.jpg" alt="Screen Shot 2022-09-09 at 15.37.41"></p>
<p><img src="https://p.ipic.vip/ize6r7.jpg" alt="Screen Shot 2022-09-09 at 15.37.56"></p>
<p><img src="https://p.ipic.vip/xmegx5.jpg" alt="Screen Shot 2022-09-09 at 15.39.19"></p>
<p><img src="https://p.ipic.vip/3s1i01.jpg" alt="Screen Shot 2022-09-09 at 15.43.39"><img src="/" alt="Screen Shot 2022-09-09 at 15.42.41"></p>
<p><img src="https://p.ipic.vip/tsdj0p.jpg" alt="Screen Shot 2022-09-09 at 15.47.25"></p>
<ul>
<li><p>进入海洋的vorticity可以被海洋自身消耗掉</p>
<p><img src="https://p.ipic.vip/6l0d48.jpg" alt="Screen Shot 2022-09-09 at 15.53.20"></p>
</li>
</ul>
<p><img src="https://p.ipic.vip/9dkdso.jpg" alt="Screen Shot 2022-09-09 at 15.54.27"></p>
<p><img src="https://p.ipic.vip/yxf7kv.jpg" alt="Screen Shot 2022-09-09 at 15.57.06"></p>
<p><img src="https://p.ipic.vip/3j68cc.jpg" alt="Screen Shot 2022-09-09 at 15.59.17"></p>
<p><img src="https://p.ipic.vip/u7lenf.jpg" alt="Screen Shot 2022-09-09 at 16.01.18"></p>
<p><img src="https://p.ipic.vip/h1hmll.jpg" alt="Screen Shot 2022-09-09 at 16.05.40"></p>
<p><img src="https://p.ipic.vip/rbessb.jpg" alt="Screen Shot 2022-09-09 at 16.07.27"></p>
<ul>
<li>非典型和低摩擦的相对重要性</li>
</ul>
<p><img src="https://p.ipic.vip/5qvqhd.jpg" alt="Screen Shot 2022-09-09 at 16.09.31"></p>
<p><img src="https://p.ipic.vip/dnl9u1.jpg" alt="Screen Shot 2022-09-09 at 16.09.54"></p>
<p><img src="https://p.ipic.vip/950h8w.jpg" alt="Screen Shot 2022-09-09 at 16.11.58"></p>
<hr>
<h3 id="Appendix"><a href="#Appendix" class="headerlink" title="Appendix:"></a>Appendix:</h3><p><img src="https://p.ipic.vip/73cvvq.jpg" alt="Screen Shot 2022-09-09 at 16.23.27"></p>
<p><img src="https://p.ipic.vip/2b6gov.jpg" alt="Screen Shot 2022-09-09 at 16.23.18"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>张磊</title>
    <url>/2022/09/15/Seminar/20220915-%E5%BC%A0%E7%A3%8A/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="印度洋对热带跨洋相互作用的影响-张磊-中科院南海所"><a href="#印度洋对热带跨洋相互作用的影响-张磊-中科院南海所" class="headerlink" title="印度洋对热带跨洋相互作用的影响 张磊 中科院南海所"></a>印度洋对热带跨洋相互作用的影响 张磊 中科院南海所</h2><p><img src="https://p.ipic.vip/x0guoz.jpg" alt="Screen Shot 2022-09-15 at 09.34.55"></p>
<p><img src="https://p.ipic.vip/pgx937.jpg" alt="Screen Shot 2022-09-15 at 09.37.51"></p>
<p><img src="https://p.ipic.vip/oa64vb.jpg" alt="Screen Shot 2022-09-15 at 09.38.43"></p>
<p><img src="https://p.ipic.vip/4tlndd.jpg" alt="Screen Shot 2022-09-15 at 09.40.58"></p>
<p><img src="https://p.ipic.vip/i48576.jpg" alt="Screen Shot 2022-09-15 at 09.41.14"></p>
<p><img src="https://p.ipic.vip/bs5o9r.jpg" alt="Screen Shot 2022-09-15 at 09.41.35"></p>
<p><img src="https://p.ipic.vip/w7oevu.jpg" alt="Screen Shot 2022-09-15 at 09.43.27"></p>
<p><img src="https://p.ipic.vip/50i1t5.jpg" alt="Screen Shot 2022-09-15 at 09.46.11"></p>
<p><img src="https://p.ipic.vip/tt84eo.jpg" alt="Screen Shot 2022-09-15 at 09.46.44"></p>
<p><img src="https://p.ipic.vip/dku9h1.jpg" alt="Screen Shot 2022-09-15 at 09.47.04"></p>
<p><img src="https://p.ipic.vip/1scoqw.jpg" alt="Screen Shot 2022-09-15 at 09.48.04"></p>
<p><img src="https://p.ipic.vip/8pc9lb.jpg" alt="Screen Shot 2022-09-15 at 09.50.07"></p>
<p><img src="https://p.ipic.vip/c0j635.jpg" alt="Screen Shot 2022-09-15 at 09.50.30"></p>
<p><img src="https://p.ipic.vip/32bsip.jpg" alt="Screen Shot 2022-09-15 at 09.50.58"></p>
<p><img src="https://p.ipic.vip/awbvk0.jpg" alt="Screen Shot 2022-09-15 at 09.52.30"></p>
<p><img src="https://p.ipic.vip/56gwqa.jpg" alt="Screen Shot 2022-09-15 at 09.52.59"></p>
<p><img src="https://p.ipic.vip/17robb.jpg" alt="Screen Shot 2022-09-15 at 09.53.09"></p>
<p><img src="https://p.ipic.vip/o2slz2.jpg" alt="Screen Shot 2022-09-15 at 09.53.55"></p>
<p><img src="https://p.ipic.vip/io2tnh.jpg" alt="Screen Shot 2022-09-15 at 09.55.12"></p>
<p><img src="https://p.ipic.vip/lgomqn.jpg" alt="Screen Shot 2022-09-15 at 09.56.08"></p>
<p><img src="https://p.ipic.vip/2c88d7.jpg" alt="Screen Shot 2022-09-15 at 09.56.58"></p>
<p><img src="https://p.ipic.vip/iyin21.jpg" alt="Screen Shot 2022-09-15 at 09.58.03"></p>
<p><img src="https://p.ipic.vip/jz3hab.jpg" alt="Screen Shot 2022-09-15 at 09.58.56"></p>
<p><img src="https://p.ipic.vip/l8qlkt.jpg" alt="Screen Shot 2022-09-15 at 10.00.19"></p>
<p><img src="https://p.ipic.vip/6m66bl.jpg" alt="Screen Shot 2022-09-15 at 10.01.14"></p>
<p><img src="https://p.ipic.vip/wp88qo.jpg" alt="Screen Shot 2022-09-15 at 10.01.39"></p>
<p><img src="https://p.ipic.vip/zqsp61.jpg" alt="Screen Shot 2022-09-15 at 10.01.57"></p>
<p><img src="https://p.ipic.vip/zarqkv.jpg" alt="Screen Shot 2022-09-15 at 10.03.07"></p>
<p><img src="https://p.ipic.vip/cg3cdh.jpg" alt="Screen Shot 2022-09-15 at 10.04.39"></p>
<p><img src="https://p.ipic.vip/2s9vkn.jpg" alt="Screen Shot 2022-09-15 at 10.05.26"></p>
<p><img src="https://p.ipic.vip/muxa8r.jpg" alt="Screen Shot 2022-09-15 at 10.06.45"></p>
<p><img src="https://p.ipic.vip/7mzbom.jpg" alt="Screen Shot 2022-09-15 at 10.07.26"></p>
<p><img src="https://p.ipic.vip/4zzu8s.jpg" alt="Screen Shot 2022-09-15 at 10.08.10"></p>
<p><img src="https://p.ipic.vip/ssid8x.jpg" alt="Screen Shot 2022-09-15 at 10.09.48"></p>
<p><img src="https://p.ipic.vip/7cefbj.jpg" alt="Screen Shot 2022-09-15 at 10.11.18"></p>
<p><img src="https://p.ipic.vip/wodd3t.jpg" alt="Screen Shot 2022-09-15 at 10.11.57"></p>
<p><img src="https://p.ipic.vip/sq7623.jpg" alt="Screen Shot 2022-09-15 at 10.13.55"></p>
<p><img src="https://p.ipic.vip/7b7x7a.jpg" alt="Screen Shot 2022-09-15 at 10.15.15"></p>
<p><img src="https://p.ipic.vip/kdqrgw.jpg" alt="Screen Shot 2022-09-15 at 10.16.09"></p>
<hr>
<p><img src="https://p.ipic.vip/n90n40.jpg" alt="WechatIMG614"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>组会</title>
    <url>/2022/09/14/Seminar/20220914-%E7%BB%84%E4%BC%9A/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Dai-Lingxing-–-A-merger-process-of-Great-Whirl-and-Socotra-Gyre-in-2019（2019年阿拉伯海大涡漩和索科特拉涡漩的合并过程研究）-working-report"><a href="#Dai-Lingxing-–-A-merger-process-of-Great-Whirl-and-Socotra-Gyre-in-2019（2019年阿拉伯海大涡漩和索科特拉涡漩的合并过程研究）-working-report" class="headerlink" title="Dai, Lingxing – A merger process of Great Whirl and Socotra Gyre in 2019（2019年阿拉伯海大涡漩和索科特拉涡漩的合并过程研究）, working report."></a>Dai, Lingxing – A merger process of Great Whirl and Socotra Gyre in 2019（2019年阿拉伯海大涡漩和索科特拉涡漩的合并过程研究）, working report.</h2><p><img src="https://p.ipic.vip/wt6rmr.jpg" alt="Screen Shot 2022-09-14 at 15.02.59"></p>
<p><img src="https://p.ipic.vip/i0f9u7.jpg" alt="Screen Shot 2022-09-14 at 15.04.55"></p>
<p><img src="https://p.ipic.vip/sbj5xo.jpg" alt="Screen Shot 2022-09-14 at 15.07.54"></p>
<p><img src="https://p.ipic.vip/i4x9nd.jpg" alt="Screen Shot 2022-09-14 at 15.12.43"></p>
<p><img src="https://p.ipic.vip/ge46d5.jpg" alt="Screen Shot 2022-09-14 at 15.17.25"></p>
<p><img src="https://p.ipic.vip/i8ax3f.jpg" alt="Screen Shot 2022-09-14 at 15.24.41"></p>
<p><img src="https://p.ipic.vip/lcui7h.jpg" alt="Screen Shot 2022-09-14 at 15.26.34"></p>
<p><img src="https://p.ipic.vip/ul8bpn.jpg" alt="Screen Shot 2022-09-14 at 15.28.07"></p>
<p><img src="https://p.ipic.vip/7jgnng.jpg" alt="Screen Shot 2022-09-14 at 15.29.21"></p>
<p><img src="https://p.ipic.vip/gz48wl.jpg" alt="Screen Shot 2022-09-14 at 15.30.40"></p>
<h2 id="Ju-Wenshan-–-Potential-Spicity-amp-Water-Mass-Analysis-reading-report"><a href="#Ju-Wenshan-–-Potential-Spicity-amp-Water-Mass-Analysis-reading-report" class="headerlink" title="Ju, Wenshan – Potential Spicity &amp; Water Mass Analysis , reading report."></a>Ju, Wenshan – Potential Spicity &amp; Water Mass Analysis , reading report.</h2><p><img src="https://p.ipic.vip/qgfxod.jpg" alt="Screen Shot 2022-09-14 at 16.08.56"></p>
<p><img src="https://p.ipic.vip/8sqwfy.jpg" alt="Screen Shot 2022-09-14 at 16.09.33"></p>
<p><img src="https://p.ipic.vip/2ad41s.jpg" alt="Screen Shot 2022-09-14 at 16.11.28"></p>
<p><img src="https://p.ipic.vip/5ml45x.jpg" alt="Screen Shot 2022-09-14 at 16.12.38"></p>
<p><img src="https://p.ipic.vip/dm41h3.jpg" alt="Screen Shot 2022-09-14 at 16.14.29"></p>
<ul>
<li>涩度的单位同密度</li>
<li>Argo 04年开始</li>
</ul>
<p><img src="https://p.ipic.vip/7ln404.jpg" alt="Screen Shot 2022-09-14 at 16.59.50"></p>
<h2 id="Zhou-Runjie-–-Analysis-of-the-semiannual-variation-in-the-Zapiola-Anticyclone-based-on-the-satellite-altimeter-measurements-and-drifter-trajectories-working-report"><a href="#Zhou-Runjie-–-Analysis-of-the-semiannual-variation-in-the-Zapiola-Anticyclone-based-on-the-satellite-altimeter-measurements-and-drifter-trajectories-working-report" class="headerlink" title="Zhou, Runjie – Analysis of the semiannual variation in the Zapiola Anticyclone based on the satellite altimeter measurements and drifter trajectories, working report."></a>Zhou, Runjie – Analysis of the semiannual variation in the Zapiola Anticyclone based on the satellite altimeter measurements and drifter trajectories, working report.</h2>]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>组会</title>
    <url>/2022/08/31/Seminar/20220831-%E7%BB%84%E4%BC%9A/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="张涟漪：-Increased-Variability-of-Eastern-Pacific-El-Nino-under-Greenhouse-Warming-by-Cai-et-al-2018-reading-report"><a href="#张涟漪：-Increased-Variability-of-Eastern-Pacific-El-Nino-under-Greenhouse-Warming-by-Cai-et-al-2018-reading-report" class="headerlink" title="张涟漪： Increased Variability of Eastern Pacific El Niño under Greenhouse Warming by Cai et al. 2018, reading report."></a>张涟漪： Increased Variability of Eastern Pacific El Niño under Greenhouse Warming by Cai et al. 2018, reading report.</h2><p><img src="https://p.ipic.vip/j9hf2v.jpg" alt="Screen Shot 2022-08-31 at 15.05.56"></p>
<p><img src="https://p.ipic.vip/6a35jd.jpg" alt="Screen Shot 2022-08-31 at 15.08.41"></p>
<p><img src="https://p.ipic.vip/05ees0.jpg" alt="Screen Shot 2022-08-31 at 15.10.50"></p>
<p><img src="https://p.ipic.vip/89pag0.jpg" alt="Screen Shot 2022-08-31 at 15.11.49"></p>
<p><img src="https://p.ipic.vip/cbqp0m.jpg" alt="Screen Shot 2022-08-31 at 15.14.32"></p>
<p>海洋层化越强，风的响应越强（thermocline-wind feedback）</p>
<p><img src="https://p.ipic.vip/vkw7mu.jpg" alt="Screen Shot 2022-08-31 at 15.15.53">水平空间结构的影响较垂直结构要弱</p>
<p><img src="https://p.ipic.vip/a3opem.jpg" alt="Screen Shot 2022-08-31 at 15.16.42"></p>
<p><img src="https://p.ipic.vip/ddjnnu.jpg" alt="Screen Shot 2022-08-31 at 15.18.15"></p>
<h2 id="吴炜：Distribution-and-composition-of-surface-ageostrophic-current-over-the-global-ocean-全球海表流场非地转流的分布与构成-working-report"><a href="#吴炜：Distribution-and-composition-of-surface-ageostrophic-current-over-the-global-ocean-全球海表流场非地转流的分布与构成-working-report" class="headerlink" title="吴炜：Distribution and composition of surface ageostrophic current over the global ocean (全球海表流场非地转流的分布与构成), working report."></a>吴炜：Distribution and composition of surface ageostrophic current over the global ocean (全球海表流场非地转流的分布与构成), working report.</h2><p><img src="https://p.ipic.vip/jtx4r2.jpg" alt="Screen Shot 2022-08-31 at 15.42.00"></p>
<p><img src="https://p.ipic.vip/laun54.jpg" alt="Screen Shot 2022-08-31 at 15.44.32"></p>
<p><img src="https://p.ipic.vip/h427xs.jpg" alt="Screen Shot 2022-08-31 at 15.45.28"></p>
<p><img src="https://p.ipic.vip/3vpqbr.jpg" alt="Screen Shot 2022-08-31 at 16.05.48"></p>
<p><img src="https://p.ipic.vip/2pr3nf.jpg" alt="Screen Shot 2022-08-31 at 15.53.43"></p>
<p>地转流速较大的区域非地转流速也较大，二者存在抵消作用，使得实际观测到的流速小于地转流速</p>
<p><img src="https://p.ipic.vip/prc2ci.jpg" alt="Screen Shot 2022-08-31 at 15.55.11"></p>
<p><img src="https://p.ipic.vip/bnt1gi.jpg" alt="Screen Shot 2022-08-31 at 15.57.24"></p>
<p><img src="https://p.ipic.vip/bwe1x4.jpg" alt="Screen Shot 2022-08-31 at 16.02.29"></p>
<p>南大洋Rossby变形半径10-20km，涡旋大小30-50km</p>
<h2 id="施燕萍：The-influence-of-vertical-wind-shear-on-tropical-cyclones-under-the-ENSO-effect-working-report"><a href="#施燕萍：The-influence-of-vertical-wind-shear-on-tropical-cyclones-under-the-ENSO-effect-working-report" class="headerlink" title="施燕萍：The influence of vertical wind shear on tropical cyclones under the ENSO-effect, working report."></a>施燕萍：The influence of vertical wind shear on tropical cyclones under the ENSO-effect, working report.</h2><p><img src="https://p.ipic.vip/virj1x.jpg" alt="Screen Shot 2022-08-31 at 16.56.44"></p>
<p><img src="https://p.ipic.vip/kg7yse.jpg" alt="Screen Shot 2022-08-31 at 17.01.26"></p>
<p><img src="https://p.ipic.vip/i2ohku.jpg" alt="Screen Shot 2022-08-31 at 17.03.35"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>组会</title>
    <url>/2022/10/12/Seminar/20221012-%E7%BB%84%E4%BC%9A/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Sun-Qiwei-–-The-Variable-Southern-Ocean-Carbon-Sink-reading-report"><a href="#Sun-Qiwei-–-The-Variable-Southern-Ocean-Carbon-Sink-reading-report" class="headerlink" title="Sun, Qiwei – The Variable Southern Ocean Carbon Sink, reading report"></a>Sun, Qiwei – The Variable Southern Ocean Carbon Sink, reading report</h2><p><img src="https://p.ipic.vip/gu7hfe.jpg" alt="Screen Shot 2022-10-12 at 15.05.44"></p>
<p><img src="https://p.ipic.vip/mmj9fn.jpg" alt="Screen Shot 2022-10-12 at 15.07.30"></p>
<p><img src="https://p.ipic.vip/33t8m8.jpg" alt="Screen Shot 2022-10-12 at 15.11.24"></p>
<p><img src="https://p.ipic.vip/g48fpc.jpg" alt="Screen Shot 2022-10-12 at 15.13.17"></p>
<p><img src="https://p.ipic.vip/hc9h8y.jpg" alt="Screen Shot 2022-10-12 at 15.15.54"></p>
<ul>
<li>热力学无法解释观测的季节变率特征</li>
</ul>
<p><img src="https://p.ipic.vip/pbt3zz.jpg" alt="Screen Shot 2022-10-12 at 15.18.23"></p>
<ul>
<li>模式无法再现观测中的decadal变率</li>
</ul>
<p><img src="https://p.ipic.vip/p7qmjs.jpg" alt="Screen Shot 2022-10-12 at 15.20.24"></p>
<p><img src="https://p.ipic.vip/rqz40l.jpg" alt="Screen Shot 2022-10-12 at 15.22.12"></p>
<ul>
<li>SAM：正位相西风带向南移动，负位相向北扩张</li>
</ul>
<p><img src="https://p.ipic.vip/u4e8yb.jpg" alt="Screen Shot 2022-10-12 at 15.24.20"></p>
<p><img src="https://p.ipic.vip/au4bzh.jpg" alt="Screen Shot 2022-10-12 at 15.26.42"></p>
<p><img src="https://p.ipic.vip/q3g7jr.jpg" alt="Screen Shot 2022-10-12 at 15.31.15"></p>
<p><img src="https://p.ipic.vip/dolpl0.jpg" alt="Screen Shot 2022-10-12 at 15.31.48"></p>
<h2 id="Qi-Rui-Si–Common-cause-for-severe-droughts-in-South-America-and-marine-heatwaves-in-the-South-Atlantic-reading-report"><a href="#Qi-Rui-Si–Common-cause-for-severe-droughts-in-South-America-and-marine-heatwaves-in-the-South-Atlantic-reading-report" class="headerlink" title="Qi, Rui-Si–Common cause for severe droughts in South America and marine heatwaves in the South Atlantic, reading report."></a>Qi, Rui-Si–Common cause for severe droughts in South America and marine heatwaves in the South Atlantic, reading report.</h2><p><img src="https://p.ipic.vip/cein9j.jpg" alt="Screen Shot 2022-10-12 at 15.51.44"></p>
<p><img src="https://p.ipic.vip/yoii5e.jpg" alt="Screen Shot 2022-10-12 at 15.54.39"></p>
<p><img src="https://p.ipic.vip/q0bm9f.jpg" alt="Screen Shot 2022-10-12 at 16.04.20"></p>
<p><img src="https://p.ipic.vip/v665q9.jpg" alt="Screen Shot 2022-10-12 at 16.06.40"></p>
<h2 id="Duan-Qin-–-Observed-3D-Structure-Generation-and-Dissipation-of-Oceanic-Mesoscale-Eddies-in-the-South-China-Sea-reading-report"><a href="#Duan-Qin-–-Observed-3D-Structure-Generation-and-Dissipation-of-Oceanic-Mesoscale-Eddies-in-the-South-China-Sea-reading-report" class="headerlink" title="Duan, Qin – Observed 3D Structure, Generation, and Dissipation of Oceanic Mesoscale Eddies in the South China Sea, reading report."></a>Duan, Qin – Observed 3D Structure, Generation, and Dissipation of Oceanic Mesoscale Eddies in the South China Sea, reading report.</h2><p><img src="https://p.ipic.vip/wgeanr.jpg" alt="Screen Shot 2022-10-12 at 16.32.47"></p>
<p><img src="https://p.ipic.vip/z4454t.jpg" alt="Screen Shot 2022-10-12 at 16.39.25"></p>
<p><img src="https://p.ipic.vip/ce73n4.jpg" alt="Screen Shot 2022-10-12 at 16.42.24"></p>
<p><img src="https://p.ipic.vip/bxj8ak.jpg" alt="Screen Shot 2022-10-12 at 16.44.49"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>胡开明</title>
    <url>/2022/10/13/Seminar/20221013-%E8%83%A1%E5%BC%80%E6%98%8E/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="寻找气候预测中的确定性-胡开明-中科院大气物理研究所"><a href="#寻找气候预测中的确定性-胡开明-中科院大气物理研究所" class="headerlink" title="寻找气候预测中的确定性 胡开明 中科院大气物理研究所"></a>寻找气候预测中的确定性 胡开明 中科院大气物理研究所</h2><p><img src="https://p.ipic.vip/l2qdwl.jpg" alt="Screen Shot 2022-10-13 at 10.15.29"></p>
<p><img src="https://p.ipic.vip/3bmsa0.jpg" alt="Screen Shot 2022-10-13 at 10.22.24"></p>
<p><img src="https://p.ipic.vip/1mcztd.jpg" alt="Screen Shot 2022-10-13 at 10.24.21"></p>
<p><img src="https://p.ipic.vip/pfbjqg.jpg" alt="Screen Shot 2022-10-13 at 10.26.52"></p>
<p><img src="https://p.ipic.vip/5hwv2d.jpg" alt="Screen Shot 2022-10-13 at 10.29.10"></p>
<p><img src="https://p.ipic.vip/7089ue.jpg" alt="Screen Shot 2022-10-13 at 10.29.54"></p>
<p><img src="https://p.ipic.vip/brsegf.jpg" alt="Screen Shot 2022-10-13 at 10.32.24"></p>
<p><img src="https://p.ipic.vip/pngjhx.jpg" alt="Screen Shot 2022-10-13 at 10.34.19"></p>
<p><img src="https://p.ipic.vip/4xou7n.jpg" alt="Screen Shot 2022-10-13 at 10.36.37"></p>
<p><img src="https://p.ipic.vip/2zze9f.jpg" alt="Screen Shot 2022-10-13 at 10.39.22"></p>
<p><img src="https://p.ipic.vip/c8rupo.jpg" alt="Screen Shot 2022-10-13 at 10.41.57"></p>
<p><img src="https://p.ipic.vip/w85fo4.jpg" alt="Screen Shot 2022-10-13 at 10.44.03"></p>
<p><img src="https://p.ipic.vip/2svfrk.jpg" alt="Screen Shot 2022-10-13 at 10.45.42"></p>
<p><img src="https://p.ipic.vip/76q1g0.jpg" alt="Screen Shot 2022-10-13 at 10.46.19"></p>
<p><img src="https://p.ipic.vip/r7npf1.jpg" alt="Screen Shot 2022-10-13 at 10.47.48"></p>
<hr>
<ul>
<li>报告人简介</li>
</ul>
<p>胡开明，大气物理研究所研究员，研究方向为ENSO、季风及气候变化。主要揭示了全球变暖下ENSO自身及对东亚气候影响变化的新机制；发现下垫面大地形能将ENSO导致的气候异常锚定于一些固定地理位置的新现象；提出了ENSO影响东亚夏季气候的西北太平洋放大器和印度洋电容器过程；并将这些机制应用于中国夏季极端高温、降水、极端台风等预测研究。成果发表于Nature Geosciences、Journal of Climate 等多个地学期刊。获中科院优秀博士论文、广东省科学技术奖励一等奖等奖励，入选中国科学院青年创新促进会。</p>
<ul>
<li>报告摘要</li>
</ul>
<p>人类一直有预知天气气候的愿望，而天气气候预测具有非常大的不确定性。本报告主要讲述了报告人对如何减少气候预测中不确定的一些思考。我们发现大气气候态环流、大尺度地形能将一些气候异常固定于一些特定位置，并且发现一些基本物理规律对气候变化有非常强的约束作用。这些过程可能有利于减少天气气候事件预测的不确定。</p>
<ul>
<li>报告论文</li>
</ul>
<ol>
<li>Hu Kaiming, Huang G, Huang P, Kosaka Y, Xie S-P (2021) Intensification of El Niño-induced atmospheric anomalies under greenhouse warming. Nature Geoscience 14 (6):377-382.  </li>
<li>Hu Kaiming, Huang G, Xie S-P, Long S-M (2019) Effect of the mean flow on the anomalous anticyclone over the Indo-Northwest Pacific in post-El Niño summers. Clim Dynam 53 (9):5725-5741.</li>
<li>Hu Kaiming, Xie S-P, Huang G (2017) Orographically Anchored El Niño Effect on Summer Rainfall in Central China. J Climate 30 (24):10037-10045.</li>
</ol>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>秦博</title>
    <url>/2022/10/13/Seminar/20221013-%E7%A7%A6%E5%8D%9A/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="基于数值预报和图卷积的两类厄尔尼诺事件可预报性研究-秦博-同济大学"><a href="#基于数值预报和图卷积的两类厄尔尼诺事件可预报性研究-秦博-同济大学" class="headerlink" title="基于数值预报和图卷积的两类厄尔尼诺事件可预报性研究 秦博 同济大学"></a>基于数值预报和图卷积的两类厄尔尼诺事件可预报性研究 秦博 同济大学</h2><p><img src="https://p.ipic.vip/ivsvms.jpg" alt="Screen Shot 2022-10-13 at 15.09.50"></p>
<p><img src="https://p.ipic.vip/0ncjs2.jpg" alt="Screen Shot 2022-10-13 at 15.10.20"></p>
<p><img src="https://p.ipic.vip/c8y2ql.jpg" alt="Screen Shot 2022-10-13 at 15.11.45"></p>
<p><img src="https://p.ipic.vip/yld15r.jpg" alt="Screen Shot 2022-10-13 at 15.13.50"></p>
<p><img src="https://p.ipic.vip/3fz91k.jpg" alt="Screen Shot 2022-10-13 at 15.15.23"></p>
<p><img src="https://p.ipic.vip/tw37w2.jpg" alt="Screen Shot 2022-10-13 at 15.16.24"></p>
<p><img src="https://p.ipic.vip/c7qcze.jpg" alt="Screen Shot 2022-10-13 at 15.17.02"></p>
<p><img src="https://p.ipic.vip/ckap0n.jpg" alt="Screen Shot 2022-10-13 at 15.18.13"></p>
<p><img src="https://p.ipic.vip/quroww.jpg" alt="Screen Shot 2022-10-13 at 15.18.46"></p>
<p><img src="https://p.ipic.vip/8rwd98.jpg" alt="Screen Shot 2022-10-13 at 15.21.08"></p>
<p><img src="https://p.ipic.vip/3ie72t.jpg" alt="Screen Shot 2022-10-13 at 15.21.53"></p>
<p><img src="https://p.ipic.vip/6btg0a.jpg" alt="Screen Shot 2022-10-13 at 15.22.24"></p>
<p><img src="https://p.ipic.vip/tl83tg.jpg" alt="Screen Shot 2022-10-13 at 15.25.19"></p>
<p><img src="https://p.ipic.vip/splqg1.jpg" alt="Screen Shot 2022-10-13 at 15.27.12"></p>
<p><img src="https://p.ipic.vip/msmkc4.jpg" alt="Screen Shot 2022-10-13 at 15.28.21"></p>
<p><img src="https://p.ipic.vip/l4ff3u.jpg" alt="Screen Shot 2022-10-13 at 15.30.16"></p>
<p><img src="https://p.ipic.vip/8mvbu9.jpg" alt="Screen Shot 2022-10-13 at 15.31.09"></p>
<p><img src="https://p.ipic.vip/ttu053.jpg" alt="Screen Shot 2022-10-13 at 15.31.52"></p>
<p><img src="https://p.ipic.vip/i0bgfl.jpg" alt="Screen Shot 2022-10-13 at 15.33.52"></p>
<p><img src="https://p.ipic.vip/3r9xpm.jpg" alt="Screen Shot 2022-10-13 at 15.34.04"></p>
<p><img src="https://p.ipic.vip/qk2jbd.jpg" alt="Screen Shot 2022-10-13 at 15.34.41"></p>
<hr>
<p><img src="https://p.ipic.vip/vs7dqc.jpg" alt="802db7cd45a9399cc9ff536cca4c15"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>罗京佳</title>
    <url>/2022/12/16/Seminar/20221216-%E7%BD%97%E4%BA%AC%E4%BD%B3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="AI深度学习预测气候浅介-罗京佳-南信大"><a href="#AI深度学习预测气候浅介-罗京佳-南信大" class="headerlink" title="AI深度学习预测气候浅介  罗京佳  南信大"></a>AI深度学习预测气候浅介  罗京佳  南信大</h2><p><img src="https://p.ipic.vip/wne8kp.jpg" alt="Screenshot 2022-12-16 at 10.06.47"></p>
<p><img src="https://p.ipic.vip/jzjrz4.jpg" alt="Screenshot 2022-12-16 at 10.10.52"></p>
<p><img src="https://p.ipic.vip/2dsjo3.jpg" alt="Screenshot 2022-12-16 at 10.13.06"></p>
<p><img src="https://p.ipic.vip/84yalm.jpg" alt="Screenshot 2022-12-16 at 10.14.24"></p>
<p><img src="https://p.ipic.vip/dun18k.jpg" alt="Screenshot 2022-12-16 at 10.15.19"></p>
<p><img src="https://p.ipic.vip/bvjpx9.jpg" alt="Screenshot 2022-12-16 at 10.16.26"></p>
<p><img src="https://p.ipic.vip/31v100.jpg" alt="Screenshot 2022-12-16 at 10.17.00"></p>
<p><img src="https://p.ipic.vip/cx171l.jpg" alt="Screenshot 2022-12-16 at 10.18.40"></p>
<p><img src="https://p.ipic.vip/i229er.jpg" alt="Screenshot 2022-12-16 at 10.22.41"></p>
<p><img src="https://p.ipic.vip/18su9b.jpg" alt="Screenshot 2022-12-16 at 10.24.51"></p>
<p>![Screenshot 2022-12-16 at 10.28.28](&#x2F;Users&#x2F;ruyanc&#x2F;Desktop&#x2F;Screenshot 2022-12-16 at 10.28.28.png)</p>
<p><img src="https://p.ipic.vip/s0pvme.jpg" alt="Screenshot 2022-12-16 at 10.35.57"></p>
<p><img src="https://p.ipic.vip/h38zjy.jpg" alt="Screenshot 2022-12-16 at 10.40.20"></p>
<p><img src="https://p.ipic.vip/1zrqn6.jpg" alt="Screenshot 2022-12-16 at 10.44.31"></p>
<p><img src="https://p.ipic.vip/o6sk66.jpg" alt="Screenshot 2022-12-16 at 10.47.55"></p>
<p><img src="https://p.ipic.vip/vcta4h.jpg" alt="Screenshot 2022-12-16 at 10.55.42"></p>
<p><img src="https://p.ipic.vip/d67k6k.jpg" alt="Screenshot 2022-12-16 at 11.03.27"></p>
<hr>
<p><strong>报告人简介</strong></p>
<p>罗京佳，南京信息工程大学教授，气候与应用前沿研究院院长，江苏省“双创个人和团队”计划，国家重点研发计划项目首席，CLIVAR太平洋区域委员会委员。2001年获日本东京大学物理海洋博士，曾在日本海洋科学开发机构和澳洲气象局长期工作，主要研究年际-年代际气候变化，全球气候模式研发，气候预测及其应用，取得了多项国际先进成果，荣获日本政府颁发的青年科学家奖等多项国内外奖励。共发表Nature、Science、PNAS、NSR等论文140余篇，Google Scholar统计的文章总引用数超过1万2千次。</p>
<p><strong>报告摘要</strong></p>
<p>本报告将介绍团队最近几年来在利用深度学习预测热带气候（ENSO和IOD）和东亚气候，以及利用深度学习订正动力模式预报结果的偏差及降尺度方面的方法和初步成果。</p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>第二届人工智能海洋学论坛1</title>
    <url>/2023/03/27/Seminar/20230327-%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%B5%B7%E6%B4%8B%E5%AD%A6%E8%AE%BA%E5%9D%9B1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="2023-03-27-上午"><a href="#2023-03-27-上午" class="headerlink" title="2023-03-27 上午"></a>2023-03-27 上午</h2><h3 id="陈大可-人工智能海洋学前景展望"><a href="#陈大可-人工智能海洋学前景展望" class="headerlink" title="陈大可  人工智能海洋学前景展望"></a>陈大可  人工智能海洋学前景展望</h3><p>短板：应用多，算法少</p>
<p>Bortnik and Camporeale, 2021    算法成熟度</p>
<ul>
<li><p>海洋大数据的构建：多源海洋数据的高校挖掘和处理</p>
</li>
<li><p>海洋现象的智能识别：海表面和水下</p>
</li>
<li><p>海洋变量智能预报：快速、准确、精细化</p>
</li>
<li><p>模式参数的智能估算：湍流混合系数的估算</p>
</li>
<li><p>智能海洋数值模式开发：Physics-informed Neutral Network 具有物理约束的神经网络</p>
<p>Fourier Neutral Operator  FourCastNet     概率预报 Ensemble</p>
</li>
</ul>
<p>估算动力系统的拓扑结构：梁湘三</p>
<h3 id="王凡-人工智能在海洋环境数据产品发展中的应用"><a href="#王凡-人工智能在海洋环境数据产品发展中的应用" class="headerlink" title="王凡 人工智能在海洋环境数据产品发展中的应用"></a>王凡 人工智能在海洋环境数据产品发展中的应用</h3><p>人无我有，人有我优</p>
<p>全流程、格点化</p>
<p>数据网站：</p>
<h3 id="李晓峰-AI-Applications-in-Oceanography"><a href="#李晓峰-AI-Applications-in-Oceanography" class="headerlink" title="李晓峰  AI Applications in Oceanography"></a>李晓峰  AI Applications in Oceanography</h3><p>分类、算法、融合、预报、新应用</p>
<p>Deep-learning-based information mining from ocean remote sensing imagery</p>
<ul>
<li>分类：内波识别、海雾的识别</li>
<li>融合：中尺度涡的探测（SST + SLA）、ISW amplitude retrieval: Lab-generated ISWs 迁移学习，实验室—&gt;真是海洋</li>
<li>算法：Hurricane Wind Speed Retrieval Based on Deep learning 海表面风速反演、台风风圈半径反演</li>
<li>预报：海冰预报 图到图 Encoder</li>
</ul>
<p>《Artifical Intelligene Oceanography》</p>
<h3 id="罗京佳-AI深度学习预测气候简介"><a href="#罗京佳-AI深度学习预测气候简介" class="headerlink" title="罗京佳  AI深度学习预测气候简介"></a>罗京佳  AI深度学习预测气候简介</h3><p>预测ENSO的卷积神经网络 LeNet Taylor-ResNet</p>
<p>用于短期ENSO预测的ConvLSTM模型</p>
<p>Channel attention  秋季 IOD 的季节预测模型</p>
<p>增加可预测来源的认知</p>
<p>副热带降水预测技巧：TUnet网络  西太副高和长江中下游夏季降水季节预测</p>
<p>中国夏季降水偏差订正和降尺度模型：确定性订正模型 AE+ResNet 18 &#x2F;  概率性订正模型  CVAE</p>
<h3 id="张荣华-基于自注意力神经网络模拟海气多变量三维场耦合系统及其对ENSO跨年度的成功预测"><a href="#张荣华-基于自注意力神经网络模拟海气多变量三维场耦合系统及其对ENSO跨年度的成功预测" class="headerlink" title="张荣华 基于自注意力神经网络模拟海气多变量三维场耦合系统及其对ENSO跨年度的成功预测"></a>张荣华 基于自注意力神经网络模拟海气多变量三维场耦合系统及其对ENSO跨年度的成功预测</h3><p>多变量—&gt;多变量  体—&gt;体</p>
<p>transformer 多变量三维场预测</p>
<hr>
<h3 id="王久珂-海浪数据驱动预报模型及业务化评估"><a href="#王久珂-海浪数据驱动预报模型及业务化评估" class="headerlink" title="王久珂 海浪数据驱动预报模型及业务化评估"></a>王久珂 海浪数据驱动预报模型及业务化评估</h3><p>Vision Transformer 架构 (VIT)   远距离相关性</p>
<p>Input  —&gt; Attention </p>
<h3 id="张钟-深度学习与模式预报"><a href="#张钟-深度学习与模式预报" class="headerlink" title="张钟 深度学习与模式预报"></a>张钟 深度学习与模式预报</h3><p>Transformer 可以较好地捕捉全局和局部特征</p>
<p>优化方法：1. Non autoregressive transformer; 2. MoE 混合专家系统；3. Warm up &amp; Curriculum learning; 4. 注意力权重共享；5. 并行计算；6. ZeRO</p>
<h3 id="覃梦娇-基于时空嵌入人工神经网络的PDO指数预测方法"><a href="#覃梦娇-基于时空嵌入人工神经网络的PDO指数预测方法" class="headerlink" title="覃梦娇  基于时空嵌入人工神经网络的PDO指数预测方法"></a>覃梦娇  基于时空嵌入人工神经网络的PDO指数预测方法</h3><p>递归、直接、联合策略</p>
<p>Sobel 算子计算梯度</p>
<p>Koopan mode </p>
<h3 id="谢文鸿-基于机器学习的风暴潮智能预报"><a href="#谢文鸿-基于机器学习的风暴潮智能预报" class="headerlink" title="谢文鸿 基于机器学习的风暴潮智能预报"></a>谢文鸿 基于机器学习的风暴潮智能预报</h3><h2 id="2023-03-27-下午"><a href="#2023-03-27-下午" class="headerlink" title="2023-03-27 下午"></a>2023-03-27 下午</h2><h3 id="田纪伟-重整化群与深度学习"><a href="#田纪伟-重整化群与深度学习" class="headerlink" title="田纪伟  重整化群与深度学习"></a>田纪伟  重整化群与深度学习</h3><p>分形集合 Fractal - 相似结构</p>
<h3 id="王新-基于机器学习的海洋中尺度涡属性和轨迹预测"><a href="#王新-基于机器学习的海洋中尺度涡属性和轨迹预测" class="headerlink" title="王新  基于机器学习的海洋中尺度涡属性和轨迹预测"></a>王新  基于机器学习的海洋中尺度涡属性和轨迹预测</h3><p>振幅、半径、最大旋转速度、经纬度、位移</p>
<p>属性预测： LSTM       轨迹：ExtraTrees</p>
<p>涡旋属性对轨迹预报准确性的影响</p>
<h3 id="蒋浩宇-基于深度学习的风矢量-海浪谱双向预测"><a href="#蒋浩宇-基于深度学习的风矢量-海浪谱双向预测" class="headerlink" title="蒋浩宇 基于深度学习的风矢量 - 海浪谱双向预测"></a>蒋浩宇 基于深度学习的风矢量 - 海浪谱双向预测</h3><p>波浪漂流浮标 —&gt; 风向、风速  误差 ~ 1.3m&#x2F;s  16°</p>
<p>应用：辅助数据质控、风浪和涌浪进行分离</p>
<p>风—&gt;浪  传统方法：利用海浪模式计算</p>
<p>挖掘海浪谱和当地及远距离历史风场的潜在非线性</p>
<p>重新划分以目标点为中心的极坐标系</p>
<h3 id="任沂斌-数据驱动的北极海冰智能预报预测研究"><a href="#任沂斌-数据驱动的北极海冰智能预报预测研究" class="headerlink" title="任沂斌  数据驱动的北极海冰智能预报预测研究"></a>任沂斌  数据驱动的北极海冰智能预报预测研究</h3><p>数值模式：在45天以上失去预报能力</p>
<p>统计模型：擅长中长期，处理的数据量有限</p>
<p>Seasonal Arctic sea ice forecasting with probabilisitic deep learning   (IceNet)</p>
<p>深度全卷积网络（FCN）  预测7-28天的海冰演变  天气尺度</p>
<p>次季节-季节尺度预报：加入约束和气候因子</p>
<p>对春季预报障碍的预报能力有所提升</p>
<p>Predicting the daily sea ice concentration on seasonal time scales of the Pan-Arctic by a data-driven method</p>
<p>提问：加强极值的处理</p>
<hr>
<h3 id="向妍霏-中国近海海雾智能预报"><a href="#向妍霏-中国近海海雾智能预报" class="headerlink" title="向妍霏 中国近海海雾智能预报"></a>向妍霏 中国近海海雾智能预报</h3><p>数据：自动气象站+中尺度模式</p>
<p>时间滞后因果分析</p>
<p>LightGBM：速度快、稳定、具有可解释性</p>
<p>焦点损失函数（Focal Loss）  针对样本类别不平衡的问题</p>
<p>极端事件预报：焦点损失、集成学习、样本重采样</p>
<h3 id="林永成-Optimization-of-the-summer-Arctic-sea-Ice-Concentration-Prediction-based-on-KNN"><a href="#林永成-Optimization-of-the-summer-Arctic-sea-Ice-Concentration-Prediction-based-on-KNN" class="headerlink" title="林永成 Optimization of the summer Arctic sea Ice Concentration Prediction based on KNN"></a>林永成 Optimization of the summer Arctic sea Ice Concentration Prediction based on KNN</h3><p>SIPN 各机构9月海冰预测</p>
<p>LSTM  CNNN IceNet  IceTFT 月尺度预测</p>
<p>KNN 预报原理：相似性预报</p>
<h3 id="岑浩彬-Applying-deep-learning-in-the-prediction-of-Chl-a-in-the-East-China-Sea"><a href="#岑浩彬-Applying-deep-learning-in-the-prediction-of-Chl-a-in-the-East-China-Sea" class="headerlink" title="岑浩彬 Applying deep learning in  the prediction of Chl-a in the East China Sea"></a>岑浩彬 Applying deep learning in  the prediction of Chl-a in the East China Sea</h3><p>LSTM </p>
<p>数据：GlobColour 4km daily 2011-2021</p>
<p>使用对数的叶绿素输入</p>
<h3 id="曹宇-基于EEMD的SEQ-TQ-SEQ海浪波高模型预测"><a href="#曹宇-基于EEMD的SEQ-TQ-SEQ海浪波高模型预测" class="headerlink" title="曹宇 基于EEMD的SEQ-TQ-SEQ海浪波高模型预测"></a>曹宇 基于EEMD的SEQ-TQ-SEQ海浪波高模型预测</h3><hr>
<h3 id="张荣望-基于深度学习的中国近海表层水汽卫星遥感估计"><a href="#张荣望-基于深度学习的中国近海表层水汽卫星遥感估计" class="headerlink" title="张荣望 基于深度学习的中国近海表层水汽卫星遥感估计"></a>张荣望 基于深度学习的中国近海表层水汽卫星遥感估计</h3><p>22 GHz 吸收线  微波辐射计</p>
<p>利用大气柱水汽含量反演表层水汽</p>
<p>现场观测+遥感观测 （<a href="http://www.remss.com/">www.remss.com</a>  微波辐射计观测）</p>
<p>DNN 多个子模型  随机重采样  EMTnet</p>
<p>考虑环境变量后，模型表现得更好</p>
<p>中国近海表层水汽格点数据—&gt;海气通量产品</p>
<h3 id="卢文芳-”深海遥感“与海洋数据智能构建"><a href="#卢文芳-”深海遥感“与海洋数据智能构建" class="headerlink" title="卢文芳 ”深海遥感“与海洋数据智能构建"></a>卢文芳 ”深海遥感“与海洋数据智能构建</h3><p>”贫富差距“：模式与观测，表层与内部</p>
<p>从表层推测内部三维结构</p>
<p>超分辨率：精细化数据产品</p>
<p><strong>先K-means分区再分别建立网络</strong></p>
<p>提问：物理驱动的人工神经网络</p>
<h3 id="韦骏-一种基于机器学习的地波雷达数据校正方法"><a href="#韦骏-一种基于机器学习的地波雷达数据校正方法" class="headerlink" title="韦骏  一种基于机器学习的地波雷达数据校正方法"></a>韦骏  一种基于机器学习的地波雷达数据校正方法</h3><p>粤港澳大湾区地波雷达网</p>
<h3 id="黎鑫-一种基于DIVA的提高海浪长期再分析资料数值水平的融合方法"><a href="#黎鑫-一种基于DIVA的提高海浪长期再分析资料数值水平的融合方法" class="headerlink" title="黎鑫  一种基于DIVA的提高海浪长期再分析资料数值水平的融合方法"></a>黎鑫  一种基于DIVA的提高海浪长期再分析资料数值水平的融合方法</h3><p>ERA5 低估高风速，最大风速的低估随着风速提高进一步增加（张弛 2023）</p>
<p>卫星高度数据和浮标进行订正</p>
<p>ICOADS 现场观测资料  1662年至今以来的船只、浮标和其他海洋台站的实测信息</p>
<p>DIVA  n维变分数据分析方法，与最优插值相似，更加简洁高效</p>
<h3 id="张佳丽-基于人工智能的高精度海洋三维温盐场构建"><a href="#张佳丽-基于人工智能的高精度海洋三维温盐场构建" class="headerlink" title="张佳丽 基于人工智能的高精度海洋三维温盐场构建"></a>张佳丽 基于人工智能的高精度海洋三维温盐场构建</h3><p>生成对抗：生成器+判别器</p>
<p>”水面—水下“映射： SST、SLA、SSTA —&gt; 次表层温度  UNet      判别器：真实vs生成器生成的次表层温度</p>
<p>”温度—盐度“映射：三维次表层温度—&gt;三维盐度  UNet </p>
<p>Conv3D block  Residual block 残差三维卷积</p>
<p>Inception Residual block 同一层采用不同卷积核，不加深网络，通过增加广度优化网络</p>
<p>研究范围：中国近海</p>
<p>提问：HYCOM 在浅海地区质量不好</p>
<h3 id="杜沛-面向数字孪生的海岸带数据体系构建"><a href="#杜沛-面向数字孪生的海岸带数据体系构建" class="headerlink" title="杜沛 面向数字孪生的海岸带数据体系构建"></a>杜沛 面向数字孪生的海岸带数据体系构建</h3><h3 id="刘于-超算在气象海洋行业的"><a href="#刘于-超算在气象海洋行业的" class="headerlink" title="刘于  超算在气象海洋行业的"></a>刘于  超算在气象海洋行业的</h3>]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>裘波</title>
    <url>/2022/10/21/Seminar/20221021-%E8%A3%98%E6%B3%A2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Lecture-2-Recirculation-gyre-amp-Multiple-equilibria-meandering-vs-straight-paths-of-Kuroshio-off-Japan-裘波"><a href="#Lecture-2-Recirculation-gyre-amp-Multiple-equilibria-meandering-vs-straight-paths-of-Kuroshio-off-Japan-裘波" class="headerlink" title="Lecture 2: Recirculation gyre &amp; Multiple equilibria:meandering vs.straight paths of Kuroshio off Japan 裘波"></a>Lecture 2: Recirculation gyre &amp; Multiple equilibria:meandering vs.straight paths of Kuroshio off Japan 裘波</h2><p><img src="https://p.ipic.vip/ze62v6.jpg" alt="Screen Shot 2022-10-21 at 15.03.06"></p>
<p><img src="https://p.ipic.vip/awuu5a.jpg" alt="Screen Shot 2022-10-21 at 15.03.34"></p>
<p><img src="https://p.ipic.vip/bjgff2.jpg" alt="Screen Shot 2022-10-21 at 15.11.22"></p>
<p><img src="https://p.ipic.vip/b23k24.jpg" alt="Screen Shot 2022-10-21 at 15.19.27"></p>
<ul>
<li>通过南北的涡旋交换，使得西边界流的vorticity得到耗散</li>
</ul>
<p><img src="https://p.ipic.vip/537xsv.jpg" alt="Screen Shot 2022-10-21 at 15.19.51"></p>
<p><img src="https://p.ipic.vip/idptm3.jpg" alt="Screen Shot 2022-10-21 at 15.21.08"></p>
<ul>
<li>与ENSO无关的intrisinc振荡特征</li>
</ul>
<p>理论一：由上游的流量决定</p>
<p><img src="https://p.ipic.vip/q5fjrz.jpg" alt="Screen Shot 2022-10-21 at 15.26.29"></p>
<p><img src="https://p.ipic.vip/6z0jrh.jpg" alt="Screen Shot 2022-10-21 at 15.28.36"></p>
<p>该理论认为上游流量小的时候容易产生meander，但与实际观测的匹配度不够</p>
<p>理论二：sulf-sustained</p>
<p><img src="https://p.ipic.vip/zvjagm.jpg" alt="Screen Shot 2022-10-21 at 15.31.12"></p>
<p>试验一：即使使用climatological的wind forcing（没有interannal的variability），仍然可以存在large meander</p>
<p><img src="https://p.ipic.vip/arnl90.jpg" alt="Screen Shot 2022-10-21 at 15.32.13"></p>
<p><img src="https://p.ipic.vip/r08qsk.jpg" alt="Screen Shot 2022-10-21 at 15.32.21"></p>
<p><img src="https://p.ipic.vip/4ltcya.jpg" alt="Screen Shot 2022-10-21 at 15.32.47"></p>
<p><img src="https://p.ipic.vip/pwu10z.jpg" alt="Screen Shot 2022-10-21 at 15.33.40"></p>
<p><img src="https://p.ipic.vip/um10hf.jpg" alt="Screen Shot 2022-10-21 at 15.33.53"></p>
<ul>
<li>南北的eddy交换后，耗散了风能的输入</li>
</ul>
<p><img src="https://p.ipic.vip/8ku557.jpg" alt="Screen Shot 2022-10-21 at 15.36.09"></p>
<p><img src="https://p.ipic.vip/qc8nxk.jpg" alt="Screen Shot 2022-10-21 at 15.36.27"></p>
<ul>
<li>低纬度地区为低位涡水</li>
</ul>
<p>风场在变，耗散在变，导致了出现的频率难以预测</p>
<p>试验二：减弱风场输入</p>
<p><img src="https://p.ipic.vip/gjzmm8.jpg" alt="Screen Shot 2022-10-21 at 15.41.44"></p>
<ul>
<li>不再需要eddy来耗散</li>
</ul>
<p><img src="https://p.ipic.vip/sxc3i8.jpg" alt="Screen Shot 2022-10-21 at 15.43.28"></p>
<ul>
<li>黑潮的状态很难预测，类比地震的不稳定</li>
</ul>
<p><img src="https://p.ipic.vip/o89t5o.jpg" alt="Screen Shot 2022-10-21 at 15.44.36"></p>
<ul>
<li>OFS很难再现黑潮的 large meander 特征</li>
</ul>
<p><img src="https://p.ipic.vip/yixk4h.jpg" alt="Screen Shot 2022-10-21 at 15.46.21"></p>
<ul>
<li>与东海的流量无关</li>
</ul>
<p><img src="https://p.ipic.vip/iut8t7.jpg" alt="Screen Shot 2022-10-21 at 15.47.18"></p>
<p><img src="https://p.ipic.vip/x15oli.jpg" alt="Screen Shot 2022-10-21 at 15.47.51"></p>
<p>-模式中：PV influx很好, 但eddy dissipation很小，eddy flux太大，导致meander的频率太高</p>
<p>关键点：需要改进模式对于dissipation的模拟</p>
<p><img src="https://p.ipic.vip/zrmrqj.jpg" alt="Screen Shot 2022-10-21 at 15.49.56"></p>
<p>西边界流相关的主要研究角度：</p>
<ol>
<li>内在的非线性和dissipation的理解</li>
<li>海气耦合的角度：中尺度涡和亚中尺度对大气边界层的作用</li>
</ol>
<p><img src="https://p.ipic.vip/n6bn92.jpg" alt="Screen Shot 2022-10-21 at 16.00.02"></p>
<ul>
<li><p>延伸体在35°N左右开始往东走，而非supoloar gyre所在的40°N，由于eddy的存在</p>
</li>
<li><p>雷诺数，涡旋的作用在模式中究竟如何表现</p>
</li>
<li><p>Climate model 中，西边界流的变化，模态水的变化在没有很好resolve eddy的情况下，其未来预估的可靠性问题</p>
</li>
</ul>
<p>Comments on 潮汐的影响：</p>
<ol>
<li><p>有潮汐的情况下，模式dissipation更强，eddy作用减弱，理论上meander将减弱</p>
</li>
<li><p>Large meander 不能用 regional model 来做: 除了质量守恒外，还有PV守恒的问题，边界条件的影响太大；用regional model来研究西边界流的合理性问题；</p>
</li>
</ol>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>甘剑平</title>
    <url>/2022/10/19/Seminar/20221019-%E7%94%98%E5%89%91%E5%B9%B3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="热带海洋环境国家重点实验室特邀报告-甘剑平-香港科技大学"><a href="#热带海洋环境国家重点实验室特邀报告-甘剑平-香港科技大学" class="headerlink" title="热带海洋环境国家重点实验室特邀报告 甘剑平 香港科技大学"></a>热带海洋环境国家重点实验室特邀报告 甘剑平 香港科技大学</h2><p><img src="https://p.ipic.vip/m1rr20.jpg" alt="Screen Shot 2022-10-19 at 10.00.37"></p>
<p><img src="https://p.ipic.vip/9dgqny.jpg" alt="Screen Shot 2022-10-19 at 10.04.30"></p>
<p><img src="/Users/ruyanc/Desktop/xw8erp.jpg" alt="Screen Shot 2022-10-19 at 10.09.40"></p>
<p><img src="https://p.ipic.vip/d4gbxf.jpg" alt="Screen Shot 2022-10-19 at 10.13.43"></p>
<p>加上潮汐，需要边界条件，和wind-driven的边界条件不一样</p>
<p>潮汐对南海每个地方的影响不一样：1. 每个地方的潮不一样；2. 每个地方的潮引起的亚潮动力学不一样；</p>
<p>1和2的相互作用；</p>
<p>最关键因素：南海不同地区的地形不一样</p>
<p><img src="https://p.ipic.vip/m7rn7p.jpg" alt="Screen Shot 2022-10-19 at 10.20.36"></p>
<p><img src="https://p.ipic.vip/2cl1jp.jpg" alt="Screen Shot 2022-10-19 at 10.21.09"></p>
<p><img src="https://p.ipic.vip/osgezt.jpg" alt="Screen Shot 2022-10-19 at 10.26.18"></p>
<p><img src="https://p.ipic.vip/okc3ng.jpg" alt="Screen Shot 2022-10-19 at 10.29.06"></p>
<p><img src="https://p.ipic.vip/m5of5m.jpg" alt="Screen Shot 2022-10-19 at 10.31.02"></p>
<p><img src="https://p.ipic.vip/phds01.jpg" alt="Screen Shot 2022-10-19 at 10.32.09"></p>
<p><img src="https://p.ipic.vip/346h5g.jpg" alt="Screen Shot 2022-10-19 at 10.38.23"></p>
<p><img src="https://p.ipic.vip/041ucq.jpg" alt="Screen Shot 2022-10-19 at 10.40.47"></p>
<p><img src="https://p.ipic.vip/0bfckf.jpg" alt="Screen Shot 2022-10-19 at 10.56.02"></p>
<p><img src="https://p.ipic.vip/rk4t56.jpg" alt="Screen Shot 2022-10-19 at 10.56.13"></p>
<p><img src="https://p.ipic.vip/cjp4we.jpg" alt="Screen Shot 2022-10-19 at 10.57.05"></p>
<p><img src="https://p.ipic.vip/s0ohgu.jpg" alt="Screen Shot 2022-10-19 at 10.58.13"></p>
<p><img src="https://p.ipic.vip/xi18mf.jpg" alt="Screen Shot 2022-10-19 at 11.02.22"></p>
<p><img src="https://p.ipic.vip/t4557y.jpg" alt="Screen Shot 2022-10-19 at 11.08.08"></p>
<hr>
<ul>
<li>报告人简介</li>
</ul>
<p>甘剑平，香港科技大学海洋科学系与数学系讲座教授；长期从事海洋环流、海洋生态系统动力学及数值模拟等领域的科学研究。近年来，甘剑平教授致力于南海多尺度海洋环流及其动力过程和南海物理-生物地球化学耦合研究，从科学上对南海由-季风-海峡入侵流-潮汐-地形等多物理强迫的环流以及相应的生态系统响应进行了深入的研究分析，促进了对南海环流动力及生物地球化学过程的认知。结合现场观测调查，他的研究团队在中国海首次建立了多尺度海洋模拟系统，该模型可以在不同的时空尺度上将近岸港湾、南海北部陆架、南海、中国海以至太平洋动态连接起来，对各种海洋过程展开研究分析；在南海北部海区中河流冲淡水、涌升、下沉流以及混合过程中的物理-生物耦合研究也获得一系列首创性成果，并已发表在主流国际学术期刊中。</p>
<ul>
<li>报告题目</li>
</ul>
<p>大湾区海洋环境挑战的内在科学</p>
<ul>
<li>报告摘要</li>
</ul>
<p>近岸海域的富营养化&#x2F;缺氧以及伴随的生态系统响应，是全球近海海洋面临的巨大环境和科学挑战。粤港澳大湾区海域目前受到持续的并愈发严重的富营养化&#x2F;缺氧问题困扰。影响大湾区海洋环境的内在科学问题是什么？如何使用先进的跨学科观测和数值模拟方法，探究大湾区海域物理-生物地球化学耦合过程，分析其海洋环境现状和发展趋势，并建立相应的应对策略，以缓解大湾区海洋富营养氧化和缺氧问题？</p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>GPU预测风能</title>
    <url>/2022/10/21/Seminar/20221115-GPU%E9%A2%84%E6%B5%8B%E9%A3%8E%E8%83%BD/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="利用-GPU-加速-WRF预测风能"><a href="#利用-GPU-加速-WRF预测风能" class="headerlink" title="利用 GPU 加速 WRF预测风能"></a>利用 GPU 加速 WRF预测风能</h1><p>准确的天气模型对于企业正确预测可再生能源的生产和制定自然灾害预案至关重要。仅 2022 年，无效和无法预测的天气就造成了约 7140 亿 美元的损失。为了避免这种情况，企业需要更快、更便宜、更精准的天气模型。</p>
<p>在 GTC23 上，微软和 TempoQuest 详细介绍了他们如何与 NVIDIA 合作一起解决这个能源和气候问题。NVIDIA 初创加速计划成员 TempoQuest 实现了超本地、低延迟的天气和环境预测。该多学科合作团队涵盖大气科学、气象学、高性能计算（HPC）AI、机器学习（ML）、工程等领域，是将 GPU 引入环境领域的先锋，包括：</p>
<ul>
<li>第一个将 WRF 移植到 GPU 上</li>
<li>第一个以比基于 CPU 的预测更快、更便宜的方式创建更高分辨率的预测</li>
<li>第一个开发出 GPU 软件即服务的天气预报系统</li>
</ul>
<p>本文中将介绍 TempoQuest 如何利用微软 Azure 上的 NVIDIA 加速计算，将传统的天气研究和预报（WRF）软件移植到 GPU 上、提供高于 1 公里的分辨率以及 1 分钟至 1 小时的时间分辨率并加快对可再生风能和太阳能资源发电的预测。</p>
<p><strong>公用事业单位在整合可再生能源过程中所面临的挑战</strong></p>
<p>公用事业单位在他们的电网中使用可再生能源（主要是风能和太阳能）是具有挑战性的。这些能源因环境因素而异，比如云层覆盖和风速等。如果可再生能源的发电量不足以满足需求，公用事业单位必须使用“旋转备用”，即由发电机生产的碳基电力来弥补缺口。为了更好地预测可再生能源发电，需要快速、准确、经济的天气预报。</p>
<p><img src="https://p.ipic.vip/rczxbn.png" alt="Image"></p>
<p>图 1 标准电网基础设施示意图，包括发电、输电和配电</p>
<p>能源行业需要实现三个关键功能：发电、输电和配电。发电目前主要使用碳基燃料，但正在向包括风能和太阳能在内的可再生能源过渡，以实现净零排放。输电指的是产生的电力通过升压变压器后经高压线传输。在遥远的电网边缘，电力经变压器和变电站“降压”后，输送给家庭和企业的用电者（240 V &#x2F; 120 V）。</p>
<p>如果要在电网中增加更多可再生能源，公用事业单位不仅要整合新的发电站，还要建造更多高压输电线路和塔架。这就给电网维护带来了更高的复杂性和成本，包括投资和运营费用。高分辨率的 GPU 加速 WRF 可以通过减少对碳基电力的依赖和优化可再生能源的使用帮助实现这一目标。</p>
<p><strong>使用 GPU 加速 WRF</strong></p>
<p>AceCAST 代表“加速预测”，通过运行一个名为“天气研究和预报”（WRF）的区域模型可实现加速预测。目前，已有 160 个国家的 5 万名用户使用该模型。通过将 WRF 移植到使用专有的 OpenACC 和 CUDA 带有 NVIDIA GPU 的 x86 系统上运行，并在多 GPU 和多节点系统上进行扩展。AceCAST 支持所有主要的 WRF 动力学、物理学方案和名词表选项，可直接取代现有的 WRF 配置。</p>
<p>AceCAST 的众多优点包括更快的求解时间、更高的分辨率和精度、对局部天气现象更加深入的认识以及更低的计算成本。</p>
<p><strong>测试表明，在天气预报和可再生能源预测方面，GPU 比 CPU 速度更快、分辨率更高且更具成本效益。</strong>这一加速解决方案对于减少碳排放、提升电网可靠性和管理以及降低用电者的用电成本十分重要。</p>
<p><strong>AceCAST 验证和性能成本分析</strong></p>
<p>为了验证基准测试结果，首先要保证 CPU WRF 与 GPU WRF 的差异在可接受的范围内。团队在几个时间和空间预测范围内测试了模型性能，最终验证了数千个测试案例，以确保 AceCAST 产生与 CPU WRF 相同的结果。在微软 Azure 上运行性能测试时，团队发现两者在性能和成本上都有很大的差异。</p>
<p><strong>基于 CPU 的 WRF – Standard HB120rs_v3 VMs（HBv3）：</strong></p>
<p>**<br>**</p>
<ul>
<li>120 颗 AMD EPYC™ 7V73X 系列（Milan-X）CPU 核</li>
<li>450 GB 内存（ 350 GB&#x2F;s 内存带宽）</li>
<li>200 Gb&#x2F;s HDR InfiniBand</li>
<li>2 个1 TB NVMe 固态硬盘</li>
<li>NCAR WRF 4.2.2</li>
<li>使用 Parallel net-CDF</li>
<li>使用英特尔编译器和 MPI 进行编译</li>
</ul>
<p><strong>GPU 加速 WRF - Standard_ND96amsr_A100_v4（NDmv4）：</strong></p>
<ul>
<li>8 个 NVIDIA A100 Tensor Core GPUs (80GB)</li>
<li>NVLink 3.0（200 Gb&#x2F;s HDR InfiniBand）</li>
<li>96 颗 AMD EPYC™ 7V12 系列（Rome）CPU 核</li>
<li>8 个 1 TB NVMe 固态硬盘</li>
<li>AceCAST 2.1</li>
<li>使用 OpenACC 和 CUDA 的专有实现</li>
<li>使用 MPI 在多节点和多 GPU 上进行扩展</li>
</ul>
<p><strong>Azure 代管式 Lustre 文件系统</strong></p>
<ul>
<li>40 TiB 存储 Azure 代管容量</li>
<li>10000 MB&#x2F;s 最大吞吐量</li>
</ul>
<p><img src="https://p.ipic.vip/8kd9i9.png" alt="Image"></p>
<p>图 2 基于 CPU 的 WRF 与 TempoQuest AceCAST 的性能价格比较分析</p>
<p>结果显示，与一个节点上基于 CPU 的 WRF 相比，一个节点上的 GPU 加速 WRF（AceCAST）的速度加快了约 9 倍，而要实现与一个 GPU 节点类似的性能，需要 18 个 CPU 节点。这些结果至关重要，因为更快、更低成本的天气预报使公用事业单位能够更加准确地预测可再生能源发电、提供稳定可靠的电力并避免过长时间的停电。</p>
<p>AceCAST 3.0.1 上的进一步测试显示其可继续提升性能。团队使用了一个嵌套域，外域由 500 万个网格点（430x331x38v）和 15 公里的网格间距组成，内域由 8000 万个网格点（1551x1361x38v）和 3 公里的网格间距组成。</p>
<p><img src="https://p.ipic.vip/0v1xvp.png" alt="Image"></p>
<p>图 3 TempoQuest AceCAST 以最佳配置运行一项作业的性能成本图</p>
<p>结果显示，AceCAST 在 1xNDmA100V4（8 个 GPU）上的内域计算和通信时间比 1xHBv3（64 个CPU）快 16.8 倍。单个作业的最佳配置是在 16 个 HBv3（CPU）虚拟机上运行 WRF，在 1 个包含 8 个 GPU 的 NDmA100（GPU）虚拟机上运行 AceCAST。<strong>在这种情况下，AceCAST 比基于 CPU 的 WRF 运行速度快 7%，成本低 75%。</strong></p>
<p><strong>可再生发电功率预测</strong></p>
<p>最后一步是将 AceCAST 应用于可再生能源预测。美国的公用事业单位掌握着所有 7 万多台风力发电机的规格以及每个风能和太阳能节点的位置。通过使用专有的天气-电力算法，AceCAST 可提供更高的预测分辨率，每天对特定可再生能源发电站点作出小时级的精确功率预测（MW）。</p>
<p><strong>电网脱碳化</strong></p>
<p>随着发电资产从集中化的碳基技术过渡到清洁的分布式能源资源，电网面临着实时管理供需的挑战。通过预测可再生资产的性能，电力公司能够提高电网的可靠性和弹性。<strong>NVIDIA、微软和 TempoQuest 正在联手帮助解决这一重大的社会及全球挑战。</strong></p>
<p>凭借 AceCAST 这一 GPU 加速 WRF，TempoQuest 正在以更低的成本加速风能和太阳能可再生资源的发电功率预测。这有助于优化负载和发电的平衡、减少公用事业单位的运营成本、管理可再生能源输出的波动并产生更加可靠的预测，进而减少对碳基电力储备的依赖。</p>
<p><strong>扫描下方海报二维码</strong>，观看 NVIDIA 创始人兼 CEO 黄仁勋在 COMPUTEX 2023 的主题演讲直播回放，主题演讲中文字幕版已上线，了解 AI、图形及其他领域的最新进展！</p>
<p><img src="https://p.ipic.vip/31ynll.jpg" alt="Image"></p>
<p><img src="https://p.ipic.vip/33mf9s.png" alt="Image"></p>
<p><img src="https://p.ipic.vip/wrciij.png" alt="Image"></p>
<p><img src="https://p.ipic.vip/y530io.png" alt="Image"></p>
<p><img src="https://p.ipic.vip/kmtqnt.png" alt="Image"></p>
<p><img src="https://p.ipic.vip/gsoqjo.png" alt="Image"></p>
<p><img src="https://p.ipic.vip/y5toqi.png" alt="Image"></p>
<p><img src="https://p.ipic.vip/uc0ola.png" alt="Image"></p>
<p><img src="https://p.ipic.vip/v3zetm.png" alt="Image"></p>
<p><img src="https://p.ipic.vip/3vn0x1.png" alt="Image"></p>
<p><img src="https://p.ipic.vip/53bwih.png" alt="Image"></p>
<p><img src="https://p.ipic.vip/9k17d0.png" alt="Image"></p>
<p><img src="https://p.ipic.vip/lkztwu.png" alt="Image"></p>
<p><img src="https://p.ipic.vip/n9ztza.png" alt="Image"></p>
<p><img src="https://p.ipic.vip/622d9e.png" alt="Image"></p>
<p><img src="https://p.ipic.vip/jo4nm6.png" alt="Image"></p>
<p><img src="https://p.ipic.vip/2k63gj.png" alt="Image"></p>
<p><img src="https://p.ipic.vip/jycmix.png" alt="Image"></p>
<p><img src="https://p.ipic.vip/5mfwqi.png" alt="Image"></p>
<p><img src="https://p.ipic.vip/a2adln.png" alt="Image"></p>
<p><img src="https://p.ipic.vip/chyanc.png" alt="Image"></p>
<p><img src="https://p.ipic.vip/lhxi7k.png" alt="Image"></p>
<p><img src="https://p.ipic.vip/ka5vq0.png" alt="Image"></p>
<p><img src="https://p.ipic.vip/c5szne.png" alt="Image"></p>
<p><img src="https://p.ipic.vip/tyxove.png" alt="Image"></p>
<p><img src="https://p.ipic.vip/34fk8j.png" alt="Image"></p>
<p><img src="https://p.ipic.vip/6r5887.png" alt="Image"></p>
<p><img src="https://p.ipic.vip/cnvwaw.png" alt="Image"></p>
<p><img src="https://p.ipic.vip/ex8v3h.png" alt="Image"></p>
<p><img src="https://p.ipic.vip/hy92tw.png" alt="Image"></p>
<p><img src="https://p.ipic.vip/3orejx.png" alt="Image"></p>
<p><img src="https://p.ipic.vip/cd9fxd.png" alt="Image"></p>
<p><img src="https://p.ipic.vip/8pdxk5.png" alt="Image"></p>
<p><img src="https://p.ipic.vip/94nhif.png" alt="Image"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>第二届人工智能海洋学论坛2</title>
    <url>/2023/03/28/Seminar/20230328-%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%B5%B7%E6%B4%8B%E5%AD%A6%E8%AE%BA%E5%9D%9B2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="2023-03-28-上午"><a href="#2023-03-28-上午" class="headerlink" title="2023-03-28 上午"></a>2023-03-28 上午</h2><h3 id="苏华-全球海洋热含量AI遥感反演"><a href="#苏华-全球海洋热含量AI遥感反演" class="headerlink" title="苏华  全球海洋热含量AI遥感反演"></a>苏华  全球海洋热含量AI遥感反演</h3><p>Satelite data + Argo   LightGBM（高效、轻便、准确、泛华能力强）+LSTM</p>
<p>中深海增暖在加剧，越来越多的热量被深海吸收</p>
<p><img src="https://p.ipic.vip/87uy8a.jpg" alt="WechatIMG2869"></p>
<p><strong>DORS海洋三维温度数据产品：</strong></p>
<p><a href="http://www.doi.org/10.57760/sciencedb.01918">http://www.doi.org/10.57760/sciencedb.01918</a></p>
<p><strong>OPEN海洋热含量数据产品：</strong></p>
<p><a href="http://www.doi.org/10.11922/sciencedb.01058">http://www.doi.org/10.11922/sciencedb.01058</a></p>
<p><a href="http://www.doi.org/10.11922/sciencedb.01154">http://www.doi.org/10.11922/sciencedb.01154</a></p>
<p><strong>苏华个人主页</strong>：</p>
<p>[<a href="https://adcfj.cn:444/sirc/door/team/TeacherList/Detail?personId=%20440%5D">https://adcfj.cn:444/sirc/door/team/TeacherList/Detail?personId=%20440]</a>(<a href="https://adcfj.cn:444/sirc/door/team/TeacherList/Detail?personId=">https://adcfj.cn:444/sirc/door/team/TeacherList/Detail?personId=</a> 440)</p>
<p><a href="https://www.researchgate.net/profile/Hua-Su-4">https://www.researchgate.net/profile/Hua-Su-4</a></p>
<h3 id="高乐-PHYSICAL-KNOWLEDGE-ENHANCED-DEEP-NEURAL-NETWORK-FOR-DETECTION-AND-ANALYSIS-OF-GREEN-TIDE-IN-THE-YELLOW-SEA-黄海绿潮探测"><a href="#高乐-PHYSICAL-KNOWLEDGE-ENHANCED-DEEP-NEURAL-NETWORK-FOR-DETECTION-AND-ANALYSIS-OF-GREEN-TIDE-IN-THE-YELLOW-SEA-黄海绿潮探测" class="headerlink" title="高乐  PHYSICAL KNOWLEDGE ENHANCED DEEP NEURAL NETWORK FOR DETECTION AND ANALYSIS OF GREEN TIDE IN THE YELLOW SEA 黄海绿潮探测"></a>高乐  PHYSICAL KNOWLEDGE ENHANCED DEEP NEURAL NETWORK FOR DETECTION AND ANALYSIS OF GREEN TIDE IN THE YELLOW SEA 黄海绿潮探测</h3><p>海藻识别与提取</p>
<p>MODIS&#x2F;SAR   AlgaeNet model</p>
<p>SAR 不受云雨影响，全天候</p>
<p>SAR 完全漂浮于海表面   光学 有一定穿透力</p>
<h3 id="宫响-基于卷积的南海海盆区次表层叶绿素最大值分布场重建"><a href="#宫响-基于卷积的南海海盆区次表层叶绿素最大值分布场重建" class="headerlink" title="宫响 基于卷积的南海海盆区次表层叶绿素最大值分布场重建"></a>宫响 基于卷积的南海海盆区次表层叶绿素最大值分布场重建</h3><p>SST 海表Chl-a  BGC-Argo 叶绿素剖面  DNN  日均叶绿素剖面</p>
<p>基础数据集（卫星SST、海表叶绿素 OCCCI 4km DINEOF弥补缺失率）</p>
<p>相似目标数据集（NEMO模式结果）  </p>
<p>目标数据集（BGC-Argo 冲采样） </p>
<p>CNN 三段式反演</p>
<p>提问：高低频分开学习</p>
<h3 id="杜星-人工智能助力海洋工程地质现象智能识别预测"><a href="#杜星-人工智能助力海洋工程地质现象智能识别预测" class="headerlink" title="杜星 人工智能助力海洋工程地质现象智能识别预测"></a>杜星 人工智能助力海洋工程地质现象智能识别预测</h3><p>迁移学习</p>
<h3 id="王充-利用深度学习从红外卫星图像中反演热带气旋风圈半径"><a href="#王充-利用深度学习从红外卫星图像中反演热带气旋风圈半径" class="headerlink" title="王充  利用深度学习从红外卫星图像中反演热带气旋风圈半径"></a>王充  利用深度学习从红外卫星图像中反演热带气旋风圈半径</h3><p>R34 （中心到34kt风速的距离 1kt&#x3D; 0.614m&#x2F;s） R50   R64 四个象限</p>
<p>飞机观测 、数值模拟、卫星反演</p>
<p>云导风需要较高时间分辨率的卫星资料</p>
<p>损失函数增加样本较少样本的权重</p>
<h3 id="熊一真-CONSTRAINED-ENERGY-MINIMIZATION-FOR-ARCTIC-SEA-ICE-EXTRACTION-WTIH-ERROR-ACCUMULATION-ENHANCED-NEURAL-DYNAMICS"><a href="#熊一真-CONSTRAINED-ENERGY-MINIMIZATION-FOR-ARCTIC-SEA-ICE-EXTRACTION-WTIH-ERROR-ACCUMULATION-ENHANCED-NEURAL-DYNAMICS" class="headerlink" title="熊一真 CONSTRAINED ENERGY MINIMIZATION FOR ARCTIC SEA-ICE EXTRACTION WTIH ERROR-ACCUMULATION ENHANCED NEURAL DYNAMICS"></a>熊一真 CONSTRAINED ENERGY MINIMIZATION FOR ARCTIC SEA-ICE EXTRACTION WTIH ERROR-ACCUMULATION ENHANCED NEURAL DYNAMICS</h3><p>adaptive thersholding 、texture analyses</p>
<h2 id="2023-03-28-下午"><a href="#2023-03-28-下午" class="headerlink" title="2023-03-28 下午"></a>2023-03-28 下午</h2><h3 id="周磊-机器学习和南亚季风预报初探"><a href="#周磊-机器学习和南亚季风预报初探" class="headerlink" title="周磊  机器学习和南亚季风预报初探"></a>周磊  机器学习和南亚季风预报初探</h3><p>中印度洋模态  S2S model </p>
<p>投影得到的CIO序列存在高频噪音，影响预报能力</p>
<p>如何解决？ LSTM</p>
<h3 id="洪梅-热带太平洋海气要素场的非线性动力统计模型重构与预测试验"><a href="#洪梅-热带太平洋海气要素场的非线性动力统计模型重构与预测试验" class="headerlink" title="洪梅  热带太平洋海气要素场的非线性动力统计模型重构与预测试验"></a>洪梅  热带太平洋海气要素场的非线性动力统计模型重构与预测试验</h3><ol>
<li><p>遗传优化动力预测系统</p>
</li>
<li><p>人工神经网络温盐剖面反演：果蝇优化算法   GRNN广义回归神经网络</p>
</li>
<li><p>风险评估：自适应贝叶斯网络</p>
<p>洪梅 13401926082      张韧 18101596351</p>
</li>
</ol>
<h3 id="张翰-深度学习方法预报热带气旋引起的海表温度变化研究"><a href="#张翰-深度学习方法预报热带气旋引起的海表温度变化研究" class="headerlink" title="张翰  深度学习方法预报热带气旋引起的海表温度变化研究"></a>张翰  深度学习方法预报热带气旋引起的海表温度变化研究</h3><p>热带气旋强度预报不足</p>
<p>Upper ocean response to tropical cyclones: a review  2021 Geosicence Letters</p>
<p>输入：LSTM  10m uv ssh sst T100  预报：6h后的SST （6 hourly）</p>
<h3 id="张弛-ERA5最大风速评估与多要素机器学习联合订正"><a href="#张弛-ERA5最大风速评估与多要素机器学习联合订正" class="headerlink" title="张弛 ERA5最大风速评估与多要素机器学习联合订正"></a>张弛 ERA5最大风速评估与多要素机器学习联合订正</h3><p>低风速正偏差、高风速负偏差</p>
<p>五级风开始出现明显负偏差</p>
<p>RF 和 DNN </p>
<p>中性风 （稳态）和  海平面气压（波动态）的影响</p>
<p>整体DNN效果就好，但 RF 极大风速负偏差明显</p>
<h3 id="张旭东-基于人工智能技木的海洋内孤立波研究"><a href="#张旭东-基于人工智能技木的海洋内孤立波研究" class="headerlink" title="张旭东 基于人工智能技木的海洋内孤立波研究"></a>张旭东 基于人工智能技木的海洋内孤立波研究</h3><p>tens meters to over 200m</p>
<p>global ISW phase speed model</p>
<p>先聚类：ISW+ 海洋分层</p>
<h3 id="孟子飞-基于长短期记忆网络的随机波浪和浮体运动长时预测研究"><a href="#孟子飞-基于长短期记忆网络的随机波浪和浮体运动长时预测研究" class="headerlink" title="孟子飞 基于长短期记忆网络的随机波浪和浮体运动长时预测研究"></a>孟子飞 基于长短期记忆网络的随机波浪和浮体运动长时预测研究</h3><p>单发LSTM  输出长度延长时需要重新训练模型</p>
<p>采用滚动预测方法</p>
<p>基于物理运动方程的神经网络（PINN）</p>
<h3 id="郭安博宇-多模式集合预报方法在中国近海面风预报的应用"><a href="#郭安博宇-多模式集合预报方法在中国近海面风预报的应用" class="headerlink" title="郭安博宇  多模式集合预报方法在中国近海面风预报的应用"></a>郭安博宇  多模式集合预报方法在中国近海面风预报的应用</h3><ol>
<li><p>标签数据 FNL 预报产品  + 近海观测    特征数据  ECMWF + NCEP    BMA 算法  </p>
<p>Bayesian model averaging  概率预报+确定预报</p>
</li>
<li><p>标签数据CCMP  特征数据 GFS</p>
<p>集成学习</p>
<p>bagging 对样本随机采样，平均   RF   boosting  不断优化一个弱的学习器，优化现有误差，迭代  catboost </p>
</li>
<li><p>生成对抗网络降尺度 ESRGAN 针对图像，缺少物理约束</p>
</li>
</ol>
<h3 id="黄宝香-Al-智赋海洋垃圾检测促进蓝色可持续发展"><a href="#黄宝香-Al-智赋海洋垃圾检测促进蓝色可持续发展" class="headerlink" title="黄宝香 Al 智赋海洋垃圾检测促进蓝色可持续发展"></a>黄宝香 Al 智赋海洋垃圾检测促进蓝色可持续发展</h3><h3 id="张永垂-RELATIVE-IMPORTANCE-OF-ENSO-AND-IOD-ON-THE-INTERANNUAL-VARIABILITY-OF-ITF-TRANSPORT-BY-USING-MULTI-MODEL-DATASETS"><a href="#张永垂-RELATIVE-IMPORTANCE-OF-ENSO-AND-IOD-ON-THE-INTERANNUAL-VARIABILITY-OF-ITF-TRANSPORT-BY-USING-MULTI-MODEL-DATASETS" class="headerlink" title="张永垂  RELATIVE IMPORTANCE OF ENSO AND IOD ON THE INTERANNUAL VARIABILITY OF ITF TRANSPORT BY USING MULTI-MODEL DATASETS"></a>张永垂  RELATIVE IMPORTANCE OF ENSO AND IOD ON THE INTERANNUAL VARIABILITY OF ITF TRANSPORT BY USING MULTI-MODEL DATASETS</h3>]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>LASG年会</title>
    <url>/2023/04/07/Seminar/20230407-LASG%E5%B9%B4%E4%BC%9A/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="2023-04-07-上午"><a href="#2023-04-07-上午" class="headerlink" title="2023-04-07 上午"></a>2023-04-07 上午</h2><h3 id="穆穆-北极海冰密度对冬季强乌拉尔阻塞事件延伸期可预报性的影响"><a href="#穆穆-北极海冰密度对冬季强乌拉尔阻塞事件延伸期可预报性的影响" class="headerlink" title="穆穆  北极海冰密度对冬季强乌拉尔阻塞事件延伸期可预报性的影响"></a>穆穆  北极海冰密度对冬季强乌拉尔阻塞事件延伸期可预报性的影响</h3><p>极端事件、小概率事件可能具有较强的可预报性，目前预报技巧低不一定意味着可预报性弱</p>
<h3 id="黄建平-氧循环与地球呼吸"><a href="#黄建平-氧循环与地球呼吸" class="headerlink" title="黄建平  氧循环与地球呼吸"></a>黄建平  氧循环与地球呼吸</h3><p>海洋溶解氧含量出现系统性降低，过去50年下降了2%</p>
<p>大气中氧气浓度大约为20.9%</p>
<p>氧浓度的下降与生物大灭绝</p>
<p>缺氧事件与热浪事件的协同发生</p>
<p>产氧量多：降水多、土壤湿度大、感热通量小、潜热通量大、升温少</p>
<p>土地癌化与生物多样性</p>
<h3 id="王春在-Global-Marine-Heatwaves-and-Cold-spells-in-Present-and-Future-Climates"><a href="#王春在-Global-Marine-Heatwaves-and-Cold-spells-in-Present-and-Future-Climates" class="headerlink" title="王春在 Global Marine Heatwaves and Cold-spells in Present and Future Climates"></a>王春在 Global Marine Heatwaves and Cold-spells in Present and Future Climates</h3><p>![Screenshot 2023-04-07 at 11.51.53](&#x2F;Users&#x2F;ruyanc&#x2F;Desktop&#x2F;Screenshot 2023-04-07 at 11.51.53.png)</p>
<p><img src="https://p.ipic.vip/twnj88.png" alt="Screenshot 2023-04-07 at 11.53.48"></p>
<p><img src="https://p.ipic.vip/33k6wc.png" alt="Screenshot 2023-04-07 at 11.54.59"></p>
<p><img src="https://p.ipic.vip/otww2v.png" alt="Screenshot 2023-04-07 at 11.56.05"></p>
<p><img src="https://p.ipic.vip/4h7om2.png" alt="Screenshot 2023-04-07 at 11.57.09"></p>
<p><img src="https://p.ipic.vip/88rnj6.png" alt="Screenshot 2023-04-07 at 11.59.59"></p>
<p><img src="https://p.ipic.vip/jtzenz.png" alt="Screenshot 2023-04-07 at 12.01.54"></p>
<h3 id="胡永云-量化显宇宙以来煤和蒸发岩与温度和降水的关系"><a href="#胡永云-量化显宇宙以来煤和蒸发岩与温度和降水的关系" class="headerlink" title="胡永云  量化显宇宙以来煤和蒸发岩与温度和降水的关系"></a>胡永云  量化显宇宙以来煤和蒸发岩与温度和降水的关系</h3><p><img src="https://p.ipic.vip/s61ug8.png" alt="Screenshot 2023-04-07 at 12.09.20"></p>
<p>煤：湿润     蒸发岩：干旱 </p>
<p><img src="https://p.ipic.vip/wlbgw8.png" alt="Screenshot 2023-04-07 at 12.12.51"></p>
<p><img src="https://p.ipic.vip/l0xot9.png" alt="Screenshot 2023-04-07 at 12.14.04"></p>
<p><img src="https://p.ipic.vip/8gl1o2.png" alt="Screenshot 2023-04-07 at 12.14.16"></p>
<h2 id="2023-04-07-下午"><a href="#2023-04-07-下午" class="headerlink" title="2023-04-07 下午"></a>2023-04-07 下午</h2><h3 id="刘洪波-华南钱汛期极端降水及其大尺度环流的多时间尺度特征研究"><a href="#刘洪波-华南钱汛期极端降水及其大尺度环流的多时间尺度特征研究" class="headerlink" title="刘洪波  华南钱汛期极端降水及其大尺度环流的多时间尺度特征研究"></a>刘洪波  华南钱汛期极端降水及其大尺度环流的多时间尺度特征研究</h3><p>华南前汛期 4-6月  23年提前开启</p>
<p>冷空气和暖空气—&gt;静止锋</p>
<p>4-6月降水强度不断增加   2017.5.7 广州特大暴雨</p>
<p>天气尺度、季节内变化特征   多时间尺度共存</p>
<p>华南前汛期极端降水对应低层大气环流的准双周波动特征</p>
<p><img src="https://p.ipic.vip/kr5y2i.png" alt="Screenshot 2023-04-07 at 14.35.26"></p>
<p><img src="https://p.ipic.vip/hqzt0f.png" alt="Screenshot 2023-04-07 at 14.36.28"></p>
<p><img src="https://p.ipic.vip/pkkv8v.png" alt="Screenshot 2023-04-07 at 14.36.59"></p>
<p><img src="https://p.ipic.vip/o07ork.png" alt="Screenshot 2023-04-07 at 14.37.40"></p>
<p><img src="https://p.ipic.vip/029vxr.png" alt="Screenshot 2023-04-07 at 14.39.06"></p>
<p><img src="https://p.ipic.vip/gewmlj.png" alt="Screenshot 2023-04-07 at 14.40.12"></p>
<p><img src="https://p.ipic.vip/7j5ie3.png" alt="Screenshot 2023-04-07 at 14.41.35"></p>
<p><img src="https://p.ipic.vip/svir08.png" alt="Screenshot 2023-04-07 at 14.41.55"></p>
<h3 id="原韦华-横断山脉南缘的夜雨"><a href="#原韦华-横断山脉南缘的夜雨" class="headerlink" title="原韦华  横断山脉南缘的夜雨"></a>原韦华  横断山脉南缘的夜雨</h3><p><img src="https://p.ipic.vip/aoie4b.png" alt="Screenshot 2023-04-07 at 14.45.42"></p>
<h3 id="王鑫-A-Novel-mechanis-for-Extreme-El-Nino-Events-Interactions-between-Tropical-Cyclones-in-the-Western-North-Pacific-and-Sea-Surface"><a href="#王鑫-A-Novel-mechanis-for-Extreme-El-Nino-Events-Interactions-between-Tropical-Cyclones-in-the-Western-North-Pacific-and-Sea-Surface" class="headerlink" title="王鑫  A Novel mechanis for Extreme El Niño Events: Interactions between Tropical Cyclones in the Western North Pacific and Sea Surface"></a>王鑫  A Novel mechanis for Extreme El Niño Events: Interactions between Tropical Cyclones in the Western North Pacific and Sea Surface</h3><p><img src="https://p.ipic.vip/gsz6jw.png" alt="Screenshot 2023-04-07 at 15.15.03"></p>
<p><img src="https://p.ipic.vip/rab8nf.png" alt="Screenshot 2023-04-07 at 15.16.12"></p>
<p>绝大多数的西风爆发是由于热带气旋引起</p>
<p><img src="https://p.ipic.vip/djt0vi.png" alt="Screenshot 2023-04-07 at 15.27.28"></p>
<h3 id="孙颖-近百年中国气温和降水变化的归因检测"><a href="#孙颖-近百年中国气温和降水变化的归因检测" class="headerlink" title="孙颖  近百年中国气温和降水变化的归因检测"></a>孙颖  近百年中国气温和降水变化的归因检测</h3><p><img src="https://p.ipic.vip/kbh5mq.png" alt="Screenshot 2023-04-07 at 15.38.09"></p>
<h3 id="董璐-热带太平洋海温东西梯度变化的不确定性"><a href="#董璐-热带太平洋海温东西梯度变化的不确定性" class="headerlink" title="董璐  热带太平洋海温东西梯度变化的不确定性"></a>董璐  热带太平洋海温东西梯度变化的不确定性</h3><p><img src="https://p.ipic.vip/gjic75.png" alt="Screenshot 2023-04-07 at 16.11.18"></p>
<h3 id="宋丰飞-不同地区气溶胶变化对萨赫勒降雨季节延迟的贡献"><a href="#宋丰飞-不同地区气溶胶变化对萨赫勒降雨季节延迟的贡献" class="headerlink" title="宋丰飞  不同地区气溶胶变化对萨赫勒降雨季节延迟的贡献"></a>宋丰飞  不同地区气溶胶变化对萨赫勒降雨季节延迟的贡献</h3><p><img src="https://p.ipic.vip/gp834u.png" alt="Screenshot 2023-04-07 at 16.15.35"></p>
<p><img src="https://p.ipic.vip/jh717w.png" alt="Screenshot 2023-04-07 at 16.16.59"></p>
<p><img src="https://p.ipic.vip/4glsnf.png" alt="Screenshot 2023-04-07 at 16.17.27"></p>
<p><img src="https://p.ipic.vip/pmzdds.png" alt="Screenshot 2023-04-07 at 16.27.14"></p>
<h3 id="何超-2022年长江流域极端热浪和南亚西部极端洪涝的成因"><a href="#何超-2022年长江流域极端热浪和南亚西部极端洪涝的成因" class="headerlink" title="何超  2022年长江流域极端热浪和南亚西部极端洪涝的成因"></a>何超  2022年长江流域极端热浪和南亚西部极端洪涝的成因</h3><p><img src="https://p.ipic.vip/7axail.png" alt="Screenshot 2023-04-07 at 16.48.03"></p>
<p><img src="https://p.ipic.vip/u3nspb.png" alt="Screenshot 2023-04-07 at 16.48.54"></p>
<p>长江流域越热，巴基斯坦降水越多</p>
<p><img src="https://p.ipic.vip/d4qwvr.png" alt="Screenshot 2023-04-07 at 16.50.42"></p>
<p><img src="https://p.ipic.vip/vxlyak.png" alt="Screenshot 2023-04-07 at 16.52.38"></p>
<p><img src="https://p.ipic.vip/oyqugv.png" alt="Screenshot 2023-04-07 at 16.54.04"></p>
<p><img src="https://p.ipic.vip/x6hxkn.png" alt="Screenshot 2023-04-07 at 16.56.18"></p>
<p>印度洋海温距平最为重要</p>
<p><img src="https://p.ipic.vip/74zz3c.png" alt="Screenshot 2023-04-07 at 16.58.42"></p>
<p><img src="https://p.ipic.vip/wi7f50.png" alt="Screenshot 2023-04-07 at 16.59.01"></p>
<h3 id="魏云涛-Low-frequency-Variability-in-Realtime-Multivarite-MJO-Index"><a href="#魏云涛-Low-frequency-Variability-in-Realtime-Multivarite-MJO-Index" class="headerlink" title="魏云涛  Low-frequency Variability in Realtime Multivarite MJO Index"></a>魏云涛  Low-frequency Variability in Realtime Multivarite MJO Index</h3><p>RMM 指数可能包含了非MJO信号</p>
<p><img src="https://p.ipic.vip/5izjfe.png" alt="Screenshot 2023-04-07 at 17.07.35"></p>
<p><img src="https://p.ipic.vip/63zwj5.png" alt="Screenshot 2023-04-07 at 17.08.10"></p>
<p><img src="https://p.ipic.vip/gfp8tf.png" alt="Screenshot 2023-04-07 at 17.09.15"></p>
<p> <img src="https://p.ipic.vip/vwk41c.png" alt="Screenshot 2023-04-07 at 17.16.09"></p>
<h3 id="周士杰-Varing-Contribution-of-Fast-and-Slow-Responses-Cause-Asymmetric-Tropical-Rainfall-Change-between-CO2-Ramp-up-and-Ramp-down"><a href="#周士杰-Varing-Contribution-of-Fast-and-Slow-Responses-Cause-Asymmetric-Tropical-Rainfall-Change-between-CO2-Ramp-up-and-Ramp-down" class="headerlink" title="周士杰  Varing Contribution of Fast and Slow Responses Cause Asymmetric Tropical Rainfall Change between CO2 Ramp-up and Ramp-down"></a>周士杰  Varing Contribution of Fast and Slow Responses Cause Asymmetric Tropical Rainfall Change between CO2 Ramp-up and Ramp-down</h3><p><img src="https://p.ipic.vip/xeixs2.png" alt="Screenshot 2023-04-07 at 17.23.54"></p>
<p><img src="https://p.ipic.vip/u4nfcc.png" alt="Screenshot 2023-04-07 at 17.24.33"></p>
<p><img src="https://p.ipic.vip/3pqmhi.png" alt="Screenshot 2023-04-07 at 17.26.16"></p>
<p><img src="https://p.ipic.vip/y8kuf8.png" alt="Screenshot 2023-04-07 at 17.27.33"></p>
<p><img src="https://p.ipic.vip/x4lulq.png"></p>
<p><img src="https://p.ipic.vip/9la3ui.png" alt="Screenshot 2023-04-07 at 17.30.19"></p>
<p><img src="https://p.ipic.vip/o56l8r.png" alt="Screenshot 2023-04-07 at 17.31.43"></p>
<p><img src="https://p.ipic.vip/72n1uv.png" alt="Screenshot 2023-04-07 at 17.32.22"></p>
<p><img src="https://p.ipic.vip/8up5x2.png" alt="Screenshot 2023-04-07 at 17.32.56"></p>
<p>海洋动力恒温机制是导致海洋快慢响应差异的主要原因</p>
<p><img src="https://p.ipic.vip/96ihx0.png" alt="Screenshot 2023-04-07 at 17.34.24"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>闫运伟</title>
    <url>/2023/04/19/Seminar/20230421-%E9%97%AB%E8%BF%90%E4%BC%9F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="闫运伟-海表风场日内变化对热带海气通量平均态的影响"><a href="#闫运伟-海表风场日内变化对热带海气通量平均态的影响" class="headerlink" title="闫运伟    海表风场日内变化对热带海气通量平均态的影响"></a>闫运伟    海表风场日内变化对热带海气通量平均态的影响</h3><p>导致海气通量不确定性的原因：</p>
<ol>
<li>算法不确定性；2. 海气界面参数的不确定性；3. 观测采样频率过低；</li>
</ol>
<p>前人研究：天气尺度风场的影响    </p>
<p>Ogawa &amp; Spengler, JC, 2019   &#x2F;   Wu et al., CD, 2020 &#x2F;  Eymard et al., JGR, 2003 &#x2F; Zhou et al., JGR, 2018</p>
<p>风场日内变化参数化 Praveen Kumar et al., CD, 2012, 2013</p>
<p>研究目的：</p>
<ol>
<li>量化风场日内变化对海气通量平均态的贡献；</li>
<li>评估再分析产品在该方面的表现；</li>
</ol>
<p>风场高频变化的影响随着周期减小而增加，主要通过影响平均风速产生影响，同时减小了平均交换系数（粗糙度减小）</p>
<p>对风应力的影响：贡献大值位于ITCZ区</p>
<ol>
<li>对平均风速的影响；2. 对风速方差的影响；</li>
</ol>
<p>日内变化的动能越大，对平均风应力的影响越大，呈现线性关系</p>
<p>ITCZ内大气冷池（小于24H）</p>
<p>再分析资料的误差：1. 网格平均的影响；2. 模式对中尺度对流的分辨不足；</p>
<p>提出了两种新的参数化方案 G2 &#x3D; 0.37Pclim + 1.78</p>
<p>GTMBA 十分钟一次，或一小时一次   </p>
<p>通量软件包适合的是小时数据的计算</p>
<p>提问：之前参数化的误差表现在哪里</p>
<p>Idea: </p>
<ol>
<li>极端天气对涡旋表面通量异常的影响； </li>
<li>考虑风场日内变化的通量数据的改进，同化；更高时空分辨率的通量产品；</li>
</ol>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>黄瑞新</title>
    <url>/2023/04/19/Seminar/20230419-%E9%BB%84%E7%91%9E%E6%96%B0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="黄瑞新-梁湘三“信息流理论”–我的读书笔记"><a href="#黄瑞新-梁湘三“信息流理论”–我的读书笔记" class="headerlink" title="黄瑞新    梁湘三“信息流理论”–我的读书笔记"></a>黄瑞新    梁湘三“信息流理论”–我的读书笔记</h3><p><img src="https://p.ipic.vip/8cxfzi.png" alt="Screenshot 2023-04-19 at 20.21.31"></p>
<p><img src="https://p.ipic.vip/cl6jxj.png" alt="Screenshot 2023-04-19 at 20.22.06"></p>
<p><img src="https://p.ipic.vip/rdexau.png" alt="Screenshot 2023-04-19 at 20.22.56"></p>
<p><img src="https://p.ipic.vip/937yd0.png" alt="Screenshot 2023-04-19 at 20.23.53"></p>
<p><img src="https://p.ipic.vip/s8o8th.png" alt="Screenshot 2023-04-19 at 20.24.08"></p>
<p><img src="https://p.ipic.vip/508b7o.png" alt="Screenshot 2023-04-19 at 20.26.10"></p>
<p><img src="https://p.ipic.vip/wllp6s.png" alt="Screenshot 2023-04-19 at 20.27.06"></p>
<p><img src="https://p.ipic.vip/myf3j7.png" alt="Screenshot 2023-04-19 at 20.28.14"></p>
<p><img src="https://p.ipic.vip/af3col.png" alt="Screenshot 2023-04-19 at 20.29.43"></p>
<p><img src="https://p.ipic.vip/1xzvm8.png" alt="Screenshot 2023-04-19 at 20.33.39"></p>
<p><img src="https://p.ipic.vip/vw81nv.png" alt="Screenshot 2023-04-19 at 20.34.48"></p>
<p><img src="https://p.ipic.vip/2no9z1.png" alt="Screenshot 2023-04-19 at 20.35.22"></p>
<p><img src="https://p.ipic.vip/d29fhq.png" alt="Screenshot 2023-04-19 at 20.36.20"></p>
<p><img src="https://p.ipic.vip/0kz7ed.png" alt="Screenshot 2023-04-19 at 20.37.46"></p>
<p><img src="https://p.ipic.vip/2fefhy.png" alt="Screenshot 2023-04-19 at 20.39.24"></p>
<p><img src="https://p.ipic.vip/p48omq.png" alt="Screenshot 2023-04-19 at 20.40.17"></p>
<p><img src="https://p.ipic.vip/h9i311.png" alt="Screenshot 2023-04-19 at 20.41.57"></p>
<p><img src="https://p.ipic.vip/b8qxfj.png" alt="Screenshot 2023-04-19 at 20.43.35"></p>
<p><img src="https://p.ipic.vip/gqcngj.png" alt="Screenshot 2023-04-19 at 20.46.29"></p>
<p><img src="https://p.ipic.vip/vax4j3.png" alt="Screenshot 2023-04-19 at 20.46.29"></p>
<p><img src="https://p.ipic.vip/1s8doe.png" alt="Screenshot 2023-04-19 at 20.48.15"></p>
<p><img src="https://p.ipic.vip/z4yb08.png" alt="Screenshot 2023-04-19 at 20.49.25"></p>
<p><img src="https://p.ipic.vip/q3bj3m.png" alt="Screenshot 2023-04-19 at 20.57.07"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>潘丽霞</title>
    <url>/2023/04/25/Seminar/20230426-%E6%BD%98%E4%B8%BD%E9%9C%9E/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="潘丽霞-热带太平洋叶绿素对El-Nino的响应"><a href="#潘丽霞-热带太平洋叶绿素对El-Nino的响应" class="headerlink" title="潘丽霞    热带太平洋叶绿素对El Niño的响应"></a>潘丽霞    热带太平洋叶绿素对El Niño的响应</h3><p><img src="https://p.ipic.vip/7koo9i.png" alt="Screenshot 2023-04-26 at 20.03.51"></p>
<p><img src="https://p.ipic.vip/4rraqa.png" alt="Screenshot 2023-04-26 at 20.04.50"></p>
<p><img src="https://p.ipic.vip/g39q79.png" alt="Screenshot 2023-04-26 at 20.05.59"></p>
<p><img src="https://p.ipic.vip/6dvzaa.png" alt="Screenshot 2023-04-26 at 20.07.17"></p>
<p><img src="https://p.ipic.vip/ky6l2s.png" alt="Screenshot 2023-04-26 at 20.07.47"></p>
<p><img src="https://p.ipic.vip/36jofi.png" alt="Screenshot 2023-04-26 at 20.09.23"></p>
<p><img src="https://p.ipic.vip/3emi3a.png" alt="Screenshot 2023-04-26 at 20.11.15"></p>
<p><img src="https://p.ipic.vip/5gxhd7.png" alt="Screenshot 2023-04-26 at 20.13.18"></p>
<p><img src="https://p.ipic.vip/q9zim9.png" alt="Screenshot 2023-04-26 at 20.13.43"></p>
<p><img src="https://p.ipic.vip/bjspzc.png" alt="Screenshot 2023-04-26 at 20.16.20"></p>
<p><img src="https://p.ipic.vip/ghxvuj.png" alt="Screenshot 2023-04-26 at 20.17.39"></p>
<p><img src="https://p.ipic.vip/0ahufn.png" alt="Screenshot 2023-04-26 at 20.19.16"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>百年风云讲坛 | 数值天气预报研发进展与挑战</title>
    <url>/2023/05/29/Seminar/20230529-%E7%99%BE%E5%B9%B4%E9%A3%8E%E4%BA%91%E8%AE%B2%E5%9D%9B%20%7C%20%E6%95%B0%E5%80%BC%E5%A4%A9%E6%B0%94%E9%A2%84%E6%8A%A5%E7%A0%94%E5%8F%91%E8%BF%9B%E5%B1%95%E4%B8%8E%E6%8C%91%E6%88%98/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="《气象学报》百年风云讲坛第12期-数值天气预报研发进展与挑战"><a href="#《气象学报》百年风云讲坛第12期-数值天气预报研发进展与挑战" class="headerlink" title="《气象学报》百年风云讲坛第12期   数值天气预报研发进展与挑战"></a>《气象学报》百年风云讲坛第12期   数值天气预报研发进展与挑战</h3><p>回看链接： <a href="https://dwz.cn/pGGFFxpN">https://dwz.cn/pGGFFxpN</a> 或 <a href="http://live.bilibili.com/24850773">http://live.bilibili.com/24850773</a></p>
<p><img src="https://p.ipic.vip/23ijjr.png" alt="Image"></p>
<p><img src="https://p.ipic.vip/29x9rp.png" alt="Image"></p>
<h4 id="邹晓蕾-传统资料同化方法的局限性和若干创新发展方向"><a href="#邹晓蕾-传统资料同化方法的局限性和若干创新发展方向" class="headerlink" title="邹晓蕾    传统资料同化方法的局限性和若干创新发展方向"></a>邹晓蕾    传统资料同化方法的局限性和若干创新发展方向</h4><p><img src="https://p.ipic.vip/ymdl6l.png" alt="Screenshot 2023-05-29 at 14.51.14"></p>
<p><img src="https://p.ipic.vip/9orjkg.png" alt="Screenshot 2023-05-29 at 14.51.23"></p>
<p><img src="https://p.ipic.vip/j7eu7c.png" alt="Screenshot 2023-05-29 at 14.52.48"></p>
<p><img src="https://p.ipic.vip/1o7t1j.png" alt="Screenshot 2023-05-29 at 14.55.06"></p>
<p>三维变分的特点：非直接观测的变量可以直接同化，通过H观测算子，和H的转置（伴随算子）</p>
<p>四维变分：加入了数值天气预报模式，即伴随模式</p>
<p><img src="https://p.ipic.vip/ph2bal.png" alt="Screenshot 2023-05-29 at 14.58.59"></p>
<p>背景误差协方差：无法获取真实的，只能采用近似表达</p>
<p>观测资料：包括如何做质量控制</p>
<p><img src="https://p.ipic.vip/5f45de.png" alt="Screenshot 2023-05-29 at 15.00.38"></p>
<p><img src="https://p.ipic.vip/kszy70.png" alt="Screenshot 2023-05-29 at 15.01.26"></p>
<p><img src="https://p.ipic.vip/7d4wai.png" alt="Screenshot 2023-05-29 at 15.03.17"></p>
<p><img src="https://p.ipic.vip/6ejaty.png" alt="Screenshot 2023-05-29 at 15.03.37"></p>
<p><img src="https://p.ipic.vip/npqmu4.png" alt="Screenshot 2023-05-29 at 15.04.54"></p>
<p><img src="https://p.ipic.vip/oozaxs.png" alt="Screenshot 2023-05-29 at 15.05.42"></p>
<p>能否返璞归真？不一定需要越来越复杂，关键在于有用信息的提取</p>
<p><img src="https://p.ipic.vip/4t79az.png" alt="Screenshot 2023-05-29 at 15.07.28"></p>
<p><img src="https://p.ipic.vip/wde9ek.png" alt="Screenshot 2023-05-29 at 15.07.52"></p>
<p><img src="https://p.ipic.vip/qb4crk.png" alt="Screenshot 2023-05-29 at 15.08.16"></p>
<p><img src="https://p.ipic.vip/s7jixj.png" alt="Screenshot 2023-05-29 at 15.09.02"></p>
<p><img src="https://p.ipic.vip/vp8pog.png" alt="Screenshot 2023-05-29 at 15.09.32"></p>
<p><img src="https://p.ipic.vip/w7xuif.png" alt="Screenshot 2023-05-29 at 15.09.41"></p>
<p><img src="https://p.ipic.vip/bphiz5.png" alt="Screenshot 2023-05-29 at 15.10.23"></p>
<p><img src="https://p.ipic.vip/b5sk64.png" alt="Screenshot 2023-05-29 at 15.10.32"></p>
<p><img src="https://p.ipic.vip/89c65b.png" alt="Screenshot 2023-05-29 at 15.11.15"></p>
<p><img src="https://p.ipic.vip/k5mese.png" alt="Screenshot 2023-05-29 at 15.11.56"></p>
<p><img src="https://p.ipic.vip/xh1mi4.png" alt="Screenshot 2023-05-29 at 15.12.31"></p>
<p><img src="https://p.ipic.vip/b4ygnd.png" alt="Screenshot 2023-05-29 at 15.13.25"></p>
<p><img src="https://p.ipic.vip/dtknmq.png" alt="Screenshot 2023-05-29 at 15.14.28"></p>
<p><img src="https://p.ipic.vip/mtwwec.png" alt="Screenshot 2023-05-29 at 15.15.08"></p>
<p><img src="https://p.ipic.vip/p8c2l7.png" alt="Screenshot 2023-05-29 at 15.15.21"></p>
<p><img src="https://p.ipic.vip/ijp3pa.png" alt="Screenshot 2023-05-29 at 15.15.44"></p>
<p><img src="https://p.ipic.vip/bd5uid.png" alt="Screenshot 2023-05-29 at 15.16.46"></p>
<p><img src="https://p.ipic.vip/93tqp0.png" alt="Screenshot 2023-05-29 at 15.17.11"></p>
<p><img src="https://p.ipic.vip/yzkr5q.png" alt="Screenshot 2023-05-29 at 15.17.27"></p>
<p><img src="https://p.ipic.vip/9qmgoq.png" alt="Screenshot 2023-05-29 at 15.18.29"></p>
<h4 id="提问环节："><a href="#提问环节：" class="headerlink" title="提问环节："></a>提问环节：</h4><p>耦合同化：快慢过程都需要考虑</p>
<p>AI的应用方面：用于提取关键信息，例如提取结构，提高信息的利用率</p>
<h3 id="陈静-集合预报技术的研发、应用与挑战"><a href="#陈静-集合预报技术的研发、应用与挑战" class="headerlink" title="陈静  集合预报技术的研发、应用与挑战"></a>陈静  集合预报技术的研发、应用与挑战</h3><p><img src="https://p.ipic.vip/p9h66v.png" alt="Screenshot 2023-05-29 at 15.31.07"></p>
<p><img src="https://p.ipic.vip/5vte6e.png" alt="Screenshot 2023-05-29 at 15.31.38"></p>
<p><img src="https://p.ipic.vip/j93a2u.png" alt="Screenshot 2023-05-29 at 15.32.32"></p>
<p><img src="https://p.ipic.vip/0jhnsd.png" alt="Screenshot 2023-05-29 at 15.33.33"></p>
<p><img src="https://p.ipic.vip/61o3lp.png" alt="Screenshot 2023-05-29 at 15.34.28"></p>
<p><img src="https://p.ipic.vip/3kpztc.png" alt="Screenshot 2023-05-29 at 15.35.22"></p>
<p><img src="https://p.ipic.vip/ovka5i.png" alt="Screenshot 2023-05-29 at 15.36.38"></p>
<p><img src="https://p.ipic.vip/u97bu3.png" alt="Screenshot 2023-05-29 at 15.37.13"></p>
<p><img src="https://p.ipic.vip/4wec2n.png" alt="Screenshot 2023-05-29 at 15.37.58"></p>
<p><img src="https://p.ipic.vip/642fdr.png" alt="Screenshot 2023-05-29 at 15.38.15"></p>
<p><img src="https://p.ipic.vip/jhv3kk.png" alt="Screenshot 2023-05-29 at 15.38.55"></p>
<p><img src="https://p.ipic.vip/6avw81.png" alt="Screenshot 2023-05-29 at 15.39.23"></p>
<p><img src="https://p.ipic.vip/wuybo4.png" alt="Screenshot 2023-05-29 at 15.40.31"></p>
<p><img src="https://p.ipic.vip/md1uy2.png" alt="Screenshot 2023-05-29 at 15.42.07"></p>
<p><img src="https://p.ipic.vip/63lz8d.png" alt="Screenshot 2023-05-29 at 15.43.17"></p>
<p><img src="https://p.ipic.vip/malhyn.png" alt="Screenshot 2023-05-29 at 15.44.12"></p>
<p><img src="https://p.ipic.vip/q1deyo.png" alt="Screenshot 2023-05-29 at 15.44.33"></p>
<p><img src="https://p.ipic.vip/6k6psx.png" alt="Screenshot 2023-05-29 at 15.45.16"></p>
<p><img src="https://p.ipic.vip/4e62pe.png" alt="Screenshot 2023-05-29 at 15.45.49"></p>
<p><img src="https://p.ipic.vip/6qp362.png" alt="Screenshot 2023-05-29 at 15.45.59"></p>
<p><img src="https://p.ipic.vip/6zhjdl.png" alt="Screenshot 2023-05-29 at 15.46.17"></p>
<p><img src="https://p.ipic.vip/kjm0vj.png" alt="Screenshot 2023-05-29 at 15.46.42"></p>
<p><img src="https://p.ipic.vip/ktkabt.png" alt="Screenshot 2023-05-29 at 15.47.24"></p>
<p><img src="https://p.ipic.vip/17bb43.png" alt="Screenshot 2023-05-29 at 15.48.03"></p>
<p><img src="https://p.ipic.vip/iagz8z.png" alt="Screenshot 2023-05-29 at 15.48.20"></p>
<p><img src="https://p.ipic.vip/dzvi9g.png" alt="Screenshot 2023-05-29 at 15.48.54"></p>
<p><img src="https://p.ipic.vip/04hhcc.png" alt="Screenshot 2023-05-29 at 15.49.23"></p>
<p><img src="https://p.ipic.vip/tpef3g.png" alt="Screenshot 2023-05-29 at 15.50.02"></p>
<p>![Screenshot 2023-05-29 at 15.50.40](&#x2F;Users&#x2F;ruyanc&#x2F;Desktop&#x2F;Screenshot 2023-05-29 at 15.50.40.png)</p>
<p><img src="https://p.ipic.vip/beczy7.png" alt="Screenshot 2023-05-29 at 15.50.56"></p>
<p><img src="https://p.ipic.vip/cvo31x.png" alt="Screenshot 2023-05-29 at 15.51.12"></p>
<p><img src="https://p.ipic.vip/8kxsju.png" alt="Screenshot 2023-05-29 at 15.51.38"></p>
<p><img src="https://p.ipic.vip/k2wyec.png" alt="Screenshot 2023-05-29 at 15.52.22"></p>
<p><img src="https://p.ipic.vip/w40zu7.png" alt="Screenshot 2023-05-29 at 15.53.15"></p>
<p><img src="https://p.ipic.vip/3qf78d.png" alt="Screenshot 2023-05-29 at 15.53.57"></p>
<p><img src="https://p.ipic.vip/yrjgp0.png" alt="Screenshot 2023-05-29 at 15.54.47"></p>
<p><img src="https://p.ipic.vip/jr5v1r.png" alt="Screenshot 2023-05-29 at 15.55.29"></p>
<p><img src="https://p.ipic.vip/wqetsg.png" alt="Screenshot 2023-05-29 at 15.56.04"></p>
<p><img src="https://p.ipic.vip/0rqzhc.png" alt="Screenshot 2023-05-29 at 15.56.48"></p>
<p>对极端降水降水量级的预报需要对流尺度的集合预报</p>
<h4 id="韩威-国产卫星数据同化若干新进展及未来发展思考"><a href="#韩威-国产卫星数据同化若干新进展及未来发展思考" class="headerlink" title="韩威  国产卫星数据同化若干新进展及未来发展思考"></a>韩威  国产卫星数据同化若干新进展及未来发展思考</h4><p><img src="https://p.ipic.vip/igf8s7.png" alt="Screenshot 2023-05-29 at 16.10.20"></p>
<p><img src="https://p.ipic.vip/ct5wlv.png" alt="Screenshot 2023-05-29 at 16.10.44"></p>
<p><img src="https://p.ipic.vip/dw9rbw.png" alt="Screenshot 2023-05-29 at 16.11.50"></p>
<h4 id="李兴良-面向天气气候的下一代大气模式动力框架研发"><a href="#李兴良-面向天气气候的下一代大气模式动力框架研发" class="headerlink" title="李兴良  面向天气气候的下一代大气模式动力框架研发"></a>李兴良  面向天气气候的下一代大气模式动力框架研发</h4><p><img src="https://p.ipic.vip/byu4l8.png" alt="Screenshot 2023-05-29 at 16.47.56"></p>
<p><img src="https://p.ipic.vip/um51fn.png" alt="Screenshot 2023-05-29 at 16.50.29"></p>
<p><img src="https://p.ipic.vip/dc3qhb.png" alt="Screenshot 2023-05-29 at 16.51.36"></p>
<p><img src="https://p.ipic.vip/kg704z.png" alt="Screenshot 2023-05-29 at 16.53.07"></p>
<p><img src="https://p.ipic.vip/z95rac.png" alt="Screenshot 2023-05-29 at 16.53.56"></p>
<p><img src="https://p.ipic.vip/gbzkb7.png" alt="Screenshot 2023-05-29 at 16.54.45"></p>
<p><img src="https://p.ipic.vip/mloein.png" alt="Screenshot 2023-05-29 at 16.55.49"></p>
<p><img src="https://p.ipic.vip/sf6hj4.png" alt="Screenshot 2023-05-29 at 16.56.13"></p>
<p><img src="https://p.ipic.vip/n4yfwc.png" alt="Screenshot 2023-05-29 at 16.57.59"></p>
<p><img src="https://p.ipic.vip/n3g76n.png" alt="Screenshot 2023-05-29 at 16.59.19"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>AAS前沿论坛 | “21.7”郑州极端降水事件的科学认知与研究进展</title>
    <url>/2023/05/29/Seminar/20230530-AAS%E5%89%8D%E6%B2%BF%E8%AE%BA%E5%9D%9B%20%7C%20%E2%80%9C21.7%E2%80%9D%E9%83%91%E5%B7%9E%E6%9E%81%E7%AB%AF%E9%99%8D%E6%B0%B4%E4%BA%8B%E4%BB%B6%E7%9A%84%E7%A7%91%E5%AD%A6%E8%AE%A4%E7%9F%A5%E4%B8%8E%E7%A0%94%E7%A9%B6%E8%BF%9B%E5%B1%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="回看链接："><a href="#回看链接：" class="headerlink" title="回看链接："></a>回看链接：</h3><p><a href="https://mp.weixin.qq.com/s/qk1C23jQkqrn6fI7uq4XpQ">https://mp.weixin.qq.com/s/qk1C23jQkqrn6fI7uq4XpQ</a></p>
<p><img src="https://p.ipic.vip/vds3yv.png" alt="Screenshot 2023-06-09 at 11.13.07"></p>
<p><img src="https://p.ipic.vip/a6ohb3.png" alt="Screenshot 2023-06-09 at 11.14.03"></p>
<h2 id="张庆红-“21-7”河南极端降水事件：研究现状及未来挑战"><a href="#张庆红-“21-7”河南极端降水事件：研究现状及未来挑战" class="headerlink" title="张庆红  “21.7”河南极端降水事件：研究现状及未来挑战"></a>张庆红  “21.7”河南极端降水事件：研究现状及未来挑战</h2><p><img src="https://p.ipic.vip/2umbuf.png" alt="Screenshot 2023-06-09 at 11.14.37"></p>
<p><img src="https://p.ipic.vip/w00jl2.png" alt="Screenshot 2023-06-09 at 11.17.15"></p>
<p><img src="https://p.ipic.vip/vrvyog.png" alt="Screenshot 2023-06-09 at 11.20.17"></p>
<p><img src="https://p.ipic.vip/kyrq5j.png" alt="Screenshot 2023-06-09 at 11.22.17"></p>
<p><img src="https://p.ipic.vip/wqril8.png" alt="Screenshot 2023-06-09 at 11.25.44"></p>
<p><img src="https://p.ipic.vip/6y15qh.png" alt="Screenshot 2023-06-09 at 11.26.58"></p>
<p><img src="https://p.ipic.vip/drgj1x.png" alt="Screenshot 2023-06-09 at 11.28.44"></p>
<p><img src="https://p.ipic.vip/ua28h6.png" alt="Screenshot 2023-06-09 at 11.29.40"></p>
<p><img src="https://p.ipic.vip/54cn6m.png" alt="Screenshot 2023-06-09 at 11.30.30"></p>
<p><img src="https://p.ipic.vip/k0p9j4.png" alt="Screenshot 2023-06-09 at 11.31.18"></p>
<p><img src="https://p.ipic.vip/zzxcwi.png" alt="Screenshot 2023-06-09 at 11.32.51"></p>
<p><img src="https://p.ipic.vip/pfy2s6.png" alt="Screenshot 2023-06-09 at 11.33.38"></p>
<p><img src="https://p.ipic.vip/w6hfah.png" alt="Screenshot 2023-06-09 at 11.36.21"></p>
<p><img src="https://p.ipic.vip/hlasgb.png" alt="Screenshot 2023-06-09 at 11.37.42"></p>
<p><img src="https://p.ipic.vip/oq93vl.png" alt="Screenshot 2023-06-09 at 11.38.03"></p>
<p><img src="https://p.ipic.vip/66qhft.png" alt="Screenshot 2023-06-09 at 11.40.05"></p>
<p><img src="https://p.ipic.vip/zdd2hq.png" alt="Screenshot 2023-06-09 at 11.40.35"></p>
<p>![Screenshot 2023-06-09 at 11.41.09](&#x2F;Users&#x2F;ruyanc&#x2F;Desktop&#x2F;Screenshot 2023-06-09 at 11.41.09.png)</p>
<p>![Screenshot 2023-06-09 at 11.41.33](&#x2F;Users&#x2F;ruyanc&#x2F;Desktop&#x2F;Screenshot 2023-06-09 at 11.41.33.png)</p>
<p><img src="https://p.ipic.vip/b06jsv.png" alt="Screenshot 2023-06-09 at 11.42.58"></p>
<p><img src="https://p.ipic.vip/jzlc2l.png" alt="Screenshot 2023-06-09 at 11.43.09"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>组会</title>
    <url>/2023/03/29/Seminar/20230329-%E7%BB%84%E4%BC%9A/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="张玉红-Sources-and-pathways-of-salty-water-in-the-upper-equatorial-Indian-Ocean-工作报告"><a href="#张玉红-Sources-and-pathways-of-salty-water-in-the-upper-equatorial-Indian-Ocean-工作报告" class="headerlink" title="张玉红 Sources and pathways of salty water in the upper equatorial Indian Ocean  工作报告"></a>张玉红 Sources and pathways of salty water in the upper equatorial Indian Ocean  工作报告</h3><p><img src="https://p.ipic.vip/sv3uk4.png" alt="Screenshot 2023-03-29 at 15.32.15"></p>
<p>![Screenshot 2023-03-29 at 15.37.36](&#x2F;Users&#x2F;ruyanc&#x2F;Desktop&#x2F;Screenshot 2023-03-29 at 15.37.36.png)</p>
<p>![Screenshot 2023-03-29 at 15.44.55](&#x2F;Users&#x2F;ruyanc&#x2F;Desktop&#x2F;Screenshot 2023-03-29 at 15.44.55.png)</p>
<p><img src="https://p.ipic.vip/7nc9xx.png" alt="Screenshot 2023-03-29 at 15.54.33"></p>
<p><img src="https://p.ipic.vip/l4b372.png" alt="Screenshot 2023-03-29 at 15.56.04"></p>
<h3 id="王腾-全球变暖对热带海气反馈和水循环演变影响的启示-综述报告"><a href="#王腾-全球变暖对热带海气反馈和水循环演变影响的启示-综述报告" class="headerlink" title="王腾 全球变暖对热带海气反馈和水循环演变影响的启示  综述报告"></a>王腾 全球变暖对热带海气反馈和水循环演变影响的启示  综述报告</h3><p><img src="https://p.ipic.vip/i6t5xu.png" alt="Screenshot 2023-03-29 at 16.35.41"></p>
<p><img src="https://p.ipic.vip/0de7yj.png" alt="Screenshot 2023-03-29 at 16.36.00"></p>
<p><img src="https://p.ipic.vip/6y9yys.png" alt="Screenshot 2023-03-29 at 16.37.26"></p>
<p><img src="https://p.ipic.vip/qxeh5q.png" alt="Screenshot 2023-03-29 at 16.39.28"></p>
<p><img src="https://p.ipic.vip/moe5nu.png" alt="Screenshot 2023-03-29 at 16.42.43"></p>
<p><img src="https://p.ipic.vip/kt6w9y.png" alt="Screenshot 2023-03-29 at 16.43.59"></p>
<p><img src="https://p.ipic.vip/gdnjiy.png" alt="Screenshot 2023-03-29 at 16.47.39"></p>
<ul>
<li>Walker circulation 增强   东太高云减少  低云增多  反射短波辐射增多    有利于表面冷却</li>
</ul>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>组会</title>
    <url>/2023/07/05/Seminar/20230705-%E7%BB%84%E4%BC%9A/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="吴炜：Dynamical-Decomposition-of-Multiscale-Oceanic-Motions（读书报告）"><a href="#吴炜：Dynamical-Decomposition-of-Multiscale-Oceanic-Motions（读书报告）" class="headerlink" title="吴炜：Dynamical Decomposition of Multiscale Oceanic Motions（读书报告）"></a>吴炜：Dynamical Decomposition of Multiscale Oceanic Motions（读书报告）</h3><p><img src="https://p.ipic.vip/yt77w0.png" alt="Screenshot 2023-07-05 at 16.00.02"></p>
<p><img src="https://p.ipic.vip/0532vc.png" alt="Screenshot 2023-07-05 at 16.00.14"></p>
<p><img src="https://p.ipic.vip/10cqqv.png" alt="Screenshot 2023-07-05 at 15.04.46"></p>
<p><img src="https://p.ipic.vip/y99j26.png" alt="Screenshot 2023-07-05 at 15.06.08"></p>
<p><img src="https://p.ipic.vip/pn9s6k.png" alt="Screenshot 2023-07-05 at 15.11.35"></p>
<p><img src="https://p.ipic.vip/oxf9kh.png" alt="Screenshot 2023-07-05 at 15.13.32"></p>
<p><img src="https://p.ipic.vip/09kuey.png" alt="Screenshot 2023-07-05 at 15.19.59"></p>
<p><img src="https://p.ipic.vip/cwqa4k.png" alt="Screenshot 2023-07-05 at 15.34.10"></p>
<p><img src="https://p.ipic.vip/b2b701.png" alt="Screenshot 2023-07-05 at 15.21.48"></p>
<p><img src="https://p.ipic.vip/w6jpjq.png" alt="Screenshot 2023-07-05 at 15.22.23"></p>
<p><img src="https://p.ipic.vip/kb6qap.png" alt="Screenshot 2023-07-05 at 15.24.04"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>百年风云讲坛 历史回放</title>
    <url>/2023/05/01/Seminar/20230501-%E7%99%BE%E5%B9%B4%E9%A3%8E%E4%BA%91%E8%AE%B2%E5%9D%9B%20%E5%8E%86%E5%8F%B2%E5%9B%9E%E6%94%BE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="第十一期-直播回放-主题：中国地球系统数值模拟研发进展与挑战"><a href="#第十一期-直播回放-主题：中国地球系统数值模拟研发进展与挑战" class="headerlink" title="第十一期-直播回放-主题：中国地球系统数值模拟研发进展与挑战"></a>第十一期-直播回放-主题：中国地球系统数值模拟研发进展与挑战</h2><iframe src="//player.bilibili.com/player.html?aid=655578713&bvid=BV13a4y157Lj&cid=1111404139&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>



<h2 id="第五期-极端天气气候事件机理的归因和预估"><a href="#第五期-极端天气气候事件机理的归因和预估" class="headerlink" title="第五期-极端天气气候事件机理的归因和预估"></a>第五期-极端天气气候事件机理的归因和预估</h2><iframe src="//player.bilibili.com/player.html?aid=599897962&bvid=BV1XB4y1x76W&cid=815210793&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>



]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>费建芳、孟洲</title>
    <url>/2023/07/16/Seminar/20230716-%E8%B4%B9%E5%BB%BA%E8%8A%B3+%E5%AD%9F%E6%B4%B2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>回看链接：<a href="https://live.eol.cn/watch/4084180">https://live.eol.cn/watch/4084180</a></p>
<h2 id="费建芳：听风观雨、妙测天际-大气科学学科发展前沿介绍"><a href="#费建芳：听风观雨、妙测天际-大气科学学科发展前沿介绍" class="headerlink" title="费建芳：听风观雨、妙测天际  大气科学学科发展前沿介绍"></a>费建芳：听风观雨、妙测天际  大气科学学科发展前沿介绍</h2><p><img src="https://p.ipic.vip/mhimpr.png" alt="Screenshot 2023-07-17 at 11.22.15"></p>
<p><img src="https://p.ipic.vip/oo9al2.png" alt="Screenshot 2023-07-17 at 11.23.52"></p>
<p><img src="https://p.ipic.vip/vz8okj.png" alt="Screenshot 2023-07-17 at 11.24.18"></p>
<p><img src="https://p.ipic.vip/jvjfpe.png" alt="Screenshot 2023-07-17 at 11.24.27"></p>
<p><img src="https://p.ipic.vip/ac385c.png" alt="Screenshot 2023-07-17 at 11.24.54"></p>
<p><img src="https://p.ipic.vip/4cb0sn.png" alt="Screenshot 2023-07-17 at 11.25.51"></p>
<p><img src="https://p.ipic.vip/0wjmag.png" alt="Screenshot 2023-07-17 at 11.26.37"></p>
<p><img src="https://p.ipic.vip/xvt7a2.png" alt="Screenshot 2023-07-17 at 11.27.44"></p>
<p><img src="https://p.ipic.vip/abmk4c.png" alt="Screenshot 2023-07-17 at 11.28.26"></p>
<p><img src="https://p.ipic.vip/j2vplf.png" alt="Screenshot 2023-07-17 at 11.28.52"></p>
<p><img src="https://p.ipic.vip/ub4qcm.png" alt="Screenshot 2023-07-17 at 11.29.41"></p>
<p><img src="https://p.ipic.vip/kz6shg.png" alt="Screenshot 2023-07-17 at 11.29.18"></p>
<p><img src="https://p.ipic.vip/vqviib.png" alt="Screenshot 2023-07-17 at 11.30.26"></p>
<p><img src="https://p.ipic.vip/81l0pj.png" alt="Screenshot 2023-07-17 at 11.31.25"></p>
<p><img src="https://p.ipic.vip/4y9gaa.png" alt="Screenshot 2023-07-17 at 11.32.14"></p>
<p><img src="https://p.ipic.vip/z2iet0.png" alt="Screenshot 2023-07-17 at 11.32.48"></p>
<p><img src="https://p.ipic.vip/lsfdg5.png" alt="Screenshot 2023-07-17 at 11.33.06"></p>
<p><img src="https://p.ipic.vip/jwku5r.png" alt="Screenshot 2023-07-17 at 11.33.51"></p>
<p><img src="https://p.ipic.vip/qgn3se.png" alt="Screenshot 2023-07-17 at 11.34.52"></p>
<p><img src="https://p.ipic.vip/6eh2gg.png" alt="Screenshot 2023-07-17 at 11.35.08"></p>
<p><img src="https://p.ipic.vip/9iovmz.png" alt="Screenshot 2023-07-17 at 11.35.31"></p>
<p><img src="https://p.ipic.vip/h6xwlx.png" alt="Screenshot 2023-07-17 at 11.35.51"></p>
<p><img src="https://p.ipic.vip/hinli9.png" alt="Screenshot 2023-07-17 at 11.36.12"></p>
<p><img src="https://p.ipic.vip/ajj2iq.png" alt="Screenshot 2023-07-17 at 11.37.14"></p>
<p><img src="https://p.ipic.vip/rda8tx.png" alt="Screenshot 2023-07-17 at 11.37.36"></p>
<p><img src="https://p.ipic.vip/z8bjno.png" alt="Screenshot 2023-07-17 at 11.38.41"></p>
<p><img src="https://p.ipic.vip/6caixl.png" alt="Screenshot 2023-07-17 at 11.39.53"></p>
<p><img src="https://p.ipic.vip/mypwrm.png" alt="Screenshot 2023-07-17 at 11.40.12"></p>
<p><img src="https://p.ipic.vip/0zvor6.png" alt="Screenshot 2023-07-17 at 11.40.41"></p>
<p><img src="https://p.ipic.vip/15ork5.png" alt="Screenshot 2023-07-17 at 11.41.00"></p>
<p><img src="https://p.ipic.vip/41j5f0.png" alt="Screenshot 2023-07-17 at 11.41.46"></p>
<p><img src="https://p.ipic.vip/t8t2dd.png" alt="Screenshot 2023-07-17 at 11.42.20"></p>
<p><img src="https://p.ipic.vip/tzzk58.png" alt="Screenshot 2023-07-17 at 11.42.40"></p>
<p><img src="https://p.ipic.vip/4b9v3a.png" alt="Screenshot 2023-07-17 at 11.43.10"></p>
<p><img src="https://p.ipic.vip/d8lgbr.png" alt="Screenshot 2023-07-17 at 11.43.27"></p>
<p><img src="https://p.ipic.vip/oj9c4m.png" alt="Screenshot 2023-07-17 at 11.43.42"></p>
<p><img src="https://p.ipic.vip/c72igz.png" alt="Screenshot 2023-07-17 at 11.44.04"></p>
<p><img src="https://p.ipic.vip/hnh9ix.png" alt="Screenshot 2023-07-17 at 11.44.16"></p>
<p><img src="https://p.ipic.vip/hofeo3.png" alt="Screenshot 2023-07-17 at 11.44.43"></p>
<h2 id="孟洲：支撑海洋探测网的光纤水听器技术"><a href="#孟洲：支撑海洋探测网的光纤水听器技术" class="headerlink" title="孟洲：支撑海洋探测网的光纤水听器技术"></a>孟洲：支撑海洋探测网的光纤水听器技术</h2><p><img src="https://p.ipic.vip/l4aau9.png" alt="Screenshot 2023-07-17 at 11.46.00"></p>
<p><img src="https://p.ipic.vip/gk63b3.png" alt="Screenshot 2023-07-17 at 11.46.51"></p>
<p><img src="https://p.ipic.vip/x9qssl.png" alt="Screenshot 2023-07-17 at 11.47.11"></p>
<p><img src="https://p.ipic.vip/qtw406.png" alt="Screenshot 2023-07-17 at 11.51.20"></p>
<p><img src="https://p.ipic.vip/96vgi1.png" alt="Screenshot 2023-07-17 at 11.52.08"></p>
<p><img src="https://p.ipic.vip/36msyn.png" alt="Screenshot 2023-07-17 at 11.55.10"></p>
<p><img src="https://p.ipic.vip/cjubhq.png" alt="Screenshot 2023-07-17 at 11.58.46"></p>
<p><img src="https://p.ipic.vip/pr57mz.png" alt="Screenshot 2023-07-17 at 11.59.53"></p>
<p><img src="https://p.ipic.vip/wl4xah.png" alt="Screenshot 2023-07-17 at 11.59.34"></p>
<p><img src="https://p.ipic.vip/wpuhcw.png" alt="Screenshot 2023-07-17 at 12.00.57"></p>
<p><img src="https://p.ipic.vip/mv7db2.png" alt="Screenshot 2023-07-17 at 14.45.38"></p>
<p><img src="https://p.ipic.vip/87x277.png" alt="Screenshot 2023-07-17 at 14.45.59"></p>
<p><img src="https://p.ipic.vip/g5im3v.png" alt="Screenshot 2023-07-17 at 14.46.36"></p>
<p><img src="https://p.ipic.vip/kp41or.png" alt="Screenshot 2023-07-17 at 14.47.02"></p>
<p><img src="https://p.ipic.vip/l4qdnq.png" alt="Screenshot 2023-07-17 at 14.48.39"></p>
<p><img src="https://p.ipic.vip/1kx6ei.png" alt="Screenshot 2023-07-17 at 14.49.03"></p>
<p><img src="https://p.ipic.vip/67b338.png" alt="Screenshot 2023-07-17 at 14.50.59"></p>
<p><img src="https://p.ipic.vip/i18m6l.png" alt="Screenshot 2023-07-17 at 14.52.25"></p>
<p><img src="https://p.ipic.vip/y6wowc.png" alt="Screenshot 2023-07-17 at 14.53.23"></p>
<p><img src="https://p.ipic.vip/0p5vzp.png" alt="Screenshot 2023-07-17 at 14.53.34"></p>
<p><img src="https://p.ipic.vip/g9rcuy.png" alt="Screenshot 2023-07-17 at 14.54.08"></p>
<p><img src="https://p.ipic.vip/yvdb5w.png" alt="Screenshot 2023-07-17 at 14.54.25"></p>
<p><img src="https://p.ipic.vip/b1r6bi.png" alt="Screenshot 2023-07-17 at 14.55.17"></p>
<p><img src="https://p.ipic.vip/xbqolx.png" alt="Screenshot 2023-07-17 at 14.55.37"></p>
<p><img src="https://p.ipic.vip/oefj0c.png" alt="Screenshot 2023-07-17 at 14.55.53"></p>
<p><img src="https://p.ipic.vip/simtke.png" alt="Screenshot 2023-07-17 at 14.56.21"></p>
<p><img src="https://p.ipic.vip/qahc3j.png" alt="Screenshot 2023-07-17 at 14.56.31"></p>
<p><img src="https://p.ipic.vip/6n337g.png" alt="Screenshot 2023-07-17 at 14.56.51"></p>
<p><img src="https://p.ipic.vip/996e8i.png" alt="Screenshot 2023-07-17 at 14.57.13"></p>
<p><img src="https://p.ipic.vip/op9p0f.png" alt="Screenshot 2023-07-17 at 14.58.07"></p>
<p><img src="https://p.ipic.vip/h3r5yw.png" alt="Screenshot 2023-07-17 at 14.57.55"></p>
<p><img src="https://p.ipic.vip/jsly80.png" alt="Screenshot 2023-07-17 at 14.58.32"></p>
<p><img src="https://p.ipic.vip/cukogi.png" alt="Screenshot 2023-07-17 at 14.58.45"></p>
<p><img src="https://p.ipic.vip/cms3oj.png" alt="Screenshot 2023-07-17 at 14.59.03"></p>
<p><img src="https://p.ipic.vip/ac1b0j.png" alt="Screenshot 2023-07-17 at 14.59.43"></p>
<p><img src="https://p.ipic.vip/x56itu.png" alt="Screenshot 2023-07-17 at 15.00.11"></p>
<p><img src="https://p.ipic.vip/lv8g09.png" alt="Screenshot 2023-07-17 at 15.00.54"></p>
<p><img src="https://p.ipic.vip/aipdfd.png" alt="Screenshot 2023-07-17 at 15.01.11"></p>
<p><img src="https://p.ipic.vip/vuz4xz.png" alt="Screenshot 2023-07-17 at 15.02.02"></p>
<p><img src="https://p.ipic.vip/m4qi31.png" alt="Screenshot 2023-07-17 at 15.02.12"></p>
<p><img src="https://p.ipic.vip/hlagkd.png" alt="Screenshot 2023-07-17 at 15.02.31"></p>
<p><img src="https://p.ipic.vip/ahcmsj.png" alt="Screenshot 2023-07-17 at 15.02.49"></p>
<p><img src="https://p.ipic.vip/6iskbz.png" alt="Screenshot 2023-07-17 at 15.03.22"></p>
<p><img src="https://p.ipic.vip/qeon74.png" alt="Screenshot 2023-07-17 at 15.02.59"></p>
<p><img src="https://p.ipic.vip/cebtfm.png" alt="Screenshot 2023-07-17 at 15.03.57"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>段衷东</title>
    <url>/2023/07/04/Seminar/20230704-%E6%AE%B5%E8%A1%B7%E4%B8%9C/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="台风多灾害模拟、危险性分析及其应用-段衷东-哈尔滨工业大学（深圳）"><a href="#台风多灾害模拟、危险性分析及其应用-段衷东-哈尔滨工业大学（深圳）" class="headerlink" title="台风多灾害模拟、危险性分析及其应用   段衷东    哈尔滨工业大学（深圳）"></a>台风多灾害模拟、危险性分析及其应用   段衷东    哈尔滨工业大学（深圳）</h3><p><img src="https://p.ipic.vip/kuayo3.png" alt="Screenshot 2023-07-04 at 10.13.18"></p>
<p><img src="https://p.ipic.vip/eyeg91.png" alt="Screenshot 2023-07-04 at 10.16.31"></p>
<p><img src="https://p.ipic.vip/gx6kw9.png" alt="Screenshot 2023-07-04 at 10.19.20"></p>
<p><img src="https://p.ipic.vip/h3y4l9.png" alt="Screenshot 2023-07-04 at 10.22.59"></p>
<p><img src="https://p.ipic.vip/2bvdo5.png" alt="Screenshot 2023-07-04 at 10.24.25"></p>
<p><img src="https://p.ipic.vip/7jb4ch.png" alt="Screenshot 2023-07-04 at 10.31.45"></p>
<p><img src="https://p.ipic.vip/i2r01w.png" alt="Screenshot 2023-07-04 at 10.32.28"></p>
<p><img src="https://p.ipic.vip/mewoky.png" alt="Screenshot 2023-07-04 at 10.38.08"></p>
<p><img src="https://p.ipic.vip/ecbyag.png" alt="Screenshot 2023-07-04 at 10.42.04"></p>
<p><img src="https://p.ipic.vip/773pfo.png" alt="Screenshot 2023-07-04 at 10.43.58"></p>
<p><img src="https://p.ipic.vip/jt4hqv.png" alt="Screenshot 2023-07-04 at 10.47.29"></p>
<ul>
<li>Carot热机：海水提供能量与大气耗散能量达到平衡是台风强度达到最强</li>
</ul>
<p><img src="https://p.ipic.vip/93btke.png" alt="Screenshot 2023-07-04 at 10.52.21"></p>
<ul>
<li>台风的突然增强难以模拟和预测</li>
</ul>
<p><img src="https://p.ipic.vip/ysqcf1.png" alt="Screenshot 2023-07-04 at 10.55.50"></p>
<p><img src="https://p.ipic.vip/yzb2qg.png" alt="Screenshot 2023-07-04 at 10.57.15"></p>
<p><img src="https://p.ipic.vip/hpd5w0.png" alt="Screenshot 2023-07-04 at 10.59.27"></p>
<ul>
<li>台风个数减少，强台风占的比例增加</li>
</ul>
<p><img src="https://p.ipic.vip/rwni9y.png" alt="Screenshot 2023-07-04 at 11.00.00"></p>
<p><img src="https://p.ipic.vip/qqtfkp.png" alt="Screenshot 2023-07-04 at 11.03.08"></p>
<p><img src="https://p.ipic.vip/pn06ia.png" alt="Screenshot 2023-07-04 at 11.05.41"></p>
<p><img src="https://p.ipic.vip/b2h7q0.png" alt="Screenshot 2023-07-04 at 11.06.04"></p>
<p><img src="https://p.ipic.vip/mbvhph.png" alt="Screenshot 2023-07-04 at 11.06.38"></p>
<p><img src="https://p.ipic.vip/wgmwkd.png" alt="Screenshot 2023-07-04 at 11.07.16"></p>
<p><img src="https://p.ipic.vip/bz628r.png" alt="Screenshot 2023-07-04 at 11.07.40"></p>
<p><img src="https://p.ipic.vip/xnhvwb.png" alt="Screenshot 2023-07-04 at 11.08.27"></p>
<p><img src="https://p.ipic.vip/88ywam.png" alt="Screenshot 2023-07-04 at 11.09.19"></p>
<p><img src="https://p.ipic.vip/puk1x3.png" alt="Screenshot 2023-07-04 at 11.10.51"></p>
<p><img src="https://p.ipic.vip/y2az34.png" alt="Screenshot 2023-07-04 at 11.11.01"></p>
<p><img src="https://p.ipic.vip/2dluc9.png" alt="Screenshot 2023-07-04 at 11.17.14"></p>
<p><img src="https://p.ipic.vip/rlpefm.png" alt="Screenshot 2023-07-04 at 11.18.32"></p>
<p><img src="https://p.ipic.vip/jw8awj.png" alt="Screenshot 2023-07-04 at 11.19.35"></p>
<ul>
<li>Ruyan: 是否能用AI估计台风降水？</li>
</ul>
<p><img src="https://p.ipic.vip/lmd06a.png" alt="Screenshot 2023-07-04 at 11.22.07"></p>
<p><img src="https://p.ipic.vip/hf5xju.png" alt="Screenshot 2023-07-04 at 11.22.59"></p>
<p><img src="https://p.ipic.vip/n9hrar.png" alt="Screenshot 2023-07-04 at 11.22.59"></p>
<p><img src="https://p.ipic.vip/h02aqg.png" alt="Screenshot 2023-07-04 at 11.23.35"></p>
<p><img src="https://p.ipic.vip/62r8cx.png" alt="Screenshot 2023-07-04 at 11.24.09"></p>
<p><img src="https://p.ipic.vip/dqabyd.png" alt="Screenshot 2023-07-04 at 11.25.33"></p>
<p><img src="https://p.ipic.vip/u46gll.png" alt="Screenshot 2023-07-04 at 11.27.54"></p>
<p><img src="https://p.ipic.vip/xad2ql.png" alt="Screenshot 2023-07-04 at 11.28.48"></p>
<p><img src="https://p.ipic.vip/3te6cd.png" alt="Screenshot 2023-07-04 at 11.30.17"></p>
<p><img src="https://p.ipic.vip/70u6qt.png" alt="Screenshot 2023-07-04 at 11.32.00"></p>
<p><img src="https://p.ipic.vip/c71oru.png" alt="Screenshot 2023-07-04 at 11.34.21"></p>
<p><img src="https://p.ipic.vip/b46e32.png" alt="Screenshot 2023-07-04 at 11.33.33"></p>
<p><img src="https://p.ipic.vip/199g4b.png" alt="Screenshot 2023-07-04 at 11.36.59"></p>
<p><img src="https://p.ipic.vip/3ursz4.png" alt="Screenshot 2023-07-04 at 11.39.23"></p>
<p><img src="https://p.ipic.vip/4j937y.png" alt="Screenshot 2023-07-04 at 11.41.16"></p>
<p><img src="https://p.ipic.vip/s1oovw.png" alt="Screenshot 2023-07-04 at 11.44.50"></p>
<p><img src="https://p.ipic.vip/hyme8n.png" alt="Screenshot 2023-07-04 at 11.46.09"></p>
<p><img src="https://p.ipic.vip/zjv9rk.png" alt="Screenshot 2023-07-04 at 11.46.43"></p>
<p><img src="https://p.ipic.vip/2uq2as.png" alt="Screenshot 2023-07-04 at 11.47.31"></p>
<p><img src="https://p.ipic.vip/9yclh7.png" alt="Screenshot 2023-07-04 at 11.47.47"></p>
<p><img src="https://p.ipic.vip/5aa3oi.png" alt="Screenshot 2023-07-04 at 11.48.11"></p>
<p><img src="https://p.ipic.vip/cyxtfx.png" alt="Screenshot 2023-07-04 at 11.49.50"></p>
<ul>
<li>风切增大不利于台风形成</li>
</ul>
<p><img src="https://p.ipic.vip/uk8ubz.jpg" alt="WechatIMG12"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>AOGS 2023</title>
    <url>/2023/07/31/Seminar/20230731-AOGS/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="MR333-8-15-10-00-IG16-Digital-Twin-Paradigm-for-Disaster-Resilience"><a href="#MR333-8-15-10-00-IG16-Digital-Twin-Paradigm-for-Disaster-Resilience" class="headerlink" title="**MR333 8:15-10:00 **IG16 - Digital Twin Paradigm for Disaster Resilience"></a>**MR333 8:15-10:00 **IG16 - Digital Twin Paradigm for Disaster Resilience</h3><p>【1】IG Distinguished Lecture</p>
<p><strong>Hydro-Meterological Extremes and Environmental Issues by using Remote Sensing and Artificial Intelligence Techniques  Yuei-An LIOU  National Central University</strong></p>
<p><img src="https://p.ipic.vip/acw15n.jpg" alt="32441690764040_.pic_hd"></p>
<p><img src="https://p.ipic.vip/g3q56d.jpg" alt="32451690764042_.pic_hd"></p>
<p><img src="https://p.ipic.vip/n7psxb.jpg" alt="32461690764044_.pic_hd"></p>
<h4 id="Tropical-Cyclones"><a href="#Tropical-Cyclones" class="headerlink" title="Tropical Cyclones"></a>Tropical Cyclones</h4><p>Liou-Liu Formula and Fujiwhara effect: two close TYs interactions with each other</p>
<p>Increase of about 10% of the strength of TYs</p>
<p><img src="https://p.ipic.vip/7vmfqp.jpg" alt="WechatIMG3248"></p>
<p><img src="https://p.ipic.vip/mo86j3.jpg" alt="32481690764048_.pic_hd"></p>
<p><img src="https://p.ipic.vip/l4uftl.jpg" alt="32491690764943_.pic_hd"></p>
<p><img src="https://p.ipic.vip/569ek3.jpg" alt="32501690764946_.pic_hd"></p>
<p><img src="https://p.ipic.vip/pyd3m7.jpg" alt="32511690764948_.pic_hd"></p>
<h4 id="Drought"><a href="#Drought" class="headerlink" title="Drought"></a>Drought</h4><p>Drought minitoring by data assimilation</p>
<p><img src="https://p.ipic.vip/rt23o2.jpg" alt="32521690764950_.pic_hd"></p>
<p><img src="https://p.ipic.vip/2lomkd.jpg" alt="WechatIMG3253"></p>
<h4 id="Environmental-Issues"><a href="#Environmental-Issues" class="headerlink" title="Environmental Issues"></a>Environmental Issues</h4><p><img src="https://p.ipic.vip/4dk332.jpg" alt="32541690765503_.pic_hd"></p>
<p><img src="https://p.ipic.vip/qfxqd1.jpg" alt="32551690765505_.pic_hd"></p>
<h3 id="MR310-8-15-10-00"><a href="#MR310-8-15-10-00" class="headerlink" title="MR310 8:15-10:00"></a><strong>MR310 8:15-10:00</strong></h3><p>OS 06 - Coastal Hazards: Impacts of Tropical Storms and Tsunamis</p>
<h4 id="【5】-A036"><a href="#【5】-A036" class="headerlink" title="【5】 A036"></a>【5】 A036</h4><p><strong>Applicability of the Maximum Storm Surge Prediction Model for Extreme Typhoon Event</strong></p>
<p><em>Junbeom JO1, Sooyoul KIM1#+, Jung Soo KIM2, Nobuhito MORI3<br>*1Kumamoto University*, *2University of Bucheon*, *3Kyoto University</em>*</p>
<p><img src="https://p.ipic.vip/9qfyjf.jpg" alt="32561690767146_.pic_hd"></p>
<p><img src="https://p.ipic.vip/bnp7cv.jpg" alt="32571690767149_.pic_hd"></p>
<p><img src="https://p.ipic.vip/9a65hm.jpg" alt="32581690767151_.pic_hd"></p>
<p><img src="https://p.ipic.vip/qq5f6w.jpg" alt="32591690767154_.pic_hd"></p>
<p>【6】<strong>A072</strong></p>
<p><strong>Long-term Assessment of Relative Sea Level Variability Considering Tectonic Deformations, Sea-level Rise, Storm Surge and Ocean Waves: The Case Study of Chilean Coast</strong></p>
<p><em>Francisco MOLTENI-PEREZ#+, Nobuhito MORI, Tomoya SHIMURA, Takuya MIYASHITA</em></p>
<p><img src="https://p.ipic.vip/dp4cls.jpg" alt="32601690767619_.pic_hd"></p>
<p><img src="https://p.ipic.vip/wlmm6n.jpg" alt="32611690767621_.pic_hd"></p>
<hr>
<h3 id="MR333-10-20-12-20-IG16-Digital-twin-Paradigm-for-Disaster-Resilience"><a href="#MR333-10-20-12-20-IG16-Digital-twin-Paradigm-for-Disaster-Resilience" class="headerlink" title="MR333 10:20-12:20 IG16-Digital twin Paradigm for Disaster Resilience"></a>MR333 10:20-12:20 IG16-Digital twin Paradigm for Disaster Resilience</h3><p><strong>IG16-A004<br>Coastal Digital Twin – A New Attempt to Gain Collective Intelligence in Coastal Science and Engineering</strong></p>
<p>Shunichi KOSHIMURA1#+, Nobuhito MORI2, Naotaka YAMAMOTO CHIKASADA3, Keiko UDO1, Junichi NINOMIYA4, Yoshihiro OKUMURA5, Erick MAS1<br>1Tohoku University, 2Kyoto University, 3National Research Institute for Earth Science and Disaster Prevention, 4Kanazawa University, 5Kansai University</p>
<p>to get insignt to avoide disasters</p>
<p><img src="https://p.ipic.vip/8190xy.jpg" alt="32621690771012_.pic_hd"></p>
<p><img src="https://p.ipic.vip/2840ko.jpg" alt="32631690771014_.pic_hd"></p>
<p><img src="https://p.ipic.vip/ahrj8n.jpg" alt="32641690771016_.pic_hd"></p>
<p><img src="https://p.ipic.vip/sbu2u5.jpg" alt="32651690771018_.pic_hd"></p>
<p><img src="https://p.ipic.vip/zxucc0.jpg" alt="32661690771021_.pic_hd"></p>
<p><img src="https://p.ipic.vip/px8izd.jpg" alt="32671690771023_.pic_hd"></p>
<p><img src="https://p.ipic.vip/bfl18r.jpg" alt="32681690771025_.pic_hd"></p>
<p><img src="https://p.ipic.vip/60s5st.jpg" alt="32701690771027_.pic_hd"></p>
<p><img src="https://p.ipic.vip/1tynte.jpg" alt="32711690771029_.pic_hd"></p>
<p><img src="https://p.ipic.vip/yh2pk2.jpg" alt="32721690771030_.pic_hd"></p>
<p><img src="https://p.ipic.vip/avjenn.jpg" alt="32731690771032_.pic_hd"></p>
<p><strong>IG16-A008<br>High-resolution River-coastal-ocean Circulation Modelling in the Seto Inland Sea for Coastal Hazards and Resource Management</strong></p>
<p><em>Jae-Soon JEONG1+, Han Soo LEE1#, Nobuhito MORI2, Morhaf ALJBER1, Jonathan CABRERA1,3<br>*1Hiroshima University*, *2Kyoto University*, *3Davao Oriental State University</em>*</p>
<p><img src="https://p.ipic.vip/uj3e0d.jpg" alt="32741690771795_.pic_hd"></p>
<p><img src="https://p.ipic.vip/tbijn1.jpg" alt="32751690771797_.pic_hd"></p>
<p><img src="https://p.ipic.vip/bkghqx.jpg" alt="32761690771799_.pic_hd"></p>
<p><strong>IG16-A003<br>Tsunami Flow Depth Prediction Applying Ocean-bottom Pressure Data to Machine Learning Technique</strong></p>
<p><em>Masato KAMIYA#+, Toshitaka BABA<br>*Tokushima University</em>*</p>
<p><strong>IG16-A007<br>Feasibility Study of Digital Twin Implementation for Coastal Management Using Satellite SAR</strong></p>
<p><em>Lianhui WU1#+, Yoshimitsu TAJIMA2<br>*1Tokyo University of Marine Science and Technology*, *2The University of Tokyo</em>*</p>
<p><img src="https://p.ipic.vip/oauy5k.jpg" alt="32771690773701_.pic_hd"></p>
<p><img src="https://p.ipic.vip/arivh6.jpg" alt="32781690773702_.pic_hd"></p>
<p><img src="https://p.ipic.vip/xxbqwp.jpg" alt="32791690773703_.pic_hd"></p>
<p>Drawbacks: Lack of sea&#x2F;land contrast: missing the beaches</p>
<p><strong>IG16-A005 | Invited<br>A Study on Disaster Response Using a Digital Twin of the Actual Heavy Rain Disaster</strong></p>
<p><em>Shuji MORIGUCHI1#+, Erick MAS1, Kenjiro TERADA1, Makoto OKUMURA1, Naoko KOSAKA2, Naoko SHIGEMATSU3, Hotoshi SHIMIZU4, Akinori FUJINO4, Tsuneko KURA2, Hiroshi MATSUBARA2, Masaki HISADA2<br>*1Tohoku University*, *2NTT Space Environment and Energy Laboratories*, *3NTT Human Informatics Laboratories*, *4NTT Communication Science Laboratories</em>*</p>
<p><img src="https://p.ipic.vip/8puzwi.jpg" alt="32801690776142_.pic_hd"></p>
<p><img src="https://p.ipic.vip/pbd8sd.jpg" alt="32811690776143_.pic_hd"></p>
<p><img src="https://p.ipic.vip/7m3pnu.jpg" alt="32821690776144_.pic_hd"></p>
<p><img src="https://p.ipic.vip/z0f8dm.jpg" alt="32831690776145_.pic_hd"></p>
<p><img src="https://p.ipic.vip/ibn4qw.jpg" alt="32841690776146_.pic_hd"></p>
<p><img src="https://p.ipic.vip/siq99u.jpg" alt="WechatIMG3284"></p>
<p>Big important problem: How to valid the digital twin?</p>
<p><strong>IG16-A001<br>Digital Twin and Coastal Problems</strong></p>
<p><em>Nobuhito MORI1#+, Shunichi KOSHIMURA2, Naotaka YAMAMOTO CHIKASADA3, Keiko UDO2, Junichi NINOMIYA4, Yoshihiro OKUMURA5<br>*1Kyoto University*, *2Tohoku University*, *3National Research Institute for Earth Science and Disaster Prevention*, *4Kanazawa University*, *5Kansai University</em>*</p>
<p><img src="https://p.ipic.vip/wx39iv.jpg" alt="32851690776951_.pic_hd"></p>
<p><img src="https://p.ipic.vip/mi4kot.jpg" alt="32861690776952_.pic_hd"></p>
<p><img src="https://p.ipic.vip/iqsmau.jpg" alt="32871690776952_.pic_hd"></p>
<p><img src="https://p.ipic.vip/7okufl.jpg" alt="32881690776953_.pic_hd"></p>
<p><img src="https://p.ipic.vip/w90t6n.jpg" alt="32891690776955_.pic_hd"></p>
<p>data assilimation is a good example and way toward DT</p>
<h3 id="MRMR331-8-15-10-00-AS01-The-Asian-Monsoon-Extremes-and-Climate-Change"><a href="#MRMR331-8-15-10-00-AS01-The-Asian-Monsoon-Extremes-and-Climate-Change" class="headerlink" title="MRMR331 8:15 - 10:00 AS01 - The Asian Monsoon, Extremes and Climate Change"></a>MRMR331 8:15 - 10:00 AS01 - The Asian Monsoon, Extremes and Climate Change</h3><p><strong>AS01-A094<br>Excessive Southern China Spring Rainfall Promoted by Multi-year El Niño Events</strong></p>
<p><em>Wenxiu ZHONG1#+, Yuting WU1, Song YANG1, Tianjiao MA2, Qingyu CAI2, Qian LIU1<br>*1Sun Yat-sen University*, *2Chinese Academy of Sciences</em>*</p>
<p>Highlatitude pathway: Polar vortex (TT mechanism)</p>
<p>Low-latitude pathway: water vapor transport</p>
<p><strong>AS01-A001<br>Zonal Extension of the Middle East Jet Stream and its Influence on the Asian Monsoon</strong></p>
<p><em>Wei WEI#+<br>*Sun Yat-sen University</em>*</p>
<p>When the MEJS extends eastward, a significant barotropic anomalous anticyclone is located over the Arabian Sea (AS), associated with the southeastward propagating wave train from Europe. Intense divergence in the southwest of the AS anomalous anticyclone favors more convection over the western tropical Indian Ocean, which excites an anomalous upper-level anticyclone to the north as a Rossby wave response, further intensifying the AS anticyclonic anomaly. </p>
<p><strong>AS01-A059<br>Characteristics of Precipitation and Atmospheric Environment During the Heavy Rain Event Observed on June 14-16, 2022 in the Southern Meghalaya Plateau</strong></p>
<p><em>Fumie MURATA1#+, Toru TERAO2, Hiambok J. SYIEMLIEH3, Laitpharlang CAJEE3, Shyam S. KUNDU4, Sayeed Ahmed CHOUDHURY5, Shameem Hassan BHUIYAN5, Fatima AKTER6, Raju GOGOI7<br>*1Kochi University*, *2Kagawa University*, *3North-Eastern Hill University*, *4North Eastern Space Applications Centre*, *5Bangladesh Meteorological Department*, *6University of Dhaka*, *7Diphu Government College</em>*</p>
<p><strong>AS01-A086<br>Different Mechanisms for Daytime, Nighttime, and Compound Heatwaves: A Study in Southern China</strong></p>
<p><em>Ming LUO1,2#+, Gabriel LAU2, Zhen LIU3<br>*1Sun Yat-sen University*, *2The Chinese University of Hong Kong*, *3IBS Center for Climate Physics</em>*</p>
<p><strong>AS01-A007<br>The Concurrent Record-breaking Rainfall Over Northwest India and North China in September 2021</strong></p>
<p><em>Ying NA1#+, Riyu LU2<br>*1Beijing Municipal Climate Center*, *2Chinese Academy of Sciences</em>*</p>
<hr>
<h3 id="MR328-10-20-12-20-OS03-Seasonal-to-interannual-Climate-Variability-and-Predictability"><a href="#MR328-10-20-12-20-OS03-Seasonal-to-interannual-Climate-Variability-and-Predictability" class="headerlink" title="MR328 10:20 - 12:20  OS03 - Seasonal-to-interannual Climate Variability and Predictability"></a>MR328 10:20 - 12:20  OS03 - Seasonal-to-interannual Climate Variability and Predictability</h3><p><strong>OS03-A019 | Invited<br>Impacts of Oceanic Mesoscale Structures on Simulating Sea Surface Temperature in the Arabian Sea and Indian Summer Monsoon</strong></p>
<p><em>Yoko YAMAGAMI1#+, Hiroaki TATEBE1, Takahito KATAOKA1, Tatsuo SUZUKI1, Masahiro WATANABE2<br>*1Japan Agency for Marine-Earth Science and Technology*, *2The University of Tokyo</em>*</p>
<p><img src="https://p.ipic.vip/o2n64n.jpg" alt="32901690857489_.pic_hd"></p>
<p><img src="https://p.ipic.vip/u4yava.jpg" alt="32911690857491_.pic_hd"></p>
<p><img src="https://p.ipic.vip/7vi624.jpg" alt="32921690857529_.pic_hd"></p>
<p><img src="https://p.ipic.vip/3jtqw8.jpg" alt="32931690857531_.pic_hd"></p>
<p><img src="https://p.ipic.vip/69x6gw.jpg" alt="32941690857533_.pic_hd"></p>
<p><img src="https://p.ipic.vip/9qg7w5.jpg" alt="32951690857535_.pic_hd"></p>
<p>Cold SST biases in the Arabian Sea</p>
<p>Arabian Sea: Eddy rich region</p>
<p>horizontal advection warms the mixed layer in the highreslution model</p>
<p><strong>OS03-A006<br>On the Predictability of the Extreme Drought in East Africa During the Short Rains Season</strong></p>
<p><em>Takeshi DOI#+, Swadhin BEHERA, Toshio YAMAGATA<br>*Japan Agency for Marine-Earth Science and Technology</em>*</p>
<p>A dynamical seasonal prediction system based on a climate model called the Scale Interaction Experiment-Frontier ver. 2 (SINTEX-F2) under the EU–Japan collaborative framework</p>
<p>IOD phase and East Africa rainy</p>
<p><strong>OS03-A015<br>Characteristics of the Interannual Variability of the Significant Wave Height in Bay of Bengal</strong></p>
<p><em>Shaotian LI#+, Yineng LI, Shiqiu PENG<br>*Chinese Academy of Sciences</em>*</p>
<p><img src="https://p.ipic.vip/1lblxq.jpg" alt="32961690858362_.pic_hd"></p>
<p>model resoluton: 1&#x2F;12 degree</p>
<p><img src="https://p.ipic.vip/9c04ix.jpg" alt="32971690858430_.pic_hd"></p>
<p><img src="https://p.ipic.vip/azm8uj.jpg" alt="32981690859211_.pic_hd"></p>
<p><strong>OS03-A021 | Invited<br>Eastward Shift of Interannual Climate Variability in the South Indian Ocean Since 1950</strong></p>
<p><em>Lei ZHANG1#+, Weiqing HAN2, Kristopher KARNAUSKAS2, Yuanlong LI3, Tomoki TOZUKA4<br>*1South China Sea Institute of Oceanology*, *2University of Colorado Boulder*, *3Chinese Academy of Sciences*, *4The University of Tokyo</em>*</p>
<p><img src="https://p.ipic.vip/xrl0qy.jpg" alt="33521690943158_.pic_hd"></p>
<p><img src="https://p.ipic.vip/v2ncxf.jpg" alt="33531690943159_.pic_hd"></p>
<p><img src="https://p.ipic.vip/x639s9.jpg" alt="33541690943160_.pic_hd"></p>
<p><strong>OS03-A009<br>ENSO–IOD Inter-basin Connection Is Controlled by the Atlantic Multidecadal Oscillation</strong></p>
<p><em>Jiaqing XUE1#+, Jing-jia LUO1, Wenjun ZHANG1, Toshio YAMAGATA2<br>*1Nanjing University of Information Science &amp; Technology*, *2Japan Agency for Marine-Earth Science and Technology</em>*</p>
<p><img src="https://p.ipic.vip/9r9kdy.jpg" alt="33551690943160_.pic_hd"></p>
<p><img src="https://p.ipic.vip/sk9cmo.jpg" alt="33561690943161_.pic_hd"></p>
<p><img src="https://p.ipic.vip/nxb1q9.jpg" alt="33571690943162_.pic_hd"></p>
<hr>
<h3 id="MR331-10-20-12-20-AS01-The-Asian-Monsoon-Extremes-and-Climate-Change"><a href="#MR331-10-20-12-20-AS01-The-Asian-Monsoon-Extremes-and-Climate-Change" class="headerlink" title="MR331  10:20 - 12:20   AS01 - The Asian Monsoon, Extremes and Climate Change"></a>MR331  10:20 - 12:20   AS01 - The Asian Monsoon, Extremes and Climate Change</h3><p><strong>AS01-A004<br>Intraseasonal Variability of Global Land Monsoon Precipitation and its Recent Trend</strong></p>
<p><em>Fei LIU1#+, Bin WANG2<br>*1Sun Yat-sen University*, *2University of Hawaii</em>*</p>
<p><img src="https://p.ipic.vip/xvmb1l.jpg" alt="33681690945034_.pic_hd"></p>
<p><img src="https://p.ipic.vip/mlog0d.jpg" alt="33691690945035_.pic_hd"></p>
<p><img src="https://p.ipic.vip/63d4oz.jpg" alt="33701690945036_.pic_hd"></p>
<p><img src="https://p.ipic.vip/0w1wsn.jpg" alt="33711690945037_.pic_hd"></p>
<hr>
<h3 id="MR328-3-30-5-15-AS43-Application-of-Data-driven-and-Machine-Learning-Approaches-in-Disaster-Risk-Reduction-and-Mitigation"><a href="#MR328-3-30-5-15-AS43-Application-of-Data-driven-and-Machine-Learning-Approaches-in-Disaster-Risk-Reduction-and-Mitigation" class="headerlink" title="MR328 3:30 - 5:15  AS43 - Application of Data-driven and Machine Learning Approaches in Disaster Risk Reduction and Mitigation"></a>MR328 3:30 - 5:15  AS43 - Application of Data-driven and Machine Learning Approaches in Disaster Risk Reduction and Mitigation</h3><p><strong>AS43-A015<br>Revolutionizing Earth Science with Generalized AI Models</strong></p>
<p><em>Rahul RAMACHANDRAN1#+, Tsengdar LEE2, Raghu GANTI3<br>*1NASA Marshall Space Flight Center*, *2NASA Headquarters*, *3IBM Research</em>*</p>
<p>Language model for Earth Science: Prime QA  for question answering</p>
<p><img src="https://p.ipic.vip/b6kw88.jpg" alt="33811690962556_.pic_hd"></p>
<p><img src="https://p.ipic.vip/itad8k.jpg" alt="33821690962557_.pic_hd"></p>
<p><img src="https://p.ipic.vip/wo7by9.jpg" alt="33831690962558_.pic_hd"></p>
<p><img src="https://p.ipic.vip/wlt034.jpg" alt="33841690962559_.pic_hd"></p>
<p><img src="https://p.ipic.vip/o1vehv.jpg" alt="33851690962560_.pic_hd"></p>
<p><img src="https://p.ipic.vip/nrqayw.jpg" alt="33861690962562_.pic_hd"></p>
<p><img src="https://p.ipic.vip/xb76bf.jpg" alt="33871690962563_.pic_hd"></p>
<p><img src="https://p.ipic.vip/per707.jpg" alt="33881690962564_.pic_hd"></p>
<p><img src="https://p.ipic.vip/imhv0a.jpg" alt="33891690962566_.pic_hd"></p>
<p><img src="https://p.ipic.vip/02zdm8.jpg" alt="33901690962568_.pic_hd"></p>
<p><strong>AS43-A012<br>Variation Characteristics and Attribution Analysis of Tropical Cyclone Compound Floods Derived from Observations in Shenzhen, China</strong></p>
<p><em>Jingru LIU1,2#+, Zhan TIAN2, Steven DOBBIE3, Andrew ROSS3, Laixiang SUN4, Qinghua YE5<br>*1University of Leeds; Southern University of Science and Technology*, *2Southern University of Science and Technology*, *3University of Leeds*, *4University of Maryland*, *5Deltares</em>*</p>
<p>maximum daily rainfall  + maximum sea level pressure   for selection of potental TC compound floods</p>
<p><img src="https://p.ipic.vip/leq4bi.jpg" alt="33911690963338_.pic_hd"></p>
<p><img src="https://p.ipic.vip/uka1mi.jpg" alt="33921690963339_.pic_hd"></p>
<p><img src="https://p.ipic.vip/gcz01p.jpg" alt="33931690963340_.pic_hd"></p>
<p><strong>AS43-A010<br>On the Prediction of Water Level in the Urban Waterlogging Area Using Deep Learning Approach</strong></p>
<p><em>Xiefei ZHI#+<br>*Nanjing University of Information Science &amp; Technology</em>*</p>
<p>issue early warning of urban flooding </p>
<p><strong>AS43-A009<br>Application of Machine Learning in Predicting Current and Future Climate Extremes in China</strong></p>
<p><em>Kelvin NG1#+, Gregor C. LECKEBUSCH1, Kevin HODGES2<br>*1University of Birmingham*, *2University of Reading</em>*</p>
<p><img src="https://p.ipic.vip/gdodrv.jpg" alt="33941690965795_.pic_hd"></p>
<p><img src="https://p.ipic.vip/yxlmhq.jpg" alt="33951690965795_.pic_hd"></p>
<p><strong>AS43-A005<br>Data-driven Machine Learning Model for the Prediction of Pacific Sea Surface Temperature Prediction</strong></p>
<p><em>John Chien-Han TSENG1#+, Bo-An TSAI2, Kaoshen CHUNG2<br>*1Central Weather Bureau*, *2National Central University</em>*</p>
<p><strong>AS43-A017<br>Verification of Improved Analog Ensemble Methods for Forecasting Extreme Temperature and Wind Speed in Beijing</strong></p>
<p><em>Cui HAO#+<br>*Beijing Meteorological Observatory, Beijing</em>*</p>
<hr>
<h3 id="MR328-8-15-10-00-AS10-Extreme-Events-Observations-and-Modeling"><a href="#MR328-8-15-10-00-AS10-Extreme-Events-Observations-and-Modeling" class="headerlink" title="MR328   8:15 - 10:00   AS10 - Extreme Events: Observations and Modeling"></a>MR328   8:15 - 10:00   AS10 - Extreme Events: Observations and Modeling</h3><p><strong>AS10-A006<br>Recurring Latitudinal Shifts of the 2020 Extreme Meiyu Rainfall Around Yangtse: Potential Role of MJO</strong></p>
<p><em>Yuntao WEI1#+, Hong-Li REN2,3, Yuwen WANG1<br>*1Fudan University*, *2Chinese Academy of Meteorological Sciences*, *3China University of Geosciences</em>*</p>
<p><img src="https://p.ipic.vip/rrc3yz.jpg" alt="33971691029048_.pic_hd"></p>
<p><img src="https://p.ipic.vip/vvphbl.jpg" alt="33981691029050_.pic_hd"></p>
<h3 id="MR328-10-20-12-20-AS10-Extreme-Events-Observations-and-Modeling"><a href="#MR328-10-20-12-20-AS10-Extreme-Events-Observations-and-Modeling" class="headerlink" title="MR328 10:20 - 12:20   AS10 - Extreme Events: Observations and Modeling"></a>MR328 10:20 - 12:20   AS10 - Extreme Events: Observations and Modeling</h3><p><strong>AS10-A027<br>Longer- and Slower-moving Contiguous Heatwaves Linked to El Niño</strong></p>
<p><em>Sijia WU+, Ming LUO#<br>*Sun Yat-sen University</em>*</p>
<p><img src="https://p.ipic.vip/4i0c79.jpg" alt="34051691481209_.pic_hd"></p>
<p><img src="https://p.ipic.vip/0vbdkl.jpg" alt="34061691481213_.pic_hd"></p>
<p><img src="https://p.ipic.vip/gvv2sl.jpg" alt="34071691481219_.pic_hd"></p>
<p><img src="https://p.ipic.vip/8tgxox.jpg" alt="34081691481223_.pic_hd"></p>
<p><img src="https://p.ipic.vip/rl5knn.jpg" alt="34091691481227_.pic_hd"></p>
<p><img src="https://p.ipic.vip/t1sd8q.jpg" alt="34101691481232_.pic_hd"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>马春雷</title>
    <url>/2023/07/05/Seminar/20230705-%E9%A9%AC%E6%98%A5%E9%9B%B7/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="马春雷：珠江口叶绿素a浓度的遥感研究：基于机器学习的算法开发与应用"><a href="#马春雷：珠江口叶绿素a浓度的遥感研究：基于机器学习的算法开发与应用" class="headerlink" title="马春雷：珠江口叶绿素a浓度的遥感研究：基于机器学习的算法开发与应用"></a>马春雷：珠江口叶绿素a浓度的遥感研究：基于机器学习的算法开发与应用</h3><p><img src="https://p.ipic.vip/g38ik3.png" alt="Screenshot 2023-07-05 at 20.03.44"></p>
<p><img src="https://p.ipic.vip/3rovwi.png" alt="Screenshot 2023-07-05 at 20.04.04"></p>
<p><img src="https://p.ipic.vip/pquk3v.png" alt="Screenshot 2023-07-05 at 20.05.43"></p>
<p><img src="https://p.ipic.vip/08nx5p.png" alt="Screenshot 2023-07-05 at 20.06.46"></p>
<p><img src="https://p.ipic.vip/v0h0bc.png" alt="Screenshot 2023-07-05 at 20.07.45"></p>
<p><img src="https://p.ipic.vip/xsu7hz.png" alt="Screenshot 2023-07-05 at 20.10.34"></p>
<p><img src="https://p.ipic.vip/jrqfxl.png" alt="Screenshot 2023-07-05 at 20.11.08"></p>
<p><img src="https://p.ipic.vip/z15qmw.png" alt="Screenshot 2023-07-05 at 20.11.08"></p>
<p><img src="https://p.ipic.vip/hpe9rz.png" alt="Screenshot 2023-07-05 at 20.13.44"></p>
<p><img src="https://p.ipic.vip/822np8.png" alt="Screenshot 2023-07-05 at 20.14.35"></p>
<p><img src="https://p.ipic.vip/calu6t.png" alt="Screenshot 2023-07-05 at 20.16.33"></p>
<p><img src="https://p.ipic.vip/jyjl72.png" alt="Screenshot 2023-07-05 at 20.17.36"></p>
<p><img src="https://p.ipic.vip/skqmf4.png" alt="Screenshot 2023-07-05 at 20.18.26"></p>
<p><img src="https://p.ipic.vip/wc7ddc.png" alt="Screenshot 2023-07-05 at 20.18.50"></p>
<p><img src="https://p.ipic.vip/hmjmhj.png" alt="Screenshot 2023-07-05 at 20.19.14"></p>
<p><img src="https://p.ipic.vip/1613ia.png" alt="Screenshot 2023-07-05 at 20.19.22"></p>
<p><img src="https://p.ipic.vip/7sqcmh.png" alt="Screenshot 2023-07-05 at 20.19.33"></p>
<p><img src="https://p.ipic.vip/2e77rs.png" alt="Screenshot 2023-07-05 at 20.20.36"></p>
<p><img src="https://p.ipic.vip/96bpo7.png" alt="Screenshot 2023-07-05 at 20.21.46"></p>
<p><img src="https://p.ipic.vip/akw8j1.png" alt="Screenshot 2023-07-05 at 20.32.58"></p>
<p><img src="https://p.ipic.vip/xw8gq5.png" alt="Screenshot 2023-07-05 at 20.23.28"></p>
<p><img src="https://p.ipic.vip/na79ia.png" alt="Screenshot 2023-07-05 at 20.24.04"></p>
<p><img src="https://p.ipic.vip/3gc20t.png" alt="Screenshot 2023-07-05 at 20.25.46"></p>
<p><img src="https://p.ipic.vip/3yecp6.png" alt="Screenshot 2023-07-05 at 20.26.50"></p>
<ul>
<li><p>黄瑞新：海洋的两个边界条件，风应力和大气压强。利用妈祖模式来计算？更准确的风暴潮海平面变化模拟。</p>
<p>盐度卫星的订正</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>Bin Wang</title>
    <url>/2023/08/15/Seminar/20230815-Bin%20Wang/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Bin-Wang：Why-so-many-double-and-triple-La-Nina-events-emerged-recently"><a href="#Bin-Wang：Why-so-many-double-and-triple-La-Nina-events-emerged-recently" class="headerlink" title="Bin Wang：Why so many double and triple La Niña events emerged recently"></a>Bin Wang：Why so many double and triple La Niña events emerged recently</h3><p><img src="https://p.ipic.vip/xykvfy.png" alt="Screenshot 2023-08-15 at 09.51.03"></p>
<p><img src="https://p.ipic.vip/9hdeof.png" alt="Screenshot 2023-08-15 at 09.49.46"></p>
<p><img src="https://p.ipic.vip/qqz8rp.png" alt="Screenshot 2023-08-15 at 09.43.54"></p>
<p>演变特征的差异</p>
<p><img src="https://p.ipic.vip/7wozxm.png" alt="Screenshot 2023-08-15 at 09.46.14"></p>
<p><img src="https://p.ipic.vip/lm0vep.png" alt="Screenshot 2023-08-15 at 09.46.24"></p>
<p><img src="https://p.ipic.vip/4ldwvn.png" alt="Screenshot 2023-08-15 at 09.47.12"></p>
<p>1957年的之后的数据更加可靠</p>
<p><img src="https://p.ipic.vip/oc8vx2.png" alt="Screenshot 2023-08-15 at 09.49.46"></p>
<p><img src="https://p.ipic.vip/uzw2sy.png" alt="Screenshot 2023-08-15 at 09.51.13"></p>
<p><img src="https://p.ipic.vip/xxmc41.png" alt="Screenshot 2023-08-15 at 09.52.30"></p>
<p><img src="https://p.ipic.vip/yv2o13.png" alt="Screenshot 2023-08-15 at 09.53.42"></p>
<p>采用 accumulative intensity: 从impact的角度是合理的</p>
<p><img src="https://p.ipic.vip/88uwqh.png" alt="Screenshot 2023-08-15 at 09.55.03"></p>
<p><img src="https://p.ipic.vip/zmo57y.png" alt="Screenshot 2023-08-15 at 09.55.22"></p>
<p><img src="https://p.ipic.vip/6zory7.png" alt="Screenshot 2023-08-15 at 09.55.56"></p>
<p>average intensity 变化不显著，accumulative intensity 变化显著</p>
<p><img src="https://p.ipic.vip/j28tgm.png" alt="Screenshot 2023-08-15 at 09.56.40"></p>
<p>onset 时期海温变化的速率 与  accumulative intensity</p>
<p><img src="https://p.ipic.vip/2uqopw.png" alt="Screenshot 2023-08-15 at 09.58.53"></p>
<ul>
<li>提问：Single-year 和  Multi-year 澳大利亚影响反号了？</li>
</ul>
<p><img src="https://p.ipic.vip/jh70bw.png" alt="Screenshot 2023-08-15 at 10.00.29"></p>
<p>  <img src="https://p.ipic.vip/hd6r9p.png" alt="Screenshot 2023-08-15 at 10.01.47"></p>
<p><img src="https://p.ipic.vip/qjeba9.png" alt="Screenshot 2023-08-15 at 10.02.19"></p>
<p>通过计算budget 确认 Cooling 是怎么造成的</p>
<p><img src="https://p.ipic.vip/zvk2u2.png" alt="Screenshot 2023-08-15 at 10.04.05"></p>
<p><img src="https://p.ipic.vip/eecrqn.png" alt="Screenshot 2023-08-15 at 10.07.39"></p>
<p><img src="https://p.ipic.vip/3snih5.png" alt="Screenshot 2023-08-15 at 10.08.04"></p>
<p>西太变暖，西太减去中太的SST gradient  加大，增强东风异常</p>
<p>红线是过去，黑色是现在</p>
<p>advective feedback 和 thermocline feedback 均增大</p>
<ul>
<li>提问：平均态和多年事件变化的因果关系？</li>
</ul>
<p><img src="https://p.ipic.vip/5dzdok.png" alt="Screenshot 2023-08-15 at 10.13.43"></p>
<p>multi-year LN前期的EN，如果从WP开始发展，CP EN &#x2F; Super EN 发展</p>
<p><img src="https://p.ipic.vip/tbsmai.png" alt="Screenshot 2023-08-15 at 10.15.40"></p>
<p>WP warming 加速了事件的发展，有利于事件的持续</p>
<p><img src="https://p.ipic.vip/ibgp8g.png" alt="Screenshot 2023-08-15 at 10.16.26"></p>
<p>仅有CESM2 的 LE 模拟历史时期ENSO模拟得较好</p>
<p><img src="https://p.ipic.vip/w01p55.png" alt="Screenshot 2023-08-15 at 10.17.26"></p>
<p><img src="https://p.ipic.vip/2u2o9r.png" alt="Screenshot 2023-08-15 at 10.18.42"></p>
<p><img src="https://p.ipic.vip/ey88n6.png" alt="Screenshot 2023-08-15 at 10.19.56"></p>
<p><img src="https://p.ipic.vip/4w85dg.png" alt="Screenshot 2023-08-15 at 10.20.37"></p>
<p><img src="https://p.ipic.vip/a01y9m.png" alt="Screenshot 2023-08-15 at 10.20.44"></p>
<p><img src="https://p.ipic.vip/19xlor.png" alt="Screenshot 2023-08-15 at 10.21.23"></p>
<p>西太平洋相对于东太平洋增暖很重要</p>
<p><img src="https://p.ipic.vip/wz9mpl.png" alt="Screenshot 2023-08-15 at 10.25.30"></p>
<p><img src="https://p.ipic.vip/srgzvh.png" alt="Screenshot 2023-08-15 at 10.26.38"></p>
<p>mean state 的 change 对EN 的影响：使得 EN 从西太开始发展, CP EN 和 Super EN 更多</p>
<ul>
<li><p>提问：为什么不影响 EN 的 persistence？- 主要影响 EN 的 transition 和 onset </p>
</li>
<li><p>提问：耿涛 Nature 热带外PMM机制 导致多年 LN 增多？ 其他模式怎么样？</p>
<p>Future CMIP6 预测，东北太平洋增暖</p>
<p>历史阶段没有东北太平洋没有明显增暖，过去100年不是由于东北太平洋增暖造成的</p>
<p>其他模式不能 reproduce 过去SST的变化 trend</p>
</li>
</ul>
<hr>
<p><img src="https://p.ipic.vip/o6cqki.jpg" alt="WechatIMG3454"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>于廷照</title>
    <url>/2023/08/14/Seminar/20230814-%E4%BA%8E%E5%BB%B7%E7%85%A7/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="于廷照：深度学习方法在气象领域应用探索研究"><a href="#于廷照：深度学习方法在气象领域应用探索研究" class="headerlink" title="于廷照：深度学习方法在气象领域应用探索研究"></a>于廷照：深度学习方法在气象领域应用探索研究</h3><p>视频回放：<a href="https://pan.baidu.com/s/1IDrrjKE4ZhBpllnzzpcUdw">https://pan.baidu.com/s/1IDrrjKE4ZhBpllnzzpcUdw</a> </p>
<p>提取码：fvve</p>
<p><img src="https://p.ipic.vip/5gk87g.png" alt="Screenshot 2023-08-14 at 15.02.15"></p>
<p><img src="https://p.ipic.vip/cf5s1w.png" alt="Screenshot 2023-08-14 at 15.02.55"></p>
<p><img src="https://p.ipic.vip/he1vfr.png" alt="Screenshot 2023-08-14 at 15.08.28"></p>
<p><img src="https://p.ipic.vip/cno52j.png" alt="Screenshot 2023-08-14 at 15.09.09"></p>
<p><img src="https://p.ipic.vip/z4ha13.png" alt="Screenshot 2023-08-14 at 15.09.35"></p>
<p><img src="https://p.ipic.vip/9vqqc6.png" alt="Screenshot 2023-08-14 at 15.14.18"></p>
<p>轴向注意力机制：探索同一经纬度的相似性</p>
<p><img src="https://p.ipic.vip/pb4egk.png" alt="Screenshot 2023-08-14 at 15.16.01"></p>
<p>风场std与地形std间存在相关性</p>
<p>放入网络的loss中，把局地信息考虑进来</p>
<p><img src="https://p.ipic.vip/tq413j.png" alt="Screenshot 2023-08-14 at 15.17.52"></p>
<p><img src="https://p.ipic.vip/0x51n8.png" alt="Screenshot 2023-08-14 at 15.18.35"></p>
<p><img src="https://p.ipic.vip/8thg0l.png" alt="Screenshot 2023-08-14 at 15.19.12"></p>
<p>GRU cell 设计    和风场相关的变量  和  风场不相关的变量</p>
<p>不含事件信息，flatten GRU</p>
<p><img src="https://p.ipic.vip/hrvk5l.png" alt="Screenshot 2023-08-14 at 15.21.04"></p>
<p><img src="https://p.ipic.vip/e42py8.png" alt="Screenshot 2023-08-14 at 15.21.52"></p>
<p>网络结构：轴向注意力 — 超分重构（递归）— 除噪（递归）</p>
<p><img src="https://p.ipic.vip/5n025d.png" alt="Screenshot 2023-08-14 at 15.24.46"></p>
<p><img src="https://p.ipic.vip/1gko0p.png" alt="Screenshot 2023-08-14 at 15.25.34"></p>
<p><img src="https://p.ipic.vip/i2cjw9.png" alt="Screenshot 2023-08-14 at 15.26.24"></p>
<p><img src="https://p.ipic.vip/0ta2kf.png" alt="Screenshot 2023-08-14 at 15.26.44"></p>
<p><img src="https://p.ipic.vip/8o1muu.png" alt="Screenshot 2023-08-14 at 15.27.40"></p>
<p><img src="https://p.ipic.vip/0mq5vs.png" alt="Screenshot 2023-08-14 at 15.28.26"></p>
<p>降水的特殊性：空间离散性、累积值</p>
<p><img src="https://p.ipic.vip/umq7dd.png" alt="Screenshot 2023-08-14 at 15.29.36"></p>
<p>用其他相关要素构成辅助信息指导模块、地形订正（利用地形学习了一个空间畸变模块）、评价损失函数</p>
<p><img src="https://p.ipic.vip/8uw4aq.png" alt="Screenshot 2023-08-14 at 15.31.17"></p>
<p><img src="https://p.ipic.vip/ud5fvi.png" alt="Screenshot 2023-08-14 at 15.33.19"></p>
<p>降水离散化，用交叉熵损失进行约束</p>
<p><img src="https://p.ipic.vip/qsnrq4.png" alt="Screenshot 2023-08-14 at 15.34.11"></p>
<p><img src="https://p.ipic.vip/t2coz6.png" alt="Screenshot 2023-08-14 at 15.34.57"></p>
<p><img src="https://p.ipic.vip/goxxd1.png" alt="Screenshot 2023-08-14 at 15.34.57"></p>
<p><img src="https://p.ipic.vip/wi8ejo.png" alt="Screenshot 2023-08-14 at 15.35.44"></p>
<p><img src="https://p.ipic.vip/o4d76y.png" alt="Screenshot 2023-08-14 at 15.36.27"></p>
<p><img src="https://p.ipic.vip/58h1xg.png" alt="Screenshot 2023-08-14 at 15.37.39"></p>
<p>通过时序上的门控设计使得网络可以关注到不同频率的历史信息</p>
<p>没有跨层的网络信息传递</p>
<p><img src="https://p.ipic.vip/spiurp.png" alt="Screenshot 2023-08-14 at 15.38.38"></p>
<p>增加一个memory单位实现跨层的信息传递，近似并联的关系，没有足够的信息交互</p>
<p>学到的信息可能存在冗余</p>
<p><img src="https://p.ipic.vip/q7x3bb.png" alt="Screenshot 2023-08-14 at 15.39.43"></p>
<p><img src="https://p.ipic.vip/vtov5g.png" alt="Screenshot 2023-08-14 at 15.40.15"></p>
<p>改成串联，且一部分用GRU，一部分用LSTM，进一步减少冗余性</p>
<p>增加轴向注意力机制</p>
<p><img src="https://p.ipic.vip/81bomn.png" alt="Screenshot 2023-08-14 at 15.41.31"></p>
<p><img src="https://p.ipic.vip/30cbeh.png" alt="Screenshot 2023-08-14 at 15.42.24"></p>
<p><img src="https://p.ipic.vip/w3mxk2.png" alt="Screenshot 2023-08-14 at 15.45.20"></p>
<p><img src="https://p.ipic.vip/cd42ka.png" alt="Screenshot 2023-08-14 at 15.45.35"></p>
<p><img src="https://p.ipic.vip/vgd2wz.png" alt="Screenshot 2023-08-14 at 15.45.45"></p>
<p><img src="https://p.ipic.vip/hnb90c.png" alt="Screenshot 2023-08-14 at 15.46.12"></p>
<p><img src="https://p.ipic.vip/ag0jos.png" alt="Screenshot 2023-08-14 at 15.47.44"></p>
<p>拆成了三个分支</p>
<p><img src="https://p.ipic.vip/un00zn.png" alt="Screenshot 2023-08-14 at 15.50.27"></p>
<p><img src="https://p.ipic.vip/n85qsm.png" alt="Screenshot 2023-08-14 at 15.51.58"></p>
<p><img src="https://p.ipic.vip/psouj5.png" alt="Screenshot 2023-08-14 at 15.54.44"></p>
<p>改进的图卷积：时间上可学习</p>
<p><img src="https://p.ipic.vip/od3zpc.png" alt="Screenshot 2023-08-14 at 15.56.41"></p>
<p><img src="https://p.ipic.vip/10qgo9.png" alt="Screenshot 2023-08-14 at 15.56.55"></p>
<p><img src="https://p.ipic.vip/vwk2mz.png" alt="Screenshot 2023-08-14 at 15.57.17"></p>
<p><img src="https://p.ipic.vip/bwyudq.png" alt="Screenshot 2023-08-14 at 15.57.43"></p>
<p><img src="https://p.ipic.vip/zb9rcx.png" alt="Screenshot 2023-08-14 at 15.58.13"></p>
<p><img src="https://p.ipic.vip/vc2hpb.png" alt="Screenshot 2023-08-14 at 15.58.51"></p>
<p><img src="https://p.ipic.vip/3jrwj5.png" alt="Screenshot 2023-08-14 at 15.59.29"></p>
<p>全局分支：用于实现图像整体天气现象的识别</p>
<p>局部网络：聚焦道路信息</p>
<p>融合后实现针对道路上天气现象的识别</p>
<p><img src="https://p.ipic.vip/65t97w.png" alt="Screenshot 2023-08-14 at 16.01.02"></p>
<p><img src="https://p.ipic.vip/3y05qh.png" alt="Screenshot 2023-08-14 at 16.01.17"></p>
<p><img src="https://p.ipic.vip/yloh0w.png" alt="Screenshot 2023-08-14 at 16.01.35"></p>
<p>能见度定量识别：回归问题</p>
<p><img src="https://p.ipic.vip/baobaf.png" alt="Screenshot 2023-08-14 at 16.01.50"></p>
<p>能见度和两部分相关：景深 + 透射率</p>
<p>网络对应做成两个分支</p>
<p><img src="https://p.ipic.vip/pj621s.png" alt="Screenshot 2023-08-14 at 16.02.48"></p>
<hr>
<p><img src="https://p.ipic.vip/pmtesj.jpg" alt="WechatIMG142"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>百年风云讲坛 | 城市气象学创新研究与应用进展</title>
    <url>/2023/08/18/Seminar/20230818-%E7%99%BE%E5%B9%B4%E9%A3%8E%E4%BA%91%E8%AE%B2%E5%9D%9B%20%7C%20%E5%9F%8E%E5%B8%82%E6%B0%94%E8%B1%A1%E5%AD%A6%E5%88%9B%E6%96%B0%E7%A0%94%E7%A9%B6%E4%B8%8E%E5%BA%94%E7%94%A8%E8%BF%9B%E5%B1%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="《气象学报》百年风云讲坛第15期-城市气象学创新研究与应用进展"><a href="#《气象学报》百年风云讲坛第15期-城市气象学创新研究与应用进展" class="headerlink" title="《气象学报》百年风云讲坛第15期   城市气象学创新研究与应用进展"></a>《气象学报》百年风云讲坛第15期   城市气象学创新研究与应用进展</h3><p>回看地址：<a href="https://dwz.cn/P7ttk0EM">https://dwz.cn/P7ttk0EM</a>   或  <a href="http://live.bilibili.com/24850773">http://live.bilibili.com/24850773</a></p>
<p><img src="https://p.ipic.vip/jmupek.png" alt="Image"></p>
<p><img src="https://p.ipic.vip/nc0mp8.png" alt="Image"></p>
<h4 id="胡-非-城市气象观测的新方法和新认知"><a href="#胡-非-城市气象观测的新方法和新认知" class="headerlink" title="胡   非  城市气象观测的新方法和新认知"></a>胡   非  城市气象观测的新方法和新认知</h4><p><img src="https://p.ipic.vip/8esisz.png" alt="Screenshot 2023-08-23 at 19.52.52"></p>
<p><img src="https://p.ipic.vip/w0188v.png" alt="Screenshot 2023-08-23 at 19.53.27"></p>
<p><img src="https://p.ipic.vip/a0skl1.png" alt="Screenshot 2023-08-23 at 19.53.56"></p>
<p><img src="https://p.ipic.vip/ce52ti.png" alt="Screenshot 2023-08-23 at 19.54.26"></p>
<p> <img src="https://p.ipic.vip/itd8w7.png" alt="Screenshot 2023-08-23 at 19.55.32"></p>
<p><img src="https://p.ipic.vip/9ej0aq.png" alt="Screenshot 2023-08-23 at 19.57.01"></p>
<p><img src="https://p.ipic.vip/0uyupj.png" alt="Screenshot 2023-08-23 at 19.57.24"></p>
<p><img src="https://p.ipic.vip/3ei54d.png" alt="Screenshot 2023-08-23 at 19.57.44"></p>
<p><img src="https://p.ipic.vip/m9ew2r.png" alt="Screenshot 2023-08-23 at 19.57.57"></p>
<p><img src="https://p.ipic.vip/wkat0q.png" alt="Screenshot 2023-08-23 at 19.58.16"></p>
<p><img src="https://p.ipic.vip/n3oikz.png" alt="Screenshot 2023-08-23 at 19.58.46"></p>
<p><img src="https://p.ipic.vip/cgynoq.png" alt="Screenshot 2023-08-23 at 20.00.38"></p>
<p><img src="https://p.ipic.vip/n3auz0.png" alt="Screenshot 2023-08-23 at 20.00.49"></p>
<p><img src="https://p.ipic.vip/qy9m2s.png" alt="Screenshot 2023-08-23 at 20.01.23"></p>
<p><img src="https://p.ipic.vip/59k7yy.png" alt="Screenshot 2023-08-23 at 20.01.51"></p>
<p><img src="https://p.ipic.vip/os1waa.png" alt="Screenshot 2023-08-23 at 20.02.19"></p>
<p><img src="https://p.ipic.vip/9b97eb.png" alt="Screenshot 2023-08-23 at 20.02.42"></p>
<p><img src="https://p.ipic.vip/of98z1.png" alt="Screenshot 2023-08-23 at 20.03.11"></p>
<p><img src="https://p.ipic.vip/6pwx0x.png" alt="Screenshot 2023-08-23 at 20.03.27"></p>
<p><img src="https://p.ipic.vip/bk93uq.png" alt="Screenshot 2023-08-23 at 20.03.39"></p>
<p><img src="https://p.ipic.vip/2siqq2.png" alt="Screenshot 2023-08-23 at 20.04.03"></p>
<p><img src="https://p.ipic.vip/xe9vf4.png" alt="Screenshot 2023-08-23 at 20.04.12"></p>
<p><img src="https://p.ipic.vip/aep8a6.png" alt="Screenshot 2023-08-23 at 20.04.27"></p>
<p><img src="https://p.ipic.vip/9niyqx.png" alt="Screenshot 2023-08-23 at 20.04.51"></p>
<p><img src="https://p.ipic.vip/lwyrky.png" alt="Screenshot 2023-08-23 at 20.05.18"></p>
<p><img src="https://p.ipic.vip/0jactk.png" alt="Screenshot 2023-08-23 at 20.05.45"></p>
<p><img src="https://p.ipic.vip/dvz1pc.png" alt="Screenshot 2023-08-23 at 20.07.52"></p>
<p><img src="https://p.ipic.vip/g58x24.png" alt="Screenshot 2023-08-23 at 20.08.32"></p>
<p><img src="https://p.ipic.vip/pbbj7c.png" alt="Screenshot 2023-08-23 at 20.08.54"></p>
<p><img src="https://p.ipic.vip/gdxuyd.png" alt="Screenshot 2023-08-23 at 20.09.01"></p>
<p><img src="https://p.ipic.vip/woq7lp.png" alt="Screenshot 2023-08-23 at 20.10.07"></p>
<p><img src="https://p.ipic.vip/b60y9o.png" alt="Screenshot 2023-08-23 at 20.10.17"></p>
<p><img src="https://p.ipic.vip/4m7oft.png" alt="Screenshot 2023-08-23 at 20.11.06"></p>
<p><img src="https://p.ipic.vip/9v3bbf.png" alt="Screenshot 2023-08-23 at 20.12.05"></p>
<p><img src="https://p.ipic.vip/8qh97u.png" alt="Screenshot 2023-08-23 at 20.12.15"></p>
<p><img src="https://p.ipic.vip/t35ijr.png" alt="Screenshot 2023-08-23 at 20.12.41"></p>
<p><img src="https://p.ipic.vip/bz064n.png" alt="Screenshot 2023-08-23 at 20.12.55"></p>
<p><img src="https://p.ipic.vip/mw5dvu.png" alt="Screenshot 2023-08-23 at 20.13.18"></p>
<p><img src="https://p.ipic.vip/j5rdaf.png" alt="Screenshot 2023-08-23 at 20.15.40"></p>
<p><img src="https://p.ipic.vip/agerp4.png" alt="Screenshot 2023-08-23 at 20.15.50"></p>
<p><img src="https://p.ipic.vip/1qntei.png" alt="Screenshot 2023-08-23 at 20.16.44"></p>
<p><img src="https://p.ipic.vip/hql22b.png" alt="Screenshot 2023-08-23 at 20.16.56"></p>
<p><img src="https://p.ipic.vip/nr1f69.png" alt="Screenshot 2023-08-23 at 20.16.49"></p>
<p><img src="https://p.ipic.vip/a4vzez.png" alt="Screenshot 2023-08-23 at 20.17.14"></p>
<p><img src="https://p.ipic.vip/pmyt06.png" alt="Screenshot 2023-08-23 at 20.17.55"></p>
<p><img src="https://p.ipic.vip/an5b2n.png" alt="Screenshot 2023-08-23 at 20.17.28"></p>
<p>![Screenshot 2023-08-23 at 20.18.23](&#x2F;Users&#x2F;ruyanc&#x2F;Desktop&#x2F;Screenshot 2023-08-23 at 20.18.23.png)</p>
<p><img src="https://p.ipic.vip/r8w6hr.png" alt="image-20230823202501999"></p>
<p><img src="https://p.ipic.vip/jugq0p.png" alt="Screenshot 2023-08-23 at 20.23.41"></p>
<p><img src="https://p.ipic.vip/jnjdls.png" alt="Screenshot 2023-08-23 at 20.23.44"></p>
<p><img src="https://p.ipic.vip/xm6maq.png" alt="Screenshot 2023-08-23 at 20.19.15"></p>
<p><img src="https://p.ipic.vip/zu6egk.png" alt="Screenshot 2023-08-23 at 20.19.15"></p>
<p><img src="https://p.ipic.vip/t1f5zp.png" alt="Screenshot 2023-08-23 at 20.19.48"></p>
<p><img src="https://p.ipic.vip/r55evf.png" alt="Screenshot 2023-08-23 at 20.20.49"></p>
<p><img src="https://p.ipic.vip/w2r8i9.png" alt="Screenshot 2023-08-23 at 20.21.08"></p>
<p><img src="https://p.ipic.vip/76e7jc.png" alt="Screenshot 2023-08-23 at 20.21.45"></p>
<p><img src="https://p.ipic.vip/ni0cx5.png" alt="Screenshot 2023-08-23 at 20.22.01"></p>
<p><img src="https://p.ipic.vip/ha3a51.png" alt="Screenshot 2023-08-23 at 20.22.24"></p>
<p><img src="https://p.ipic.vip/i4s689.png" alt="Screenshot 2023-08-23 at 20.22.53"></p>
<ul>
<li>如何提升模式的预报精度：1. 变成公式效果不是很明显；2. 依赖于观测数据或人工经验的订正，与人工智能的方法结合；3. 非线性系统动力学研究，关注非平稳的小扰动的影响；</li>
</ul>
<h4 id="Fei-Chen-陈飞-气候-城市化-极端事件关系的认知与模拟最新进展"><a href="#Fei-Chen-陈飞-气候-城市化-极端事件关系的认知与模拟最新进展" class="headerlink" title="Fei Chen (陈飞)  气候-城市化-极端事件关系的认知与模拟最新进展"></a>Fei Chen (陈飞)  气候-城市化-极端事件关系的认知与模拟最新进展</h4><p>![Screenshot 2023-08-23 at 20.30.36](&#x2F;Users&#x2F;ruyanc&#x2F;Desktop&#x2F;Screenshot 2023-08-23 at 20.30.36.png)</p>
<p><img src="https://p.ipic.vip/1mx241.png" alt="Screenshot 2023-08-23 at 20.31.52"></p>
<p><img src="https://p.ipic.vip/boxve6.png" alt="Screenshot 2023-08-23 at 20.32.20"></p>
<p><img src="https://p.ipic.vip/bh9cab.png" alt="Screenshot 2023-08-23 at 20.32.46"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>Tijana Janjic</title>
    <url>/2023/10/08/Seminar/20231009-Tijana%20Janjic/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Tijana-Janjic-Learning-model-parameters-from-observations-by-combining-data-assimilation-and-machine-learning"><a href="#Tijana-Janjic-Learning-model-parameters-from-observations-by-combining-data-assimilation-and-machine-learning" class="headerlink" title="Tijana Janjic  Learning model parameters from observations by combining data assimilation and machine learning"></a>Tijana Janjic  Learning model parameters from observations by combining data assimilation and machine learning</h3><p><img src="https://p.ipic.vip/2f97dy.png" alt="Screenshot 2023-10-09 at 16.07.42"></p>
<p><img src="https://p.ipic.vip/873sir.png" alt="Screenshot 2023-10-09 at 16.09.47"></p>
<p><img src="https://p.ipic.vip/4wiszd.png" alt="Screenshot 2023-10-09 at 16.10.15"></p>
<p><img src="https://p.ipic.vip/9vafll.png" alt="Screenshot 2023-10-09 at 16.14.15"></p>
<p><img src="https://p.ipic.vip/75yf79.png" alt="Screenshot 2023-10-09 at 16.15.43"></p>
<p><img src="https://p.ipic.vip/6rmtda.png" alt="Screenshot 2023-10-09 at 16.17.01"></p>
<p><img src="https://p.ipic.vip/qg8ssu.png" alt="Screenshot 2023-10-09 at 16.18.07"></p>
<p><img src="https://p.ipic.vip/b297bj.png" alt="Screenshot 2023-10-09 at 16.20.56"></p>
<p><img src="https://p.ipic.vip/35amu3.png" alt="Screenshot 2023-10-09 at 16.23.56"></p>
<p><img src="https://p.ipic.vip/prqfyk.png" alt="Screenshot 2023-10-09 at 16.26.40"></p>
<p><img src="https://p.ipic.vip/shas7j.png" alt="Screenshot 2023-10-09 at 16.29.57"></p>
<p><img src="https://p.ipic.vip/0nh867.png" alt="Screenshot 2023-10-09 at 16.31.16"></p>
<p><img src="https://p.ipic.vip/dbz7br.png" alt="Screenshot 2023-10-09 at 16.33.46"></p>
<p><img src="https://p.ipic.vip/1cl48e.png" alt="Screenshot 2023-10-09 at 16.35.52"></p>
<p><img src="https://p.ipic.vip/58bfee.png" alt="Screenshot 2023-10-09 at 16.37.25"></p>
<p><img src="https://p.ipic.vip/0s0v7y.png" alt="Screenshot 2023-10-09 at 16.38.44"></p>
<p><img src="https://p.ipic.vip/qocavd.png" alt="Screenshot 2023-10-09 at 16.39.44"></p>
<p><img src="https://p.ipic.vip/s2tggm.png" alt="Screenshot 2023-10-09 at 16.40.33"></p>
<p><img src="https://p.ipic.vip/1mp6sv.png" alt="Screenshot 2023-10-09 at 16.43.08"></p>
<p><img src="https://p.ipic.vip/ae22vi.png" alt="Screenshot 2023-10-09 at 16.44.05"></p>
<hr>
<p><img src="/Users/ruyanc/Desktop/WechatIMG465.jpg" alt="WechatIMG465"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>杜海良</title>
    <url>/2023/09/27/Seminar/20230927-%E6%9D%9C%E6%B5%B7%E8%89%AF/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="杜海良-Data-Assimilation-with-Pseudo-orbits"><a href="#杜海良-Data-Assimilation-with-Pseudo-orbits" class="headerlink" title="杜海良 Data Assimilation with Pseudo-orbits"></a>杜海良 Data Assimilation with Pseudo-orbits</h3><p><img src="https://p.ipic.vip/317usr.png" alt="Screenshot 2023-09-27 at 10.14.58"></p>
<p><img src="https://p.ipic.vip/upf9gy.png" alt="Screenshot 2023-09-27 at 10.18.27"></p>
<p><img src="https://p.ipic.vip/wrg4t6.png" alt="Screenshot 2023-09-27 at 10.25.40"></p>
<p><img src="https://p.ipic.vip/3ilqff.png" alt="Screenshot 2023-09-27 at 10.29.45"></p>
<p>Kalman Filter 只更新mean和variance，适用于正态分布</p>
<p>time sequence time window 只更新今天的来预报明天</p>
<p><img src="https://p.ipic.vip/l2w8eq.png" alt="Screenshot 2023-09-27 at 10.32.10"></p>
<p><img src="https://p.ipic.vip/7grs6p.png" alt="Screenshot 2023-09-27 at 10.34.53"></p>
<p><img src="https://p.ipic.vip/r4tn85.png" alt="Screenshot 2023-09-27 at 10.41.03"></p>
<p><img src="https://p.ipic.vip/pvbool.png" alt="Screenshot 2023-09-27 at 10.42.34"></p>
<p><img src="https://p.ipic.vip/zu5meq.png" alt="Screenshot 2023-09-27 at 10.44.11"></p>
<p><img src="https://p.ipic.vip/3cg0r7.png" alt="Screenshot 2023-09-27 at 10.44.51"></p>
<p><img src="https://p.ipic.vip/ain4np.png" alt="Screenshot 2023-09-27 at 10.48.01"></p>
<p><img src="https://p.ipic.vip/yp20la.png" alt="Screenshot 2023-09-27 at 10.51.10"></p>
<p>观测误差远小于模型误差的话，可找出模型误差</p>
<p><img src="https://p.ipic.vip/w6ihei.png" alt="Screenshot 2023-09-27 at 10.55.22"></p>
<hr>
<p><img src="http://iap.cas.cn/gb/xwdt/xshd/202309/W020230925662525497338.jpg" alt="img"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>天气和气候预测中的AI方法和应用</title>
    <url>/2024/12/16/Seminar/20241216-%E5%A4%A9%E6%B0%94%E5%92%8C%E6%B0%94%E5%80%99%E9%A2%84%E6%B5%8B%E4%B8%AD%E7%9A%84AI%E6%96%B9%E6%B3%95%E5%92%8C%E5%BA%94%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="潘林林：高精度数值预报在电力气象中的应用与发展"><a href="#潘林林：高精度数值预报在电力气象中的应用与发展" class="headerlink" title="潘林林：高精度数值预报在电力气象中的应用与发展"></a>潘林林：高精度数值预报在电力气象中的应用与发展</h3><p>国家电网-中国电力科学研究院新能源研究所  2009年成立</p>
<h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><p>风电场站：km—几百米   每15分钟   100m  </p>
<p>研究方向：1、可再生能源资源模拟及发电预测；2、可再生能源并网控制；</p>
<p>寒潮、暴雪</p>
<h4 id="数值模式应用"><a href="#数值模式应用" class="headerlink" title="数值模式应用"></a>数值模式应用</h4><p>可再生能源资源模拟及发电预测：全国3km</p>
<p>电力设备气象灾害预警（暴雨、雷电、覆冰、舞动、高温、寒潮、大风）</p>
<p>RTFDDA技术</p>
<p>大涡模拟：精细化风场、精细化湍流场   特定天气、个例研究</p>
<h4 id="数值模拟研发"><a href="#数值模拟研发" class="headerlink" title="数值模拟研发"></a>数值模拟研发</h4><p>UFS 全球模式   +   区域WRF模式3km</p>
<p>大模型：精度不够，没有加资料同化</p>
<p>盘古：台风轨迹预报好，强度预报不好</p>
<h3 id="陆萌茜：水文气象与人工智能-预报和服务"><a href="#陆萌茜：水文气象与人工智能-预报和服务" class="headerlink" title="陆萌茜：水文气象与人工智能:预报和服务"></a>陆萌茜：水文气象与人工智能:预报和服务</h3><p>香港科技大学土木与环境工程系</p>
<p>项目：短期+中期+长期价值</p>
<p>台风山竹：高楼“面条”</p>
<h4 id="大气河"><a href="#大气河" class="headerlink" title="大气河"></a>大气河</h4><p>算法+CMIP预测</p>
<p>AI 学习： 多系统好于单系统的训练效果</p>
<h4 id="AI-downscaling"><a href="#AI-downscaling" class="headerlink" title="AI downscaling"></a>AI downscaling</h4><p>Multi-source data fusion</p>
<p>seamless predictions (FGOALS) + AI</p>
<p>GCM _ 10km     Taiwan Metdata _ 2km</p>
<h4 id="AI-for-S2S"><a href="#AI-for-S2S" class="headerlink" title="AI for S2S"></a>AI for S2S</h4><h3 id="杨静：有关次季节预测的一些进展分享"><a href="#杨静：有关次季节预测的一些进展分享" class="headerlink" title="杨静：有关次季节预测的一些进展分享"></a>杨静：有关次季节预测的一些进展分享</h3><p>减灾+资源利用</p>
<h4 id="中高纬度可预报源：extratropical-ISO-EISO"><a href="#中高纬度可预报源：extratropical-ISO-EISO" class="headerlink" title="中高纬度可预报源：extratropical ISO  EISO"></a>中高纬度可预报源：extratropical ISO  EISO</h4><h4 id="Effects-of-initial-contion-and-lower-boundary-on-S2S"><a href="#Effects-of-initial-contion-and-lower-boundary-on-S2S" class="headerlink" title="Effects of initial contion and lower boundary on S2S"></a>Effects of initial contion and lower boundary on S2S</h4><p>海冰、陆地、海洋下垫面</p>
<h5 id="Hybrid-Machine-learning-dynamical-climate-prediction-for-service"><a href="#Hybrid-Machine-learning-dynamical-climate-prediction-for-service" class="headerlink" title="Hybrid Machine learning-dynamical climate prediction for service"></a>Hybrid Machine learning-dynamical climate prediction for service</h5><h3 id="包庆：数值模式发展及天气-气候无缝隙预测中的应用"><a href="#包庆：数值模式发展及天气-气候无缝隙预测中的应用" class="headerlink" title="包庆：数值模式发展及天气-气候无缝隙预测中的应用"></a>包庆：数值模式发展及天气-气候无缝隙预测中的应用</h3>]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>陈德亮</title>
    <url>/2023/10/08/Seminar/20231008-%E9%99%88%E5%BE%B7%E4%BA%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="陈德亮-Grrand-challenges-for-ocean-science-from-an-Earth-System-science-perspective"><a href="#陈德亮-Grrand-challenges-for-ocean-science-from-an-Earth-System-science-perspective" class="headerlink" title="陈德亮 Grrand challenges for ocean science from an Earth System science perspective"></a>陈德亮 Grrand challenges for ocean science from an Earth System science perspective</h3><p><img src="https://p.ipic.vip/jxg0tv.png" alt="Screenshot 2023-10-08 at 15.07.21"></p>
<p><img src="https://p.ipic.vip/r1dce2.png" alt="Screenshot 2023-10-08 at 15.09.45"></p>
<p><img src="https://p.ipic.vip/8bn4tt.png" alt="Screenshot 2023-10-08 at 15.13.49"></p>
<p><img src="https://p.ipic.vip/j15i0d.png" alt="Screenshot 2023-10-08 at 15.14.13"></p>
<p><img src="https://p.ipic.vip/mf7jgj.png" alt="Screenshot 2023-10-08 at 15.15.01"></p>
<p><img src="https://p.ipic.vip/616xpp.png" alt="Screenshot 2023-10-08 at 15.18.13"></p>
<p><img src="https://p.ipic.vip/8l6grg.png" alt="Screenshot 2023-10-08 at 15.19.00"></p>
<p><img src="https://p.ipic.vip/ipuymh.png" alt="Screenshot 2023-10-08 at 15.23.07"></p>
<p><img src="https://p.ipic.vip/savee7.png" alt="Screenshot 2023-10-08 at 15.23.51"></p>
<p><img src="https://p.ipic.vip/qe6ezb.png" alt="Screenshot 2023-10-08 at 15.26.54"></p>
<p><img src="https://p.ipic.vip/3r7q4y.png" alt="Screenshot 2023-10-08 at 15.31.51"></p>
<p><img src="https://p.ipic.vip/wqfs95.png" alt="Screenshot 2023-10-08 at 15.32.32"></p>
<p><img src="https://p.ipic.vip/qpeqz5.png" alt="Screenshot 2023-10-08 at 15.33.55"></p>
<p><img src="https://p.ipic.vip/qyiupb.png" alt="Screenshot 2023-10-08 at 15.35.14"></p>
<p><img src="https://p.ipic.vip/iparrs.png" alt="Screenshot 2023-10-08 at 15.36.42"></p>
<p><img src="https://p.ipic.vip/5log9q.png" alt="Screenshot 2023-10-08 at 15.38.01"></p>
<p><img src="https://p.ipic.vip/qcor1k.png" alt="Screenshot 2023-10-08 at 15.38.41"></p>
<p><img src="https://p.ipic.vip/1lt13y.png" alt="Screenshot 2023-10-08 at 15.39.15"></p>
<p><img src="https://p.ipic.vip/y1ktol.png" alt="Screenshot 2023-10-08 at 15.42.50"></p>
<p><img src="https://p.ipic.vip/qtocti.png" alt="Screenshot 2023-10-08 at 15.43.15"></p>
<p><img src="https://p.ipic.vip/aknppe.png" alt="Screenshot 2023-10-08 at 15.44.05"></p>
<p><img src="https://p.ipic.vip/32q4nr.png" alt="Screenshot 2023-10-08 at 15.45.24"></p>
<p><img src="https://p.ipic.vip/zxvxyj.png" alt="Screenshot 2023-10-08 at 15.47.24"></p>
<p><img src="https://p.ipic.vip/42ywgj.png" alt="Screenshot 2023-10-08 at 15.48.01"></p>
<p><img src="https://p.ipic.vip/agyhqg.png" alt="Screenshot 2023-10-08 at 15.50.06"></p>
<p><img src="https://p.ipic.vip/8bq3eg.png" alt="Screenshot 2023-10-08 at 15.50.41"></p>
<p><img src="https://p.ipic.vip/1teuy6.png" alt="Screenshot 2023-10-08 at 15.52.33"></p>
<p><img src="https://p.ipic.vip/5uag3z.png" alt="Screenshot 2023-10-08 at 15.53.54"></p>
<p><img src="https://p.ipic.vip/v61heu.png" alt="Screenshot 2023-10-08 at 15.54.13"></p>
<p><img src="https://p.ipic.vip/dhh4go.png" alt="Screenshot 2023-10-08 at 15.55.53"></p>
<hr>
<p><img src="https://p.ipic.vip/woypfw.png" alt="image-20231008161344712"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>天气预报技术发展的机遇和挑战</title>
    <url>/2024/04/11/Seminar/20240411-%E5%A4%A9%E6%B0%94%E9%A2%84%E6%8A%A5%E6%8A%80%E6%9C%AF%E5%8F%91%E5%B1%95%E7%9A%84%E6%9C%BA%E9%81%87%E5%92%8C%E6%8C%91%E6%88%98%20copy/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://p.ipic.vip/wvrqnl.png" alt="Screenshot 2024-04-09 at 10.34.31"></p>
<p><img src="https://p.ipic.vip/hmkeb6.png" alt="Screenshot 2024-04-09 at 10.34.41"></p>
<p><img src="https://p.ipic.vip/pzwmzs.png" alt="Screenshot 2024-04-09 at 10.35.45"></p>
<p><img src="https://p.ipic.vip/vtspnp.png" alt="Screenshot 2024-04-09 at 10.38.35"></p>
<p><img src="https://p.ipic.vip/jln7fz.png" alt="Screenshot 2024-04-09 at 10.56.33"></p>
<p><img src="https://p.ipic.vip/gaqg0d.png" alt="Screenshot 2024-04-09 at 10.57.52"></p>
<p><img src="https://p.ipic.vip/rj2b97.png" alt="Screenshot 2024-04-09 at 11.01.04"></p>
<p><img src="https://p.ipic.vip/k0sy7l.png" alt="Screenshot 2024-04-09 at 11.04.19"></p>
<p><img src="https://p.ipic.vip/k5ybqg.png" alt="Screenshot 2024-04-09 at 11.18.11"></p>
<p><img src="https://p.ipic.vip/y344s4.png" alt="Screenshot 2024-04-09 at 11.19.42"></p>
<p><img src="https://p.ipic.vip/cmawf5.png" alt="Screenshot 2024-04-09 at 11.21.17"></p>
<p><img src="https://p.ipic.vip/vszeke.png" alt="Screenshot 2024-04-09 at 11.21.47"></p>
<p><img src="https://p.ipic.vip/y6k4u7.png" alt="Screenshot 2024-04-09 at 11.23.26"></p>
<p><img src="https://p.ipic.vip/d312td.png" alt="Screenshot 2024-04-09 at 11.25.43"></p>
<p><img src="https://p.ipic.vip/l5knr7.png" alt="Screenshot 2024-04-09 at 11.29.29"></p>
<p><img src="https://p.ipic.vip/vuy7ag.png" alt="Screenshot 2024-04-09 at 11.31.24"></p>
<p><img src="https://p.ipic.vip/wka7na.png" alt="Screenshot 2024-04-09 at 11.34.47"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>第二届全国大气边界层交流会</title>
    <url>/2024/10/29/Seminar/20241029-%E5%85%A8%E5%9B%BD%E5%A4%A7%E6%B0%94%E8%BE%B9%E7%95%8C%E5%B1%82%E4%BA%A4%E6%B5%81%E4%BC%9A/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>会议通知：<a href="https://mp.weixin.qq.com/s/bnZn6E3Dd38LXshZE6gRAw">https://mp.weixin.qq.com/s/bnZn6E3Dd38LXshZE6gRAw</a></p>
<h3 id="高志球：《定制低空经济气象服务系统，赋能低空经济平稳发展》"><a href="#高志球：《定制低空经济气象服务系统，赋能低空经济平稳发展》" class="headerlink" title="高志球：《定制低空经济气象服务系统，赋能低空经济平稳发展》"></a>高志球：《定制低空经济气象服务系统，赋能低空经济平稳发展》</h3><p><img src="https://p.ipic.vip/ybh20e.png" alt="Screenshot 2024-10-29 at 09.27.16"></p>
<p><img src="https://p.ipic.vip/ts6uef.png" alt="Screenshot 2024-10-29 at 09.32.07"></p>
<p>雨过天晴后，不建议低空活动</p>
<p><img src="https://p.ipic.vip/1ft7eg.png" alt="Screenshot 2024-10-29 at 09.36.55"></p>
<p><img src="https://p.ipic.vip/th5gsh.png" alt="Screenshot 2024-10-29 at 09.41.21"></p>
<p><img src="https://p.ipic.vip/q19vtn.png" alt="Screenshot 2024-10-29 at 09.41.35"></p>
<p><img src="https://p.ipic.vip/fick2e.png" alt="Screenshot 2024-10-29 at 09.42.48"></p>
<p><img src="https://p.ipic.vip/9ik2of.png" alt="Screenshot 2024-10-29 at 09.43.36"></p>
<h3 id="郭建平：《低空经济气象若干前沿科技问题》"><a href="#郭建平：《低空经济气象若干前沿科技问题》" class="headerlink" title="郭建平：《低空经济气象若干前沿科技问题》"></a>郭建平：《低空经济气象若干前沿科技问题》</h3><p><img src="https://p.ipic.vip/6uqv0o.png" alt="Screenshot 2024-10-29 at 09.46.30"></p>
<p><img src="https://p.ipic.vip/axmchv.png" alt="Screenshot 2024-10-29 at 09.47.06"></p>
<p><img src="https://p.ipic.vip/b5pnnj.png" alt="Screenshot 2024-10-29 at 09.48.12"></p>
<p><img src="https://p.ipic.vip/w5g3xs.png" alt="Screenshot 2024-10-29 at 09.48.12"></p>
<p><img src="https://p.ipic.vip/983kgw.png" alt="Screenshot 2024-10-29 at 09.49.36"></p>
<p><img src="https://p.ipic.vip/er04lu.png" alt="Screenshot 2024-10-29 at 09.52.21"></p>
<p><img src="https://p.ipic.vip/zgyxh5.png" alt="Screenshot 2024-10-29 at 09.53.02"></p>
<p><img src="https://p.ipic.vip/ibd0tc.png" alt="Screenshot 2024-10-29 at 09.53.26"></p>
<p><img src="https://p.ipic.vip/ungbi9.png" alt="Screenshot 2024-10-29 at 09.53.53"></p>
<p><img src="https://p.ipic.vip/ccctrv.png" alt="Screenshot 2024-10-29 at 09.54.06"></p>
<p><img src="https://p.ipic.vip/5cmtuc.png" alt="Screenshot 2024-10-29 at 09.55.12"></p>
<p><img src="https://p.ipic.vip/m0n3yq.png" alt="Screenshot 2024-10-29 at 09.55.31"></p>
<p><img src="https://p.ipic.vip/3ti8z4.png" alt="Screenshot 2024-10-29 at 09.56.51"></p>
<p><img src="https://p.ipic.vip/zp0nf3.png" alt="Screenshot 2024-10-29 at 09.57.20"></p>
<p><img src="https://p.ipic.vip/qtomzq.png" alt="Screenshot 2024-10-29 at 09.58.01"><img src="https://p.ipic.vip/x7t0j9.png" alt="Screenshot 2024-10-29 at 10.00.37"></p>
<p><img src="https://p.ipic.vip/p9wmgg.png" alt="Screenshot 2024-10-29 at 10.02.11"></p>
<p><img src="https://p.ipic.vip/f1kj45.png" alt="Screenshot 2024-10-29 at 10.02.26"></p>
<p>下击暴流雷达无法探测</p>
<p><img src="https://p.ipic.vip/7dq6v8.png" alt="Screenshot 2024-10-29 at 10.03.11"></p>
<p><img src="https://p.ipic.vip/4paqou.png" alt="Screenshot 2024-10-29 at 10.04.07"></p>
<p><img src="https://p.ipic.vip/qmqsth.png" alt="Screenshot 2024-10-29 at 10.05.13"></p>
<p><img src="https://p.ipic.vip/40b0ef.png" alt="Screenshot 2024-10-29 at 10.05.58"></p>
<p><img src="https://p.ipic.vip/zigvaj.png" alt="Screenshot 2024-10-29 at 10.06.51"></p>
<p><img src="https://p.ipic.vip/3z2ixi.png" alt="Screenshot 2024-10-29 at 10.07.34"></p>
<p><img src="https://p.ipic.vip/dnn1xw.png" alt="Screenshot 2024-10-29 at 10.08.19"></p>
<p><img src="https://p.ipic.vip/4x59gm.png" alt="Screenshot 2024-10-29 at 10.09.13"></p>
<h3 id="Jarvi-Leena-Johanna-《The-effect-of-urban-planning-on-local-mixing-conditions-and-air-quality-using-Large-Eddy-Simulation》"><a href="#Jarvi-Leena-Johanna-《The-effect-of-urban-planning-on-local-mixing-conditions-and-air-quality-using-Large-Eddy-Simulation》" class="headerlink" title="Jarvi Leena Johanna: 《The effect of urban planning on local mixing conditions and air quality using Large Eddy Simulation》"></a>Jarvi Leena Johanna: 《The effect of urban planning on local mixing conditions and air quality using Large Eddy Simulation》</h3><p><img src="https://p.ipic.vip/bkwg32.png" alt="Screenshot 2024-10-29 at 10.12.32"></p>
<h3 id="Karttunen-Sasu-Mikael-《Intercomparison-of-urban-surface-forcing-in-large-eddy-simulations-with-resolved-and-modelled-urban-canopies》"><a href="#Karttunen-Sasu-Mikael-《Intercomparison-of-urban-surface-forcing-in-large-eddy-simulations-with-resolved-and-modelled-urban-canopies》" class="headerlink" title="Karttunen Sasu Mikael: 《Intercomparison of urban surface forcing in large-eddy simulations with resolved and modelled urban canopies》"></a>Karttunen Sasu Mikael: 《Intercomparison of urban surface forcing in large-eddy simulations with resolved and modelled urban canopies》</h3><p><img src="https://p.ipic.vip/z3xo2j.png" alt="Screenshot 2024-10-29 at 10.33.37"></p>
<p><img src="https://p.ipic.vip/xci2m3.png" alt="Screenshot 2024-10-29 at 10.34.16"></p>
<p><img src="https://p.ipic.vip/fgx71k.png" alt="Screenshot 2024-10-29 at 10.34.55"></p>
<p><img src="https://p.ipic.vip/wlyvtg.png" alt="Screenshot 2024-10-29 at 10.36.04"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>上海气象学会学术年会</title>
    <url>/2025/05/15/Seminar/20250315-%E4%B8%8A%E6%B5%B7%E6%B0%94%E8%B1%A1%E5%AD%A6%E4%BC%9A%E5%AD%A6%E6%9C%AF%E5%B9%B4%E4%BC%9A/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="上海气象学会学术年会"><a href="#上海气象学会学术年会" class="headerlink" title="上海气象学会学术年会"></a>上海气象学会学术年会</h2><p><a href="https://mp.weixin.qq.com/s/kaF0E7fYC565WGYYmpVkxQ">会议通知</a></p>
<h3 id="分论坛：高影响天气复盘分析"><a href="#分论坛：高影响天气复盘分析" class="headerlink" title="分论坛：高影响天气复盘分析"></a>分论坛：高影响天气复盘分析</h3><p>【格美】台风格美路径预报偏差与低层风场偏差有关，长沙暴雨第二阶段与台风路径预报误差有关</p>
<p>【普拉桑】强度弱移动快，但给上海造成了较强的降水</p>
<p>路径预报误差较大、大暴雨漏报   上海气象局区域模式102mm，实际300+mm</p>
<p>上海1km快速更新系统，100mm以上暴雨的可能性</p>
<p>模式低估了台风的不稳定能量条件</p>
<p>【康妮】十月下旬登录台湾的最强台风</p>
<p><img src="https://p.ipic.vip/t7ekqh.png" alt="Screenshot 2025-05-15 at 10.23.53"></p>
<p><img src="https://p.ipic.vip/r30ujw.png" alt="Screenshot 2025-05-15 at 10.24.44"></p>
<p><img src="https://p.ipic.vip/qhedb0.png" alt="Screenshot 2025-05-15 at 10.26.03"></p>
<p><img src="https://p.ipic.vip/w7s4d9.png" alt="Screenshot 2025-05-15 at 10.27.40"></p>
<p><img src="https://p.ipic.vip/9vh9wx.png" alt="Screenshot 2025-05-15 at 10.28.48"></p>
<p><img src="https://p.ipic.vip/qr51uf.png" alt="Screenshot 2025-05-15 at 10.29.54"></p>
<p><img src="https://p.ipic.vip/6mr9wk.png" alt="Screenshot 2025-05-15 at 10.30.45"></p>
<p><img src="https://p.ipic.vip/yyso7g.png" alt="Screenshot 2025-05-15 at 10.32.09"></p>
<p><img src="https://p.ipic.vip/uziunh.png" alt="Screenshot 2025-05-15 at 10.35.10"></p>
<p>【锋面雾】</p>
<p><img src="https://p.ipic.vip/846hy9.png" alt="Screenshot 2025-05-15 at 10.39.41"></p>
<p><img src="https://p.ipic.vip/ke3fs3.png" alt="Screenshot 2025-05-15 at 10.45.31"></p>
<p><img src="https://p.ipic.vip/r01yxc.png" alt="Screenshot 2025-05-15 at 10.47.41"></p>
<p>预报了降水但实际没有，实际雾区可能更大</p>
<p><img src="https://p.ipic.vip/p4qrpe.png" alt="Screenshot 2025-05-15 at 10.54.33"></p>
<p><img src="https://p.ipic.vip/gnasfj.png" alt="Screenshot 2025-05-15 at 10.56.29"></p>
<p><img src="https://p.ipic.vip/zwj6mp.png" alt="Screenshot 2025-05-15 at 10.59.53"></p>
<p>【贝碧嘉】</p>
<p><img src="https://p.ipic.vip/245yt8.png" alt="Screenshot 2025-05-15 at 11.01.41"></p>
<p><img src="https://p.ipic.vip/wbrp3n.png" alt="Screenshot 2025-05-15 at 11.02.20"></p>
<p><img src="https://p.ipic.vip/btdzlv.png" alt="Screenshot 2025-05-15 at 11.10.32"></p>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
  <entry>
    <title>国自然申报交流会</title>
    <url>/2025/01/21/Seminar/20250121-%E5%9B%BD%E8%87%AA%E7%84%B6%E7%94%B3%E6%8A%A5%E4%BA%A4%E6%B5%81%E4%BC%9A%20copy/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="国自然申报交流会"><a href="#国自然申报交流会" class="headerlink" title="国自然申报交流会"></a>国自然申报交流会</h2><h3 id="赵西增：浙江大学海洋学院"><a href="#赵西增：浙江大学海洋学院" class="headerlink" title="赵西增：浙江大学海洋学院"></a>赵西增：浙江大学海洋学院</h3><p>点：创新”点“，在哪里&#x2F;如何创新？</p>
<p>线：技术路”线“，如何开展研究？</p>
<p>面：研究内容是如何关联的？</p>
<p>体：基金结构是否具有整”体“性和系统性</p>
<p>研究对象-研究内容-技术路线-创新点，一脉相承</p>
<ul>
<li>研究策略对专家有帮助和启发</li>
</ul>
<h4 id="国家基金创新点可能方向"><a href="#国家基金创新点可能方向" class="headerlink" title="国家基金创新点可能方向"></a>国家基金创新点可能方向</h4><p>一、研究问题创新</p>
<ol>
<li>提出新问题：发掘前人尚未关注到的研究领域或问题；极端环境条件下</li>
<li>重新定义问题：对已有研究中的问题进行重新审视和定义，如从不同的角度或理论框架出发，对一个传统问题赋予新的内涵和研究价值</li>
</ol>
<p>二、研究方法创新</p>
<p>1、引入新方法：借鉴其他学科或领域的先进研究方法，并应用到本项目的研究中，方法的优越性和适用性，如何克服可能面临的挑战；</p>
<p>2、改进现有方法：改进后的方法在效率、精度等方面的提升效果</p>
<p>三、理论创新</p>
<ol>
<li>构建新理论：</li>
<li>拓展现有理论：将某一理论应用到新的研究对象或情境中，发现新的理论内涵和应用价值，说明理论拓展的依据和创新之处</li>
</ol>
<p>四、应用创新（需要有基础）</p>
<p>1、新的应用领域：将现有的研究成果应用到新的领域或行业中，开拓新的应用场景，分析应用创新带来的社会效益和经济效益以及对相关领域的推动作用</p>
<ol start="2">
<li>解决实际问题：针对国家重大需求或社会热点问题，提出创新性的解决方案，阐述解决方案的可行性和有效性</li>
</ol>
<h4 id="申报书内容"><a href="#申报书内容" class="headerlink" title="申报书内容"></a>申报书内容</h4><p>一、研究背景与立项依据：别人为什要给你钱，突出很重要，很难</p>
<p>标题：包含你要干什么&#x2F;怎么干</p>
<p>创新点：在技术路线中实现</p>
<p>研究目标：</p>
<p>二、科学问题与 技术瓶颈</p>
<p>解释如何解决难题</p>
<p>三、研究基础与可行性</p>
<p>基础雄厚、成功可能性更高</p>
<ul>
<li><p>选题如何选？体现跨学科、跨领域的融合和集成创新特色，突出重点与强化基础理论，重大基础理论，突破关键核心技术，制作PPT，多次迭代讨论，持续修正、补充与完善</p>
</li>
<li><p>创新点：</p>
<ol>
<li>建立&#x2F;构建…（模型）；提出&#x2F;发展..（.技术&#x2F;方法&#x2F;算法）；形成…（机制、理论分析与方法体系）</li>
</ol>
<p>揭示&#x2F;发现…（机理&#x2F;科学现象）；解决…（繁琐、精度差、效率低）；突破…（难点与瓶颈等挑战）；取得…标志性成果</p>
<ol start="2">
<li>原创&#x2F;重大基础理论</li>
<li>发展&#x2F;应用前沿基础理论&#x2F;技术</li>
<li>经典问题、极端条件下以及交叉学科</li>
</ol>
<p><strong>创新点、标题与项目研究背景之间的相关性</strong></p>
<p><strong>如何体现&#x2F;实现创新点</strong></p>
<p>现有方法&#x2F;技术局限性、难点以及瓶颈问题</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Seminar</category>
      </categories>
  </entry>
</search>
